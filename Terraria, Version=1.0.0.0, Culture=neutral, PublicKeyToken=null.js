/* Generated by JSIL v0.8.2 build 33997. See http://jsil.org/ for more information. */ 
'use strict';
var $asm0F = JSIL.DeclareAssembly("Terraria, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm0F, $asm0F.TypeRef("Terraria.Program"), "Main", JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.String")])));

JSIL.DeclareNamespace("Terraria");
/* class Terraria.Projectile */ 

(function Projectile$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.MouseState)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };


  function Projectile__ctor () {
    this.scale = 1;
    this.owner = 8;
    this.$name = "";
    this.ai = JSIL.Array.New($T00(), $thisType.maxAI);
    this.penetrate = 1;
    this.playerImmune = JSIL.Array.New($T01(), 8);
  }; 

  function Projectile_AI () {
    var $hoisted00 = new ($T02())(), $hoisted01 = new ($T02())();
    var vector = new ($T02())(), rectangle = new ($T03())(), value = new ($T03())(), vector2 = new ($T02())(), vector3 = new ($T02())(), vector4 = new ($T02())(), vector5 = new ($T02())(), vector6 = new ($T02())(), vector7 = new ($T02())(), vector8 = new ($T02())(), vector9 = new ($T02())(), vector10 = new ($T02())();
    if ((this.aiStyle | 0) === 1) {
      if (!(((this.type | 0) !== 20) && 
          ((this.type | 0) !== 14) && ((this.type | 0) !== 36))) {
        if ((this.alpha | 0) > 0) {
          this.alpha = (((this.alpha | 0) - 15) | 0);
        }
        if ((this.alpha | 0) < 0) {
          this.alpha = 0;
        }
      }
      if (!(((this.type | 0) === 5) || 
          ((this.type | 0) === 14) || 
          ((this.type | 0) === 20) || ((this.type | 0) === 36))) {
        this.ai[0] += 1;
      }
      if (+this.ai[0] >= 15) {
        this.ai[0] = 15;
        this.velocity.Y = +this.velocity.Y + 0.1;
      }
      this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 1.57;
      if (+this.velocity.Y > 16) {
        this.velocity.Y = 16;
        return;
      }
    } else if ((this.aiStyle | 0) === 2) {
      this.ai[0] += 1;
      if (+this.ai[0] >= 20) {
        this.velocity.Y = +this.velocity.Y + 0.4;
        this.velocity.X = +this.velocity.X * 0.97;
      }
      this.rotation = +this.rotation + ((((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y))) * 0.03) * +(this.direction));
      if (+this.velocity.Y > 16) {
        this.velocity.Y = 16;
        return;
      }
    } else {
      if ((this.aiStyle | 0) === 3) {
        if ((this.soundDelay | 0) === 0) {
          this.soundDelay = 8;
          $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 7);
        }
        if ((this.type | 0) === 19) {

          for (var i = 0; i < 2; i = ((i + 1) | 0)) {
            var num = ($T07().NewDust(
              ($hoisted00._ctor(this.position.X, this.position.Y), 
                $hoisted00), 
              this.width, 
              this.height, 
              6, 
              +this.velocity.X * 0.2, 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T08())(), 
              2
            ) | 0);
            $T06().dust[num].noGravity = true;
            var expr_2A9_cp_0 = $T06().dust[num];
            expr_2A9_cp_0.velocity.X = +expr_2A9_cp_0.velocity.X * 0.3;
            var expr_2C6_cp_0 = $T06().dust[num];
            expr_2C6_cp_0.velocity.Y = +expr_2C6_cp_0.velocity.Y * 0.3;
          }
        } else if ((this.type | 0) === 33) {
          if (($T06().rand.Next(1) | 0) === 0) {
            var num2 = ($T07().NewDust(
              this.position, 
              this.width, 
              this.height, 
              40, 
              +this.velocity.X * 0.25, 
              +this.velocity.Y * 0.25, 
              0, 
              new ($T08())(), 
              1.4
            ) | 0);
            $T06().dust[num2].noGravity = true;
          }
        } else if (($T06().rand.Next(5) | 0) === 0) {
          $T07().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            +this.velocity.X * 0.5, 
            +this.velocity.Y * 0.5, 
            150, 
            new ($T08())(), 
            0.9
          );
        }
        if (+this.ai[0] === 0) {
          this.ai[1] += 1;
          if (+this.ai[1] >= 30) {
            this.ai[0] = 1;
            this.ai[1] = 0;
            this.netUpdate = true;
          }
        } else {
          this.tileCollide = false;
          var num3 = 9;
          var num4 = 0.4;
          if ((this.type | 0) === 19) {
            num3 = 13;
            num4 = 0.6;
          } else if ((this.type | 0) === 33) {
            num3 = 15;
            num4 = 0.8;
          }
          (vector = vector.MemberwiseClone(), 
            $T02().prototype._ctor.call(vector, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num5 = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +vector.X;
          var num6 = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +vector.Y;
          var num7 = Math.fround(Math.sqrt((num5 * num5) + (num6 * num6)));
          num7 = +((num3 / num7));
          num5 *= num7;
          num6 *= num7;
          if (+this.velocity.X < num5) {
            this.velocity.X = +this.velocity.X + num4;
            if (!((+this.velocity.X >= 0) || (num5 <= 0))) {
              this.velocity.X = +this.velocity.X + num4;
            }
          } else if (+this.velocity.X > num5) {
            this.velocity.X = +this.velocity.X - num4;
            if (!((+this.velocity.X <= 0) || (num5 >= 0))) {
              this.velocity.X = +this.velocity.X - num4;
            }
          }
          if (+this.velocity.Y < num6) {
            this.velocity.Y = +this.velocity.Y + num4;
            if (!((+this.velocity.Y >= 0) || (num6 <= 0))) {
              this.velocity.Y = +this.velocity.Y + num4;
            }
          } else if (+this.velocity.Y > num6) {
            this.velocity.Y = +this.velocity.Y - num4;
            if (!((+this.velocity.Y <= 0) || (num6 >= 0))) {
              this.velocity.Y = +this.velocity.Y - num4;
            }
          }
          if (($T06().myPlayer | 0) === (this.owner | 0)) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T03().prototype._ctor.call(rectangle, ((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height));
            (value = value.MemberwiseClone(), 
              $T03().prototype._ctor.call(value, (($T06().player[this.owner].position.X) | 0), (($T06().player[this.owner].position.Y) | 0), $T06().player[this.owner].width, $T06().player[this.owner].height));
            if (rectangle.Intersects(value.MemberwiseClone())) {
              this.Kill();
            }
          }
        }
        this.rotation = +this.rotation + (0.4 * +(this.direction));
        return;
      }
      if ((this.aiStyle | 0) === 4) {
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 1.57;
        if (+this.ai[0] === 0) {
          this.alpha = (((this.alpha | 0) - 50) | 0);
          if ((this.alpha | 0) <= 0) {
            this.alpha = 0;
            this.ai[0] = 1;
            if (+this.ai[1] === 0) {
              this.ai[1] += 1;
              this.position = $T02().op_Addition(this.position.MemberwiseClone(), $S00().CallStatic($T02(), "op_Multiply", null, this.velocity.MemberwiseClone(), 1).MemberwiseClone()).MemberwiseClone();
            }
            if (!(((this.type | 0) !== 7) || (($T06().myPlayer | 0) !== (this.owner | 0)))) {
              var num8 = (this.type | 0);
              if (+this.ai[1] >= 6) {
                num8 = ((num8 + 1) | 0);
              }
              var num9 = ($thisType.NewProjectile(
                (+this.position.X + +this.velocity.X) + +(((this.width | 0) / 2 | 0)), 
                (+this.position.Y + +this.velocity.Y) + +(((this.height | 0) / 2 | 0)), 
                this.velocity.X, 
                this.velocity.Y, 
                num8, 
                this.damage, 
                this.knockBack, 
                this.owner
              ) | 0);
              $T06().projectile[num9].damage = (this.damage | 0);
              $T06().projectile[num9].ai[1] = +this.ai[1] + 1;
              $T0A().SendData(
                27, 
                -1, 
                -1, 
                "", 
                num9, 
                0, 
                0, 
                0
              );
              return;
            }
          }
        } else {
          if (!(((this.alpha | 0) >= 170) || ((((this.alpha | 0) + 5) | 0) < 170))) {

            for (var j = 0; j < 3; j = ((j + 1) | 0)) {
              $T07().NewDust(
                this.position, 
                this.width, 
                this.height, 
                18, 
                +this.velocity.X * 0.025, 
                +this.velocity.Y * 0.025, 
                170, 
                new ($T08())(), 
                1.2
              );
            }
            $T07().NewDust(
              this.position, 
              this.width, 
              this.height, 
              14, 
              0, 
              0, 
              170, 
              new ($T08())(), 
              1.1
            );
          }
          this.alpha = (((this.alpha | 0) + 5) | 0);
          if ((this.alpha | 0) >= 255) {
            this.Kill();
            return;
          }
        }
      } else if ((this.aiStyle | 0) === 5) {
        if ((this.soundDelay | 0) === 0) {
          this.soundDelay = ((20 + ($T06().rand.Next(40) | 0)) | 0);
          $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 9);
        }
        if (+this.ai[0] === 0) {
          this.ai[0] = 1;
        }
        this.alpha = (((this.alpha | 0) + ((25 * +this.ai[0]) | 0)) | 0);
        if ((this.alpha | 0) > 200) {
          this.alpha = 200;
          this.ai[0] = -1;
        }
        if ((this.alpha | 0) < 0) {
          this.alpha = 0;
          this.ai[0] = 1;
        }
        this.rotation = +this.rotation + ((((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y))) * 0.01) * +(this.direction));
        if (($T06().rand.Next(10) | 0) === 0) {
          $T07().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            +this.velocity.X * 0.5, 
            +this.velocity.Y * 0.5, 
            150, 
            new ($T08())(), 
            1.2
          );
        }
        if (($T06().rand.Next(20) | 0) === 0) {
          $T0B().NewGore(this.position.MemberwiseClone(), $S01().Construct((+this.velocity.X * 0.2), (+this.velocity.Y * 0.2)), $T06().rand.Next(16, 18));
          return;
        }
      } else if ((this.aiStyle | 0) === 6) {
        this.velocity = $S00().CallStatic($T02(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.95).MemberwiseClone();
        this.ai[0] += 1;
        if (+this.ai[0] === 180) {
          this.Kill();
        }
        if (+this.ai[1] === 0) {
          this.ai[1] = 1;

          for (var k = 0; k < 30; k = ((k + 1) | 0)) {
            $T07().NewDust(
              this.position, 
              this.width, 
              this.height, 
              ((10 + (this.type | 0)) | 0), 
              this.velocity.X, 
              this.velocity.Y, 
              50, 
              new ($T08())(), 
              1
            );
          }
        }
        if ((this.type | 0) === 10) {
          var num10 = ((((+(+this.position.X / 16)) | 0) - 1) | 0);
          var num11 = ((((+((+this.position.X + +(this.width)) / 16)) | 0) + 2) | 0);
          var num12 = ((((+(+this.position.Y / 16)) | 0) - 1) | 0);
          var num13 = ((((+((+this.position.Y + +(this.height)) / 16)) | 0) + 2) | 0);
          if (num10 < 0) {
            num10 = 0;
          }
          if (num11 > ($T06().maxTilesX | 0)) {
            num11 = ($T06().maxTilesX | 0);
          }
          if (num12 < 0) {
            num12 = 0;
          }
          if (num13 > ($T06().maxTilesY | 0)) {
            num13 = ($T06().maxTilesY | 0);
          }

          for (var l = num10; l < num11; l = ((l + 1) | 0)) {

            for (var m = num12; m < num13; m = ((m + 1) | 0)) {
              vector2.X = +(l * 16);
              vector2.Y = +(m * 16);
              if (!(((+this.position.X + +(this.width)) <= +vector2.X) || 
                  (+this.position.X >= (+vector2.X + 16)) || 
                  ((+this.position.Y + +(this.height)) <= +vector2.Y) || 
                  (+this.position.Y >= (+vector2.Y + 16)) || 
                  (($T06().myPlayer | 0) !== (this.owner | 0)) || !$T06().tile.Get(l, m).active)) {
                if (($T06().tile.Get(l, m).type | 0) === 23) {
                  $T06().tile.Get(l, m).type = 2;
                  $T0D().SquareTileFrame(l, m, true);
                  if (($T06().netMode | 0) === 1) {
                    $T0A().SendTileSquare(-1, ((l - 1) | 0), ((m - 1) | 0), 3);
                  }
                }
                if (($T06().tile.Get(l, m).type | 0) === 25) {
                  $T06().tile.Get(l, m).type = 1;
                  $T0D().SquareTileFrame(l, m, true);
                  if (($T06().netMode | 0) === 1) {
                    $T0A().SendTileSquare(-1, ((l - 1) | 0), ((m - 1) | 0), 3);
                  }
                }
              }
            }
          }
          return;
        }
      } else if ((this.aiStyle | 0) === 7) {
        if ($T06().player[this.owner].dead) {
          this.Kill();
          return;
        }
        (vector3 = vector3.MemberwiseClone(), 
          $T02().prototype._ctor.call(vector3, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
        var num14 = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +vector3.X;
        var num15 = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +vector3.Y;
        var num16 = Math.fround(Math.sqrt((num14 * num14) + (num15 * num15)));
        this.rotation = Math.fround(Math.atan2(num15, num14)) - 1.57;
        if (+this.ai[0] === 0) {
          if (!(!((num16 > 300) && 
                ((this.type | 0) === 13)) && ((num16 <= 400) || 
                ((this.type | 0) !== 32)))) {
            this.ai[0] = 1;
          }
          var num17 = ((((+(+this.position.X / 16)) | 0) - 1) | 0);
          var num18 = ((((+((+this.position.X + +(this.width)) / 16)) | 0) + 2) | 0);
          var num19 = ((((+(+this.position.Y / 16)) | 0) - 1) | 0);
          var num20 = ((((+((+this.position.Y + +(this.height)) / 16)) | 0) + 2) | 0);
          if (num17 < 0) {
            num17 = 0;
          }
          if (num18 > ($T06().maxTilesX | 0)) {
            num18 = ($T06().maxTilesX | 0);
          }
          if (num19 < 0) {
            num19 = 0;
          }
          if (num20 > ($T06().maxTilesY | 0)) {
            num20 = ($T06().maxTilesY | 0);
          }

          for (var n = num17; n < num18; n = ((n + 1) | 0)) {

          $loop3: 
            for (var num21 = num19; num21 < num20; ) {
              if ($T06().tile.Get(n, num21) === null) {
                $T06().tile.Set(n, num21, new ($T0E())());
              }
              vector4.X = +(n * 16);
              vector4.Y = +(num21 * 16);
              if (!(((+this.position.X + +(this.width)) <= +vector4.X) || 
                  (+this.position.X >= (+vector4.X + 16)) || 
                  ((+this.position.Y + +(this.height)) <= +vector4.Y) || 
                  (+this.position.Y >= (+vector4.Y + 16)) || 
                  !$T06().tile.Get(n, num21).active || !$T06().tileSolid[$T06().tile.Get(n, num21).type])) {
                if (($T06().player[this.owner].grapCount | 0) < 10) {
                  $T06().player[this.owner].grappling[$T06().player[this.owner].grapCount] = (this.whoAmI | 0);
                  $T06().player[this.owner].grapCount = ((($T06().player[this.owner].grapCount | 0) + 1) | 0);
                }
                if (($T06().myPlayer | 0) === (this.owner | 0)) {
                  var num22 = 0;
                  var num23 = -1;
                  var num24 = 100000;

                  for (var num25 = 0; num25 < 1000; num25 = ((num25 + 1) | 0)) {
                    if (!(!$T06().projectile[num25].active || 
                        (($T06().projectile[num25].owner | 0) !== (this.owner | 0)) || (($T06().projectile[num25].aiStyle | 0) !== 7))) {
                      if (($T06().projectile[num25].timeLeft | 0) < num24) {
                        num23 = num25;
                        num24 = ($T06().projectile[num25].timeLeft | 0);
                      }
                      num22 = ((num22 + 1) | 0);
                    }
                  }
                  if (num22 > 3) {
                    ($T06().projectile[num23]).Kill();
                  }
                }
                $T0D().KillTile(
                  n, 
                  num21, 
                  true, 
                  true, 
                  false
                );
                $T06().PlaySound(0, Math.imul(n, 16), Math.imul(num21, 16), 1);
                this.velocity.X = 0;
                this.velocity.Y = 0;
                this.ai[0] = 2;
                this.position.X = +(((Math.imul(n, 16) + 8) | 0) - (((this.width | 0) / 2) | 0));
                this.position.Y = +(((Math.imul(num21, 16) + 8) | 0) - (((this.height | 0) / 2) | 0));
                this.damage = 0;
                this.netUpdate = true;
                if (($T06().myPlayer | 0) === (this.owner | 0)) {
                  $T0A().SendData(
                    13, 
                    -1, 
                    -1, 
                    "", 
                    this.owner, 
                    0, 
                    0, 
                    0
                  );
                  break $loop3;
                }
                break $loop3;
              } else {
                num21 = ((num21 + 1) | 0);
              }
            }
            if (+this.ai[0] === 2) {
              return;
            }
          }
          return;
        }
        if (+this.ai[0] === 1) {
          var num26 = 11;
          if ((this.type | 0) === 32) {
            num26 = 15;
          }
          if (num16 < 24) {
            this.Kill();
          }
          num16 = +((num26 / num16));
          num14 *= num16;
          num15 *= num16;
          this.velocity.X = num14;
          this.velocity.Y = num15;
          return;
        }
        if (+this.ai[0] === 2) {
          var num27 = ((((+(+this.position.X / 16)) | 0) - 1) | 0);
          var num28 = ((((+((+this.position.X + +(this.width)) / 16)) | 0) + 2) | 0);
          var num29 = ((((+(+this.position.Y / 16)) | 0) - 1) | 0);
          var num30 = ((((+((+this.position.Y + +(this.height)) / 16)) | 0) + 2) | 0);
          if (num27 < 0) {
            num27 = 0;
          }
          if (num28 > ($T06().maxTilesX | 0)) {
            num28 = ($T06().maxTilesX | 0);
          }
          if (num29 < 0) {
            num29 = 0;
          }
          if (num30 > ($T06().maxTilesY | 0)) {
            num30 = ($T06().maxTilesY | 0);
          }
          var flag = true;

          for (var num31 = num27; num31 < num28; num31 = ((num31 + 1) | 0)) {

            for (var num32 = num29; num32 < num30; num32 = ((num32 + 1) | 0)) {
              if ($T06().tile.Get(num31, num32) === null) {
                $T06().tile.Set(num31, num32, new ($T0E())());
              }
              vector5.X = +(num31 * 16);
              vector5.Y = +(num32 * 16);
              if (!(((+this.position.X + +(((this.width | 0) / 2 | 0))) <= +vector5.X) || 
                  ((+this.position.X + +(((this.width | 0) / 2 | 0))) >= (+vector5.X + 16)) || 
                  ((+this.position.Y + +(((this.height | 0) / 2 | 0))) <= +vector5.Y) || 
                  ((+this.position.Y + +(((this.height | 0) / 2 | 0))) >= (+vector5.Y + 16)) || 
                  !$T06().tile.Get(num31, num32).active || !$T06().tileSolid[$T06().tile.Get(num31, num32).type])) {
                flag = false;
              }
            }
          }
          if (flag) {
            this.ai[0] = 1;
            return;
          }
          if (($T06().player[this.owner].grapCount | 0) < 10) {
            $T06().player[this.owner].grappling[$T06().player[this.owner].grapCount] = (this.whoAmI | 0);
            $T06().player[this.owner].grapCount = ((($T06().player[this.owner].grapCount | 0) + 1) | 0);
            return;
          }
        }
      } else if ((this.aiStyle | 0) === 8) {
        if ((this.type | 0) === 27) {
          var num33 = ($T07().NewDust(
            $S01().Construct((+this.position.X + +this.velocity.X), (+this.position.Y + +this.velocity.Y)), 
            this.width, 
            this.height, 
            29, 
            this.velocity.X, 
            this.velocity.Y, 
            100, 
            new ($T08())(), 
            3
          ) | 0);
          $T06().dust[num33].noGravity = true;
          num33 = ($T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            29, 
            this.velocity.X, 
            this.velocity.Y, 
            100, 
            new ($T08())(), 
            1.5
          ) | 0);
        } else {

          for (var num34 = 0; num34 < 2; num34 = ((num34 + 1) | 0)) {
            var num35 = ($T07().NewDust(
              ($hoisted01._ctor(this.position.X, this.position.Y), 
                $hoisted01), 
              this.width, 
              this.height, 
              6, 
              +this.velocity.X * 0.2, 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T08())(), 
              2
            ) | 0);
            $T06().dust[num35].noGravity = true;
            var expr_174C_cp_0 = $T06().dust[num35];
            expr_174C_cp_0.velocity.X = +expr_174C_cp_0.velocity.X * 0.3;
            var expr_176A_cp_0 = $T06().dust[num35];
            expr_176A_cp_0.velocity.Y = +expr_176A_cp_0.velocity.Y * 0.3;
          }
        }
        if ((this.type | 0) !== 27) {
          this.ai[1] += 1;
        }
        if (+this.ai[1] >= 20) {
          this.velocity.Y = +this.velocity.Y + 0.2;
        }
        this.rotation = +this.rotation + (0.3 * +(this.direction));
        if (+this.velocity.Y > 16) {
          this.velocity.Y = 16;
          return;
        }
      } else if ((this.aiStyle | 0) === 9) {
        if ((this.type | 0) === 34) {
          var num36 = ($T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            6, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T08())(), 
            3.5
          ) | 0);
          $T06().dust[num36].noGravity = true;
          $T06().dust[num36].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num36].velocity.MemberwiseClone(), 1.4).MemberwiseClone();
          num36 = ($T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            6, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T08())(), 
            1.5
          ) | 0);
        } else {
          if (!(((this.soundDelay | 0) !== 0) || (((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y))) <= 2))) {
            this.soundDelay = 10;
            $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 9);
          }
          var num37 = ($T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            15, 
            0, 
            0, 
            100, 
            new ($T08())(), 
            2
          ) | 0);
          $T06().dust[num37].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num37].velocity.MemberwiseClone(), 0.3).MemberwiseClone();
          $T06().dust[num37].position.X = ((+this.position.X + +(((this.width | 0) / 2 | 0))) + 4) + +($T06().rand.Next(-4, 5));
          $T06().dust[num37].position.Y = (+this.position.Y + +(((this.height | 0) / 2 | 0))) + +($T06().rand.Next(-4, 5));
          $T06().dust[num37].noGravity = true;
        }
        if (!((($T06().myPlayer | 0) !== (this.owner | 0)) || (+this.ai[0] !== 0))) {
          if ($T06().player[this.owner].channel) {
            (vector6 = vector6.MemberwiseClone(), 
              $T02().prototype._ctor.call(vector6, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            var num39 = (+($T06().mouseState.get_X()) + +$T06().screenPosition.X) - +vector6.X;
            var num40 = (+($T06().mouseState.get_Y()) + +$T06().screenPosition.Y) - +vector6.Y;
            var num41 = Math.fround(Math.sqrt((num39 * num39) + (num40 * num40)));
            num41 = Math.fround(Math.sqrt((num39 * num39) + (num40 * num40)));
            if (num41 > 12) {
              num41 = +((12 / num41));
              num39 *= num41;
              num40 *= num41;
              if (!((num39 === +this.velocity.X) && (num40 === +this.velocity.Y))) {
                this.netUpdate = true;
              }
              this.velocity.X = num39;
              this.velocity.Y = num40;
            } else {
              if (!((num39 === +this.velocity.X) && (num40 === +this.velocity.Y))) {
                this.netUpdate = true;
              }
              this.velocity.X = num39;
              this.velocity.Y = num40;
            }
          } else {
            this.Kill();
          }
        }
        if ((this.type | 0) === 34) {
          this.rotation = +this.rotation + (0.3 * +(this.direction));
        } else if (!((+this.velocity.X === 0) && (+this.velocity.Y === 0))) {
          this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) - 2.355;
        }
        if (+this.velocity.Y > 16) {
          this.velocity.Y = 16;
          return;
        }
      } else if ((this.aiStyle | 0) === 10) {
        if ((this.type | 0) === 31) {
          if (($T06().rand.Next(2) | 0) === 0) {
            var num42 = ($T07().NewDust(
              $S01().Construct(this.position.X, this.position.Y), 
              this.width, 
              this.height, 
              32, 
              0, 
              +((+this.velocity.Y / 2)), 
              0, 
              new ($T08())(), 
              1
            ) | 0);
            var expr_1D0E_cp_0 = $T06().dust[num42];
            expr_1D0E_cp_0.velocity.X = +expr_1D0E_cp_0.velocity.X * 0.4;
          }
        } else if (($T06().rand.Next(20) | 0) === 0) {
          $T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            0, 
            0, 
            0, 
            0, 
            new ($T08())(), 
            1
          );
        }
        if (!((($T06().myPlayer | 0) !== (this.owner | 0)) || (+this.ai[0] !== 0))) {
          if ($T06().player[this.owner].channel) {
            (vector7 = vector7.MemberwiseClone(), 
              $T02().prototype._ctor.call(vector7, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            var num44 = (+($T06().mouseState.get_X()) + +$T06().screenPosition.X) - +vector7.X;
            var num45 = (+($T06().mouseState.get_Y()) + +$T06().screenPosition.Y) - +vector7.Y;
            var num46 = Math.fround(Math.sqrt((num44 * num44) + (num45 * num45)));
            num46 = Math.fround(Math.sqrt((num44 * num44) + (num45 * num45)));
            if (num46 > 12) {
              num46 = +((12 / num46));
              num44 *= num46;
              num45 *= num46;
              if (!((num44 === +this.velocity.X) && (num45 === +this.velocity.Y))) {
                this.netUpdate = true;
              }
              this.velocity.X = num44;
              this.velocity.Y = num45;
            } else {
              if (!((num44 === +this.velocity.X) && (num45 === +this.velocity.Y))) {
                this.netUpdate = true;
              }
              this.velocity.X = num44;
              this.velocity.Y = num45;
            }
          } else {
            this.ai[0] = 1;
            this.netUpdate = true;
          }
        }
        if (+this.ai[0] === 1) {
          this.velocity.Y = +this.velocity.Y + 0.41;
        }
        this.rotation = +this.rotation + 0.1;
        if (+this.velocity.Y > 10) {
          this.velocity.Y = 10;
          return;
        }
      } else if ((this.aiStyle | 0) === 11) {
        this.rotation = +this.rotation + 0.02;
        if (($T06().myPlayer | 0) === (this.owner | 0)) {
          if ($T06().player[this.owner].dead) {
            this.Kill();
            return;
          }
          (vector8 = vector8.MemberwiseClone(), 
            $T02().prototype._ctor.call(vector8, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num48 = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +vector8.X;
          var num49 = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +vector8.Y;
          var num50 = Math.fround(Math.sqrt((num48 * num48) + (num49 * num49)));
          num50 = Math.fround(Math.sqrt((num48 * num48) + (num49 * num49)));
          if (num50 > +($T06().screenWidth)) {
            this.position.X = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +(((this.width | 0) / 2 | 0));
            this.position.Y = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +(((this.height | 0) / 2 | 0));
            return;
          }
          if (num50 > 64) {
            num50 = +((4 / num50));
            num48 *= num50;
            num49 *= num50;
            if (!((num48 === +this.velocity.X) && (num49 === +this.velocity.Y))) {
              this.netUpdate = true;
            }
            this.velocity.X = num48;
            this.velocity.Y = num49;
            return;
          }
          if (!((+this.velocity.X === 0) && (+this.velocity.Y === 0))) {
            this.netUpdate = true;
          }
          this.velocity.X = 0;
          this.velocity.Y = 0;
          return;
        }
      } else {
        if ((this.aiStyle | 0) === 12) {
          this.scale = +this.scale - 0.05;
          if (+this.scale <= 0) {
            this.Kill();
          }
          if (+this.ai[0] > 4) {
            this.alpha = 150;
            this.light = 0.8;
            var num51 = ($T07().NewDust(
              $S01().Construct(this.position.X, this.position.Y), 
              this.width, 
              this.height, 
              29, 
              this.velocity.X, 
              this.velocity.Y, 
              100, 
              new ($T08())(), 
              2.5
            ) | 0);
            $T06().dust[num51].noGravity = true;
            $T07().NewDust(
              $S01().Construct(this.position.X, this.position.Y), 
              this.width, 
              this.height, 
              29, 
              this.velocity.X, 
              this.velocity.Y, 
              100, 
              new ($T08())(), 
              1.5
            );
          } else {
            this.ai[0] += 1;
          }
          this.rotation = +this.rotation + (0.3 * +(this.direction));
          return;
        }
        if ((this.aiStyle | 0) === 13) {
          if ($T06().player[this.owner].dead) {
            this.Kill();
            return;
          }
          $T06().player[this.owner].itemAnimation = 5;
          $T06().player[this.owner].itemTime = 5;
          if ((+this.position.X + +(((this.width | 0) / 2 | 0))) > (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0)))) {
            $T06().player[this.owner].direction = 1;
          } else {
            $T06().player[this.owner].direction = -1;
          }
          (vector9 = vector9.MemberwiseClone(), 
            $T02().prototype._ctor.call(vector9, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num52 = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +vector9.X;
          var num53 = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +vector9.Y;
          var num54 = Math.fround(Math.sqrt((num52 * num52) + (num53 * num53)));
          if (+this.ai[0] === 0) {
            if (num54 > 600) {
              this.ai[0] = 1;
            }
            this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 1.57;
            this.ai[1] += 1;
            if (+this.ai[1] > 2) {
              this.alpha = 0;
            }
            if (+this.ai[1] >= 10) {
              this.ai[1] = 15;
              this.velocity.Y = +this.velocity.Y + 0.3;
              return;
            }
          } else if (+this.ai[0] === 1) {
            this.tileCollide = false;
            this.rotation = Math.fround(Math.atan2(num53, num52)) - 1.57;
            if (num54 < 50) {
              this.Kill();
            }
            num54 = +((11 / num54));
            num52 *= num54;
            num53 *= num54;
            this.velocity.X = num52;
            this.velocity.Y = num53;
            return;
          }
        } else {
          if ((this.aiStyle | 0) === 14) {
            this.ai[0] += 1;
            if (+this.ai[0] > 5) {
              this.ai[0] = 5;
              if (!((+this.velocity.Y !== 0) || (+this.velocity.X === 0))) {
                this.velocity.X = +this.velocity.X * 0.97;
                if (!((this.velocity.X <= -0.01) || (this.velocity.X >= 0.01))) {
                  this.velocity.X = 0;
                  this.netUpdate = true;
                }
              }
              this.velocity.Y = +this.velocity.Y + 0.2;
            }
            this.rotation = +this.rotation + (+this.velocity.X * 0.1);
            return;
          }
          if ((this.aiStyle | 0) === 15) {
            if ((this.type | 0) === 25) {
              if (($T06().rand.Next(15) | 0) === 0) {
                $T07().NewDust(
                  this.position, 
                  this.width, 
                  this.height, 
                  14, 
                  0, 
                  0, 
                  150, 
                  new ($T08())(), 
                  1.3
                );
              }
            } else if ((this.type | 0) === 26) {
              var num56 = ($T07().NewDust(
                this.position, 
                this.width, 
                this.height, 
                29, 
                +this.velocity.X * 0.4, 
                +this.velocity.Y * 0.4, 
                100, 
                new ($T08())(), 
                2.5
              ) | 0);
              $T06().dust[num56].noGravity = true;
              var expr_2782_cp_0 = $T06().dust[num56];
              expr_2782_cp_0.velocity.X = +((+expr_2782_cp_0.velocity.X / 2));
              var expr_27A0_cp_0 = $T06().dust[num56];
              expr_27A0_cp_0.velocity.Y = +((+expr_27A0_cp_0.velocity.Y / 2));
            } else if ((this.type | 0) === 35) {
              var num57 = ($T07().NewDust(
                this.position, 
                this.width, 
                this.height, 
                6, 
                +this.velocity.X * 0.4, 
                +this.velocity.Y * 0.4, 
                100, 
                new ($T08())(), 
                3
              ) | 0);
              $T06().dust[num57].noGravity = true;
              var expr_282B_cp_0 = $T06().dust[num57];
              expr_282B_cp_0.velocity.X = +expr_282B_cp_0.velocity.X * 2;
              var expr_2849_cp_0 = $T06().dust[num57];
              expr_2849_cp_0.velocity.Y = +expr_2849_cp_0.velocity.Y * 2;
            }
            if ($T06().player[this.owner].dead) {
              this.Kill();
              return;
            }
            $T06().player[this.owner].itemAnimation = 5;
            $T06().player[this.owner].itemTime = 5;
            if ((+this.position.X + +(((this.width | 0) / 2 | 0))) > (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0)))) {
              $T06().player[this.owner].direction = 1;
            } else {
              $T06().player[this.owner].direction = -1;
            }
            (vector10 = vector10.MemberwiseClone(), 
              $T02().prototype._ctor.call(vector10, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            var num58 = (+$T06().player[this.owner].position.X + +((($T06().player[this.owner].width | 0) / 2 | 0))) - +vector10.X;
            var num59 = (+$T06().player[this.owner].position.Y + +((($T06().player[this.owner].height | 0) / 2 | 0))) - +vector10.Y;
            var num60 = Math.fround(Math.sqrt((num58 * num58) + (num59 * num59)));
            if (+this.ai[0] === 0) {
              this.tileCollide = true;
              if (num60 > 300) {
                this.ai[0] = 1;
              } else {
                this.ai[1] += 1;
                if (+this.ai[1] > 2) {
                  this.alpha = 0;
                }
                if (+this.ai[1] >= 5) {
                  this.ai[1] = 15;
                  this.velocity.Y = +this.velocity.Y + 0.5;
                  this.velocity.X = +this.velocity.X * 0.95;
                }
              }
            } else if (+this.ai[0] === 1) {
              this.tileCollide = false;
              if (num60 < 20) {
                this.Kill();
              }
              num60 = +((11 / num60));
              num58 *= num60;
              num59 *= num60;
              this.velocity.X = num58;
              this.velocity.Y = num59;
            }
            this.rotation = +this.rotation + (+this.velocity.X * 0.03);
            return;
          } else if ((this.aiStyle | 0) === 16) {
            if (!(((this.owner | 0) !== ($T06().myPlayer | 0)) || 
                ((this.timeLeft | 0) > 3) || (+this.ai[1] !== 0))) {
              this.ai[1] = 1;
              this.netUpdate = true;
            }
            if (+this.ai[1] > 0) {
              this.alpha = 255;
              if ((this.type | 0) === 28) {
                this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
                this.width = 128;
                this.height = 128;
                this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));
                this.damage = 100;
                this.knockBack = 8;
              } else if ((this.type | 0) === 29) {
                this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
                this.width = 250;
                this.height = 250;
                this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));
                this.damage = 250;
                this.knockBack = 10;
              } else if ((this.type | 0) === 30) {
                this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
                this.width = 128;
                this.height = 128;
                this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
                this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));
                this.knockBack = 8;
              }
            } else if (!(((this.type | 0) === 30) || (($T06().rand.Next(4) | 0) !== 0))) {
              if ((this.type | 0) !== 30) {
                this.damage = 0;
              }
              $T07().NewDust(
                $S01().Construct(this.position.X, this.position.Y), 
                this.width, 
                this.height, 
                6, 
                0, 
                0, 
                100, 
                new ($T08())(), 
                1
              );
            }
            this.ai[0] += 1;
            if (!(!(((this.type | 0) === 30) && 
                  (+this.ai[0] > 10)) && (((this.type | 0) === 30) || 
                  (+this.ai[0] <= 5)))) {
              this.ai[0] = 10;
              if (!((+this.velocity.Y !== 0) || (+this.velocity.X === 0))) {
                this.velocity.X = +this.velocity.X * 0.97;
                if ((this.type | 0) === 29) {
                  this.velocity.X = +this.velocity.X * 0.99;
                }
                if (!((this.velocity.X <= -0.01) || (this.velocity.X >= 0.01))) {
                  this.velocity.X = 0;
                  this.netUpdate = true;
                }
              }
              this.velocity.Y = +this.velocity.Y + 0.2;
            }
            this.rotation = +this.rotation + (+this.velocity.X * 0.1);
          }
        }
      }
    }
  }; 

  function Projectile_GetAlpha (newColor) {
    if (!(((this.type | 0) !== 9) && 
        ((this.type | 0) !== 15) && ((this.type | 0) !== 34))) {
      var r = (((newColor.get_R() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
      var g = (((newColor.get_G() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
      var b = (((newColor.get_B() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
    } else if (!(((this.type | 0) !== 16) && ((this.type | 0) !== 18))) {
      r = (newColor.get_R() | 0);
      g = (newColor.get_G() | 0);
      b = (newColor.get_B() | 0);
    } else {
      r = (((newColor.get_R() | 0) - (this.alpha | 0)) | 0);
      g = (((newColor.get_G() | 0) - (this.alpha | 0)) | 0);
      b = (((newColor.get_B() | 0) - (this.alpha | 0)) | 0);
    }
    var num = (((newColor.get_A() | 0) - (this.alpha | 0)) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    return $S02().Construct(r, g, b, num);
  }; 

  function Projectile_Kill () {
    var $hoisted00 = new ($T02())(), $hoisted01 = new ($T02())(), $hoisted02 = new ($T02())(), $hoisted03 = new ($T02())(), $hoisted04 = new ($T02())(), $hoisted05 = new ($T02())(), $hoisted06 = new ($T02())(), $hoisted07 = new ($T02())(), $hoisted08 = new ($T02())(), $hoisted09 = new ($T02())(), $hoisted0A = new ($T02())(), $hoisted0B = new ($T02())(), $hoisted0C = new ($T02())(), $hoisted0D = new ($T02())(), $hoisted0E = new ($T02())(), $hoisted0F = new ($T02())(), $hoisted10 = new ($T02())(), $hoisted11 = new ($T02())(), $hoisted12 = new ($T02())(), $hoisted13 = new ($T02())();
    if (!this.active) {
      return;
    }
    if ((this.type | 0) === 1) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var i = 0; i < 10; i = ((i + 1) | 0)) {
        $T07().NewDust(
          ($hoisted00._ctor(this.position.X, this.position.Y), 
            $hoisted00), 
          this.width, 
          this.height, 
          7, 
          0, 
          0, 
          0, 
          new ($T08())(), 
          1
        );
      }
    } else if ((this.type | 0) === 2) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var j = 0; j < 20; j = ((j + 1) | 0)) {
        $T07().NewDust(
          ($hoisted01._ctor(this.position.X, this.position.Y), 
            $hoisted01), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          1
        );
      }
    } else if ((this.type | 0) === 3) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var k = 0; k < 10; k = ((k + 1) | 0)) {
        $T07().NewDust(
          ($hoisted02._ctor(this.position.X, this.position.Y), 
            $hoisted02), 
          this.width, 
          this.height, 
          1, 
          +this.velocity.X * 0.1, 
          +this.velocity.Y * 0.1, 
          0, 
          new ($T08())(), 
          0.75
        );
      }
    } else if ((this.type | 0) === 4) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var l = 0; l < 10; l = ((l + 1) | 0)) {
        $T07().NewDust(
          ($hoisted03._ctor(this.position.X, this.position.Y), 
            $hoisted03), 
          this.width, 
          this.height, 
          14, 
          0, 
          0, 
          150, 
          new ($T08())(), 
          1.1
        );
      }
    } else if ((this.type | 0) === 5) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

      for (var m = 0; m < 60; m = ((m + 1) | 0)) {
        $T07().NewDust(
          this.position, 
          this.width, 
          this.height, 
          15, 
          +this.velocity.X * 0.5, 
          +this.velocity.Y * 0.5, 
          150, 
          new ($T08())(), 
          1.5
        );
      }
    } else if (!(((this.type | 0) !== 9) && ((this.type | 0) !== 12))) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

      for (var n = 0; n < 10; n = ((n + 1) | 0)) {
        $T07().NewDust(
          this.position, 
          this.width, 
          this.height, 
          15, 
          +this.velocity.X * 0.1, 
          +this.velocity.Y * 0.1, 
          150, 
          new ($T08())(), 
          1.2
        );
      }

      for (var num = 0; num < 3; num = ((num + 1) | 0)) {
        $T0B().NewGore(this.position.MemberwiseClone(), $S01().Construct((+this.velocity.X * 0.05), (+this.velocity.Y * 0.05)), $T06().rand.Next(16, 18));
      }
      if (!(((this.type | 0) !== 12) || ((this.damage | 0) >= 100))) {

        for (var num2 = 0; num2 < 10; num2 = ((num2 + 1) | 0)) {
          $T07().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            +this.velocity.X * 0.1, 
            +this.velocity.Y * 0.1, 
            150, 
            new ($T08())(), 
            1.2
          );
        }

        for (var num3 = 0; num3 < 3; num3 = ((num3 + 1) | 0)) {
          $T0B().NewGore(this.position.MemberwiseClone(), $S01().Construct((+this.velocity.X * 0.05), (+this.velocity.Y * 0.05)), $T06().rand.Next(16, 18));
        }
      }
    } else if (!(((this.type | 0) !== 14) && 
        ((this.type | 0) !== 20) && ((this.type | 0) !== 36))) {
      $T11().HitTiles(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), this.width, this.height);
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);
    } else if (!(((this.type | 0) !== 15) && ((this.type | 0) !== 34))) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

      for (var num4 = 0; num4 < 20; num4 = ((num4 + 1) | 0)) {
        var num5 = ($T07().NewDust(
          ($hoisted04._ctor(this.position.X, this.position.Y), 
            $hoisted04), 
          this.width, 
          this.height, 
          6, 
          -this.velocity.X * 0.2, 
          -this.velocity.Y * 0.2, 
          100, 
          new ($T08())(), 
          2
        ) | 0);
        $T06().dust[num5].noGravity = true;
        $T06().dust[num5].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num5].velocity.MemberwiseClone(), 2).MemberwiseClone();
        num5 = ($T07().NewDust(
          ($hoisted05._ctor(this.position.X, this.position.Y), 
            $hoisted05), 
          this.width, 
          this.height, 
          6, 
          -this.velocity.X * 0.2, 
          -this.velocity.Y * 0.2, 
          100, 
          new ($T08())(), 
          1
        ) | 0);
        $T06().dust[num5].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num5].velocity.MemberwiseClone(), 2).MemberwiseClone();
      }
    } else if ((this.type | 0) === 16) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

      for (var num6 = 0; num6 < 20; num6 = ((num6 + 1) | 0)) {
        var num7 = ($T07().NewDust(
          ($hoisted06._ctor(+this.position.X - +this.velocity.X, +this.position.Y - +this.velocity.Y), 
            $hoisted06), 
          this.width, 
          this.height, 
          15, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          2
        ) | 0);
        $T06().dust[num7].noGravity = true;
        $T06().dust[num7].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num7].velocity.MemberwiseClone(), 2).MemberwiseClone();
        num7 = ($T07().NewDust(
          ($hoisted07._ctor(+this.position.X - +this.velocity.X, +this.position.Y - +this.velocity.Y), 
            $hoisted07), 
          this.width, 
          this.height, 
          15, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          1
        ) | 0);
      }
    } else if ((this.type | 0) === 17) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var num8 = 0; num8 < 5; num8 = ((num8 + 1) | 0)) {
        $T07().NewDust(
          ($hoisted08._ctor(this.position.X, this.position.Y), 
            $hoisted08), 
          this.width, 
          this.height, 
          0, 
          0, 
          0, 
          0, 
          new ($T08())(), 
          1
        );
      }
    } else if ((this.type | 0) === 31) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var num9 = 0; num9 < 5; num9 = ((num9 + 1) | 0)) {
        var num10 = ($T07().NewDust(
          ($hoisted09._ctor(this.position.X, this.position.Y), 
            $hoisted09), 
          this.width, 
          this.height, 
          32, 
          0, 
          0, 
          0, 
          new ($T08())(), 
          1
        ) | 0);
        $T06().dust[num10].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num10].velocity.MemberwiseClone(), 0.6).MemberwiseClone();
      }
    } else if ((this.type | 0) === 21) {
      $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

      for (var num11 = 0; num11 < 10; num11 = ((num11 + 1) | 0)) {
        $T07().NewDust(
          ($hoisted0A._ctor(this.position.X, this.position.Y), 
            $hoisted0A), 
          this.width, 
          this.height, 
          26, 
          0, 
          0, 
          0, 
          new ($T08())(), 
          0.8
        );
      }
    } else if ((this.type | 0) === 24) {

      for (var num12 = 0; num12 < 10; num12 = ((num12 + 1) | 0)) {
        $T07().NewDust(
          ($hoisted0B._ctor(this.position.X, this.position.Y), 
            $hoisted0B), 
          this.width, 
          this.height, 
          1, 
          +this.velocity.X * 0.1, 
          +this.velocity.Y * 0.1, 
          0, 
          new ($T08())(), 
          0.75
        );
      }
    } else if ((this.type | 0) === 27) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

      for (var num13 = 0; num13 < 30; num13 = ((num13 + 1) | 0)) {
        var num14 = ($T07().NewDust(
          ($hoisted0C._ctor(this.position.X, this.position.Y), 
            $hoisted0C), 
          this.width, 
          this.height, 
          29, 
          +this.velocity.X * 0.1, 
          +this.velocity.Y * 0.1, 
          100, 
          new ($T08())(), 
          3
        ) | 0);
        $T06().dust[num14].noGravity = true;
        $T07().NewDust(
          ($hoisted0D._ctor(this.position.X, this.position.Y), 
            $hoisted0D), 
          this.width, 
          this.height, 
          29, 
          +this.velocity.X * 0.1, 
          +this.velocity.Y * 0.1, 
          100, 
          new ($T08())(), 
          2
        );
      }
    } else if (!(((this.type | 0) !== 28) && ((this.type | 0) !== 30))) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 14);
      this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
      this.width = 22;
      this.height = 22;
      this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));

      for (var num15 = 0; num15 < 20; num15 = ((num15 + 1) | 0)) {
        var num16 = ($T07().NewDust(
          ($hoisted0E._ctor(this.position.X, this.position.Y), 
            $hoisted0E), 
          this.width, 
          this.height, 
          31, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          1.5
        ) | 0);
        $T06().dust[num16].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num16].velocity.MemberwiseClone(), 1.4).MemberwiseClone();
      }

      for (var num17 = 0; num17 < 10; num17 = ((num17 + 1) | 0)) {
        var num18 = ($T07().NewDust(
          ($hoisted0F._ctor(this.position.X, this.position.Y), 
            $hoisted0F), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          2.5
        ) | 0);
        $T06().dust[num18].noGravity = true;
        $T06().dust[num18].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num18].velocity.MemberwiseClone(), 5).MemberwiseClone();
        num18 = ($T07().NewDust(
          ($hoisted10._ctor(this.position.X, this.position.Y), 
            $hoisted10), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          1.5
        ) | 0);
        $T06().dust[num18].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num18].velocity.MemberwiseClone(), 3).MemberwiseClone();
      }
      var num19 = ($T0B().NewGore($S01().Construct(this.position.X, this.position.Y), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
      $T06().gore[num19].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().gore[num19].velocity.MemberwiseClone(), 0.4).MemberwiseClone();
      var expr_D50_cp_0 = $T06().gore[num19];
      expr_D50_cp_0.velocity.X = +expr_D50_cp_0.velocity.X + 1;
      var expr_D6E_cp_0 = $T06().gore[num19];
      expr_D6E_cp_0.velocity.Y = +expr_D6E_cp_0.velocity.Y + 1;
      num19 = ($T0B().NewGore($S01().Construct(this.position.X, this.position.Y), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
      $T06().gore[num19].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().gore[num19].velocity.MemberwiseClone(), 0.4).MemberwiseClone();
      var expr_DE3_cp_0 = $T06().gore[num19];
      expr_DE3_cp_0.velocity.X = +expr_DE3_cp_0.velocity.X - 1;
      var expr_E01_cp_0 = $T06().gore[num19];
      expr_E01_cp_0.velocity.Y = +expr_E01_cp_0.velocity.Y + 1;
      num19 = ($T0B().NewGore($S01().Construct(this.position.X, this.position.Y), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
      $T06().gore[num19].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().gore[num19].velocity.MemberwiseClone(), 0.4).MemberwiseClone();
      var expr_E76_cp_0 = $T06().gore[num19];
      expr_E76_cp_0.velocity.X = +expr_E76_cp_0.velocity.X + 1;
      var expr_E94_cp_0 = $T06().gore[num19];
      expr_E94_cp_0.velocity.Y = +expr_E94_cp_0.velocity.Y - 1;
      num19 = ($T0B().NewGore($S01().Construct(this.position.X, this.position.Y), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
      $T06().gore[num19].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().gore[num19].velocity.MemberwiseClone(), 0.4).MemberwiseClone();
      var expr_F09_cp_0 = $T06().gore[num19];
      expr_F09_cp_0.velocity.X = +expr_F09_cp_0.velocity.X - 1;
      var expr_F27_cp_0 = $T06().gore[num19];
      expr_F27_cp_0.velocity.Y = +expr_F27_cp_0.velocity.Y - 1;
    } else if ((this.type | 0) === 29) {
      $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 14);
      this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
      this.width = 200;
      this.height = 200;
      this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));

      for (var num20 = 0; num20 < 50; num20 = ((num20 + 1) | 0)) {
        var num21 = ($T07().NewDust(
          ($hoisted11._ctor(this.position.X, this.position.Y), 
            $hoisted11), 
          this.width, 
          this.height, 
          31, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          2
        ) | 0);
        $T06().dust[num21].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num21].velocity.MemberwiseClone(), 1.4).MemberwiseClone();
      }

      for (var num22 = 0; num22 < 80; num22 = ((num22 + 1) | 0)) {
        var num23 = ($T07().NewDust(
          ($hoisted12._ctor(this.position.X, this.position.Y), 
            $hoisted12), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          3
        ) | 0);
        $T06().dust[num23].noGravity = true;
        $T06().dust[num23].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num23].velocity.MemberwiseClone(), 5).MemberwiseClone();
        num23 = ($T07().NewDust(
          ($hoisted13._ctor(this.position.X, this.position.Y), 
            $hoisted13), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          2
        ) | 0);
        $T06().dust[num23].velocity = $S00().CallStatic($T02(), "op_Multiply", null, $T06().dust[num23].velocity.MemberwiseClone(), 3).MemberwiseClone();
      }

      for (var num24 = 0; num24 < 2; num24 = ((num24 + 1) | 0)) {
        var num25 = ($T0B().NewGore($S01().Construct(((+this.position.X + +(((this.width | 0) / 2 | 0))) - 24), ((+this.position.Y + +(((this.height | 0) / 2 | 0))) - 24)), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
        $T06().gore[num25].scale = 1.5;
        var expr_11D9_cp_0 = $T06().gore[num25];
        expr_11D9_cp_0.velocity.X = +expr_11D9_cp_0.velocity.X + 1.5;
        var expr_11F7_cp_0 = $T06().gore[num25];
        expr_11F7_cp_0.velocity.Y = +expr_11F7_cp_0.velocity.Y + 1.5;
        num25 = ($T0B().NewGore($S01().Construct(((+this.position.X + +(((this.width | 0) / 2 | 0))) - 24), ((+this.position.Y + +(((this.height | 0) / 2 | 0))) - 24)), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
        $T06().gore[num25].scale = 1.5;
        var expr_1281_cp_0 = $T06().gore[num25];
        expr_1281_cp_0.velocity.X = +expr_1281_cp_0.velocity.X - 1.5;
        var expr_129F_cp_0 = $T06().gore[num25];
        expr_129F_cp_0.velocity.Y = +expr_129F_cp_0.velocity.Y + 1.5;
        num25 = ($T0B().NewGore($S01().Construct(((+this.position.X + +(((this.width | 0) / 2 | 0))) - 24), ((+this.position.Y + +(((this.height | 0) / 2 | 0))) - 24)), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
        $T06().gore[num25].scale = 1.5;
        var expr_1329_cp_0 = $T06().gore[num25];
        expr_1329_cp_0.velocity.X = +expr_1329_cp_0.velocity.X + 1.5;
        var expr_1347_cp_0 = $T06().gore[num25];
        expr_1347_cp_0.velocity.Y = +expr_1347_cp_0.velocity.Y - 1.5;
        num25 = ($T0B().NewGore($S01().Construct(((+this.position.X + +(((this.width | 0) / 2 | 0))) - 24), ((+this.position.Y + +(((this.height | 0) / 2 | 0))) - 24)), new ($T02())(), $T06().rand.Next(61, 64)) | 0);
        $T06().gore[num25].scale = 1.5;
        var expr_13D1_cp_0 = $T06().gore[num25];
        expr_13D1_cp_0.velocity.X = +expr_13D1_cp_0.velocity.X - 1.5;
        var expr_13EF_cp_0 = $T06().gore[num25];
        expr_13EF_cp_0.velocity.Y = +expr_13EF_cp_0.velocity.Y - 1.5;
      }
      this.position.X = +this.position.X + +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y + +(((this.height | 0) / 2 | 0));
      this.width = 10;
      this.height = 10;
      this.position.X = +this.position.X - +(((this.width | 0) / 2 | 0));
      this.position.Y = +this.position.Y - +(((this.height | 0) / 2 | 0));
    }
    if ((this.owner | 0) === ($T06().myPlayer | 0)) {
      if (!(((this.type | 0) !== 28) && ((this.type | 0) !== 29))) {
        var num26 = 3;
        if ((this.type | 0) === 29) {
          num26 = 7;
        }
        var num27 = ((+((+this.position.X / 16)) - +num26) | 0);
        var num28 = ((+((+this.position.X / 16)) + +num26) | 0);
        var num29 = ((+((+this.position.Y / 16)) - +num26) | 0);
        var num30 = ((+((+this.position.Y / 16)) + +num26) | 0);
        if (num27 < 0) {
          num27 = 0;
        }
        if (num28 > ($T06().maxTilesX | 0)) {
          num28 = ($T06().maxTilesX | 0);
        }
        if (num29 < 0) {
          num29 = 0;
        }
        if (num30 > ($T06().maxTilesY | 0)) {
          num30 = ($T06().maxTilesY | 0);
        }
        var flag = false;

        for (var num31 = num27; num31 <= num28; num31 = ((num31 + 1) | 0)) {

        $loop22: 
          for (var num32 = num29; num32 <= num30; num32 = ((num32 + 1) | 0)) {
            var num33 = (Math.abs((+num31 - +((+this.position.X / 16)))));
            var num34 = (Math.abs((+num32 - +((+this.position.Y / 16)))));
            var num35 = (Math.sqrt((num33 * num33) + (num34 * num34)));
            if (!((num35 >= +num26) || 
                ($T06().tile.Get(num31, num32) === null) || (($T06().tile.Get(num31, num32).wall | 0) !== 0))) {
              flag = true;
              break $loop22;
            }
          }
        }

        for (var num36 = num27; num36 <= num28; num36 = ((num36 + 1) | 0)) {

          for (var num37 = num29; num37 <= num30; num37 = ((num37 + 1) | 0)) {
            var num38 = (Math.abs((+num36 - +((+this.position.X / 16)))));
            var num39 = (Math.abs((+num37 - +((+this.position.Y / 16)))));
            var num40 = (Math.sqrt((num38 * num38) + (num39 * num39)));
            if (num40 < +num26) {
              var flag2 = true;
              if (!(($T06().tile.Get(num36, num37) === null) || !$T06().tile.Get(num36, num37).active)) {
                flag2 = false;
                if ((this.type | 0) === 28) {
                  if (!($T06().tileSolid[$T06().tile.Get(num36, num37).type] && 
                      !$T06().tileSolidTop[$T06().tile.Get(num36, num37).type] && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 0) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 1) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 2) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 23) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 30) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 40) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 6) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 7) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 8) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 9) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 10) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 53) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 54) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 57) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 59) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 60) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 63) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 64) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 65) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 66) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 67) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 68) && 
                      (($T06().tile.Get(num36, num37).type | 0) !== 70) && (($T06().tile.Get(num36, num37).type | 0) !== 37))) {
                    flag2 = true;
                  }
                } else if ((this.type | 0) === 29) {
                  flag2 = true;
                }
                if (!(!$T06().tileDungeon[$T06().tile.Get(num36, num37).type] && 
                    (($T06().tile.Get(num36, num37).type | 0) !== 26) && 
                    (($T06().tile.Get(num36, num37).type | 0) !== 58) && (($T06().tile.Get(num36, num37).type | 0) !== 21))) {
                  flag2 = false;
                }
                if (flag2) {
                  $T0D().KillTile(
                    num36, 
                    num37, 
                    false, 
                    false, 
                    false
                  );
                  if (!($T06().tile.Get(num36, num37).active || (($T06().netMode | 0) !== 1))) {
                    $T0A().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +num36, 
                      +num37, 
                      0
                    );
                  }
                }
              }
              if (!(!flag2 || 
                  ($T06().tile.Get(num36, num37) === null) || 
                  (($T06().tile.Get(num36, num37).wall | 0) <= 0) || !flag)) {
                $T0D().KillWall(num36, num37, false);
                if (!((($T06().tile.Get(num36, num37).wall | 0) !== 0) || (($T06().netMode | 0) !== 1))) {
                  $T0A().SendData(
                    17, 
                    -1, 
                    -1, 
                    "", 
                    2, 
                    +num36, 
                    +num37, 
                    0
                  );
                }
              }
            }
          }
        }
      }
      if (($T06().netMode | 0) !== 0) {
        $T0A().SendData(
          29, 
          -1, 
          -1, 
          "", 
          this.identity, 
          +(this.owner), 
          0, 
          0
        );
      }
      var num41 = -1;
      if ((this.aiStyle | 0) === 10) {
        var num42 = ((((+this.position.X + +(((this.width | 0) / 2 | 0))) | 0) / 16) | 0);
        var num43 = ((((+this.position.Y + +(((this.width | 0) / 2 | 0))) | 0) / 16) | 0);
        var num44 = 0;
        var num45 = 2;
        if ((this.type | 0) === 31) {
          num44 = 53;
          num45 = 169;
        }
        if (!$T06().tile.Get(num42, num43).active) {
          $T0D().PlaceTile(
            num42, 
            num43, 
            num44, 
            false, 
            true, 
            -1
          );
          if (!(!$T06().tile.Get(num42, num43).active || (($T06().tile.Get(num42, num43).type | 0) !== num44))) {
            $T0A().SendData(
              17, 
              -1, 
              -1, 
              "", 
              1, 
              +num42, 
              +num43, 
              +num44
            );
          } else {
            num41 = ($T13().NewItem(
              ((this.position.X) | 0), 
              ((this.position.Y) | 0), 
              this.width, 
              this.height, 
              num45, 
              1, 
              false
            ) | 0);
          }
        } else {
          num41 = ($T13().NewItem(
            ((this.position.X) | 0), 
            ((this.position.Y) | 0), 
            this.width, 
            this.height, 
            num45, 
            1, 
            false
          ) | 0);
        }
      }
      if (!(((this.type | 0) !== 1) || (($T06().rand.Next(3) | 0) >= 2))) {
        num41 = ($T13().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          40, 
          1, 
          false
        ) | 0);
      }
      if (!(((this.type | 0) !== 2) || (($T06().rand.Next(5) | 0) >= 4))) {
        if (($T06().rand.Next(4) | 0) === 0) {
          num41 = ($T13().NewItem(
            ((this.position.X) | 0), 
            ((this.position.Y) | 0), 
            this.width, 
            this.height, 
            41, 
            1, 
            false
          ) | 0);
        } else {
          num41 = ($T13().NewItem(
            ((this.position.X) | 0), 
            ((this.position.Y) | 0), 
            this.width, 
            this.height, 
            40, 
            1, 
            false
          ) | 0);
        }
      }
      if (!(((this.type | 0) !== 3) || (($T06().rand.Next(5) | 0) >= 4))) {
        num41 = ($T13().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          42, 
          1, 
          false
        ) | 0);
      }
      if (!(((this.type | 0) !== 4) || (($T06().rand.Next(5) | 0) >= 4))) {
        num41 = ($T13().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          47, 
          1, 
          false
        ) | 0);
      }
      if (!(((this.type | 0) !== 12) || ((this.damage | 0) <= 100))) {
        num41 = ($T13().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          75, 
          1, 
          false
        ) | 0);
      }
      if (!(((this.type | 0) !== 21) || (($T06().rand.Next(5) | 0) >= 4))) {
        num41 = ($T13().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          154, 
          1, 
          false
        ) | 0);
      }
      if (!((($T06().netMode | 0) !== 1) || (num41 < 0))) {
        $T0A().SendData(
          21, 
          -1, 
          -1, 
          "", 
          num41, 
          0, 
          0, 
          0
        );
      }
    }
    this.active = false;
  }; 

  function Projectile_NewProjectile (X, Y, SpeedX, SpeedY, Type, Damage, KnockBack, Owner) {
    var num = 1000;

  $loop0: 
    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!$T06().projectile[i].active) {
        num = i;
        break $loop0;
      }
    }
    if (num === 1000) {
      return num;
    }
    ($T06().projectile[num]).SetDefaults(Type);
    $T06().projectile[num].position.X = +X - (+($T06().projectile[num].width) * 0.5);
    $T06().projectile[num].position.Y = +Y - (+($T06().projectile[num].height) * 0.5);
    $T06().projectile[num].owner = (Owner | 0);
    $T06().projectile[num].velocity.X = +SpeedX;
    $T06().projectile[num].velocity.Y = +SpeedY;
    $T06().projectile[num].damage = (Damage | 0);
    $T06().projectile[num].knockBack = +KnockBack;
    $T06().projectile[num].identity = num;
    $T06().projectile[num].wet = $T11().WetCollision($T06().projectile[num].position, $T06().projectile[num].width, $T06().projectile[num].height);
    if (!((($T06().netMode | 0) === 0) || ((Owner | 0) !== ($T06().myPlayer | 0)))) {
      $T0A().SendData(
        27, 
        -1, 
        -1, 
        "", 
        num, 
        0, 
        0, 
        0
      );
    }
    if ((Owner | 0) === ($T06().myPlayer | 0)) {
      if ((Type | 0) === 28) {
        $T06().projectile[num].timeLeft = 180;
      }
      if ((Type | 0) === 29) {
        $T06().projectile[num].timeLeft = 300;
      }
      if ((Type | 0) === 30) {
        $T06().projectile[num].timeLeft = 180;
      }
    }
    return num;
  }; 

  function Projectile_SetDefaults (Type) {

    for (var i = 0; i < ($thisType.maxAI | 0); i = ((i + 1) | 0)) {
      this.ai[i] = 0;
    }

    for (var j = 0; j < 8; j = ((j + 1) | 0)) {
      this.playerImmune[j] = 0;
    }
    this.lavaWet = false;
    this.wetCount = 0;
    this.wet = false;
    this.ignoreWater = false;
    this.hostile = false;
    this.netUpdate = false;
    this.numUpdates = 0;
    this.maxUpdates = 0;
    this.identity = 0;
    this.restrikeDelay = 0;
    this.light = 0;
    this.penetrate = 1;
    this.tileCollide = true;
    this.position = new ($T02())();
    this.velocity = new ($T02())();
    this.aiStyle = 0;
    this.alpha = 0;
    this.type = (Type | 0);
    this.active = true;
    this.rotation = 0;
    this.scale = 1;
    this.owner = 8;
    this.timeLeft = 3600;
    this.$name = "";
    this.friendly = false;
    this.damage = 0;
    this.knockBack = 0;
    if ((this.type | 0) === 1) {
      this.$name = "Wooden Arrow";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 1;
      this.friendly = true;
    } else if ((this.type | 0) === 2) {
      this.$name = "Fire Arrow";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 1;
      this.friendly = true;
      this.light = 1;
    } else if ((this.type | 0) === 3) {
      this.$name = "Shuriken";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 2;
      this.friendly = true;
      this.penetrate = 4;
    } else if ((this.type | 0) === 4) {
      this.$name = "Unholy Arrow";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 1;
      this.friendly = true;
      this.light = 0.2;
      this.penetrate = 3;
    } else if ((this.type | 0) === 5) {
      this.$name = "Jester's Arrow";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 1;
      this.friendly = true;
      this.light = 0.4;
      this.penetrate = -1;
      this.timeLeft = 40;
      this.alpha = 100;
      this.ignoreWater = true;
    } else if ((this.type | 0) === 6) {
      this.$name = "Enchanted Boomerang";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 3;
      this.friendly = true;
      this.penetrate = -1;
    } else if (!(((this.type | 0) !== 7) && ((this.type | 0) !== 8))) {
      this.$name = "Vilethorn";
      this.width = 28;
      this.height = 28;
      this.aiStyle = 4;
      this.friendly = true;
      this.penetrate = -1;
      this.tileCollide = false;
      this.alpha = 255;
      this.ignoreWater = true;
    } else if ((this.type | 0) === 9) {
      this.$name = "Starfury";
      this.width = 24;
      this.height = 24;
      this.aiStyle = 5;
      this.friendly = true;
      this.penetrate = 2;
      this.alpha = 50;
      this.scale = 0.8;
      this.light = 1;
    } else if ((this.type | 0) === 10) {
      this.$name = "Purification Powder";
      this.width = 64;
      this.height = 64;
      this.aiStyle = 6;
      this.friendly = true;
      this.tileCollide = false;
      this.penetrate = -1;
      this.alpha = 255;
      this.ignoreWater = true;
    } else if ((this.type | 0) === 11) {
      this.$name = "Vile Powder";
      this.width = 48;
      this.height = 48;
      this.aiStyle = 6;
      this.friendly = true;
      this.tileCollide = false;
      this.penetrate = -1;
      this.alpha = 255;
      this.ignoreWater = true;
    } else if ((this.type | 0) === 12) {
      this.$name = "Fallen Star";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 5;
      this.friendly = true;
      this.penetrate = -1;
      this.alpha = 50;
      this.light = 1;
    } else if ((this.type | 0) === 13) {
      this.$name = "Hook";
      this.width = 18;
      this.height = 18;
      this.aiStyle = 7;
      this.friendly = true;
      this.penetrate = -1;
      this.tileCollide = false;
    } else if ((this.type | 0) === 14) {
      this.$name = "Musket Ball";
      this.width = 4;
      this.height = 4;
      this.aiStyle = 1;
      this.friendly = true;
      this.penetrate = 1;
      this.light = 0.5;
      this.alpha = 255;
      this.maxUpdates = 1;
      this.scale = 1.2;
      this.timeLeft = 600;
    } else if ((this.type | 0) === 15) {
      this.$name = "Ball of Fire";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 8;
      this.friendly = true;
      this.light = 0.8;
      this.alpha = 100;
    } else if ((this.type | 0) === 16) {
      this.$name = "Magic Missile";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 9;
      this.friendly = true;
      this.light = 0.8;
      this.alpha = 100;
    } else if ((this.type | 0) === 17) {
      this.$name = "Dirt Ball";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 10;
      this.friendly = true;
    } else if ((this.type | 0) === 18) {
      this.$name = "Orb of Light";
      this.width = 32;
      this.height = 32;
      this.aiStyle = 11;
      this.friendly = true;
      this.light = 1;
      this.alpha = 150;
      this.tileCollide = false;
      this.penetrate = -1;
      this.timeLeft = Math.imul(this.timeLeft, 5);
      this.ignoreWater = true;
    } else if ((this.type | 0) === 19) {
      this.$name = "Flamarang";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 3;
      this.friendly = true;
      this.penetrate = -1;
      this.light = 1;
    } else if ((this.type | 0) === 20) {
      this.$name = "Green Laser";
      this.width = 4;
      this.height = 4;
      this.aiStyle = 1;
      this.friendly = true;
      this.penetrate = -1;
      this.light = 0.75;
      this.alpha = 255;
      this.maxUpdates = 2;
      this.scale = 1.4;
      this.timeLeft = 600;
    } else if ((this.type | 0) === 21) {
      this.$name = "Bone";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 2;
      this.scale = 1.2;
      this.friendly = true;
    } else if ((this.type | 0) === 22) {
      this.$name = "Water Stream";
      this.width = 12;
      this.height = 12;
      this.aiStyle = 12;
      this.friendly = true;
      this.alpha = 255;
      this.penetrate = -1;
      this.maxUpdates = 1;
      this.ignoreWater = true;
    } else if ((this.type | 0) === 23) {
      this.$name = "Harpoon";
      this.width = 4;
      this.height = 4;
      this.aiStyle = 13;
      this.friendly = true;
      this.penetrate = -1;
      this.alpha = 255;
    } else if ((this.type | 0) === 24) {
      this.$name = "Spiky Ball";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 14;
      this.friendly = true;
      this.penetrate = 3;
    } else if ((this.type | 0) === 25) {
      this.$name = "Ball 'O Hurt";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 15;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 26) {
      this.$name = "Blue Moon";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 15;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 27) {
      this.$name = "Water Bolt";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 8;
      this.friendly = true;
      this.light = 0.8;
      this.alpha = 200;
      this.timeLeft = (((this.timeLeft | 0) / 2) | 0);
      this.penetrate = 10;
    } else if ((this.type | 0) === 28) {
      this.$name = "Bomb";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 16;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 29) {
      this.$name = "Dynamite";
      this.width = 10;
      this.height = 10;
      this.aiStyle = 16;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 30) {
      this.$name = "Grenade";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 16;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 31) {
      this.$name = "Sand Ball";
      this.knockBack = 6;
      this.width = 10;
      this.height = 10;
      this.aiStyle = 10;
      this.friendly = true;
      this.hostile = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 32) {
      this.$name = "Ivy Whip";
      this.width = 18;
      this.height = 18;
      this.aiStyle = 7;
      this.friendly = true;
      this.penetrate = -1;
      this.tileCollide = false;
    } else if ((this.type | 0) === 33) {
      this.$name = "Thorn Chakrum";
      this.width = 28;
      this.height = 28;
      this.aiStyle = 3;
      this.friendly = true;
      this.scale = 0.9;
      this.penetrate = -1;
    } else if ((this.type | 0) === 34) {
      this.$name = "Flamelash";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 9;
      this.friendly = true;
      this.light = 0.8;
      this.alpha = 100;
      this.penetrate = 2;
    } else if ((this.type | 0) === 35) {
      this.$name = "Sunfury";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 15;
      this.friendly = true;
      this.penetrate = -1;
    } else if ((this.type | 0) === 36) {
      this.$name = "Meteor Shot";
      this.width = 4;
      this.height = 4;
      this.aiStyle = 1;
      this.friendly = true;
      this.penetrate = 2;
      this.light = 0.6;
      this.alpha = 255;
      this.maxUpdates = 1;
      this.scale = 1.4;
      this.timeLeft = 600;
    } else {
      this.active = false;
    }
    this.width = ((+(this.width) * +this.scale) | 0);
    this.height = ((+(this.height) * +this.scale) | 0);
  }; 

  function Projectile_Update (i) {
    var $hoisted00 = new ($T02())(), $hoisted01 = new ($T02())(), $hoisted02 = new ($T02())(), $hoisted03 = new ($T02())();
    var rectangle = new ($T03())(), value3 = new ($T03())(), value4 = new ($T03())(), value5 = new ($T03())(), value6 = new ($T03())();
    if (this.active) {
      var value = this.velocity.MemberwiseClone();
      if (!((+this.position.X > +$T06().leftWorld) && 
          ((+this.position.X + +(this.width)) < +$T06().rightWorld) && 
          (+this.position.Y > +$T06().topWorld) && ((+this.position.Y + +(this.height)) < +$T06().bottomWorld))) {
        this.Kill();
        return;
      }
      this.whoAmI = (i | 0);
      if ((this.soundDelay | 0) > 0) {
        this.soundDelay = (((this.soundDelay | 0) - 1) | 0);
      }
      this.netUpdate = false;

      for (var j = 0; j < 8; j = ((j + 1) | 0)) {
        if ((this.playerImmune[j] | 0) > 0) {
          this.playerImmune[j] = (((this.playerImmune[j] | 0) - 1) | 0);
        }
      }
      this.AI();
      if (!(((this.owner | 0) >= 8) || $T06().player[this.owner].active)) {
        this.Kill();
      }
      if (!this.ignoreWater) {
        var flag = $T11().LavaCollision(this.position, this.width, this.height);
        if (flag) {
          this.lavaWet = true;
        }
        var flag2 = $T11().WetCollision(this.position, this.width, this.height);
        if (flag2) {
          if ((this.wetCount | 0) === 0) {
            this.wetCount = 10;
            if (!this.wet) {
              if (!flag) {

                for (var k = 0; k < 10; k = ((k + 1) | 0)) {
                  var num = ($T07().NewDust(
                    ($hoisted00._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted00), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    33, 
                    0, 
                    0, 
                    0, 
                    new ($T08())(), 
                    1
                  ) | 0);
                  var expr_1D1_cp_0 = $T06().dust[num];
                  expr_1D1_cp_0.velocity.Y = +expr_1D1_cp_0.velocity.Y - 4;
                  var expr_1EF_cp_0 = $T06().dust[num];
                  expr_1EF_cp_0.velocity.X = +expr_1EF_cp_0.velocity.X * 2.5;
                  $T06().dust[num].scale = 1.3;
                  $T06().dust[num].alpha = 100;
                  $T06().dust[num].noGravity = true;
                }
                $T06().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              } else {

                for (var l = 0; l < 10; l = ((l + 1) | 0)) {
                  var num2 = ($T07().NewDust(
                    ($hoisted01._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted01), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    35, 
                    0, 
                    0, 
                    0, 
                    new ($T08())(), 
                    1
                  ) | 0);
                  var expr_2D7_cp_0 = $T06().dust[num2];
                  expr_2D7_cp_0.velocity.Y = +expr_2D7_cp_0.velocity.Y - 1.5;
                  var expr_2F5_cp_0 = $T06().dust[num2];
                  expr_2F5_cp_0.velocity.X = +expr_2F5_cp_0.velocity.X * 2.5;
                  $T06().dust[num2].scale = 1.3;
                  $T06().dust[num2].alpha = 100;
                  $T06().dust[num2].noGravity = true;
                }
                $T06().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              }
            }
            this.wet = true;
          }
        } else if (this.wet) {
          this.wet = false;
          if ((this.wetCount | 0) === 0) {
            this.wetCount = 10;
            if (!this.lavaWet) {

              for (var m = 0; m < 10; m = ((m + 1) | 0)) {
                var num3 = ($T07().NewDust(
                  ($hoisted02._ctor(+this.position.X - 6, +this.position.Y + +(((this.height | 0) / 2 | 0))), 
                    $hoisted02), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  33, 
                  0, 
                  0, 
                  0, 
                  new ($T08())(), 
                  1
                ) | 0);
                var expr_40E_cp_0 = $T06().dust[num3];
                expr_40E_cp_0.velocity.Y = +expr_40E_cp_0.velocity.Y - 4;
                var expr_42C_cp_0 = $T06().dust[num3];
                expr_42C_cp_0.velocity.X = +expr_42C_cp_0.velocity.X * 2.5;
                $T06().dust[num3].scale = 1.3;
                $T06().dust[num3].alpha = 100;
                $T06().dust[num3].noGravity = true;
              }
              $T06().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
            } else {

              for (var n = 0; n < 10; n = ((n + 1) | 0)) {
                var num4 = ($T07().NewDust(
                  ($hoisted03._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                    $hoisted03), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  35, 
                  0, 
                  0, 
                  0, 
                  new ($T08())(), 
                  1
                ) | 0);
                var expr_514_cp_0 = $T06().dust[num4];
                expr_514_cp_0.velocity.Y = +expr_514_cp_0.velocity.Y - 1.5;
                var expr_532_cp_0 = $T06().dust[num4];
                expr_532_cp_0.velocity.X = +expr_532_cp_0.velocity.X * 2.5;
                $T06().dust[num4].scale = 1.3;
                $T06().dust[num4].alpha = 100;
                $T06().dust[num4].noGravity = true;
              }
              $T06().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
            }
          }
        }
        if (!this.wet) {
          this.lavaWet = false;
        }
        if ((this.wetCount | 0) > 0) {
          this.wetCount = ((((this.wetCount | 0) - 1) | 0) & 0xFF);
        }
      }
      if (this.tileCollide) {
        var value2 = this.velocity.MemberwiseClone();
        var flag3 = true;
        if (!(((this.type | 0) !== 9) && 
            ((this.type | 0) !== 12) && 
            ((this.type | 0) !== 15) && 
            ((this.type | 0) !== 13) && ((this.type | 0) !== 31))) {
          flag3 = false;
        }
        if ((this.aiStyle | 0) === 10) {
          this.velocity = $T11().AnyCollision(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), this.width, this.height).MemberwiseClone();
        } else if (this.wet) {
          var vector = this.velocity.MemberwiseClone();
          this.velocity = $T11().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            flag3, 
            flag3
          ).MemberwiseClone();
          value = $S00().CallStatic($T02(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.5).MemberwiseClone();
          if (+this.velocity.X !== +vector.X) {
            value.X = +this.velocity.X;
          }
          if (+this.velocity.Y !== +vector.Y) {
            value.Y = +this.velocity.Y;
          }
        } else {
          this.velocity = $T11().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            flag3, 
            flag3
          ).MemberwiseClone();
        }
        if ($T02().op_Inequality(value2.MemberwiseClone(), this.velocity.MemberwiseClone())) {
          if ((this.type | 0) === 36) {
            if ((this.penetrate | 0) > 1) {
              $T11().HitTiles(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), this.width, this.height);
              $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);
              this.penetrate = (((this.penetrate | 0) - 1) | 0);
              if (+this.velocity.X !== +value2.X) {
                this.velocity.X = -value2.X;
              }
              if (+this.velocity.Y !== +value2.Y) {
                this.velocity.Y = -value2.Y;
              }
            } else {
              this.Kill();
            }
          } else if (!(((this.aiStyle | 0) !== 3) && 
              ((this.aiStyle | 0) !== 13) && ((this.aiStyle | 0) !== 15))) {
            $T11().HitTiles(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), this.width, this.height);
            if ((this.type | 0) === 33) {
              if (+this.velocity.X !== +value2.X) {
                this.velocity.X = -value2.X;
              }
              if (+this.velocity.Y !== +value2.Y) {
                this.velocity.Y = -value2.Y;
              }
            } else {
              this.ai[0] = 1;
              if ((this.aiStyle | 0) === 3) {
                this.velocity.X = -value2.X;
                this.velocity.Y = -value2.Y;
              }
            }
            this.netUpdate = true;
            $T06().PlaySound(0, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
          } else if ((this.aiStyle | 0) === 8) {
            $T06().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);
            this.ai[0] += 1;
            if (+this.ai[0] >= 5) {
              this.position = $T02().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
              this.Kill();
            } else {
              if (+this.velocity.Y !== +value2.Y) {
                this.velocity.Y = -value2.Y;
              }
              if (+this.velocity.X !== +value2.X) {
                this.velocity.X = -value2.X;
              }
            }
          } else if ((this.aiStyle | 0) === 14) {
            if (+this.velocity.X !== +value2.X) {
              this.velocity.X = +value2.X * -0.5;
            }
            if (!((+this.velocity.Y === +value2.Y) || (+value2.Y <= 1))) {
              this.velocity.Y = +value2.Y * -0.5;
            }
          } else if ((this.aiStyle | 0) === 16) {
            if (+this.velocity.X !== +value2.X) {
              this.velocity.X = +value2.X * -0.4;
              if ((this.type | 0) === 29) {
                this.velocity.X = +this.velocity.X * 0.8;
              }
            }
            if (!((+this.velocity.Y === +value2.Y) || (value2.Y <= 0.7))) {
              this.velocity.Y = +value2.Y * -0.4;
              if ((this.type | 0) === 29) {
                this.velocity.Y = +this.velocity.Y * 0.8;
              }
            }
          } else {
            this.position = $T02().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
            this.Kill();
          }
        }
      }
      if (!(((this.type | 0) === 7) || ((this.type | 0) === 8))) {
        if (this.wet) {
          this.position = $T02().op_Addition(this.position.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
        } else {
          this.position = $T02().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
        }
      }
      if (!((((this.aiStyle | 0) === 3) && 
            (+this.ai[0] === 1)) || 
          (((this.aiStyle | 0) === 7) && 
            (+this.ai[0] === 1)) || 
          (((this.aiStyle | 0) === 13) && 
            (+this.ai[0] === 1)) || (((this.aiStyle | 0) === 15) && 
            (+this.ai[0] === 1)))) {
        if (+this.velocity.X < 0) {
          this.direction = -1;
        } else {
          this.direction = 1;
        }
      }
      if (!this.active) {
        return;
      }
      if (+this.light > 0) {
        $T14().addLight(((+((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) | 0), ((+((+this.position.Y + +(((this.height | 0) / 2 | 0))) / 16)) | 0), this.light);
      }
      if ((this.type | 0) === 2) {
        $T07().NewDust(
          $S01().Construct(this.position.X, this.position.Y), 
          this.width, 
          this.height, 
          6, 
          0, 
          0, 
          100, 
          new ($T08())(), 
          1
        );
      } else if ((this.type | 0) === 4) {
        if (($T06().rand.Next(5) | 0) === 0) {
          $T07().NewDust(
            $S01().Construct(this.position.X, this.position.Y), 
            this.width, 
            this.height, 
            14, 
            0, 
            0, 
            150, 
            new ($T08())(), 
            1.1
          );
        }
      } else if ((this.type | 0) === 5) {
        $T07().NewDust(
          this.position, 
          this.width, 
          this.height, 
          15, 
          +this.velocity.X * 0.5, 
          +this.velocity.Y * 0.5, 
          150, 
          new ($T08())(), 
          1.2
        );
      }
      (rectangle = rectangle.MemberwiseClone(), 
        $T03().prototype._ctor.call(rectangle, ((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height));
      if (!(!this.hostile || 
          (($T06().myPlayer | 0) >= 8) || ((this.damage | 0) <= 0))) {
        var myPlayer = ($T06().myPlayer | 0);
        if (!(!$T06().player[myPlayer].active || 
            $T06().player[myPlayer].dead || $T06().player[myPlayer].immune)) {
          (value3 = value3.MemberwiseClone(), 
            $T03().prototype._ctor.call(value3, (($T06().player[myPlayer].position.X) | 0), (($T06().player[myPlayer].position.Y) | 0), $T06().player[myPlayer].width, $T06().player[myPlayer].height));
          if (rectangle.Intersects(value3.MemberwiseClone())) {
            var hitDirection = (this.direction | 0);
            if ((+$T06().player[myPlayer].position.X + +((($T06().player[myPlayer].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
              hitDirection = -1;
            } else {
              hitDirection = 1;
            }
            ($T06().player[myPlayer]).Hurt(Math.imul(this.damage, 2), hitDirection, false, false);
            if (($T06().netMode | 0) !== 0) {
              $T0A().SendData(
                26, 
                -1, 
                -1, 
                "", 
                myPlayer, 
                +(this.direction), 
                +((this.damage | 0) * 2), 
                0
              );
            }
          }
        }
      }
      if (!(!this.friendly || 
          ((this.type | 0) === 18) || ((this.owner | 0) !== ($T06().myPlayer | 0)))) {
        if (!(((this.aiStyle | 0) !== 16) || (+this.ai[1] <= 0))) {

          for (var num5 = 0; num5 < 8; num5 = ((num5 + 1) | 0)) {
            if (!(!$T06().player[num5].active || 
                $T06().player[num5].dead || $T06().player[num5].immune)) {
              (value4 = value4.MemberwiseClone(), 
                $T03().prototype._ctor.call(value4, (($T06().player[num5].position.X) | 0), (($T06().player[num5].position.Y) | 0), $T06().player[num5].width, $T06().player[num5].height));
              if (rectangle.Intersects(value4.MemberwiseClone())) {
                if ((+$T06().player[num5].position.X + +((($T06().player[num5].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
                  this.direction = -1;
                } else {
                  this.direction = 1;
                }
                ($T06().player[num5]).Hurt(this.damage, this.direction, true, false);
                if (($T06().netMode | 0) !== 0) {
                  $T0A().SendData(
                    26, 
                    -1, 
                    -1, 
                    "", 
                    num5, 
                    +(this.direction), 
                    +(this.damage), 
                    1
                  );
                }
              }
            }
          }
        }
        var num6 = ((+(+this.position.X / 16)) | 0);
        var num7 = ((((+((+this.position.X + +(this.width)) / 16)) | 0) + 1) | 0);
        var num8 = ((+(+this.position.Y / 16)) | 0);
        var num9 = ((((+((+this.position.Y + +(this.height)) / 16)) | 0) + 1) | 0);
        if (num6 < 0) {
          num6 = 0;
        }
        if (num7 > ($T06().maxTilesX | 0)) {
          num7 = ($T06().maxTilesX | 0);
        }
        if (num8 < 0) {
          num8 = 0;
        }
        if (num9 > ($T06().maxTilesY | 0)) {
          num9 = ($T06().maxTilesY | 0);
        }

        for (var num10 = num6; num10 < num7; num10 = ((num10 + 1) | 0)) {

          for (var num11 = num8; num11 < num9; num11 = ((num11 + 1) | 0)) {
            if (!(($T06().tile.Get(num10, num11) === null) || ((($T06().tile.Get(num10, num11).type | 0) !== 3) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 24) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 28) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 32) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 51) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 52) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 61) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 62) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 69) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 71) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 73) && 
                  (($T06().tile.Get(num10, num11).type | 0) !== 74)))) {
              $T0D().KillTile(
                num10, 
                num11, 
                false, 
                false, 
                false
              );
              if (($T06().netMode | 0) === 1) {
                $T0A().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num10, 
                  +num11, 
                  0
                );
              }
            }
          }
        }
        if ((this.damage | 0) > 0) {

        $loop8: 
          for (var num12 = 0; num12 < 1000; num12 = ((num12 + 1) | 0)) {
            if (!(!$T06().npc[num12].active || 
                $T06().npc[num12].friendly || (((this.owner | 0) >= 0) && 
                  (($T06().npc[num12].immune[this.owner] | 0) !== 0)))) {
              (value5 = value5.MemberwiseClone(), 
                $T03().prototype._ctor.call(value5, (($T06().npc[num12].position.X) | 0), (($T06().npc[num12].position.Y) | 0), $T06().npc[num12].width, $T06().npc[num12].height));
              if (rectangle.Intersects(value5.MemberwiseClone())) {
                if ((this.aiStyle | 0) === 3) {
                  if (+this.ai[0] === 0) {
                    this.velocity.X = -this.velocity.X;
                    this.velocity.Y = -this.velocity.Y;
                    this.netUpdate = true;
                  }
                  this.ai[0] = 1;
                } else if ((this.aiStyle | 0) === 16) {
                  if ((this.timeLeft | 0) > 3) {
                    this.timeLeft = 3;
                  }
                  if ((+$T06().npc[num12].position.X + +((($T06().npc[num12].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
                    this.direction = -1;
                  } else {
                    this.direction = 1;
                  }
                }
                ($T06().npc[num12]).StrikeNPC(this.damage, this.knockBack, this.direction);
                if (($T06().netMode | 0) !== 0) {
                  $T0A().SendData(
                    28, 
                    -1, 
                    -1, 
                    "", 
                    num12, 
                    +(this.damage), 
                    this.knockBack, 
                    +(this.direction)
                  );
                }
                if ((this.penetrate | 0) !== 1) {
                  $T06().npc[num12].immune[this.owner] = 10;
                }
                if ((this.penetrate | 0) > 0) {
                  this.penetrate = (((this.penetrate | 0) - 1) | 0);
                  if ((this.penetrate | 0) === 0) {
                    break $loop8;
                  }
                }
                if ((this.aiStyle | 0) === 7) {
                  this.ai[0] = 1;
                  this.damage = 0;
                  this.netUpdate = true;
                } else if ((this.aiStyle | 0) === 13) {
                  this.ai[0] = 1;
                  this.netUpdate = true;
                }
              }
            }
          }
        }
        if (!(((this.damage | 0) <= 0) || !$T06().player[$T06().myPlayer].hostile)) {

        $loop9: 
          for (var num13 = 0; num13 < 8; num13 = ((num13 + 1) | 0)) {
            if (!((num13 === (this.owner | 0)) || 
                !$T06().player[num13].active || 
                $T06().player[num13].dead || 
                $T06().player[num13].immune || 
                !$T06().player[num13].hostile || 
                ((this.playerImmune[num13] | 0) > 0) || ((($T06().player[$T06().myPlayer].team | 0) !== 0) && 
                  (($T06().player[$T06().myPlayer].team | 0) === ($T06().player[num13].team | 0))))) {
              (value6 = value6.MemberwiseClone(), 
                $T03().prototype._ctor.call(value6, (($T06().player[num13].position.X) | 0), (($T06().player[num13].position.Y) | 0), $T06().player[num13].width, $T06().player[num13].height));
              if (rectangle.Intersects(value6.MemberwiseClone())) {
                if ((this.aiStyle | 0) === 3) {
                  if (+this.ai[0] === 0) {
                    this.velocity.X = -this.velocity.X;
                    this.velocity.Y = -this.velocity.Y;
                    this.netUpdate = true;
                  }
                  this.ai[0] = 1;
                } else if ((this.aiStyle | 0) === 16) {
                  if ((this.timeLeft | 0) > 3) {
                    this.timeLeft = 3;
                  }
                  if ((+$T06().player[num13].position.X + +((($T06().player[num13].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
                    this.direction = -1;
                  } else {
                    this.direction = 1;
                  }
                }
                ($T06().player[num13]).Hurt(this.damage, this.direction, true, false);
                if (($T06().netMode | 0) !== 0) {
                  $T0A().SendData(
                    26, 
                    -1, 
                    -1, 
                    "", 
                    num13, 
                    +(this.direction), 
                    +(this.damage), 
                    1
                  );
                }
                this.playerImmune[num13] = 40;
                if ((this.penetrate | 0) > 0) {
                  this.penetrate = (((this.penetrate | 0) - 1) | 0);
                  if ((this.penetrate | 0) === 0) {
                    break $loop9;
                  }
                }
                if ((this.aiStyle | 0) === 7) {
                  this.ai[0] = 1;
                  this.damage = 0;
                  this.netUpdate = true;
                } else if ((this.aiStyle | 0) === 13) {
                  this.ai[0] = 1;
                  this.netUpdate = true;
                }
              }
            }
          }
        }
      }
      this.timeLeft = (((this.timeLeft | 0) - 1) | 0);
      if ((this.timeLeft | 0) <= 0) {
        this.Kill();
      }
      if ((this.penetrate | 0) === 0) {
        this.Kill();
      }
      if (!(!this.active || 
          !this.netUpdate || ((this.owner | 0) !== ($T06().myPlayer | 0)))) {
        $T0A().SendData(
          27, 
          -1, 
          -1, 
          "", 
          i, 
          0, 
          0, 
          0
        );
      }
      if (!(!this.active || ((this.maxUpdates | 0) <= 0))) {
        this.numUpdates = (((this.numUpdates | 0) - 1) | 0);
        if ((this.numUpdates | 0) >= 0) {
          this.Update(i);
        } else {
          this.numUpdates = (this.maxUpdates | 0);
        }
      }
      this.netUpdate = false;
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Projectile", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Projectile__ctor
    );

    $.Method({Static:false, Public:true }, "AI", 
      JSIL.MethodSignature.Void, 
      Projectile_AI
    );

    $.Method({Static:false, Public:true }, "GetAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Projectile_GetAlpha
    );

    $.Method({Static:false, Public:true }, "Kill", 
      JSIL.MethodSignature.Void, 
      Projectile_Kill
    );

    $.Method({Static:true , Public:true }, "NewProjectile", 
      new JSIL.MethodSignature($.Int32, [
          $.Single, $.Single, 
          $.Single, $.Single, 
          $.Int32, $.Int32, 
          $.Single, $.Int32
        ]), 
      Projectile_NewProjectile
    );

    $.Method({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Action($.Int32), 
      Projectile_SetDefaults
    );

    $.Method({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Action($.Int32), 
      Projectile_Update
    );

    $.Field({Static:false, Public:true }, "wet", $.Boolean);

    $.Field({Static:false, Public:true }, "wetCount", $.Byte);

    $.Field({Static:false, Public:true }, "lavaWet", $.Boolean);

    $.Field({Static:false, Public:true }, "whoAmI", $.Int32);

    $.Field({Static:true , Public:true }, "maxAI", $.Int32, 2);

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "width", $.Int32);

    $.Field({Static:false, Public:true }, "height", $.Int32);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "alpha", $.Int32);

    $.Field({Static:false, Public:true }, "owner", $.Int32);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "$name", $.String);

    $.Field({Static:false, Public:true }, "ai", $jsilcore.TypeRef("System.Array", [$.Single]));

    $.Field({Static:false, Public:true }, "aiStyle", $.Int32);

    $.Field({Static:false, Public:true }, "timeLeft", $.Int32);

    $.Field({Static:false, Public:true }, "soundDelay", $.Int32);

    $.Field({Static:false, Public:true }, "damage", $.Int32);

    $.Field({Static:false, Public:true }, "direction", $.Int32);

    $.Field({Static:false, Public:true }, "hostile", $.Boolean);

    $.Field({Static:false, Public:true }, "knockBack", $.Single);

    $.Field({Static:false, Public:true }, "friendly", $.Boolean);

    $.Field({Static:false, Public:true }, "penetrate", $.Int32);

    $.Field({Static:false, Public:true }, "identity", $.Int32);

    $.Field({Static:false, Public:true }, "light", $.Single);

    $.Field({Static:false, Public:true }, "netUpdate", $.Boolean);

    $.Field({Static:false, Public:true }, "restrikeDelay", $.Int32);

    $.Field({Static:false, Public:true }, "tileCollide", $.Boolean);

    $.Field({Static:false, Public:true }, "maxUpdates", $.Int32);

    $.Field({Static:false, Public:true }, "numUpdates", $.Int32);

    $.Field({Static:false, Public:true }, "ignoreWater", $.Boolean);

    $.Field({Static:false, Public:true }, "playerImmune", $jsilcore.TypeRef("System.Array", [$.Int32]));


    function Projectile__cctor () {
      $thisType.maxAI = 2;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Projectile__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Cloud */ 

(function Cloud$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, null))) ();
  };


  function Cloud__ctor () {
  }; 

  function Cloud_addCloud () {
    var rectangle = new ($T01())(), value = new ($T01())();
    var num = -1;

  $loop0: 
    for (var i = 0; i < 100; i = ((i + 1) | 0)) {
      if (!$T03().cloud[i].active) {
        num = i;
        break $loop0;
      }
    }
    if (num >= 0) {
      $T03().cloud[num].rSpeed = 0;
      $T03().cloud[num].sSpeed = 0;
      $T03().cloud[num].type = ($thisType.rand.Next(4) | 0);
      $T03().cloud[num].scale = +($thisType.rand.Next(8, 13)) * 0.1;
      $T03().cloud[num].rotation = +($thisType.rand.Next(-10, 11)) * 0.01;
      $T03().cloud[num].width = ((+(($T03().cloudTexture[$T03().cloud[num].type]).get_Width()) * +$T03().cloud[num].scale) | 0);
      $T03().cloud[num].height = ((+(($T03().cloudTexture[$T03().cloud[num].type]).get_Height()) * +$T03().cloud[num].scale) | 0);
      if (+$T03().windSpeed > 0) {
        $T03().cloud[num].position.X = +(((-+($T03().cloud[num].width) - (($T03().cloudTexture[$T03().cloud[num].type]).get_Width() | 0)) | 0) - ($thisType.rand.Next(Math.imul($T03().screenWidth, 2)) | 0));
      } else {
        $T03().cloud[num].position.X = +(((($T03().screenWidth | 0) + (($T03().cloudTexture[$T03().cloud[num].type]).get_Width() | 0)) | 0) + ($thisType.rand.Next(Math.imul($T03().screenWidth, 2)) | 0));
      }
      $T03().cloud[num].position.Y = +($thisType.rand.Next(((+(-+($T03().screenHeight)) * 0.25) | 0), ((+($T03().screenHeight) * 1.25) | 0)));
      var expr_1E5_cp_0 = $T03().cloud[num];
      expr_1E5_cp_0.position.Y = +expr_1E5_cp_0.position.Y - +($thisType.rand.Next(((+($T03().screenHeight) * 0.25) | 0)));
      var expr_215_cp_0 = $T03().cloud[num];
      expr_215_cp_0.position.Y = +expr_215_cp_0.position.Y - +($thisType.rand.Next(((+($T03().screenHeight) * 0.25) | 0)));
      $T03().cloud[num].scale *= 2.2 - Math.fround(+((+$T03().cloud[num].position.Y + (+($T03().screenHeight) * 0.25) / (+($T03().screenHeight) * 1.5))) + 0.699999988079071);
      if ($T03().cloud[num].scale > 1.4) {
        $T03().cloud[num].scale = 1.4;
      }
      if ($T03().cloud[num].scale < 0.6) {
        $T03().cloud[num].scale = 0.6;
      }
      $T03().cloud[num].active = true;
      (rectangle = rectangle.MemberwiseClone(), 
        $T01().prototype._ctor.call(rectangle, (($T03().cloud[num].position.X) | 0), (($T03().cloud[num].position.Y) | 0), $T03().cloud[num].width, $T03().cloud[num].height));

      for (var j = 0; j < 100; j = ((j + 1) | 0)) {
        if (!((num === j) || !$T03().cloud[j].active)) {
          (value = value.MemberwiseClone(), 
            $T01().prototype._ctor.call(value, (($T03().cloud[j].position.X) | 0), (($T03().cloud[j].position.Y) | 0), $T03().cloud[j].width, $T03().cloud[j].height));
          if (rectangle.Intersects(value.MemberwiseClone())) {
            $T03().cloud[num].active = false;
          }
        }
      }
    }
  }; 

  function Cloud_Clone () {
    return $T05().prototype.MemberwiseClone.call(this);
  }; 

  function Cloud_resetClouds () {
    if (($T03().cloudLimit | 0) < 10) {
      return;
    }
    $T03().numClouds = ($thisType.rand.Next(10, $T03().cloudLimit) | 0);
    $T03().windSpeed = 0;

    while (+$T03().windSpeed === 0) {
      $T03().windSpeed = +($thisType.rand.Next(-100, 101)) * 0.01;
    }

    for (var i = 0; i < 100; i = ((i + 1) | 0)) {
      $T03().cloud[i].active = false;
    }

    for (var j = 0; j < ($T03().numClouds | 0); j = ((j + 1) | 0)) {
      $thisType.addCloud();
    }

    for (var k = 0; k < ($T03().numClouds | 0); k = ((k + 1) | 0)) {
      if (+$T03().windSpeed < 0) {
        var expr_9D_cp_0 = $T03().cloud[k];
        expr_9D_cp_0.position.X = +expr_9D_cp_0.position.X - +(($T03().screenWidth | 0) * 2);
      } else {
        var expr_BF_cp_0 = $T03().cloud[k];
        expr_BF_cp_0.position.X = +expr_BF_cp_0.position.X + +(($T03().screenWidth | 0) * 2);
      }
    }
  }; 

  function Cloud_Update () {
    if ($T03().gameMenu) {
      this.position.X = +this.position.X + ((+$T03().windSpeed * +this.scale) * 3);
    } else {
      this.position.X = +this.position.X + ((+$T03().windSpeed - (+$T03().player[$T03().myPlayer].velocity.X * 0.1)) * +this.scale);
    }
    if (+$T03().windSpeed > 0) {
      if ((+this.position.X - +(($T03().cloudTexture[this.type]).get_Width())) > +($T03().screenWidth)) {
        this.active = false;
      }
    } else if (((+this.position.X + +(this.width)) + +(($T03().cloudTexture[this.type]).get_Width())) < 0) {
      this.active = false;
    }
    this.rSpeed = +this.rSpeed + (+($thisType.rand.Next(-10, 11)) * 2E-05);
    if (this.rSpeed > 0.0007) {
      this.rSpeed = 0.0007;
    }
    if (this.rSpeed < -0.0007) {
      this.rSpeed = -0.0007;
    }
    if (this.rotation > 0.05) {
      this.rotation = 0.05;
    }
    if (this.rotation < -0.05) {
      this.rotation = -0.05;
    }
    this.sSpeed = +this.sSpeed + (+($thisType.rand.Next(-10, 11)) * 2E-05);
    if (this.sSpeed > 0.0007) {
      this.sSpeed = 0.0007;
    }
    if (this.sSpeed < -0.0007) {
      this.sSpeed = -0.0007;
    }
    if (this.scale > 1.4) {
      this.scale = 1.4;
    }
    if (this.scale < 0.6) {
      this.scale = 0.6;
    }
    this.rotation = +this.rotation + +this.rSpeed;
    this.scale = +this.scale + +this.sSpeed;
    this.width = ((+(($T03().cloudTexture[this.type]).get_Width()) * +this.scale) | 0);
    this.height = ((+(($T03().cloudTexture[this.type]).get_Height()) * +this.scale) | 0);
  }; 

  function Cloud_UpdateClouds () {
    var num = 0;

    for (var i = 0; i < 100; i = ((i + 1) | 0)) {
      if ($T03().cloud[i].active) {
        ($T03().cloud[i]).Update();
        num = ((num + 1) | 0);
      }
    }

    for (var j = 0; j < 100; j = ((j + 1) | 0)) {
      if ($T03().cloud[j].active) {
        if (!((j <= 1) || ($T03().cloud[((j - 1) | 0)].active && 
              ($T03().cloud[((j - 1) | 0)].scale <= ($T03().cloud[j].scale + 0.02))))) {
          var cloud = $thisType.$Cast(($T03().cloud[((j - 1) | 0)]).Clone());
          $T03().cloud[((j - 1) | 0)] = $thisType.$Cast(($T03().cloud[j]).Clone());
          $T03().cloud[j] = cloud;
        }
        if (!((j >= 99) || ($T03().cloud[j].active && 
              ($T03().cloud[((j + 1) | 0)].scale >= ($T03().cloud[j].scale - 0.02))))) {
          var cloud2 = $thisType.$Cast(($T03().cloud[((j + 1) | 0)]).Clone());
          $T03().cloud[((j + 1) | 0)] = $thisType.$Cast(($T03().cloud[j]).Clone());
          $T03().cloud[j] = cloud2;
        }
      }
    }
    if (num < ($T03().numClouds | 0)) {
      $thisType.addCloud();
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Cloud", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Cloud__ctor
    );

    $.Method({Static:true , Public:true }, "addCloud", 
      JSIL.MethodSignature.Void, 
      Cloud_addCloud
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object), 
      Cloud_Clone
    );

    $.Method({Static:true , Public:true }, "resetClouds", 
      JSIL.MethodSignature.Void, 
      Cloud_resetClouds
    );

    $.Method({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Void, 
      Cloud_Update
    );

    $.Method({Static:true , Public:true }, "UpdateClouds", 
      JSIL.MethodSignature.Void, 
      Cloud_UpdateClouds
    );

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "rSpeed", $.Single);

    $.Field({Static:false, Public:true }, "sSpeed", $.Single);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "width", $.Int32);

    $.Field({Static:false, Public:true }, "height", $.Int32);

    $.Field({Static:true , Public:false}, "rand", $asm06.TypeRef("System.Random"));


    function Cloud__cctor () {
      $thisType.rand = $S00().Construct();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Cloud__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Star */ 

(function Star$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Int32)) ();
  };


  function Star__ctor () {
  }; 

  function Star_SpawnStars () {
    $T00().numStars = ($T00().rand.Next(65, 130) | 0);
    $T00().numStars = 130;

    for (var i = 0; i < ($T00().numStars | 0); i = ((i + 1) | 0)) {
      $T00().star[i] = new $thisType();
      $T00().star[i].position.X = +($T00().rand.Next(-12, ((($T00().screenWidth | 0) + 1) | 0)));
      $T00().star[i].position.Y = +($T00().rand.Next(-12, ((+($T00().screenHeight) * 1.35) | 0)));
      $T00().star[i].rotation = +($T00().rand.Next(628)) * 0.01;
      $T00().star[i].scale = +($T00().rand.Next(50, 120)) * 0.01;
      $T00().star[i].type = ($T00().rand.Next(0, 5) | 0);
      $T00().star[i].twinkle = +($T00().rand.Next(101)) * 0.01;
      $T00().star[i].twinkleSpeed = +($T00().rand.Next(40, 100)) * 0.0001;
      if (($T00().rand.Next(2) | 0) === 0) {
        $T00().star[i].twinkleSpeed *= -1;
      }
      $T00().star[i].rotationSpeed = +($T00().rand.Next(10, 40)) * 0.0001;
      if (($T00().rand.Next(2) | 0) === 0) {
        $T00().star[i].rotationSpeed *= -1;
      }
    }
  }; 

  function Star_UpdateStars () {

    for (var i = 0; i < ($T00().numStars | 0); i = ((i + 1) | 0)) {
      $T00().star[i].twinkle += +$T00().star[i].twinkleSpeed;
      if (+$T00().star[i].twinkle > 1) {
        $T00().star[i].twinkle = 1;
        $T00().star[i].twinkleSpeed *= -1;
      } else if ($T00().star[i].twinkle < 0.5) {
        $T00().star[i].twinkle = 0.5;
        $T00().star[i].twinkleSpeed *= -1;
      }
      $T00().star[i].rotation += +$T00().star[i].rotationSpeed;
      if ($T00().star[i].rotation > 6.28) {
        $T00().star[i].rotation -= 6.28;
      }
      if (+$T00().star[i].rotation < 0) {
        $T00().star[i].rotation += 6.28;
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Star", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Star__ctor
    );

    $.Method({Static:true , Public:true }, "SpawnStars", 
      JSIL.MethodSignature.Void, 
      Star_SpawnStars
    );

    $.Method({Static:true , Public:true }, "UpdateStars", 
      JSIL.MethodSignature.Void, 
      Star_UpdateStars
    );

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "twinkle", $.Single);

    $.Field({Static:false, Public:true }, "twinkleSpeed", $.Single);

    $.Field({Static:false, Public:true }, "rotationSpeed", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.CombatText */ 

(function CombatText$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.SpriteFont)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.String]))) ();
  };


  function CombatText__ctor () {
    this.alphaDir = 1;
    this.scale = 1;
  }; 

  function CombatText_NewText (location, color, text) {

    for (var i = 0; i < 100; i = ((i + 1) | 0)) {
      if (!$T04().combatText[i].active) {
        var vector = $S00().CallVirtual("MeasureString", null, $T04().fontCombatText, text);
        $T04().combatText[i].alpha = 1;
        $T04().combatText[i].alphaDir = -1;
        $T04().combatText[i].active = true;
        $T04().combatText[i].scale = 0;
        $T04().combatText[i].rotation = 0;
        $T04().combatText[i].position.X = (+(location.X) + (+(location.Width) * 0.5)) - (+vector.X * 0.5);
        $T04().combatText[i].position.Y = (+(location.Y) + (+(location.Height) * 0.25)) - (+vector.Y * 0.5);
        var expr_E9_cp_0 = $T04().combatText[i];
        expr_E9_cp_0.position.X = +expr_E9_cp_0.position.X + +($T04().rand.Next((-((+(location.Width) * 0.5) | 0) | 0), ((((+(location.Width) * 0.5) | 0) + 1) | 0)));
        var expr_135_cp_0 = $T04().combatText[i];
        expr_135_cp_0.position.Y = +expr_135_cp_0.position.Y + +($T04().rand.Next((-((+(location.Height) * 0.5) | 0) | 0), ((((+(location.Height) * 0.5) | 0) + 1) | 0)));
        $T04().combatText[i].color = color.MemberwiseClone();
        $T04().combatText[i].text = text;
        $T04().combatText[i].velocity.Y = -7;
        $T04().combatText[i].lifeTime = 60;
        return;
      }
    }
  }; 

  function CombatText_Update () {
    if (this.active) {
      this.alpha = +this.alpha + (+(this.alphaDir) * 0.05);
      if (this.alpha <= 0.6) {
        this.alpha = 0.6;
        this.alphaDir = 1;
      }
      if (+this.alpha >= 1) {
        this.alpha = 1;
        this.alphaDir = -1;
      }
      this.velocity.Y = +this.velocity.Y * 0.92;
      this.velocity.X = +this.velocity.X * 0.93;
      this.position = $T05().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
      this.lifeTime = (((this.lifeTime | 0) - 1) | 0);
      if ((this.lifeTime | 0) <= 0) {
        this.scale = +this.scale - 0.1;
        if (this.scale < 0.1) {
          this.active = false;
        }
        this.lifeTime = 0;
        return;
      }
      if (+this.scale < 1) {
        this.scale = +this.scale + 0.1;
      }
      if (+this.scale > 1) {
        this.scale = 1;
      }
    }
  }; 

  function CombatText_UpdateCombatText () {

    for (var i = 0; i < 100; i = ((i + 1) | 0)) {
      if ($T04().combatText[i].active) {
        ($T04().combatText[i]).Update();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.CombatText", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CombatText__ctor
    );

    $.Method({Static:true , Public:true }, "NewText", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"), $asm00.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.String
        ]), 
      CombatText_NewText
    );

    $.Method({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Void, 
      CombatText_Update
    );

    $.Method({Static:true , Public:true }, "UpdateCombatText", 
      JSIL.MethodSignature.Void, 
      CombatText_UpdateCombatText
    );

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "alpha", $.Single);

    $.Field({Static:false, Public:true }, "alphaDir", $.Int32);

    $.Field({Static:false, Public:true }, "text", $.String);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "lifeTime", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.ServerSock */ 

(function ServerSock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Net.Sockets.TcpClient)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm06.System.Boolean, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.messageBuffer)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm07.System.Net.Sockets.NetworkStream)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.IAsyncResult)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.System.Net.Sockets.TcpClient, null))) ();
  };


  function ServerSock__ctor () {
    this.tcpClient = $S00().Construct();
    this.tileSection = JSIL.MultidimensionalArray.New($T01(), [0, ((($T02().maxTilesX | 0) / 200) | 0), 0, ((($T02().maxTilesY | 0) / 150) | 0)]);
    this.statusText = "";
    this.$name = "Anonymous";
    this.oldName = "";
  }; 

  function ServerSock_Reset () {

    for (var i = 0; i < ($T02().maxSectionsX | 0); i = ((i + 1) | 0)) {

      for (var j = 0; j < ($T02().maxSectionsY | 0); j = ((j + 1) | 0)) {
        (this.tileSection).Set(i, j, false);
      }
    }
    if ((this.whoAmI | 0) < 8) {
      $T02().player[this.whoAmI] = new ($T05())();
    }
    this.timeOut = 0;
    this.statusCount = 0;
    this.statusMax = 0;
    this.statusText2 = "";
    this.statusText = "";
    this.$name = "Anonymous";
    this.state = 0;
    this.locked = false;
    this.kill = false;
    this.active = false;
    ($T07().buffer[this.whoAmI]).Reset();
    if (this.networkStream !== null) {
      (this.networkStream).Close();
    }
    if (this.tcpClient !== null) {
      (this.tcpClient).Close();
    }
  }; 

  function ServerSock_ServerReadCallBack (ar, $exception) {
    var num = 0;
    if (!$T0C().disconnect) {
      try {
        num = ((this.networkStream).EndRead(ar) | 0);
      } catch ($exception) {
      }
      if (num === 0) {
        this.kill = true;
      } else {
        $T07().RecieveBytes(this.readBuffer, num, this.whoAmI);
      }
    }
    this.locked = false;
  }; 

  function ServerSock_ServerWriteCallBack (ar) {
    $T07().buffer[this.whoAmI].spamCount = ((($T07().buffer[this.whoAmI].spamCount | 0) - 1) | 0);
    if ((this.statusMax | 0) > 0) {
      this.statusCount = (((this.statusCount | 0) + 1) | 0);
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.ServerSock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ServerSock__ctor
    );

    $.Method({Static:false, Public:true }, "Reset", 
      JSIL.MethodSignature.Void, 
      ServerSock_Reset
    );

    $.Method({Static:false, Public:true }, "ServerReadCallBack", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")), 
      ServerSock_ServerReadCallBack
    );

    $.Method({Static:false, Public:true }, "ServerWriteCallBack", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")), 
      ServerSock_ServerWriteCallBack
    );

    $.Field({Static:false, Public:true }, "clientSocket", $asm07.TypeRef("System.Net.Sockets.Socket"));

    $.Field({Static:false, Public:true }, "networkStream", $asm07.TypeRef("System.Net.Sockets.NetworkStream"));

    $.Field({Static:false, Public:true }, "tcpClient", $asm07.TypeRef("System.Net.Sockets.TcpClient"));

    $.Field({Static:false, Public:true }, "whoAmI", $.Int32);

    $.Field({Static:false, Public:true }, "statusText2", $.String);

    $.Field({Static:false, Public:true }, "statusCount", $.Int32);

    $.Field({Static:false, Public:true }, "statusMax", $.Int32);

    $.Field({Static:false, Public:true }, "tileSection", $jsilcore.TypeRef("System.Array", [$.Boolean, JSIL.ArrayDimensionParameter(2)]));

    $.Field({Static:false, Public:true }, "statusText", $.String);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "locked", $.Boolean);

    $.Field({Static:false, Public:true }, "kill", $.Boolean);

    $.Field({Static:false, Public:true }, "timeOut", $.Int32);

    $.Field({Static:false, Public:true }, "announced", $.Boolean);

    $.Field({Static:false, Public:true }, "$name", $.String);

    $.Field({Static:false, Public:true }, "oldName", $.String);

    $.Field({Static:false, Public:true }, "state", $.Int32);

    $.Field({Static:false, Public:true }, "readBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "writeBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.ClientSock */ 

(function ClientSock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Net.Sockets.TcpClient)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.IAsyncResult)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.System.Net.Sockets.TcpClient, null))) ();
  };


  function ClientSock__ctor () {
    this.tcpClient = $S00().Construct();
  }; 

  function ClientSock_ClientReadCallBack (ar) {
    if (!$T02().disconnect) {
      var num = ((this.networkStream).EndRead(ar) | 0);
      if (num === 0) {
        $T02().disconnect = true;
        $T05().statusText = "Lost connection";
      } else {
        $T06().RecieveBytes(this.readBuffer, num, 9);
      }
    }
    this.locked = false;
  }; 

  function ClientSock_ClientWriteCallBack (ar) {
    $T06().buffer[9].spamCount = ((($T06().buffer[9].spamCount | 0) - 1) | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.ClientSock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ClientSock__ctor
    );

    $.Method({Static:false, Public:true }, "ClientReadCallBack", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")), 
      ClientSock_ClientReadCallBack
    );

    $.Method({Static:false, Public:true }, "ClientWriteCallBack", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")), 
      ClientSock_ClientWriteCallBack
    );

    $.Field({Static:false, Public:true }, "tcpClient", $asm07.TypeRef("System.Net.Sockets.TcpClient"));

    $.Field({Static:false, Public:true }, "networkStream", $asm07.TypeRef("System.Net.Sockets.NetworkStream"));

    $.Field({Static:false, Public:true }, "statusText", $.String);

    $.Field({Static:false, Public:true }, "statusCount", $.Int32);

    $.Field({Static:false, Public:true }, "statusMax", $.Int32);

    $.Field({Static:false, Public:true }, "timeOut", $.Int32);

    $.Field({Static:false, Public:true }, "readBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "writeBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "locked", $.Boolean);

    $.Field({Static:false, Public:true }, "state", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Netplay */ 

(function Netplay$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.ServerSock)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.Terraria.ClientSock)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.DateTime)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm07.System.Net.IPAddress)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm07.System.Net.Sockets.TcpClient)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.Terraria.messageBuffer)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm07.System.Net.Sockets.NetworkStream)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize(System.Array.Of($asm06.System.Byte))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.AsyncCallback)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm07.System.Net.Sockets.TcpListener)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm07.System.Net.IPHostEntry)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm07.System.Net.Dns)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize(System.Array.Of($asm07.System.Net.IPAddress))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm07.System.Net.Sockets.AddressFamily)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Threading.ThreadPool)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Threading.WaitCallback)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm07.System.Net.Sockets.Socket)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, [$asm06.System.Int32]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.System.Net.IPAddress, $asm06.System.Int32]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm07.System.Net.IPHostEntry, [$asm06.System.String]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.System.Net.Sockets.TcpClient, null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.System.Net.Sockets.TcpListener, [$asm07.System.Net.IPAddress, $asm06.System.Int32]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };


  function Netplay__ctor () {
  }; 

  function Netplay_ClientLoop (threadContext, $exception) {
    if ($T04().rand === null) {
      $T04().rand = $S00().Construct($T07().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    if ($T08().genRand === null) {
      $T08().genRand = $S00().Construct($T07().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    $T04().player[$T04().myPlayer].hostile = false;
    $T04().clientPlayer = $T09().$Cast($T04().player[$T04().myPlayer].clientClone());
    $T04().menuMode = 10;
    $T04().menuMode = 14;
    $T04().statusText = (JSIL.ConcatString("Connecting to ", $thisType.serverIP));
    $T04().netMode = 1;
    $thisType.disconnect = false;
    $thisType.clientSock = new ($T01())();
    $thisType.clientSock.tcpClient.set_NoDelay(true);
    $thisType.clientSock.readBuffer = JSIL.Array.New($T0D(), 1024);
    $thisType.clientSock.writeBuffer = JSIL.Array.New($T0D(), 1024);
    try {
      $S01().CallVirtual("Connect", null, $thisType.clientSock.tcpClient, $thisType.serverIP, $thisType.serverPort);
      $thisType.clientSock.networkStream = $thisType.clientSock.tcpClient.GetStream();
    } catch ($exception) {
      if (!($thisType.disconnect || !$T04().gameMenu)) {
        $T04().menuMode = 15;
        $T04().statusText = $exception.toString();
        $thisType.disconnect = true;
      }
    }
    ($T0F().buffer[9]).Reset();
    var num = -1;

    while (!$thisType.disconnect) {
      if ($thisType.clientSock.tcpClient.get_Connected()) {
        if ($T0F().buffer[9].checkBytes) {
          $T0F().CheckBytes(9);
        }
        $thisType.clientSock.active = true;
        if (($thisType.clientSock.state | 0) === 0) {
          $T04().statusText = "Found server";
          $thisType.clientSock.state = 1;
          $T0F().SendData(
            1, 
            -1, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
        }
        if (!((($thisType.clientSock.state | 0) !== 2) || (num === ($thisType.clientSock.state | 0)))) {
          $T04().statusText = "Sending player data...";
        }
        if (!((($thisType.clientSock.state | 0) !== 3) || (num === ($thisType.clientSock.state | 0)))) {
          $T04().statusText = "Requesting world information";
        }
        if (($thisType.clientSock.state | 0) === 4) {
          $T08().worldCleared = false;
          $thisType.clientSock.state = 5;
          $T08().clearWorld();
        }
        if (!((($thisType.clientSock.state | 0) !== 5) || !$T08().worldCleared)) {
          $thisType.clientSock.state = 6;
          $T04().player[$T04().myPlayer].FindSpawn();
          $T0F().SendData(
            8, 
            -1, 
            -1, 
            "", 
            $T04().player[$T04().myPlayer].SpawnX, 
            +($T04().player[$T04().myPlayer].SpawnY), 
            0, 
            0
          );
        }
        if (!((($thisType.clientSock.state | 0) !== 6) || (num === ($thisType.clientSock.state | 0)))) {
          $T04().statusText = "Requesting tile data";
        }
        if (!($thisType.clientSock.locked || 
            $thisType.disconnect || !$thisType.clientSock.networkStream.get_DataAvailable())) {
          $thisType.clientSock.locked = true;
          $thisType.clientSock.networkStream.BeginRead(
            $thisType.clientSock.readBuffer, 
            0, 
            $thisType.clientSock.readBuffer.length, 
            $T14().New($thisType.clientSock, null, new JSIL.MethodPointerInfo($asm0F.Terraria.ClientSock, "ClientReadCallBack", $S02(), false, false)), 
            $thisType.clientSock.networkStream
          );
        }
        if (!((($thisType.clientSock.statusMax | 0) <= 0) || !($thisType.clientSock.statusText != ""))) {
          if (($thisType.clientSock.statusCount | 0) >= ($thisType.clientSock.statusMax | 0)) {
            $T04().statusText = (JSIL.ConcatString($thisType.clientSock.statusText, ": Complete!"));
            $thisType.clientSock.statusText = "";
            $thisType.clientSock.statusMax = 0;
            $thisType.clientSock.statusCount = 0;
          } else {
            $T04().statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), [$thisType.clientSock.statusText, ": ", $T10().$Box(((+((+($thisType.clientSock.statusCount) / +($thisType.clientSock.statusMax))) * 100) | 0)), "%"])));
          }
        }
      } else if ($thisType.clientSock.active) {
        $T04().statusText = "Lost connection";
        $thisType.disconnect = true;
      }
      num = ($thisType.clientSock.state | 0);
    }
    try {
      $thisType.clientSock.networkStream.Close();
      $thisType.clientSock.networkStream = $thisType.clientSock.tcpClient.GetStream();
    } catch ($exception) {
    }
    if (!$T04().gameMenu) {
      $T04().netMode = 0;
      $T09().SavePlayer($T04().player[$T04().myPlayer], $T04().playerPathName);
      $T04().gameMenu = true;
      $T04().menuMode = 14;
    }
    ($T0F().buffer[9]).Reset();
    if (!((($T04().menuMode | 0) !== 15) || !($T04().statusText == "Lost connection"))) {
      $T04().menuMode = 14;
    }
    if (!(!($thisType.clientSock.statusText != "") || ($thisType.clientSock.statusText === null))) {
      $T04().statusText = "Lost connection";
    }
    $thisType.clientSock.statusCount = 0;
    $thisType.clientSock.statusMax = 0;
    $thisType.clientSock.statusText = "";
    $T04().netMode = 0;
  }; 

  function Netplay_GetSectionX (x) {
    return (((x | 0) / 200) | 0);
  }; 

  function Netplay_GetSectionY (y) {
    return (((y | 0) / 150) | 0);
  }; 

  function Netplay_Init () {

    for (var i = 0; i < 10; i = ((i + 1) | 0)) {
      if (i < 9) {
        $thisType.serverSock[i] = new ($T00())();
        ($thisType.serverSock[i].tcpClient).set_NoDelay(true);
      }
      $T0F().buffer[i] = new ($T0E())();
      $T0F().buffer[i].whoAmI = i;
    }
    $thisType.clientSock.tcpClient.set_NoDelay(true);
  }; 

  function Netplay_ListenForClients (threadContext, $exception) {

  $loop0: 
    while (!$thisType.disconnect && !$thisType.stopListen) {
      var num = -1;

    $loop1: 
      for (var i = 0; i < 8; i = ((i + 1) | 0)) {
        if (!($thisType.serverSock[i].tcpClient).get_Connected()) {
          num = i;
          break $loop1;
        }
      }
      if (num >= 0) {
        try {
          $thisType.serverSock[num].tcpClient = $thisType.tcpListener.AcceptTcpClient();
          ($thisType.serverSock[num].tcpClient).set_NoDelay(true);
          continue $loop0;
        } catch ($exception) {
          if (!$thisType.disconnect) {
            $T04().menuMode = 15;
            $T04().statusText = $exception.toString();
            $thisType.disconnect = true;
          }
        }
      }
      $thisType.stopListen = true;
      $thisType.tcpListener.Stop();
    }
  }; 

  function Netplay_ServerLoop (threadContext, $exception) {
    if ($T04().rand === null) {
      $T04().rand = $S00().Construct($T07().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    if ($T08().genRand === null) {
      $T08().genRand = $S00().Construct($T07().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    $T04().myPlayer = 8;
    var ipString = "?";
    var hostEntry = $S03().CallStatic($T18(), "GetHostEntry", null, $T18().GetHostName());
    var addressList = hostEntry.get_AddressList();

    for (var i = 0; i < (addressList.length | 0); i = ((i + 1) | 0)) {
      var iPAddress = addressList[i];
      if (iPAddress.get_AddressFamily() === $T1A().InterNetwork) {
        ipString = iPAddress.toString();
      }
    }
    $thisType.serverIP = $T0B().Parse(ipString);
    $thisType.serverListenIP = $thisType.serverIP;
    $T04().menuMode = 14;
    $T04().statusText = "Starting server...";
    $T04().netMode = 2;
    $thisType.disconnect = false;

    for (var j = 0; j < 9; j = ((j + 1) | 0)) {
      $thisType.serverSock[j] = new ($T00())();
      ($thisType.serverSock[j]).Reset();
      $thisType.serverSock[j].whoAmI = j;
      $thisType.serverSock[j].tcpClient = $S04().Construct();
      ($thisType.serverSock[j].tcpClient).set_NoDelay(true);
      $thisType.serverSock[j].readBuffer = JSIL.Array.New($T0D(), 1024);
      $thisType.serverSock[j].writeBuffer = JSIL.Array.New($T0D(), 1024);
    }
    $thisType.tcpListener = $S05().Construct($thisType.serverListenIP, $thisType.serverPort);
    try {
      $thisType.tcpListener.Start();
    } catch ($exception) {
      $T04().menuMode = 15;
      $T04().statusText = $exception.toString();
      $thisType.disconnect = true;
    }
    if (!$thisType.disconnect) {
      $T1B().QueueUserWorkItem($T1C().New(null, null, new JSIL.MethodPointerInfo($thisType, "ListenForClients", $S06(), true, false)), $T10().$Box(1));
      $T04().statusText = "Server started";
    }

    while (!$thisType.disconnect) {
      if ($thisType.stopListen) {
        var num = -1;

      $loop3: 
        for (var k = 0; k < 8; k = ((k + 1) | 0)) {
          if (!($thisType.serverSock[k].tcpClient).get_Connected()) {
            num = k;
            break $loop3;
          }
        }
        if (num >= 0) {
          $thisType.tcpListener.Start();
          $thisType.stopListen = false;
          $T1B().QueueUserWorkItem($T1C().New(null, null, new JSIL.MethodPointerInfo($thisType, "ListenForClients", $S06(), true, false)), $T10().$Box(1));
        }
      }
      var num2 = 0;

      for (var l = 0; l < 9; l = ((l + 1) | 0)) {
        if ($T0F().buffer[l].checkBytes) {
          $T0F().CheckBytes(l);
        }
        if ($thisType.serverSock[l].kill) {
          ($thisType.serverSock[l]).Reset();
          $T0F().syncPlayers();
        } else if (($thisType.serverSock[l].tcpClient).get_Connected()) {
          if (!$thisType.serverSock[l].active) {
            $thisType.serverSock[l].state = 0;
          }
          $thisType.serverSock[l].active = true;
          num2 = ((num2 + 1) | 0);
          if (!$thisType.serverSock[l].locked) {
            try {
              $thisType.serverSock[l].networkStream = ($thisType.serverSock[l].tcpClient).GetStream();
              if (($thisType.serverSock[l].networkStream).get_DataAvailable()) {
                $thisType.serverSock[l].locked = true;
                ($thisType.serverSock[l].networkStream).BeginRead(
                  $thisType.serverSock[l].readBuffer, 
                  0, 
                  $thisType.serverSock[l].readBuffer.length, 
                  $T14().New($thisType.serverSock[l], null, new JSIL.MethodPointerInfo($asm0F.Terraria.ServerSock, "ServerReadCallBack", $S07(), false, false)), 
                  $thisType.serverSock[l].networkStream
                );
              }
            } catch ($exception) {
              $thisType.serverSock[l].kill = true;
            }
          }
          if (!((($thisType.serverSock[l].statusMax | 0) <= 0) || !($thisType.serverSock[l].statusText2 != ""))) {
            if (($thisType.serverSock[l].statusCount | 0) >= ($thisType.serverSock[l].statusMax | 0)) {
              $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " ", $thisType.serverSock[l].statusText2, ": Complete!"])));
              $thisType.serverSock[l].statusText2 = "";
              $thisType.serverSock[l].statusMax = 0;
              $thisType.serverSock[l].statusCount = 0;
            } else {
              $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " ", $thisType.serverSock[l].statusText2, ": ", $T10().$Box(((+((+($thisType.serverSock[l].statusCount) / +($thisType.serverSock[l].statusMax))) * 100) | 0)), "%"])));
            }
          } else if (($thisType.serverSock[l].state | 0) === 0) {
            $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " is connecting..."])));
          } else if (($thisType.serverSock[l].state | 0) === 1) {
            $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " is sending player data..."])));
          } else if (($thisType.serverSock[l].state | 0) === 2) {
            $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " requested world information"])));
          } else if (!((($thisType.serverSock[l].state | 0) === 3) || (($thisType.serverSock[l].state | 0) !== 10))) {
            $thisType.serverSock[l].statusText = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), ["(", (($thisType.serverSock[l].tcpClient).get_Client()).get_RemoteEndPoint(), ") ", $thisType.serverSock[l].$name, " is playing"])));
          }
        } else if ($thisType.serverSock[l].active) {
          $thisType.serverSock[l].kill = true;
        } else {
          $thisType.serverSock[l].statusText2 = "";
          if (l < 8) {
            $T04().player[l].active = false;
          }
        }
      }
      if (!$T08().saveLock) {
        if (num2 === 0) {
          $T04().statusText = "Waiting for clients...";
        } else {
          $T04().statusText = (JSIL.ConcatString($T10().$Box(num2), " clients connected"));
        }
      }
    }
    $thisType.tcpListener.Stop();

    for (var m = 0; m < 9; m = ((m + 1) | 0)) {
      ($thisType.serverSock[m]).Reset();
    }
    if (($T04().menuMode | 0) !== 15) {
      $T04().netMode = 0;
      $T04().menuMode = 10;
      $T08().saveWorld(false);

      while ($T08().saveLock) {
      }
      $T04().menuMode = 0;
    } else {
      $T04().netMode = 0;
    }
    $T04().myPlayer = 0;
  }; 

  function Netplay_SetIP (newIP, $exception) {
    try {
      $thisType.serverIP = $T0B().Parse(newIP);
    } catch ($exception) {
      return false;
    }
    return true;
  }; 

  function Netplay_StartClient () {
    $T1B().QueueUserWorkItem($T1C().New(null, null, new JSIL.MethodPointerInfo($thisType, "ClientLoop", $S08(), true, false)), $T10().$Box(1));
  }; 

  function Netplay_StartServer () {
    $T1B().QueueUserWorkItem($T1C().New(null, null, new JSIL.MethodPointerInfo($thisType, "ServerLoop", $S09(), true, false)), $T10().$Box(1));
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Netplay", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Netplay__ctor
    );

    $.Method({Static:true , Public:true }, "ClientLoop", 
      JSIL.MethodSignature.Action($.Object), 
      Netplay_ClientLoop
    );

    $.Method({Static:true , Public:true }, "GetSectionX", 
      new JSIL.MethodSignature($.Int32, [$.Int32]), 
      Netplay_GetSectionX
    );

    $.Method({Static:true , Public:true }, "GetSectionY", 
      new JSIL.MethodSignature($.Int32, [$.Int32]), 
      Netplay_GetSectionY
    );

    $.Method({Static:true , Public:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Netplay_Init
    );

    $.Method({Static:true , Public:true }, "ListenForClients", 
      JSIL.MethodSignature.Action($.Object), 
      Netplay_ListenForClients
    );

    $.Method({Static:true , Public:true }, "ServerLoop", 
      JSIL.MethodSignature.Action($.Object), 
      Netplay_ServerLoop
    );

    $.Method({Static:true , Public:true }, "SetIP", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      Netplay_SetIP
    );

    $.Method({Static:true , Public:true }, "StartClient", 
      JSIL.MethodSignature.Void, 
      Netplay_StartClient
    );

    $.Method({Static:true , Public:true }, "StartServer", 
      JSIL.MethodSignature.Void, 
      Netplay_StartServer
    );

    $.Constant({Static:true , Public:true }, "bufferSize", $.Int32, 1024);

    $.Constant({Static:true , Public:true }, "maxConnections", $.Int32, 9);

    $.Field({Static:true , Public:true }, "stopListen", $.Boolean, false);

    $.Field({Static:true , Public:true }, "serverSock", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.ServerSock")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.ServerSock, 9);
      });

    $.Field({Static:true , Public:true }, "clientSock", $asm0F.TypeRef("Terraria.ClientSock"));

    $.Field({Static:true , Public:true }, "tcpListener", $asm07.TypeRef("System.Net.Sockets.TcpListener"));

    $.Field({Static:true , Public:true }, "serverListenIP", $asm07.TypeRef("System.Net.IPAddress"));

    $.Field({Static:true , Public:true }, "serverIP", $asm07.TypeRef("System.Net.IPAddress"));

    $.Field({Static:true , Public:true }, "serverPort", $.Int32, 31337);

    $.Field({Static:true , Public:true }, "disconnect", $.Boolean, false);

    $.Field({Static:true , Public:true }, "password", $.String, "");


    function Netplay__cctor () {
      $thisType.stopListen = false;
      $thisType.serverSock = JSIL.Array.New($T00(), 9);
      $thisType.clientSock = new ($T01())();
      $thisType.serverPort = 31337;
      $thisType.disconnect = false;
      $thisType.password = "";
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Netplay__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.ChatLine */ 

(function ChatLine$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };


  function ChatLine__ctor () {
    this.color = $T00().get_White().MemberwiseClone();
    this.text = "";
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.ChatLine", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ChatLine__ctor
    );

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "showTime", $.Int32);

    $.Field({Static:false, Public:true }, "text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Main */ 

(function Main$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.Mouse)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.Keyboard)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Liquid)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.LiquidBuffer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.Cloud)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Audio.SoundEffect)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Audio.Cue)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.Star)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.Terraria.Projectile)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.Terraria.CombatText)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.Terraria.Chest)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.Terraria.Sign)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.Terraria.ChatLine)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.Terraria.Recipe)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Environment)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Environment_SpecialFolder)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm01.Microsoft.Xna.Framework.Game)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.Microsoft.Xna.Framework.GraphicsDeviceManager)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Content.ContentManager)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.Microsoft.Xna.Framework.GameTime)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.MouseState)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.GraphicsDevice)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.SpriteBatch)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.SpriteEffects)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.ButtonState)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.SpriteFont)) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm06.System.IntPtr)) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize(System.Array.Of($asm06.System.Byte))) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize(System.Array.Of($asm06.System.Boolean))) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize(System.Array.Of($asm06.System.Int32))) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize($asm07.System.Net.Sockets.TcpClient)) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize(System.Array.Of($asm00.Microsoft.Xna.Framework.Input.Keys))) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.KeyboardState)) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.Keys)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm06.System.IO.File)) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize($asm06.System.Text.StringBuilder)) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm07.System.Net.HttpWebRequest)) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm07.System.Net.WebRequest)) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm07.System.Net.HttpWebResponse)) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm07.System.Net.WebResponse)) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize($asm06.System.UInt16)) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize($asm06.System.DateTime)) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm01.Microsoft.Xna.Framework.GameWindow)) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Audio.AudioEngine)) ();
  };
  var $T4E = function () {
    return ($T4E = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Audio.SoundBank)) ();
  };
  var $T4F = function () {
    return ($T4F = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Audio.WaveBank)) ();
  };
  var $T50 = function () {
    return ($T50 = JSIL.Memoize($asm06.System.IO.Directory)) ();
  };
  var $T51 = function () {
    return ($T51 = JSIL.Memoize($asm06.System.IO.FileStream)) ();
  };
  var $T52 = function () {
    return ($T52 = JSIL.Memoize($asm06.System.IO.FileMode)) ();
  };
  var $T53 = function () {
    return ($T53 = JSIL.Memoize($asm06.System.IO.BinaryReader)) ();
  };
  var $T54 = function () {
    return ($T54 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T55 = function () {
    return ($T55 = JSIL.Memoize($asm0F.Terraria.Steam)) ();
  };
  var $T56 = function () {
    return ($T56 = JSIL.Memoize($asm06.System.IO.BinaryWriter)) ();
  };
  var $T57 = function () {
    return ($T57 = JSIL.Memoize($asm05.Microsoft.Xna.Framework.Audio.AudioStopOptions)) ();
  };
  var $T58 = function () {
    return ($T58 = JSIL.Memoize(System.Array.Of($asm06.System.Boolean, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm03.Microsoft.Xna.Framework.Graphics.Texture2D, $asm00.Microsoft.Xna.Framework.Rectangle, 
        $asm00.Microsoft.Xna.Framework.Color
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm03.Microsoft.Xna.Framework.Graphics.Texture2D, $asm00.Microsoft.Xna.Framework.Vector2, 
        $asm06.System.Nullable$b1.Of($asm00.Microsoft.Xna.Framework.Rectangle), $asm00.Microsoft.Xna.Framework.Color, 
        $asm06.System.Single, $asm00.Microsoft.Xna.Framework.Vector2, 
        $asm06.System.Single, $asm03.Microsoft.Xna.Framework.Graphics.SpriteEffects, 
        $asm06.System.Single
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm03.Microsoft.Xna.Framework.Graphics.Texture2D, $asm00.Microsoft.Xna.Framework.Vector2, 
        $asm06.System.Nullable$b1.Of($asm00.Microsoft.Xna.Framework.Rectangle), $asm00.Microsoft.Xna.Framework.Color
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.String]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm03.Microsoft.Xna.Framework.Graphics.SpriteFont, $asm06.System.String, 
        $asm00.Microsoft.Xna.Framework.Vector2, $asm00.Microsoft.Xna.Framework.Color, 
        $asm06.System.Single, $asm00.Microsoft.Xna.Framework.Vector2, 
        $asm06.System.Single, $asm03.Microsoft.Xna.Framework.Graphics.SpriteEffects, 
        $asm06.System.Single
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.String]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Text.StringBuilder, null))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm07.System.Net.WebRequest, [$asm06.System.String]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Text.StringBuilder, [$asm06.System.String]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Char, [$asm06.System.String]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Int32, [$asm06.System.Char]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Char, [$asm06.System.Int32]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, [$asm06.System.Int32]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.ConstructorSignature($asm05.Microsoft.Xna.Framework.Audio.AudioEngine, [$asm06.System.String]))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.ConstructorSignature($asm05.Microsoft.Xna.Framework.Audio.WaveBank, [$asm05.Microsoft.Xna.Framework.Audio.AudioEngine, $asm06.System.String]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.FileStream, [$asm06.System.String, $asm06.System.IO.FileMode]))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryReader, [$asm06.System.IO.Stream]))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryWriter, [$asm06.System.IO.Stream]))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Boolean")))) ();
  };
  var $S1A = function () {
    return ($S1A = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Byte")))) ();
  };
  var $S1B = function () {
    return ($S1B = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Single")))) ();
  };
  var $S1C = function () {
    return ($S1C = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };


  function Main__ctor () {
    this.shop = JSIL.Array.New($T15(), 5);
    this.logoRotationDirection = 1;
    this.logoRotationSpeed = 1;
    this.logoScale = 1;
    this.logoScaleDirection = 1;
    this.logoScaleSpeed = 1;
    this.menuItemScale = JSIL.Array.New($T0A(), $thisType.maxMenuItems);
    this.focusMenu = -1;
    this.selectedMenu = -1;
    this.selColor = $T04().get_White().MemberwiseClone();
    this.setKey = -1;
    $T1D().prototype._ctor.call(this);
    this.graphics = new ($T1E())(this);
    (this.get_Content()).set_RootDirectory("Content");
  }; 

  function Main_CalculateDamage (Damage, Defense) {
    var num = +Damage - (+Defense * 0.5);
    if (num < 1) {
      num = 1;
    }
    return num;
  }; 

  function Main_CursorColor () {
    $thisType.cursorAlpha = +$thisType.cursorAlpha + (+($thisType.cursorColorDirection) * 0.015);
    if (+$thisType.cursorAlpha >= 1) {
      $thisType.cursorAlpha = 1;
      $thisType.cursorColorDirection = -1;
    }
    if ($thisType.cursorAlpha <= 0.6) {
      $thisType.cursorAlpha = 0.6;
      $thisType.cursorColorDirection = 1;
    }
    var r = ((+($thisType.mouseColor.get_R()) * +$thisType.cursorAlpha) | 0);
    var g = ((+($thisType.mouseColor.get_G()) * +$thisType.cursorAlpha) | 0);
    var b = ((+($thisType.mouseColor.get_B()) * +$thisType.cursorAlpha) | 0);
    $thisType.cursorColor = $S01().Construct(r, g, b, ((255 * ((+$thisType.cursorAlpha * 0.3) + 0.7)) | 0));
    $thisType.cursorScale = ((+$thisType.cursorAlpha * 0.3) + 0.7) + 0.1;
  }; 

  function Main_Draw (gameTime, $exception) {
    var value = new ($T24())(), value2 = new ($T24())(), vector = new ($T25())(), vector2 = new ($T25())(), vector3 = new ($T25())(), vector4 = new ($T25())(), vector6 = new ($T25())(), origin = new ($T25())(), color9 = new ($T04())();
    var arg_06_0 = this.get_IsActive();
    $thisType.CursorColor();
    $thisType.drawTime = ((($thisType.drawTime | 0) + 1) | 0);
    $thisType.screenLastPosition = $thisType.screenPosition.MemberwiseClone();
    if (($thisType.stackSplit | 0) === 0) {
      $thisType.stackCounter = 0;
      $thisType.stackDelay = 7;
    } else {
      $thisType.stackCounter = ((($thisType.stackCounter | 0) + 1) | 0);
      if (($thisType.stackCounter | 0) >= 30) {
        $thisType.stackDelay = ((($thisType.stackDelay | 0) - 1) | 0);
        if (($thisType.stackDelay | 0) < 2) {
          $thisType.stackDelay = 2;
        }
        $thisType.stackCounter = 0;
      }
    }
    $thisType.mouseTextColor = ((($thisType.mouseTextColor | 0) + ($thisType.mouseTextColorChange & 0xFF)) & 0xFF);
    if (($thisType.mouseTextColor | 0) >= 250) {
      $thisType.mouseTextColorChange = -4;
    }
    if (($thisType.mouseTextColor | 0) <= 175) {
      $thisType.mouseTextColorChange = 4;
    }
    if (($thisType.myPlayer | 0) >= 0) {
      $thisType.player[$thisType.myPlayer].mouseInterface = false;
    }
    $thisType.toolTip = new ($T10())();
    if (!($thisType.debugMode || 
        $thisType.gameMenu || (($thisType.netMode | 0) === 2))) {
      var num = ($thisType.mouseState.get_X() | 0);
      var num2 = ($thisType.mouseState.get_Y() | 0);
      if (num < 0) {
        num = 0;
      }
      if (num > ($thisType.screenWidth | 0)) {
        num = ($thisType.screenWidth | 0);
      }
      if (num2 < 0) {
        num2 = 0;
      }
      if (num2 > ($thisType.screenHeight | 0)) {
        num2 = ($thisType.screenHeight | 0);
      }
      $thisType.screenPosition.X = (+$thisType.player[$thisType.myPlayer].position.X + (+($thisType.player[$thisType.myPlayer].width) * 0.5)) - (+($thisType.screenWidth) * 0.5);
      $thisType.screenPosition.Y = (+$thisType.player[$thisType.myPlayer].position.Y + (+($thisType.player[$thisType.myPlayer].height) * 0.5)) - (+($thisType.screenHeight) * 0.5);
      $thisType.screenPosition.X = +((($thisType.screenPosition.X) | 0));
      $thisType.screenPosition.Y = +((($thisType.screenPosition.Y) | 0));
    }
    if (!($thisType.gameMenu || (($thisType.netMode | 0) === 2))) {
      if (+$thisType.screenPosition.X < ((+$thisType.leftWorld + 336) + 16)) {
        $thisType.screenPosition.X = (+$thisType.leftWorld + 336) + 16;
      } else if ((+$thisType.screenPosition.X + +($thisType.screenWidth)) > ((+$thisType.rightWorld - 336) - 32)) {
        $thisType.screenPosition.X = ((+$thisType.rightWorld - +($thisType.screenWidth)) - 336) - 32;
      }
      if (+$thisType.screenPosition.Y < ((+$thisType.topWorld + 336) + 16)) {
        $thisType.screenPosition.Y = (+$thisType.topWorld + 336) + 16;
      } else if ((+$thisType.screenPosition.Y + +($thisType.screenHeight)) > ((+$thisType.bottomWorld - 336) - 32)) {
        $thisType.screenPosition.Y = ((+$thisType.bottomWorld - +($thisType.screenHeight)) - 336) - 32;
      }
    }
    if ($thisType.showSplash) {
      this.DrawSplash(gameTime);
      return;
    }
    (this.get_GraphicsDevice()).Clear($T04().get_Black().MemberwiseClone());
    $T1D().prototype.Draw.call(this, gameTime);
    (this.spriteBatch).Begin();
    var num3 = 0.5;
    var num4 = ((-$T29().IEEERemainder($thisType.screenPosition.X * num3, +($thisType.backgroundWidth[$thisType.background])) - +((($thisType.backgroundWidth[$thisType.background] | 0) / 2 | 0))) | 0);
    var num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[$thisType.background] | 0)) | 0) + 2) | 0);
    var num6 = ((+((-$thisType.screenPosition.Y / ((+$thisType.worldSurface * 16) - +($thisType.screenHeight)))) * +(($thisType.backgroundHeight[$thisType.background] | 0) - ($thisType.screenHeight | 0))) | 0);
    if (!(!$thisType.gameMenu && (($thisType.netMode | 0) !== 2))) {
      num6 = -200;
    }
    var white = $T04().get_White().MemberwiseClone();
    var num7 = ((((+((+$thisType.time / 54000)) * +(($thisType.screenWidth | 0) + Math.imul($thisType.sunTexture.get_Width(), 2))) | 0) - ($thisType.sunTexture.get_Width() | 0)) | 0);
    var num8 = 0;
    var white2 = $T04().get_White().MemberwiseClone();
    var num9 = 1;
    var num10 = ((((+((+$thisType.time / 32400)) * +(($thisType.screenWidth | 0) + Math.imul($thisType.moonTexture.get_Width(), 2))) | 0) - ($thisType.moonTexture.get_Width() | 0)) | 0);
    var num11 = 0;
    var white3 = $T04().get_White().MemberwiseClone();
    var num12 = 1;
    if ($thisType.dayTime) {
      if (+$thisType.time < 27000) {
        var num13 = (Math.pow((1 - (+((+$thisType.time / 54000)) * 2)), 2));
        num8 = (((+num6 + (num13 * 250)) + 180) | 0);
      } else {
        num13 = (Math.pow(((+((+$thisType.time / 54000)) - 0.5) * 2), 2));
        num8 = (((+num6 + (num13 * 250)) + 180) | 0);
      }
      num9 = Math.fround(1.2 - (num13 * 0.4));
    } else {
      if (+$thisType.time < 16200) {
        var num14 = (Math.pow((1 - (+((+$thisType.time / 32400)) * 2)), 2));
        num11 = (((+num6 + (num14 * 250)) + 180) | 0);
      } else {
        num14 = (Math.pow(((+((+$thisType.time / 32400)) - 0.5) * 2), 2));
        num11 = (((+num6 + (num14 * 250)) + 180) | 0);
      }
      num12 = Math.fround(1.2 - (num14 * 0.4));
    }
    if ($thisType.dayTime) {
      if (+$thisType.time < 13500) {
        var num15 = Math.fround(+(+$thisType.time / 13500));
        white2.set_R((((num15 * 200) + 55) | 0));
        white2.set_G((((num15 * 180) + 75) | 0));
        white2.set_B((((num15 * 250) + 5) | 0));
        white.set_R((((num15 * 200) + 55) | 0));
        white.set_G((((num15 * 200) + 55) | 0));
        white.set_B((((num15 * 200) + 55) | 0));
      }
      if (+$thisType.time > 45900) {
        num15 = Math.fround(1 - ((+((+$thisType.time / 54000)) - 0.85) * 6.666666666666667));
        white2.set_R((((num15 * 120) + 55) | 0));
        white2.set_G((((num15 * 100) + 25) | 0));
        white2.set_B((((num15 * 120) + 55) | 0));
        white.set_R((((num15 * 200) + 55) | 0));
        white.set_G((((num15 * 85) + 55) | 0));
        white.set_B((((num15 * 135) + 55) | 0));
      } else if (+$thisType.time > 37800) {
        num15 = Math.fround(1 - ((+((+$thisType.time / 54000)) - 0.7) * 6.666666666666667));
        white2.set_R((((num15 * 80) + 175) | 0));
        white2.set_G((((num15 * 130) + 125) | 0));
        white2.set_B((((num15 * 100) + 155) | 0));
        white.set_R((((num15 * 0) + 255) | 0));
        white.set_G((((num15 * 115) + 140) | 0));
        white.set_B((((num15 * 75) + 180) | 0));
      }
    }
    if (!$thisType.dayTime) {
      if ($thisType.bloodMoon) {
        if (+$thisType.time < 16200) {
          num15 = Math.fround(1 - +((+$thisType.time / 16200)));
          white3.set_R((((num15 * 10) + 205) | 0));
          white3.set_G((((num15 * 170) + 55) | 0));
          white3.set_B((((num15 * 200) + 55) | 0));
          white.set_R((((60 - (num15 * 60)) + 55) | 0));
          white.set_G((((num15 * 40) + 15) | 0));
          white.set_B((((num15 * 40) + 15) | 0));
        } else if (+$thisType.time >= 16200) {
          num15 = Math.fround((+((+$thisType.time / 32400)) - 0.5) * 2);
          white3.set_R((((num15 * 50) + 205) | 0));
          white3.set_G((((num15 * 100) + 155) | 0));
          white3.set_B((((num15 * 100) + 155) | 0));
          white3.set_R((((num15 * 10) + 205) | 0));
          white3.set_G((((num15 * 170) + 55) | 0));
          white3.set_B((((num15 * 200) + 55) | 0));
          white.set_R((((60 - (num15 * 60)) + 55) | 0));
          white.set_G((((num15 * 40) + 15) | 0));
          white.set_B((((num15 * 40) + 15) | 0));
        }
      } else if (+$thisType.time < 16200) {
        num15 = Math.fround(1 - +((+$thisType.time / 16200)));
        white3.set_R((((num15 * 10) + 205) | 0));
        white3.set_G((((num15 * 70) + 155) | 0));
        white3.set_B((((num15 * 100) + 155) | 0));
        white.set_R((((num15 * 40) + 15) | 0));
        white.set_G((((num15 * 40) + 15) | 0));
        white.set_B((((num15 * 40) + 15) | 0));
      } else if (+$thisType.time >= 16200) {
        num15 = Math.fround((+((+$thisType.time / 32400)) - 0.5) * 2);
        white3.set_R((((num15 * 50) + 205) | 0));
        white3.set_G((((num15 * 100) + 155) | 0));
        white3.set_B((((num15 * 100) + 155) | 0));
        white.set_R((((num15 * 40) + 15) | 0));
        white.set_G((((num15 * 40) + 15) | 0));
        white.set_B((((num15 * 40) + 15) | 0));
      }
    }
    if (!(!$thisType.gameMenu && (($thisType.netMode | 0) !== 2))) {
      num6 = 0;
      if (!$thisType.dayTime) {
        white.set_R(55);
        white.set_G(55);
        white.set_B(55);
      }
    }
    if (($thisType.evilTiles | 0) > 0) {
      var num16 = +((+($thisType.evilTiles) / 500));
      if (num16 > 1) {
        num16 = 1;
      }
      var num17 = (white.get_R() | 0);
      var num18 = (white.get_G() | 0);
      var num19 = (white.get_B() | 0);
      num17 = ((num17 + ((10 * num16) | 0)) | 0);
      num18 = ((num18 - (((90 * num16) * +((+(white.get_G()) / 255))) | 0)) | 0);
      num19 = ((num19 - (((190 * num16) * +((+(white.get_B()) / 255))) | 0)) | 0);
      if (num17 > 255) {
        num17 = 255;
      }
      if (num18 < 15) {
        num18 = 15;
      }
      if (num19 < 15) {
        num19 = 15;
      }
      white.set_R((num17 & 0xFF));
      white.set_G((num18 & 0xFF));
      white.set_B((num19 & 0xFF));
      num17 = (white2.get_R() | 0);
      num18 = (white2.get_G() | 0);
      num19 = (white2.get_B() | 0);
      num17 = ((num17 - (((100 * num16) * +((+(white2.get_R()) / 255))) | 0)) | 0);
      num18 = ((num18 - (((160 * num16) * +((+(white2.get_G()) / 255))) | 0)) | 0);
      num19 = ((num19 - (((170 * num16) * +((+(white2.get_B()) / 255))) | 0)) | 0);
      if (num17 < 15) {
        num17 = 15;
      }
      if (num18 < 15) {
        num18 = 15;
      }
      if (num19 < 15) {
        num19 = 15;
      }
      white2.set_R((num17 & 0xFF));
      white2.set_G((num18 & 0xFF));
      white2.set_B((num19 & 0xFF));
      num17 = (white3.get_R() | 0);
      num18 = (white3.get_G() | 0);
      num19 = (white3.get_B() | 0);
      num17 = ((num17 - (((140 * num16) * +((+(white3.get_R()) / 255))) | 0)) | 0);
      num18 = ((num18 - (((170 * num16) * +((+(white3.get_G()) / 255))) | 0)) | 0);
      num19 = ((num19 - (((190 * num16) * +((+(white3.get_B()) / 255))) | 0)) | 0);
      if (num17 < 15) {
        num17 = 15;
      }
      if (num18 < 15) {
        num18 = 15;
      }
      if (num19 < 15) {
        num19 = 15;
      }
      white3.set_R((num17 & 0xFF));
      white3.set_G((num18 & 0xFF));
      white3.set_B((num19 & 0xFF));
    }
    $thisType.tileColor.set_A(255);
    $thisType.tileColor.set_R(((((((((white.get_R() | 0) + (white.get_B() | 0)) & 0xFF) + (white.get_G() | 0)) & 0xFF) / 3) | 0) & 0xFF));
    $thisType.tileColor.set_G(((((((((white.get_R() | 0) + (white.get_B() | 0)) & 0xFF) + (white.get_G() | 0)) & 0xFF) / 3) | 0) & 0xFF));
    $thisType.tileColor.set_B(((((((((white.get_R() | 0) + (white.get_B() | 0)) & 0xFF) + (white.get_G() | 0)) & 0xFF) / 3) | 0) & 0xFF));
    if ($thisType.screenPosition.Y < ((+$thisType.worldSurface * 16) + 16)) {

      for (var i = 0; i < num5; i = ((i + 1) | 0)) {
        $S02().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[$thisType.background], new ($T24())(((num4 + Math.imul($thisType.backgroundWidth[$thisType.background], i)) | 0), num6, $thisType.backgroundWidth[$thisType.background], $thisType.backgroundHeight[$thisType.background]), white.MemberwiseClone());
      }
    }
    if (!(($thisType.screenPosition.Y >= ((+$thisType.worldSurface * 16) + 16)) || 
        (((((255 - ($thisType.tileColor.get_R() | 0)) | 0) - 100) | 0) <= 0) || (($thisType.netMode | 0) === 2))) {
      $T0F().UpdateStars();

      for (var j = 0; j < ($thisType.numStars | 0); j = ((j + 1) | 0)) {
        var color = new ($T04())();
        var num20 = +((+($thisType.evilTiles) / 500));
        if (num20 > 1) {
          num20 = 1;
        }
        num20 = 1 - (num20 * 0.5);
        if (($thisType.evilTiles | 0) <= 0) {
          num20 = 1;
        }
        var num21 = (((+(((255 - ($thisType.tileColor.get_R() | 0)) | 0) - 100) * +$thisType.star[j].twinkle) * num20) | 0);
        var num22 = (((+(((255 - ($thisType.tileColor.get_G() | 0)) | 0) - 100) * +$thisType.star[j].twinkle) * num20) | 0);
        var num23 = (((+(((255 - ($thisType.tileColor.get_B() | 0)) | 0) - 100) * +$thisType.star[j].twinkle) * num20) | 0);
        if (num21 < 0) {
          num21 = 0;
        }
        if (num22 < 0) {
          num22 = 0;
        }
        if (num23 < 0) {
          num23 = 0;
        }
        color.set_R((num21 & 0xFF));
        color.set_G(((+num22 * num20) | 0));
        color.set_B(((+num23 * num20) | 0));
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.starTexture[$thisType.star[j].type], 
          $S04().Construct((+$thisType.star[j].position.X + (+(($thisType.starTexture[$thisType.star[j].type]).get_Width()) * 0.5)), ((+$thisType.star[j].position.Y + (+(($thisType.starTexture[$thisType.star[j].type]).get_Height()) * 0.5)) + +num6)), 
          new ($T24())(0, 0, ($thisType.starTexture[$thisType.star[j].type]).get_Width(), ($thisType.starTexture[$thisType.star[j].type]).get_Height()), 
          color.MemberwiseClone(), 
          $thisType.star[j].rotation, 
          $S04().Construct((+(($thisType.starTexture[$thisType.star[j].type]).get_Width()) * 0.5), (+(($thisType.starTexture[$thisType.star[j].type]).get_Height()) * 0.5)), 
          +$thisType.star[j].scale * +$thisType.star[j].twinkle, 
          $T2A().None, 
          0
        );
      }
    }
    if ($thisType.dayTime) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.sunTexture, 
        $S04().Construct(+num7, +(num8 + ($thisType.sunModY | 0))), 
        new ($T24())(0, 0, $thisType.sunTexture.get_Width(), $thisType.sunTexture.get_Height()), 
        white2.MemberwiseClone(), 
        (Math.fround(+(+$thisType.time / 54000)) * 2) - 7.3, 
        $S04().Construct(+((($thisType.sunTexture.get_Width() | 0) / 2 | 0)), +((($thisType.sunTexture.get_Height() | 0) / 2 | 0))), 
        num9, 
        $T2A().None, 
        0
      );
    }
    if (!$thisType.dayTime) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.moonTexture, 
        $S04().Construct(+num10, +(num11 + ($thisType.moonModY | 0))), 
        new ($T24())(0, Math.imul($thisType.moonTexture.get_Width(), $thisType.moonPhase), $thisType.moonTexture.get_Width(), $thisType.moonTexture.get_Width()), 
        white3.MemberwiseClone(), 
        (Math.fround(+(+$thisType.time / 32400)) * 2) - 7.3, 
        $S04().Construct(+((($thisType.moonTexture.get_Width() | 0) / 2 | 0)), +((($thisType.moonTexture.get_Width() | 0) / 2 | 0))), 
        num12, 
        $T2A().None, 
        0
      );
    }
    if ($thisType.dayTime) {
      (value = value.MemberwiseClone(), 
        $T24().prototype._ctor.call(value, 
          ((+num7 - ((+($thisType.sunTexture.get_Width()) * 0.5) * num9)) | 0), 
          (((+num8 - ((+($thisType.sunTexture.get_Height()) * 0.5) * num9)) + +($thisType.sunModY)) | 0), 
          ((+($thisType.sunTexture.get_Width()) * num9) | 0), 
          ((+($thisType.sunTexture.get_Width()) * num9) | 0)
        ));
    } else {
      (value = value.MemberwiseClone(), 
        $T24().prototype._ctor.call(value, 
          ((+num10 - ((+($thisType.moonTexture.get_Width()) * 0.5) * num12)) | 0), 
          (((+num11 - ((+($thisType.moonTexture.get_Width()) * 0.5) * num12)) + +($thisType.moonModY)) | 0), 
          ((+($thisType.moonTexture.get_Width()) * num12) | 0), 
          ((+($thisType.moonTexture.get_Width()) * num12) | 0)
        ));
    }
    var rectangle = new ($T24())($thisType.mouseState.get_X(), $thisType.mouseState.get_Y(), 1, 1);
    $thisType.sunModY = ((+($thisType.sunModY) * 0.999) | 0);
    $thisType.moonModY = ((+($thisType.moonModY) * 0.999) | 0);
    if (!(!($thisType.gameMenu && 
          (($thisType.netMode | 0) !== 1)) && !$thisType.grabSun)) {
      if (!(($thisType.mouseState.get_LeftButton() !== $T2B().Pressed) || !$thisType.hasFocus)) {
        if (!(!rectangle.Intersects(value.MemberwiseClone()) && !$thisType.grabSky)) {
          if ($thisType.dayTime) {
            $thisType.time = 54000 * +(+(($thisType.mouseState.get_X() | 0) + ($thisType.sunTexture.get_Width() | 0)) / (+($thisType.screenWidth) + +(($thisType.sunTexture.get_Width() | 0) * 2)));
            $thisType.sunModY = ((((($thisType.mouseState.get_Y() | 0) - num8) | 0) + 0x8000 & 0xFFFF) - 0x8000);
            if (+$thisType.time > 53990) {
              $thisType.time = 53990;
            }
          } else {
            $thisType.time = 32400 * +(+(($thisType.mouseState.get_X() | 0) + ($thisType.moonTexture.get_Width() | 0)) / (+($thisType.screenWidth) + +(($thisType.moonTexture.get_Width() | 0) * 2)));
            $thisType.moonModY = ((((($thisType.mouseState.get_Y() | 0) - num11) | 0) + 0x8000 & 0xFFFF) - 0x8000);
            if (+$thisType.time > 32390) {
              $thisType.time = 32390;
            }
          }
          if (+$thisType.time < 10) {
            $thisType.time = 10;
          }
          if (($thisType.netMode | 0) !== 0) {
            $T2D().SendData(
              18, 
              -1, 
              -1, 
              "", 
              0, 
              0, 
              0, 
              0
            );
          }
          $thisType.grabSky = true;
        }
      } else {
        $thisType.grabSky = false;
      }
    }
    if ($thisType.resetClouds) {
      $T05().resetClouds();
      $thisType.resetClouds = false;
    }
    if (!(!this.get_IsActive() && (($thisType.netMode | 0) === 0))) {
      $T05().UpdateClouds();
      $thisType.windSpeedSpeed = +$thisType.windSpeedSpeed + (+($thisType.rand.Next(-10, 11)) * 0.0001);
      if ($thisType.windSpeedSpeed < -0.002) {
        $thisType.windSpeedSpeed = -0.002;
      }
      if ($thisType.windSpeedSpeed > 0.002) {
        $thisType.windSpeedSpeed = 0.002;
      }
      $thisType.windSpeed = +$thisType.windSpeed + +$thisType.windSpeedSpeed;
      if ($thisType.windSpeed < -0.3) {
        $thisType.windSpeed = -0.3;
      }
      if ($thisType.windSpeed > 0.3) {
        $thisType.windSpeed = 0.3;
      }
      $thisType.numClouds = ((($thisType.numClouds | 0) + ($thisType.rand.Next(-1, 2) | 0)) | 0);
      if (($thisType.numClouds | 0) < 0) {
        $thisType.numClouds = 0;
      }
      if (($thisType.numClouds | 0) > ($thisType.cloudLimit | 0)) {
        $thisType.numClouds = ($thisType.cloudLimit | 0);
      }
    }
    if ($thisType.screenPosition.Y < ((+$thisType.worldSurface * 16) + 16)) {

      for (var k = 0; k < 100; k = ((k + 1) | 0)) {
        if ($thisType.cloud[k].active) {
          var num24 = ((40 * (2 - +$thisType.cloud[k].scale)) | 0);
          var color2 = new ($T04())();
          var num25 = (white.get_R() | 0);
          num25 = ((num25 - num24) | 0);
          if (num25 <= 0) {
            num25 = 0;
          }
          color2.set_R((num25 & 0xFF));
          num25 = (white.get_G() | 0);
          num25 = ((num25 - num24) | 0);
          if (num25 <= 0) {
            num25 = 0;
          }
          color2.set_G((num25 & 0xFF));
          num25 = (white.get_B() | 0);
          num25 = ((num25 - num24) | 0);
          if (num25 <= 0) {
            num25 = 0;
          }
          color2.set_B((num25 & 0xFF));
          color2.set_A((((255 - num24) | 0) & 0xFF));
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.cloudTexture[$thisType.cloud[k].type], 
            $S04().Construct((+$thisType.cloud[k].position.X + (+(($thisType.cloudTexture[$thisType.cloud[k].type]).get_Width()) * 0.5)), ((+$thisType.cloud[k].position.Y + (+(($thisType.cloudTexture[$thisType.cloud[k].type]).get_Height()) * 0.5)) + +num6)), 
            new ($T24())(0, 0, ($thisType.cloudTexture[$thisType.cloud[k].type]).get_Width(), ($thisType.cloudTexture[$thisType.cloud[k].type]).get_Height()), 
            color2.MemberwiseClone(), 
            $thisType.cloud[k].rotation, 
            $S04().Construct((+(($thisType.cloudTexture[$thisType.cloud[k].type]).get_Width()) * 0.5), (+(($thisType.cloudTexture[$thisType.cloud[k].type]).get_Height()) * 0.5)), 
            $thisType.cloud[k].scale, 
            $T2A().None, 
            0
          );
        }
      }
    }
    if (!(!$thisType.gameMenu && (($thisType.netMode | 0) !== 2))) {
      this.DrawMenu();
      return;
    }
    var num26 = ((+((+$thisType.screenPosition.X / 16)) - 1) | 0);
    var num27 = ((((+((+$thisType.screenPosition.X + +($thisType.screenWidth)) / 16)) | 0) + 2) | 0);
    var num28 = ((+((+$thisType.screenPosition.Y / 16)) - 1) | 0);
    var num29 = ((((+((+$thisType.screenPosition.Y + +($thisType.screenHeight)) / 16)) | 0) + 2) | 0);
    if (num26 < 0) {
      num26 = 0;
    }
    if (num27 > ($thisType.maxTilesX | 0)) {
      num27 = ($thisType.maxTilesX | 0);
    }
    if (num28 < 0) {
      num28 = 0;
    }
    if (num29 > ($thisType.maxTilesY | 0)) {
      num29 = ($thisType.maxTilesY | 0);
    }
    $T2F().LightTiles(num26, num27, num28, num29);
    var arg_192F_0 = $T04().get_White();
    this.DrawWater(true);
    num3 = $thisType.caveParrallax;
    num4 = ((-$T29().IEEERemainder($thisType.screenPosition.X * num3, +($thisType.backgroundWidth[1])) - +((($thisType.backgroundWidth[1] | 0) / 2 | 0))) | 0);
    num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[1] | 0)) | 0) + 2) | 0);
    num6 = (((+(Math.imul((($thisType.worldSurface) | 0), 16) - ($thisType.backgroundHeight[1] | 0)) - +$thisType.screenPosition.Y) + 16) | 0);

    for (var l = 0; l < num5; l = ((l + 1) | 0)) {

      for (var m = 0; m < 6; m = ((m + 1) | 0)) {
        var num30 = ((((((num4 + Math.imul($thisType.backgroundWidth[1], l)) | 0) + Math.imul(m, 16)) | 0) / 16) | 0);
        var num31 = ((num6 / 16) | 0);
        var color3 = $T2F().GetColor(((num30 + ((+(+$thisType.screenPosition.X / 16)) | 0)) | 0), ((num31 + ((+(+$thisType.screenPosition.Y / 16)) | 0)) | 0)).MemberwiseClone();
        $S05().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[1], $S04().Construct(+(((num4 + Math.imul($thisType.backgroundWidth[1], l)) | 0) + Math.imul(16, m)), +num6), new ($T24())(Math.imul(16, m), 0, 16, 16), color3.MemberwiseClone());
      }
    }
    var num32 = +(($thisType.maxTilesY | 0) - 230);
    var num33 = +(((+((num32 - +$thisType.worldSurface) / 6)) | 0) * 6);
    num32 = (+$thisType.worldSurface + num33) - 5;
    var flag = false;
    var flag2 = false;
    num6 = (((+((($thisType.worldSurface) | 0) * 16) - +$thisType.screenPosition.Y) + 16) | 0);
    if ((+$thisType.worldSurface * 16) <= +$thisType.screenPosition.Y + +($thisType.screenHeight)) {
      num3 = $thisType.caveParrallax;
      num4 = ((-$T29().IEEERemainder(100 + ($thisType.screenPosition.X * num3), +($thisType.backgroundWidth[2])) - +((($thisType.backgroundWidth[2] | 0) / 2 | 0))) | 0);
      num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[2] | 0)) | 0) + 2) | 0);
      if ((+$thisType.worldSurface * 16) < +$thisType.screenPosition.Y - 16) {
        var num34 = ((+$T29().IEEERemainder(+num6, +($thisType.backgroundHeight[2])) - +($thisType.backgroundHeight[2])) | 0);
        var num35 = ((((($thisType.screenHeight | 0) / ($thisType.backgroundHeight[2] | 0)) | 0) + 2) | 0);
      } else {
        num34 = num6;
        num35 = ((((((($thisType.screenHeight | 0) - num6) | 0) / ($thisType.backgroundHeight[2] | 0)) | 0) + 1) | 0);
      }
      if ((+$thisType.rockLayer * 16) < +$thisType.screenPosition.Y + +($thisType.screenHeight)) {
        num35 = (((((((+$thisType.rockLayer * 16) - $thisType.screenPosition.Y) + +($thisType.screenHeight)) - +num34) | 0) / ($thisType.backgroundHeight[2] | 0)) | 0);
        flag2 = true;
      }

      for (var n = 0; n < num5; n = ((n + 1) | 0)) {

        for (var num36 = 0; num36 < num35; num36 = ((num36 + 1) | 0)) {
          $S02().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[2], new ($T24())(((num4 + Math.imul($thisType.backgroundWidth[2], n)) | 0), ((num34 + Math.imul($thisType.backgroundHeight[2], num36)) | 0), $thisType.backgroundWidth[2], $thisType.backgroundHeight[2]), $T04().get_White().MemberwiseClone());
        }
      }
      if (flag2) {
        num3 = $thisType.caveParrallax;
        num4 = ((-$T29().IEEERemainder($thisType.screenPosition.X * num3, +($thisType.backgroundWidth[1])) - +((($thisType.backgroundWidth[1] | 0) / 2 | 0))) | 0);
        num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[1] | 0)) | 0) + 2) | 0);
        num6 = ((num34 + Math.imul(num35, $thisType.backgroundHeight[2])) | 0);

        for (var num37 = 0; num37 < num5; num37 = ((num37 + 1) | 0)) {

          for (var num38 = 0; num38 < 6; num38 = ((num38 + 1) | 0)) {
            var arg_1CC2_0 = ((((((num4 + Math.imul($thisType.backgroundWidth[4], num37)) | 0) + Math.imul(num38, 16)) | 0) / 16) | 0);
            var arg_1CC8_0 = ((num6 / 16) | 0);
            $S05().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[4], $S04().Construct(+(((num4 + Math.imul($thisType.backgroundWidth[4], num37)) | 0) + Math.imul(16, num38)), +num6), new ($T24())(Math.imul(16, num38), 0, 16, 24), $T04().get_White().MemberwiseClone());
          }
        }
      }
    }
    num6 = ((((+((($thisType.rockLayer) | 0) * 16) - +$thisType.screenPosition.Y) + 16) + +($thisType.screenHeight)) | 0);
    if ((+$thisType.rockLayer * 16) <= +$thisType.screenPosition.Y + +($thisType.screenHeight)) {
      num3 = $thisType.caveParrallax;
      num4 = ((-$T29().IEEERemainder(100 + ($thisType.screenPosition.X * num3), +($thisType.backgroundWidth[3])) - +((($thisType.backgroundWidth[3] | 0) / 2 | 0))) | 0);
      num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[3] | 0)) | 0) + 2) | 0);
      if (((+$thisType.rockLayer * 16) + +($thisType.screenHeight)) < +$thisType.screenPosition.Y - 16) {
        num34 = ((+$T29().IEEERemainder(+num6, +($thisType.backgroundHeight[3])) - +($thisType.backgroundHeight[3])) | 0);
        num35 = ((((($thisType.screenHeight | 0) / ($thisType.backgroundHeight[3] | 0)) | 0) + 2) | 0);
      } else {
        num34 = num6;
        num35 = ((((((($thisType.screenHeight | 0) - num6) | 0) / ($thisType.backgroundHeight[3] | 0)) | 0) + 1) | 0);
      }
      if ((num32 * 16) < +$thisType.screenPosition.Y + +($thisType.screenHeight)) {
        num35 = (((((((num32 * 16) - $thisType.screenPosition.Y) + +($thisType.screenHeight)) - +num34) | 0) / ($thisType.backgroundHeight[2] | 0)) | 0);
        flag = true;
      }

      for (var num39 = 0; num39 < num5; num39 = ((num39 + 1) | 0)) {

        for (var num40 = 0; num40 < num35; num40 = ((num40 + 1) | 0)) {
          $S02().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[3], new ($T24())(((num4 + Math.imul($thisType.backgroundWidth[2], num39)) | 0), ((num34 + Math.imul($thisType.backgroundHeight[2], num40)) | 0), $thisType.backgroundWidth[2], $thisType.backgroundHeight[2]), $T04().get_White().MemberwiseClone());
        }
      }
      if (flag) {
        num3 = $thisType.caveParrallax;
        num4 = (((-$T29().IEEERemainder($thisType.screenPosition.X * num3, +($thisType.backgroundWidth[1])) - +((($thisType.backgroundWidth[1] | 0) / 2 | 0))) - 4) | 0);
        num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[1] | 0)) | 0) + 2) | 0);
        num6 = ((num34 + Math.imul(num35, $thisType.backgroundHeight[2])) | 0);

        for (var num41 = 0; num41 < num5; num41 = ((num41 + 1) | 0)) {

          for (var num42 = 0; num42 < 6; num42 = ((num42 + 1) | 0)) {
            var num43 = ((((((num4 + Math.imul($thisType.backgroundWidth[1], num41)) | 0) + Math.imul(num42, 16)) | 0) / 16) | 0);
            var num44 = ((num6 / 16) | 0);
            $T2F().GetColor(((num43 + ((+(+$thisType.screenPosition.X / 16)) | 0)) | 0), ((num44 + ((+(+$thisType.screenPosition.Y / 16)) | 0)) | 0));
            $S05().CallVirtual("Draw", null, this.spriteBatch, $thisType.backgroundTexture[6], $S04().Construct(+(((num4 + Math.imul($thisType.backgroundWidth[1], num41)) | 0) + Math.imul(16, num42)), +num6), new ($T24())(Math.imul(16, num42), Math.imul($thisType.magmaBGFrame, 24), 16, 24), $T04().get_White().MemberwiseClone());
          }
        }
      }
    }
    num6 = ((((((+(((num32) | 0) * 16) - +$thisType.screenPosition.Y) + 16) + +($thisType.screenHeight)) | 0) + 8) | 0);
    if ((num32 * 16) <= +$thisType.screenPosition.Y + +($thisType.screenHeight)) {
      num4 = ((-$T29().IEEERemainder(100 + ($thisType.screenPosition.X * num3), +($thisType.backgroundWidth[3])) - +((($thisType.backgroundWidth[3] | 0) / 2 | 0))) | 0);
      num5 = ((((($thisType.screenWidth | 0) / ($thisType.backgroundWidth[3] | 0)) | 0) + 2) | 0);
      if (((num32 * 16) + +($thisType.screenHeight)) < +$thisType.screenPosition.Y - 16) {
        num34 = ((+$T29().IEEERemainder(+num6, +($thisType.backgroundHeight[3])) - +($thisType.backgroundHeight[3])) | 0);
        num35 = ((((($thisType.screenHeight | 0) / ($thisType.backgroundHeight[3] | 0)) | 0) + 2) | 0);
      } else {
        num34 = num6;
        num35 = ((((((($thisType.screenHeight | 0) - num6) | 0) / ($thisType.backgroundHeight[3] | 0)) | 0) + 1) | 0);
      }

      for (var num45 = 0; num45 < num5; num45 = ((num45 + 1) | 0)) {

        for (var num46 = 0; num46 < num35; num46 = ((num46 + 1) | 0)) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.backgroundTexture[5], 
            $S04().Construct(+(num4 + Math.imul($thisType.backgroundWidth[2], num45)), +(num34 + Math.imul($thisType.backgroundHeight[2], num46))), 
            new ($T24())(0, Math.imul($thisType.backgroundHeight[2], $thisType.magmaBGFrame), $thisType.backgroundWidth[2], $thisType.backgroundHeight[2]), 
            $T04().get_White().MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
      }
    }
    $thisType.magmaBGFrameCounter = ((($thisType.magmaBGFrameCounter | 0) + 1) | 0);
    if (($thisType.magmaBGFrameCounter | 0) >= 8) {
      $thisType.magmaBGFrameCounter = 0;
      $thisType.magmaBGFrame = ((($thisType.magmaBGFrame | 0) + 1) | 0);
      if (($thisType.magmaBGFrame | 0) >= 3) {
        $thisType.magmaBGFrame = 0;
      }
    }
    try {

      for (var num47 = num28; num47 < ((num29 + 4) | 0); num47 = ((num47 + 1) | 0)) {

        for (var num48 = ((num26 - 2) | 0); num48 < ((num27 + 2) | 0); num48 = ((num48 + 1) | 0)) {
          if ($thisType.tile.Get(num48, num47) === null) {
            $thisType.tile.Set(num48, num47, new ($T0D())());
          }
          if (!(((+$T2F().Brightness(num48, num47) * 255) >= +(($thisType.tileColor.get_R() | 0) - 12)) && (+num47 <= +$thisType.worldSurface))) {
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.blackTileTexture, 
              $S04().Construct(+(Math.imul(num48, 16) - (($thisType.screenPosition.X) | 0)), +(Math.imul(num47, 16) - (($thisType.screenPosition.Y) | 0))), 
              new ($T24())($thisType.tile.Get(num48, num47).frameX, $thisType.tile.Get(num48, num47).frameY, 16, 16), 
              $T2F().GetBlackness(num48, num47).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
        }
      }

      for (var num49 = num28; num49 < ((num29 + 4) | 0); num49 = ((num49 + 1) | 0)) {

        for (var num50 = ((num26 - 2) | 0); num50 < ((num27 + 2) | 0); num50 = ((num50 + 1) | 0)) {
          if (!((($thisType.tile.Get(num50, num49).wall | 0) <= 0) || (+$T2F().Brightness(num50, num49) <= 0))) {
            if (!((($thisType.tile.Get(num50, num49).wallFrameY | 0) !== 18) || (($thisType.tile.Get(num50, num49).wallFrameX | 0) < 18))) {
              var arg_236A_0 = ($thisType.tile.Get(num50, num49).wallFrameY | 0);
            }
            (value2 = value2.MemberwiseClone(), 
              $T24().prototype._ctor.call(value2, 
                ((($thisType.tile.Get(num50, num49).wallFrameX | 0) * 2) & 0xFF), 
                ((($thisType.tile.Get(num50, num49).wallFrameY | 0) * 2) & 0xFF), 
                32, 
                32
              ));
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.wallTexture[$thisType.tile.Get(num50, num49).wall], 
              $S04().Construct(+(((Math.imul(num50, 16) - (($thisType.screenPosition.X) | 0)) | 0) - 8), +(((Math.imul(num49, 16) - (($thisType.screenPosition.Y) | 0)) | 0) - 8)), 
              value2.MemberwiseClone(), 
              $T2F().GetColor(num50, num49).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
        }
      }
      this.DrawTiles(false);
      this.DrawNPCs(true);
      this.DrawTiles(true);
      this.DrawGore();
      this.DrawNPCs(false);
    } catch ($exception) {
    }

    for (var num51 = 0; num51 < 1000; num51 = ((num51 + 1) | 0)) {
      if (!(!$thisType.projectile[num51].active || (($thisType.projectile[num51].type | 0) <= 0))) {
        if (($thisType.projectile[num51].type | 0) === 32) {
          (vector = vector.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector, +$thisType.projectile[num51].position.X + (+($thisType.projectile[num51].width) * 0.5), +$thisType.projectile[num51].position.Y + (+($thisType.projectile[num51].height) * 0.5)));
          var num52 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector.X;
          var num53 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector.Y;
          var rotation3 = Math.fround(Math.atan2(num53, num52)) - 1.57;
          var flag3 = true;
          if (!((num52 !== 0) || (num53 !== 0))) {
            flag3 = false;
          } else {
            var num54 = Math.fround(Math.sqrt((num52 * num52) + (num53 * num53)));
            num54 = +((8 / num54));
            num52 *= num54;
            num53 *= num54;
            vector.X = +vector.X - num52;
            vector.Y = +vector.Y - num53;
            num52 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector.X;
            num53 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector.Y;
          }

          while (flag3) {
            var num55 = Math.fround(Math.sqrt((num52 * num52) + (num53 * num53)));
            if (num55 < 28) {
              flag3 = false;
            } else {
              num55 = +((28 / num55));
              num52 *= num55;
              num53 *= num55;
              vector.X = +vector.X + num52;
              vector.Y = +vector.Y + num53;
              num52 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector.X;
              num53 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector.Y;
              var color4 = $T2F().GetColor(((((vector.X) | 0) / 16) | 0), ((+(+vector.Y / 16)) | 0)).MemberwiseClone();
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.chain5Texture, 
                $S04().Construct((+vector.X - +$thisType.screenPosition.X), (+vector.Y - +$thisType.screenPosition.Y)), 
                new ($T24())(0, 0, $thisType.chain5Texture.get_Width(), $thisType.chain5Texture.get_Height()), 
                color4.MemberwiseClone(), 
                rotation3, 
                $S04().Construct((+($thisType.chain5Texture.get_Width()) * 0.5), (+($thisType.chain5Texture.get_Height()) * 0.5)), 
                1, 
                $T2A().None, 
                0
              );
            }
          }
        } else if (($thisType.projectile[num51].aiStyle | 0) === 7) {
          (vector2 = vector2.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector2, +$thisType.projectile[num51].position.X + (+($thisType.projectile[num51].width) * 0.5), +$thisType.projectile[num51].position.Y + (+($thisType.projectile[num51].height) * 0.5)));
          var num56 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector2.X;
          var num57 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector2.Y;
          var rotation4 = Math.fround(Math.atan2(num57, num56)) - 1.57;

          for (var flag4 = true; flag4; ) {
            var num58 = Math.fround(Math.sqrt((num56 * num56) + (num57 * num57)));
            if (num58 < 25) {
              flag4 = false;
            } else {
              num58 = +((12 / num58));
              num56 *= num58;
              num57 *= num58;
              vector2.X = +vector2.X + num56;
              vector2.Y = +vector2.Y + num57;
              num56 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector2.X;
              num57 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector2.Y;
              var color5 = $T2F().GetColor(((((vector2.X) | 0) / 16) | 0), ((+(+vector2.Y / 16)) | 0)).MemberwiseClone();
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.chainTexture, 
                $S04().Construct((+vector2.X - +$thisType.screenPosition.X), (+vector2.Y - +$thisType.screenPosition.Y)), 
                new ($T24())(0, 0, $thisType.chainTexture.get_Width(), $thisType.chainTexture.get_Height()), 
                color5.MemberwiseClone(), 
                rotation4, 
                $S04().Construct((+($thisType.chainTexture.get_Width()) * 0.5), (+($thisType.chainTexture.get_Height()) * 0.5)), 
                1, 
                $T2A().None, 
                0
              );
            }
          }
        } else if (($thisType.projectile[num51].aiStyle | 0) === 13) {
          var num59 = +$thisType.projectile[num51].position.X + 8;
          var num60 = +$thisType.projectile[num51].position.Y + 2;
          var num61 = +$thisType.projectile[num51].velocity.X;
          var num62 = +$thisType.projectile[num51].velocity.Y;
          var num63 = Math.fround(Math.sqrt((num61 * num61) + (num62 * num62)));
          num63 = +((20 / num63));
          if (+$thisType.projectile[num51].ai[0] === 0) {
            num59 -= +$thisType.projectile[num51].velocity.X * num63;
            num60 -= +$thisType.projectile[num51].velocity.Y * num63;
          } else {
            num59 += +$thisType.projectile[num51].velocity.X * num63;
            num60 += +$thisType.projectile[num51].velocity.Y * num63;
          }
          (vector3 = vector3.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector3, num59, num60));
          num61 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector3.X;
          num62 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector3.Y;
          var num64 = Math.fround(Math.atan2(num62, num61)) - 1.57;
          if (($thisType.projectile[num51].alpha | 0) === 0) {
            if (($thisType.player[$thisType.projectile[num51].owner].direction | 0) === 1) {
              $thisType.player[$thisType.projectile[num51].owner].itemRotation = num64 - 1.57;
            } else {
              $thisType.player[$thisType.projectile[num51].owner].itemRotation = num64 + 1.57;
            }
          }

          for (var flag5 = true; flag5; ) {
            var num65 = Math.fround(Math.sqrt((num61 * num61) + (num62 * num62)));
            if (num65 < 25) {
              flag5 = false;
            } else {
              num65 = +((12 / num65));
              num61 *= num65;
              num62 *= num65;
              vector3.X = +vector3.X + num61;
              vector3.Y = +vector3.Y + num62;
              num61 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector3.X;
              num62 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector3.Y;
              var color6 = $T2F().GetColor(((((vector3.X) | 0) / 16) | 0), ((+(+vector3.Y / 16)) | 0)).MemberwiseClone();
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.chainTexture, 
                $S04().Construct((+vector3.X - +$thisType.screenPosition.X), (+vector3.Y - +$thisType.screenPosition.Y)), 
                new ($T24())(0, 0, $thisType.chainTexture.get_Width(), $thisType.chainTexture.get_Height()), 
                color6.MemberwiseClone(), 
                num64, 
                $S04().Construct((+($thisType.chainTexture.get_Width()) * 0.5), (+($thisType.chainTexture.get_Height()) * 0.5)), 
                1, 
                $T2A().None, 
                0
              );
            }
          }
        } else if (($thisType.projectile[num51].aiStyle | 0) === 15) {
          (vector4 = vector4.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector4, +$thisType.projectile[num51].position.X + (+($thisType.projectile[num51].width) * 0.5), +$thisType.projectile[num51].position.Y + (+($thisType.projectile[num51].height) * 0.5)));
          var num66 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector4.X;
          var num67 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector4.Y;
          var num68 = Math.fround(Math.atan2(num67, num66)) - 1.57;
          if (($thisType.projectile[num51].alpha | 0) === 0) {
            if (($thisType.player[$thisType.projectile[num51].owner].direction | 0) === 1) {
              $thisType.player[$thisType.projectile[num51].owner].itemRotation = num68 - 1.57;
            } else {
              $thisType.player[$thisType.projectile[num51].owner].itemRotation = num68 + 1.57;
            }
          }

          for (var flag6 = true; flag6; ) {
            var num69 = Math.fround(Math.sqrt((num66 * num66) + (num67 * num67)));
            if (num69 < 25) {
              flag6 = false;
            } else {
              num69 = +((12 / num69));
              num66 *= num69;
              num67 *= num69;
              vector4.X = +vector4.X + num66;
              vector4.Y = +vector4.Y + num67;
              num66 = (+$thisType.player[$thisType.projectile[num51].owner].position.X + +((($thisType.player[$thisType.projectile[num51].owner].width | 0) / 2 | 0))) - +vector4.X;
              num67 = (+$thisType.player[$thisType.projectile[num51].owner].position.Y + +((($thisType.player[$thisType.projectile[num51].owner].height | 0) / 2 | 0))) - +vector4.Y;
              var color7 = $T2F().GetColor(((((vector4.X) | 0) / 16) | 0), ((+(+vector4.Y / 16)) | 0)).MemberwiseClone();
              if (($thisType.projectile[num51].type | 0) === 25) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.chain2Texture, 
                  $S04().Construct((+vector4.X - +$thisType.screenPosition.X), (+vector4.Y - +$thisType.screenPosition.Y)), 
                  new ($T24())(0, 0, $thisType.chain2Texture.get_Width(), $thisType.chain2Texture.get_Height()), 
                  color7.MemberwiseClone(), 
                  num68, 
                  $S04().Construct((+($thisType.chain2Texture.get_Width()) * 0.5), (+($thisType.chain2Texture.get_Height()) * 0.5)), 
                  1, 
                  $T2A().None, 
                  0
                );
              } else if (($thisType.projectile[num51].type | 0) === 35) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.chain6Texture, 
                  $S04().Construct((+vector4.X - +$thisType.screenPosition.X), (+vector4.Y - +$thisType.screenPosition.Y)), 
                  new ($T24())(0, 0, $thisType.chain6Texture.get_Width(), $thisType.chain6Texture.get_Height()), 
                  color7.MemberwiseClone(), 
                  num68, 
                  $S04().Construct((+($thisType.chain6Texture.get_Width()) * 0.5), (+($thisType.chain6Texture.get_Height()) * 0.5)), 
                  1, 
                  $T2A().None, 
                  0
                );
              } else {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.chain3Texture, 
                  $S04().Construct((+vector4.X - +$thisType.screenPosition.X), (+vector4.Y - +$thisType.screenPosition.Y)), 
                  new ($T24())(0, 0, $thisType.chain3Texture.get_Width(), $thisType.chain3Texture.get_Height()), 
                  color7.MemberwiseClone(), 
                  num68, 
                  $S04().Construct((+($thisType.chain3Texture.get_Width()) * 0.5), (+($thisType.chain3Texture.get_Height()) * 0.5)), 
                  1, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
        }
        var newColor = $T2F().GetColor((((($thisType.projectile[num51].position.X + (+($thisType.projectile[num51].width) * 0.5)) | 0) / 16) | 0), ((+(($thisType.projectile[num51].position.Y + (+($thisType.projectile[num51].height) * 0.5)) / 16)) | 0)).MemberwiseClone();
        if (($thisType.projectile[num51].type | 0) === 14) {
          newColor = $T04().get_White().MemberwiseClone();
        }
        var num70 = 0;
        if (($thisType.projectile[num51].type | 0) === 16) {
          num70 = 6;
        }
        if (!((($thisType.projectile[num51].type | 0) !== 17) && (($thisType.projectile[num51].type | 0) !== 31))) {
          num70 = 2;
        }
        if (!((($thisType.projectile[num51].type | 0) !== 25) && 
            (($thisType.projectile[num51].type | 0) !== 26) && (($thisType.projectile[num51].type | 0) !== 30))) {
          num70 = 6;
        }
        if (($thisType.projectile[num51].type | 0) === 28) {
          num70 = 8;
        }
        if (($thisType.projectile[num51].type | 0) === 29) {
          num70 = 11;
        }
        var num71 = (+((($thisType.projectileTexture[$thisType.projectile[num51].type]).get_Width() | 0) - ($thisType.projectile[num51].width | 0)) * 0.5) + (+($thisType.projectile[num51].width) * 0.5);
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.projectileTexture[$thisType.projectile[num51].type], 
          $S04().Construct(((+$thisType.projectile[num51].position.X - +$thisType.screenPosition.X) + num71), ((+$thisType.projectile[num51].position.Y - +$thisType.screenPosition.Y) + +((($thisType.projectile[num51].height | 0) / 2 | 0)))), 
          new ($T24())(0, 0, ($thisType.projectileTexture[$thisType.projectile[num51].type]).get_Width(), ($thisType.projectileTexture[$thisType.projectile[num51].type]).get_Height()), 
          ($thisType.projectile[num51]).GetAlpha(newColor).MemberwiseClone(), 
          $thisType.projectile[num51].rotation, 
          $S04().Construct(num71, +(((($thisType.projectile[num51].height | 0) / 2) | 0) + num70)), 
          $thisType.projectile[num51].scale, 
          $T2A().None, 
          0
        );
      }
    }

    for (var num72 = 0; num72 < 8; num72 = ((num72 + 1) | 0)) {
      if ($thisType.player[num72].active) {
        if (!(!((($thisType.player[num72].head | 0) === 5) && 
              (($thisType.player[num72].body | 0) === 5) && 
              (($thisType.player[num72].legs | 0) === 5)) && 
            !((($thisType.player[num72].head | 0) === 7) && 
              (($thisType.player[num72].body | 0) === 7) && 
              (($thisType.player[num72].legs | 0) === 7)) && ((($thisType.player[num72].head | 0) !== 8) || 
              (($thisType.player[num72].body | 0) !== 8) || 
              (($thisType.player[num72].legs | 0) !== 8)))) {
          var position = $thisType.player[num72].position;
          $thisType.player[num72].position = $thisType.player[num72].shadowPos[0].MemberwiseClone();
          $thisType.player[num72].shadow = 0.5;
          this.DrawPlayer($thisType.player[num72]);
          $thisType.player[num72].position = $thisType.player[num72].shadowPos[1].MemberwiseClone();
          $thisType.player[num72].shadow = 0.7;
          this.DrawPlayer($thisType.player[num72]);
          $thisType.player[num72].position = $thisType.player[num72].shadowPos[2].MemberwiseClone();
          $thisType.player[num72].shadow = 0.9;
          this.DrawPlayer($thisType.player[num72]);
          $thisType.player[num72].position = position.MemberwiseClone();
          $thisType.player[num72].shadow = 0;
        }
        this.DrawPlayer($thisType.player[num72]);
      }
    }

    for (var num73 = 0; num73 < 200; num73 = ((num73 + 1) | 0)) {
      if (!(!$thisType.item[num73].active || (($thisType.item[num73].type | 0) <= 0))) {
        var arg_378B_0 = (((($thisType.item[num73].position.X + (+($thisType.item[num73].width) * 0.5)) | 0) / 16) | 0);
        var arg_37BC_0 = (((($thisType.item[num73].position.Y + (+($thisType.item[num73].height) * 0.5)) | 0) / 16) | 0);
        var color8 = $T2F().GetColor((((($thisType.item[num73].position.X + (+($thisType.item[num73].width) * 0.5)) | 0) / 16) | 0), (((($thisType.item[num73].position.Y + (+($thisType.item[num73].height) * 0.5)) | 0) / 16) | 0));
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.itemTexture[$thisType.item[num73].type], 
          $S04().Construct((((+$thisType.item[num73].position.X - +$thisType.screenPosition.X) + +((($thisType.item[num73].width | 0) / 2 | 0))) - +(((($thisType.itemTexture[$thisType.item[num73].type]).get_Width() | 0) / 2 | 0))), (((+$thisType.item[num73].position.Y - +$thisType.screenPosition.Y) + +((($thisType.item[num73].height | 0) / 2 | 0))) - +(((($thisType.itemTexture[$thisType.item[num73].type]).get_Height() | 0) / 2 | 0)))), 
          new ($T24())(0, 0, ($thisType.itemTexture[$thisType.item[num73].type]).get_Width(), ($thisType.itemTexture[$thisType.item[num73].type]).get_Height()), 
          ($thisType.item[num73]).GetAlpha(color8).MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        if ($T04().op_Inequality($thisType.item[num73].color.MemberwiseClone(), new ($T04())())) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[$thisType.item[num73].type], 
            $S04().Construct((((+$thisType.item[num73].position.X - +$thisType.screenPosition.X) + +((($thisType.item[num73].width | 0) / 2 | 0))) - +(((($thisType.itemTexture[$thisType.item[num73].type]).get_Width() | 0) / 2 | 0))), (((+$thisType.item[num73].position.Y - +$thisType.screenPosition.Y) + +((($thisType.item[num73].height | 0) / 2 | 0))) - +(((($thisType.itemTexture[$thisType.item[num73].type]).get_Height() | 0) / 2 | 0)))), 
            new ($T24())(0, 0, ($thisType.itemTexture[$thisType.item[num73].type]).get_Width(), ($thisType.itemTexture[$thisType.item[num73].type]).get_Height()), 
            ($thisType.item[num73]).GetColor(color8).MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
      }
    }
    var value3 = new ($T24())((((($thisType.screenPosition.X) | 0) - 50) | 0), (((($thisType.screenPosition.Y) | 0) - 50) | 0), ((($thisType.screenWidth | 0) + 100) | 0), ((($thisType.screenHeight | 0) + 100) | 0));

    for (var num74 = 0; num74 < 2000; num74 = ((num74 + 1) | 0)) {
      if ($thisType.dust[num74].active) {
        if (((new ($T24())((($thisType.dust[num74].position.X) | 0), (($thisType.dust[num74].position.Y) | 0), 4, 4))).Intersects(value3.MemberwiseClone())) {
          var newColor2 = $T2F().GetColor((((($thisType.dust[num74].position.X + 4) | 0) / 16) | 0), (((($thisType.dust[num74].position.Y + 4) | 0) / 16) | 0)).MemberwiseClone();
          if (!((($thisType.dust[num74].type | 0) !== 6) && 
              (($thisType.dust[num74].type | 0) !== 15) && !$thisType.dust[num74].noLight)) {
            newColor2 = $T04().get_White().MemberwiseClone();
          }
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.dustTexture, 
            $T25().op_Subtraction($thisType.dust[num74].position.MemberwiseClone(), $thisType.screenPosition.MemberwiseClone()).MemberwiseClone(), 
            $thisType.dust[num74].frame.MemberwiseClone(), 
            ($thisType.dust[num74]).GetAlpha(newColor2).MemberwiseClone(), 
            $thisType.dust[num74].rotation, 
            $S04().Construct(4, 4), 
            $thisType.dust[num74].scale, 
            $T2A().None, 
            0
          );
          if ($T04().op_Inequality($thisType.dust[num74].color.MemberwiseClone(), new ($T04())())) {
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.dustTexture, 
              $T25().op_Subtraction($thisType.dust[num74].position.MemberwiseClone(), $thisType.screenPosition.MemberwiseClone()).MemberwiseClone(), 
              $thisType.dust[num74].frame.MemberwiseClone(), 
              ($thisType.dust[num74]).GetColor(newColor2).MemberwiseClone(), 
              $thisType.dust[num74].rotation, 
              $S04().Construct(4, 4), 
              $thisType.dust[num74].scale, 
              $T2A().None, 
              0
            );
          }
        } else {
          $thisType.dust[num74].active = false;
        }
      }
    }
    this.DrawWater(false);
    if (!$thisType.hideUI) {

      for (var num75 = 0; num75 < 8; num75 = ((num75 + 1) | 0)) {
        if (!(!$thisType.player[num75].active || 
            (($thisType.player[num75].chatShowTime | 0) <= 0) || 
            (num75 === ($thisType.myPlayer | 0)) || $thisType.player[num75].dead)) {
          var vector5 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, $thisType.player[num75].chatText);
          vector6.X = (+$thisType.player[num75].position.X + +((($thisType.player[num75].width | 0) / 2 | 0))) - +((+vector5.X / 2));
          vector6.Y = (+$thisType.player[num75].position.Y - +vector5.Y) - 2;

          for (var num76 = 0; num76 < 5; num76 = ((num76 + 1) | 0)) {
            var num77 = 0;
            var num78 = 0;
            var black = $T04().get_Black().MemberwiseClone();
            if (num76 === 0) {
              num77 = -2;
            }
            if (num76 === 1) {
              num77 = 2;
            }
            if (num76 === 2) {
              num78 = -2;
            }
            if (num76 === 3) {
              num78 = 2;
            }
            if (num76 === 4) {
              (black = black.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, black, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor));
            }
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              $thisType.player[num75].chatText, 
              $S04().Construct(((+vector6.X + +num77) - +$thisType.screenPosition.X), ((+vector6.Y + +num78) - +$thisType.screenPosition.Y)), 
              black.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
        }
      }

      for (var num79 = 0; num79 < 100; num79 = ((num79 + 1) | 0)) {
        if ($thisType.combatText[num79].active) {
          var vector7 = $S06().CallVirtual("MeasureString", null, $thisType.fontCombatText, $thisType.combatText[num79].text).MemberwiseClone();
          (origin = origin.MemberwiseClone(), 
            $T25().prototype._ctor.call(origin, +vector7.X * 0.5, +vector7.Y * 0.5));
          var arg_3EDB_0 = +$thisType.combatText[num79].scale;
          var num80 = +(($thisType.combatText[num79].color).get_R());
          var num81 = +(($thisType.combatText[num79].color).get_G());
          var num82 = +(($thisType.combatText[num79].color).get_B());
          var num83 = +(($thisType.combatText[num79].color).get_A());
          num80 *= (+$thisType.combatText[num79].scale * +$thisType.combatText[num79].alpha) * 0.3;
          num82 *= (+$thisType.combatText[num79].scale * +$thisType.combatText[num79].alpha) * 0.3;
          num81 *= (+$thisType.combatText[num79].scale * +$thisType.combatText[num79].alpha) * 0.3;
          num83 *= +$thisType.combatText[num79].scale * +$thisType.combatText[num79].alpha;
          (color9 = color9.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, color9, ((num80) | 0), ((num81) | 0), ((num82) | 0), ((num83) | 0)));

          for (var num84 = 0; num84 < 5; num84 = ((num84 + 1) | 0)) {
            var num85 = 0;
            var num86 = 0;
            if (num84 === 0) {
              num85 = ((num85 - 1) | 0);
            } else if (num84 === 1) {
              num85 = ((num85 + 1) | 0);
            } else if (num84 === 2) {
              num86 = ((num86 - 1) | 0);
            } else if (num84 === 3) {
              num86 = ((num86 + 1) | 0);
            } else {
              num80 = (+(($thisType.combatText[num79].color).get_R()) * +$thisType.combatText[num79].scale) * +$thisType.combatText[num79].alpha;
              num82 = (+(($thisType.combatText[num79].color).get_B()) * +$thisType.combatText[num79].scale) * +$thisType.combatText[num79].alpha;
              num81 = (+(($thisType.combatText[num79].color).get_G()) * +$thisType.combatText[num79].scale) * +$thisType.combatText[num79].alpha;
              num83 = (+(($thisType.combatText[num79].color).get_A()) * +$thisType.combatText[num79].scale) * +$thisType.combatText[num79].alpha;
              (color9 = color9.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, color9, ((num80) | 0), ((num81) | 0), ((num82) | 0), ((num83) | 0)));
            }
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontCombatText, 
              $thisType.combatText[num79].text, 
              $S04().Construct((((+$thisType.combatText[num79].position.X - +$thisType.screenPosition.X) + +num85) + +origin.X), (((+$thisType.combatText[num79].position.Y - +$thisType.screenPosition.Y) + +num86) + +origin.Y)), 
              color9.MemberwiseClone(), 
              $thisType.combatText[num79].rotation, 
              origin.MemberwiseClone(), 
              $thisType.combatText[num79].scale, 
              $T2A().None, 
              0
            );
          }
        }
      }
      if (!((($thisType.netMode | 0) !== 1) || 
          !($T32().clientSock.statusText != "") || ($T32().clientSock.statusText === null))) {
        var text = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$T32().clientSock.statusText, ": ", $T0C().$Box(((+((+($T32().clientSock.statusCount) / +($T32().clientSock.statusMax))) * 100) | 0)), "%"])));
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          text, 
          $S04().Construct((628 - (+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).X * 0.5)), 84), 
          $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
      }
      this.DrawFPS();
      this.DrawInterface();
    }
    (this.spriteBatch).End();
    if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
      $thisType.mouseLeftRelease = false;
    } else {
      $thisType.mouseLeftRelease = true;
    }
    if ($thisType.mouseState.get_RightButton() === $T2B().Pressed) {
      $thisType.mouseRightRelease = false;
    } else {
      $thisType.mouseRightRelease = true;
    }
    if ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) {
      $thisType.stackSplit = 0;
    }
    if (($thisType.stackSplit | 0) > 0) {
      $thisType.stackSplit = ((($thisType.stackSplit | 0) - 1) | 0);
    }
  }; 

  function Main_DrawChat () {
    var array2 = null, intPtr = new ($T36())();
    if (!((($thisType.player[$thisType.myPlayer].talkNPC | 0) >= 0) || (($thisType.player[$thisType.myPlayer].sign | 0) !== -1))) {
      $thisType.npcChatText = "";
      return;
    }
    var color = $S01().Construct(200, 200, 200, 200);
    var num = ((((((($thisType.mouseTextColor | 0) * 2) | 0) + 255) | 0) / 3) & 0xFF);
    var color2 = $S01().Construct(num, num, num, num);
    var num3 = 0;
    var array = JSIL.Array.New($T1A(), 10);
    var num4 = 0;
    var num5 = 0;
    if ($thisType.npcChatText === null) {
      $thisType.npcChatText = "";
    }

  $loop0: 
    for (var i = 0; i < ($thisType.npcChatText.length | 0); i = ((i + 1) | 0)) {
      var bytes = $S09().CallVirtual("GetBytes", null, $T38().get_ASCII(), $thisType.npcChatText.substr(i, 1));
      if ((bytes[0] | 0) === 10) {
        array[num3] = ($thisType.npcChatText.substr(num4, ((i - num4) | 0)));
        num3 = ((num3 + 1) | 0);
        num4 = ((i + 1) | 0);
        num5 = ((i + 1) | 0);
      } else if (!(!($thisType.npcChatText.substr(i, 1) == " ") && (i !== ((($thisType.npcChatText.length | 0) - 1) | 0)))) {
        if (+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, $thisType.npcChatText.substr(num4, ((i - num4) | 0))).X > 470) {
          array[num3] = ($thisType.npcChatText.substr(num4, ((num5 - num4) | 0)));
          num3 = ((num3 + 1) | 0);
          num4 = ((num5 + 1) | 0);
        }
        num5 = i;
      }
      if (num3 === 10) {
        $thisType.npcChatText = ($thisType.npcChatText.substr(0, ((i - 1) | 0)));
        num4 = ((i - 1) | 0);
        num3 = 9;
        break $loop0;
      }
    }
    if (num3 < 10) {
      array[num3] = ($thisType.npcChatText.substr(num4, ((($thisType.npcChatText.length | 0) - num4) | 0)));
    }
    if ($thisType.editSign) {
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      if ((this.textBlinkerState | 0) === 1) {
        (array2 = array)[(intPtr = num3)] = (JSIL.ConcatString(array2[intPtr], "|"));
      }
    }
    num3 = ((num3 + 1) | 0);
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.chatBackTexture, 
      $S04().Construct(+(((($thisType.screenWidth | 0) / 2) | 0) - ((($thisType.chatBackTexture.get_Width() | 0) / 2) | 0)), 100), 
      new ($T24())(0, 0, $thisType.chatBackTexture.get_Width(), Math.imul(((num3 + 1) | 0), 30)), 
      color.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.chatBackTexture, 
      $S04().Construct(+(((($thisType.screenWidth | 0) / 2) | 0) - ((($thisType.chatBackTexture.get_Width() | 0) / 2) | 0)), +(100 + Math.imul(((num3 + 1) | 0), 30))), 
      new ($T24())(0, ((($thisType.chatBackTexture.get_Height() | 0) - 30) | 0), $thisType.chatBackTexture.get_Width(), 30), 
      color.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );

    for (var j = 0; j < num3; j = ((j + 1) | 0)) {

      for (var k = 0; k < 5; k = ((k + 1) | 0)) {
        var color3 = $T04().get_Black().MemberwiseClone();
        var num6 = 170;
        var num7 = ((120 + Math.imul(j, 30)) | 0);
        if (k === 0) {
          num6 = ((num6 - 2) | 0);
        }
        if (k === 1) {
          num6 = ((num6 + 2) | 0);
        }
        if (k === 2) {
          num7 = ((num7 - 2) | 0);
        }
        if (k === 3) {
          num7 = ((num7 + 2) | 0);
        }
        if (k === 4) {
          color3 = color2.MemberwiseClone();
        }
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          array[j], 
          $S04().Construct(+num6, +num7), 
          color3.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
      }
    }
    num = ($thisType.mouseTextColor | 0);
    (color2 = color2.MemberwiseClone(), 
      $S07().Call($T04().prototype, "_ctor", null, color2, num, ((+(+num / 1.1)) | 0), ((num / 2) | 0), num));
    var text = "";
    var num8 = ((($thisType.player[$thisType.myPlayer].statLifeMax | 0) - ($thisType.player[$thisType.myPlayer].statLife | 0)) | 0);
    if (($thisType.player[$thisType.myPlayer].sign | 0) > -1) {
      if ($thisType.editSign) {
        text = "Save";
      } else {
        text = "Edit";
      }
    } else if (!((($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) !== 17) && 
        (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) !== 19) && 
        (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) !== 20) && (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) !== 38))) {
      text = "Shop";
    } else if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 22) {
      text = "Help";
    } else if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 18) {
      var text2 = "";
      var num9 = 0;
      var num10 = 0;
      var num11 = 0;
      var num12 = 0;
      var num13 = num8;
      if (num13 > 0) {
        num13 = ((+num13 * 0.75) | 0);
        if (num13 < 1) {
          num13 = 1;
        }
      }
      if (num13 < 0) {
        num13 = 0;
      }
      if (num13 >= 1000000) {
        num9 = ((num13 / 1000000) | 0);
        num13 = ((num13 - Math.imul(num9, 1000000)) | 0);
      }
      if (num13 >= 10000) {
        num10 = ((num13 / 10000) | 0);
        num13 = ((num13 - Math.imul(num10, 10000)) | 0);
      }
      if (num13 >= 100) {
        num11 = ((num13 / 100) | 0);
        num13 = ((num13 - Math.imul(num11, 100)) | 0);
      }
      if (num13 >= 1) {
        num12 = num13;
      }
      if (num9 > 0) {
        text2 = (JSIL.ConcatString(text2, $T0C().$Box(num9), " platinum "));
      }
      if (num10 > 0) {
        text2 = (JSIL.ConcatString(text2, $T0C().$Box(num10), " gold "));
      }
      if (num11 > 0) {
        text2 = (JSIL.ConcatString(text2, $T0C().$Box(num11), " silver "));
      }
      if (num12 > 0) {
        text2 = (JSIL.ConcatString(text2, $T0C().$Box(num12), " copper "));
      }
      var num14 = +((+($thisType.mouseTextColor) / 255));
      if (num9 > 0) {
        (color2 = color2.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, color2, ((220 * num14) | 0), ((220 * num14) | 0), ((198 * num14) | 0), $thisType.mouseTextColor));
      } else if (num10 > 0) {
        (color2 = color2.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, color2, ((224 * num14) | 0), ((201 * num14) | 0), ((92 * num14) | 0), $thisType.mouseTextColor));
      } else if (num11 > 0) {
        (color2 = color2.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, color2, ((181 * num14) | 0), ((192 * num14) | 0), ((193 * num14) | 0), $thisType.mouseTextColor));
      } else if (num12 > 0) {
        (color2 = color2.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, color2, ((246 * num14) | 0), ((138 * num14) | 0), ((96 * num14) | 0), $thisType.mouseTextColor));
      }
      text = (("Heal (" + text2 + ")"));
      if (num13 === 0) {
        text = "Heal";
      }
    }
    var num15 = 180;
    var num16 = ((130 + Math.imul(num3, 30)) | 0);
    var scale = 0.9;
    if (!((($thisType.mouseState.get_X() | 0) <= num15) || 
        (+($thisType.mouseState.get_X()) >= (+num15 + +$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).X)) || 
        (($thisType.mouseState.get_Y() | 0) <= num16) || (+($thisType.mouseState.get_Y()) >= (+num16 + +$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).Y)))) {
      $thisType.player[$thisType.myPlayer].mouseInterface = true;
      scale = 1.1;
      if (!$thisType.npcChatFocus2) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      $thisType.npcChatFocus2 = true;
      $thisType.player[$thisType.myPlayer].releaseUseItem = false;
    } else {
      if ($thisType.npcChatFocus2) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      $thisType.npcChatFocus2 = false;
    }

    for (var l = 0; l < 5; l = ((l + 1) | 0)) {
      var num17 = num15;
      var num18 = num16;
      var color4 = $T04().get_Black().MemberwiseClone();
      if (l === 0) {
        num17 = ((num17 - 2) | 0);
      }
      if (l === 1) {
        num17 = ((num17 + 2) | 0);
      }
      if (l === 2) {
        num18 = ((num18 - 2) | 0);
      }
      if (l === 3) {
        num18 = ((num18 + 2) | 0);
      }
      if (l === 4) {
        color4 = color2.MemberwiseClone();
      }
      var vector = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).MemberwiseClone();
      vector = $S0A().CallStatic($T25(), "op_Multiply", null, vector.MemberwiseClone(), 0.5).MemberwiseClone();
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        text, 
        $S04().Construct((+num17 + +vector.X), (+num18 + +vector.Y)), 
        color4.MemberwiseClone(), 
        0, 
        vector.MemberwiseClone(), 
        scale, 
        $T2A().None, 
        0
      );
    }
    (color2 = color2.MemberwiseClone(), 
      $S07().Call($T04().prototype, "_ctor", null, color2, num, ((+(+num / 1.1)) | 0), ((num / 2) | 0), num));
    num15 = ((((num15 + (($S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).X) | 0)) | 0) + 20) | 0);
    num16 = ((130 + Math.imul(num3, 30)) | 0);
    scale = 0.9;
    if (!((($thisType.mouseState.get_X() | 0) <= num15) || 
        (+($thisType.mouseState.get_X()) >= (+num15 + +$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Close").X)) || 
        (($thisType.mouseState.get_Y() | 0) <= num16) || (+($thisType.mouseState.get_Y()) >= (+num16 + +$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Close").Y)))) {
      scale = 1.1;
      if (!$thisType.npcChatFocus1) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      $thisType.npcChatFocus1 = true;
      $thisType.player[$thisType.myPlayer].releaseUseItem = false;
    } else {
      if ($thisType.npcChatFocus1) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      $thisType.npcChatFocus1 = false;
    }

    for (var m = 0; m < 5; m = ((m + 1) | 0)) {
      var num19 = num15;
      var num20 = num16;
      var color5 = $T04().get_Black().MemberwiseClone();
      if (m === 0) {
        num19 = ((num19 - 2) | 0);
      }
      if (m === 1) {
        num19 = ((num19 + 2) | 0);
      }
      if (m === 2) {
        num20 = ((num20 - 2) | 0);
      }
      if (m === 3) {
        num20 = ((num20 + 2) | 0);
      }
      if (m === 4) {
        color5 = color2;
      }
      var vector2 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Close").MemberwiseClone();
      vector2 = $S0A().CallStatic($T25(), "op_Multiply", null, vector2.MemberwiseClone(), 0.5).MemberwiseClone();
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Close", 
        $S04().Construct((+num19 + +vector2.X), (+num20 + +vector2.Y)), 
        color5.MemberwiseClone(), 
        0, 
        vector2.MemberwiseClone(), 
        scale, 
        $T2A().None, 
        0
      );
    }
    if (!(($thisType.mouseState.get_LeftButton() !== $T2B().Pressed) || !$thisType.mouseLeftRelease)) {
      $thisType.mouseLeftRelease = false;
      $thisType.player[$thisType.myPlayer].releaseUseItem = false;
      $thisType.player[$thisType.myPlayer].mouseInterface = true;
      if ($thisType.npcChatFocus1) {
        $thisType.player[$thisType.myPlayer].talkNPC = -1;
        $thisType.player[$thisType.myPlayer].sign = -1;
        $thisType.editSign = false;
        $thisType.npcChatText = "";
        $thisType.PlaySound(11, -1, -1, 1);
        return;
      }
      if ($thisType.npcChatFocus2) {
        if (($thisType.player[$thisType.myPlayer].sign | 0) !== -1) {
          if (!$thisType.editSign) {
            $thisType.PlaySound(12, -1, -1, 1);
            $thisType.editSign = true;
            return;
          }
          $thisType.PlaySound(12, -1, -1, 1);
          var num21 = ($thisType.player[$thisType.myPlayer].sign | 0);
          $T16().TextSign(num21, $thisType.npcChatText);
          $thisType.editSign = false;
          if (($thisType.netMode | 0) === 1) {
            $T2D().SendData(
              47, 
              -1, 
              -1, 
              "", 
              num21, 
              0, 
              0, 
              0
            );
            return;
          }
        } else {
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 17) {
            $thisType.playerInventory = true;
            $thisType.npcChatText = "";
            $thisType.npcShop = 1;
            $thisType.PlaySound(12, -1, -1, 1);
            return;
          }
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 19) {
            $thisType.playerInventory = true;
            $thisType.npcChatText = "";
            $thisType.npcShop = 2;
            $thisType.PlaySound(12, -1, -1, 1);
            return;
          }
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 20) {
            $thisType.playerInventory = true;
            $thisType.npcChatText = "";
            $thisType.npcShop = 3;
            $thisType.PlaySound(12, -1, -1, 1);
            return;
          }
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 38) {
            $thisType.playerInventory = true;
            $thisType.npcChatText = "";
            $thisType.npcShop = 4;
            $thisType.PlaySound(12, -1, -1, 1);
            return;
          }
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 22) {
            $thisType.PlaySound(12, -1, -1, 1);
            $thisType.HelpText();
            return;
          }
          if (($thisType.npc[$thisType.player[$thisType.myPlayer].talkNPC].type | 0) === 18) {
            $thisType.PlaySound(12, -1, -1, 1);
            if (num8 > 0) {
              if ($thisType.player[$thisType.myPlayer].BuyItem(num8)) {
                $thisType.PlaySound(2, -1, -1, 4);
                $thisType.player[$thisType.myPlayer].HealEffect(((($thisType.player[$thisType.myPlayer].statLifeMax | 0) - ($thisType.player[$thisType.myPlayer].statLife | 0)) | 0));
                if (+($thisType.player[$thisType.myPlayer].statLife) < (+($thisType.player[$thisType.myPlayer].statLifeMax) * 0.25)) {
                  $thisType.npcChatText = "I managed to sew your face back on. Be more careful next time.";
                } else if (+($thisType.player[$thisType.myPlayer].statLife) < (+($thisType.player[$thisType.myPlayer].statLifeMax) * 0.5)) {
                  $thisType.npcChatText = "That's probably going to leave a scar.";
                } else if (+($thisType.player[$thisType.myPlayer].statLife) < (+($thisType.player[$thisType.myPlayer].statLifeMax) * 0.75)) {
                  $thisType.npcChatText = "All better. I don't want to see you jumping off anymore cliffs.";
                } else {
                  $thisType.npcChatText = "That didn't hurt too bad, now did it?";
                }
                $thisType.player[$thisType.myPlayer].statLife = ($thisType.player[$thisType.myPlayer].statLifeMax | 0);
                return;
              }
              var num22 = ($thisType.rand.Next(3) | 0);
              if (num22 === 0) {
                $thisType.npcChatText = "I'm sorry, but you can't afford me.";
              }
              if (num22 === 1) {
                $thisType.npcChatText = "I'm gonna need more gold then that.";
              }
              if (num22 === 2) {
                $thisType.npcChatText = "I don't work for free you know.";
                return;
              }
            } else {
              var num23 = ($thisType.rand.Next(3) | 0);
              if (num23 === 0) {
                $thisType.npcChatText = "I don't give happy endings.";
              }
              if (num23 === 1) {
                $thisType.npcChatText = "I can't do anymore for you without plastic surgery.";
              }
              if (num23 === 2) {
                $thisType.npcChatText = "Quit wasting my time.";
              }
            }
          }
        }
      }
    }
  }; 

  function Main_DrawFPS () {
    if ($thisType.showFrameRate) {
      var text = (String($T0C().$Box($thisType.frameRate)));
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        text, 
        $S04().Construct(4, +(($thisType.screenHeight | 0) - 24)), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
    }
  }; 

  function Main_DrawGore () {

    for (var i = 0; i < 200; i = ((i + 1) | 0)) {
      if (!(!$thisType.gore[i].active || (($thisType.gore[i].type | 0) <= 0))) {
        var alpha = ($thisType.gore[i]).GetAlpha($T2F().GetColor(
            (((($thisType.gore[i].position.X + (+(($thisType.goreTexture[$thisType.gore[i].type]).get_Width()) * 0.5)) | 0) / 16) | 0), 
            ((+(($thisType.gore[i].position.Y + (+(($thisType.goreTexture[$thisType.gore[i].type]).get_Height()) * 0.5)) / 16)) | 0)
          ));
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.goreTexture[$thisType.gore[i].type], 
          $S04().Construct(((+$thisType.gore[i].position.X - +$thisType.screenPosition.X) + +(((($thisType.goreTexture[$thisType.gore[i].type]).get_Width() | 0) / 2 | 0))), ((+$thisType.gore[i].position.Y - +$thisType.screenPosition.Y) + +(((($thisType.goreTexture[$thisType.gore[i].type]).get_Height() | 0) / 2 | 0)))), 
          new ($T24())(0, 0, ($thisType.goreTexture[$thisType.gore[i].type]).get_Width(), ($thisType.goreTexture[$thisType.gore[i].type]).get_Height()), 
          alpha.MemberwiseClone(), 
          $thisType.gore[i].rotation, 
          $S04().Construct(+(((($thisType.goreTexture[$thisType.gore[i].type]).get_Width() | 0) / 2 | 0)), +(((($thisType.goreTexture[$thisType.gore[i].type]).get_Height() | 0) / 2 | 0))), 
          $thisType.gore[i].scale, 
          $T2A().None, 
          0
        );
      }
    }
  }; 

  function Main_DrawInterface () {
    var color = new ($T04())(), vector = new ($T25())(), value = new ($T24())(), white = new ($T04())(), white2 = new ($T04())(), color4 = new ($T04())(), newColor = new ($T04())(), white5 = new ($T04())(), white6 = new ($T04())(), white7 = new ($T04())(), white8 = new ($T04())(), color5 = new ($T04())(), value2 = new ($T24())(), value3 = new ($T24())(), value4 = new ($T24())(), rectangle3 = new ($T24())(), value5 = new ($T24())();
    if ($thisType.hideUI) {
      return;
    }
    if ($thisType.signBubble) {
      var num = ((+($thisType.signX) - +$thisType.screenPosition.X) | 0);
      var num2 = ((+($thisType.signY) - +$thisType.screenPosition.Y) | 0);
      var effects = $T2A().None;
      if (+($thisType.signX) > (+$thisType.player[$thisType.myPlayer].position.X + +($thisType.player[$thisType.myPlayer].width))) {
        effects = $T2A().FlipHorizontally;
        num = ((num + ((-8 - ($thisType.chat2Texture.get_Width() | 0)) | 0)) | 0);
      } else {
        num = ((num + 8) | 0);
      }
      num2 = ((num2 - 22) | 0);
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.chat2Texture, 
        $S04().Construct(+num, +num2), 
        new ($T24())(0, 0, $thisType.chat2Texture.get_Width(), $thisType.chat2Texture.get_Height()), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        effects, 
        0
      );
      $thisType.signBubble = false;
    }

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if (!(!$thisType.player[i].active || 
          (($thisType.myPlayer | 0) === i) || $thisType.player[i].dead)) {
        new ($T24())(((($thisType.player[i].position.X + (+($thisType.player[i].width) * 0.5)) - 16) | 0), (((+$thisType.player[i].position.Y + +($thisType.player[i].height)) - 48) | 0), 32, 48);
        if (!((($thisType.player[$thisType.myPlayer].team | 0) <= 0) || (($thisType.player[$thisType.myPlayer].team | 0) !== ($thisType.player[i].team | 0)))) {
          new ($T24())((($thisType.screenPosition.X) | 0), (($thisType.screenPosition.Y) | 0), $thisType.screenWidth, $thisType.screenHeight);
          var text = $thisType.player[i].$name;
          if (($thisType.player[i].statLife | 0) < ($thisType.player[i].statLifeMax | 0)) {
            var obj = text;
            text = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, ": ", $T0C().$Box($thisType.player[i].statLife), "/", $T0C().$Box($thisType.player[i].statLifeMax)])));
          }
          var position = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).MemberwiseClone();
          var num3 = 0;
          if (($thisType.player[i].chatShowTime | 0) > 0) {
            num3 = -position.Y;
          }
          var num4 = 0;
          var num5 = +((+($thisType.mouseTextColor) / 255));
          (color = color.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, color, 
              ((+(($thisType.teamColor[$thisType.player[i].team]).get_R()) * num5) | 0), 
              ((+(($thisType.teamColor[$thisType.player[i].team]).get_G()) * num5) | 0), 
              ((+(($thisType.teamColor[$thisType.player[i].team]).get_B()) * num5) | 0), 
              $thisType.mouseTextColor
            ));
          (vector = vector.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector, +((($thisType.screenWidth | 0) / 2 | 0)) + +$thisType.screenPosition.X, +((($thisType.screenHeight | 0) / 2 | 0)) + +$thisType.screenPosition.Y));
          var num6 = (+$thisType.player[i].position.X + +((($thisType.player[i].width | 0) / 2 | 0))) - +vector.X;
          var num7 = (((+$thisType.player[i].position.Y - +position.Y) - 2) + num3) - +vector.Y;
          var num8 = Math.fround(Math.sqrt((num6 * num6) + (num7 * num7)));
          if (num8 < 270) {
            position.X = ((+$thisType.player[i].position.X + +((($thisType.player[i].width | 0) / 2 | 0))) - +((+position.X / 2))) - +$thisType.screenPosition.X;
            position.Y = (((+$thisType.player[i].position.Y - +position.Y) - 2) + num3) - +$thisType.screenPosition.Y;
          } else {
            num4 = num8;
            num8 = +((270 / num8));
            position.X = (+((($thisType.screenWidth | 0) / 2 | 0)) + (num6 * num8)) - +((+position.X / 2));
            position.Y = +((($thisType.screenHeight | 0) / 2 | 0)) + (num7 * num8);
          }
          if (num4 > 0) {
            var text2 = (JSIL.ConcatString("(", $T0C().$Box(((+((num4 / 16)) * 2) | 0)), " ft)"));
            var position2 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text2).MemberwiseClone();
            position2.X = (+position.X + +((+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).X / 2))) - +((+position2.X / 2));
            position2.Y = ((+position.Y + +((+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text).Y / 2))) - +((+position2.Y / 2))) - 20;
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text2, 
              $S04().Construct((+position2.X - 2), position2.Y), 
              $T04().get_Black().MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text2, 
              $S04().Construct((+position2.X + 2), position2.Y), 
              $T04().get_Black().MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text2, 
              $S04().Construct(position2.X, (+position2.Y - 2)), 
              $T04().get_Black().MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text2, 
              $S04().Construct(position2.X, (+position2.Y + 2)), 
              $T04().get_Black().MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text2, 
              position2.MemberwiseClone(), 
              color.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            text, 
            $S04().Construct((+position.X - 2), position.Y), 
            $T04().get_Black().MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            text, 
            $S04().Construct((+position.X + 2), position.Y), 
            $T04().get_Black().MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            text, 
            $S04().Construct(position.X, (+position.Y - 2)), 
            $T04().get_Black().MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            text, 
            $S04().Construct(position.X, (+position.Y + 2)), 
            $T04().get_Black().MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            text, 
            position.MemberwiseClone(), 
            color.MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
      }
    }
    if (!(!($thisType.npcChatText != "") && (($thisType.player[$thisType.myPlayer].sign | 0) === -1))) {
      this.DrawChat();
    }
    var color2 = $S01().Construct(200, 200, 200, 200);
    var flag = false;
    var rare = 0;
    var num9 = ((($thisType.player[$thisType.myPlayer].statLifeMax | 0) / 20) | 0);
    if (num9 >= 10) {
      num9 = 10;
    }
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      "Life", 
      $S04().Construct((+(500 + Math.imul(13, num9)) - (+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Life").X * 0.5)), 6), 
      $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    var num10 = 20;

    for (var j = 1; j < ((((($thisType.player[$thisType.myPlayer].statLifeMax | 0) / num10) | 0) + 1) | 0); j = ((j + 1) | 0)) {
      var num11 = 1;
      if (($thisType.player[$thisType.myPlayer].statLife | 0) >= Math.imul(j, num10)) {
        var num12 = 255;
      } else {
        var num13 = +((+(($thisType.player[$thisType.myPlayer].statLife | 0) - Math.imul(((j - 1) | 0), num10)) / +num10));
        num12 = ((30 + (225 * num13)) | 0);
        if (num12 < 30) {
          num12 = 30;
        }
        num11 = +((num13 / 4)) + 0.75;
        if (num11 < 0.75) {
          num11 = 0.75;
        }
      }
      var num14 = 0;
      var num15 = 0;
      if (j > 10) {
        num14 = ((num14 - 260) | 0);
        num15 = ((num15 + 26) | 0);
      }
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.heartTexture, 
        $S04().Construct(+(((500 + Math.imul(26, ((j - 1) | 0))) | 0) + num14), ((32 + +(((+($thisType.heartTexture.get_Height()) - (+($thisType.heartTexture.get_Height()) * num11)) / 2))) + +num15)), 
        new ($T24())(0, 0, $thisType.heartTexture.get_Width(), $thisType.heartTexture.get_Height()), 
        $S01().Construct(num12, num12, num12, num12), 
        0, 
        new ($T25())(), 
        num11, 
        $T2A().None, 
        0
      );
    }
    var num16 = 20;
    if (($thisType.player[$thisType.myPlayer].statManaMax | 0) > 0) {
      var arg_A5E_0 = ((($thisType.player[$thisType.myPlayer].statManaMax | 0) / 20) | 0);
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Mana", 
        $S04().Construct(750, 6), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );

      for (var k = 1; k < ((((($thisType.player[$thisType.myPlayer].statManaMax | 0) / num16) | 0) + 1) | 0); k = ((k + 1) | 0)) {
        var num17 = 1;
        if (($thisType.player[$thisType.myPlayer].statMana | 0) >= Math.imul(k, num16)) {
          var num18 = 255;
        } else {
          var num19 = +((+(($thisType.player[$thisType.myPlayer].statMana | 0) - Math.imul(((k - 1) | 0), num16)) / +num16));
          num18 = ((30 + (225 * num19)) | 0);
          if (num18 < 30) {
            num18 = 30;
          }
          num17 = +((num19 / 4)) + 0.75;
          if (num17 < 0.75) {
            num17 = 0.75;
          }
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.manaTexture, 
          $S04().Construct(775, ((+(30 + ((($thisType.manaTexture.get_Height() | 0) / 2) | 0)) + +(((+($thisType.manaTexture.get_Height()) - (+($thisType.manaTexture.get_Height()) * num17)) / 2))) + +(28 * ((k - 1) | 0)))), 
          new ($T24())(0, 0, $thisType.manaTexture.get_Width(), $thisType.manaTexture.get_Height()), 
          $S01().Construct(num18, num18, num18, num18), 
          0, 
          $S04().Construct(+((($thisType.manaTexture.get_Width() | 0) / 2 | 0)), +((($thisType.manaTexture.get_Height() | 0) / 2 | 0))), 
          num17, 
          $T2A().None, 
          0
        );
      }
    }
    if (($thisType.player[$thisType.myPlayer].breath | 0) < ($thisType.player[$thisType.myPlayer].breathMax | 0)) {
      var arg_C56_0 = ((($thisType.player[$thisType.myPlayer].breathMax | 0) / 20) | 0);
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Breath", 
        $S04().Construct((+(500 + Math.imul(13, num9)) - (+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Breath").X * 0.5)), +(6 + 76)), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
      var num21 = 20;

      for (var l = 1; l < ((((($thisType.player[$thisType.myPlayer].breathMax | 0) / num21) | 0) + 1) | 0); l = ((l + 1) | 0)) {
        var num22 = 1;
        if (($thisType.player[$thisType.myPlayer].breath | 0) >= Math.imul(l, num21)) {
          var num23 = 255;
        } else {
          var num24 = +((+(($thisType.player[$thisType.myPlayer].breath | 0) - Math.imul(((l - 1) | 0), num21)) / +num21));
          num23 = ((30 + (225 * num24)) | 0);
          if (num23 < 30) {
            num23 = 30;
          }
          num22 = +((num24 / 4)) + 0.75;
          if (num22 < 0.75) {
            num22 = 0.75;
          }
        }
        var num25 = 0;
        var num26 = 0;
        if (l > 10) {
          num25 = ((num25 - 260) | 0);
          num26 = ((num26 + 26) | 0);
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.bubbleTexture, 
          $S04().Construct(+(((500 + Math.imul(26, ((l - 1) | 0))) | 0) + num25), (((32 + +(((+($thisType.bubbleTexture.get_Height()) - (+($thisType.bubbleTexture.get_Height()) * num22)) / 2))) + +num26) + +76)), 
          new ($T24())(0, 0, $thisType.bubbleTexture.get_Width(), $thisType.bubbleTexture.get_Height()), 
          $S01().Construct(num23, num23, num23, num23), 
          0, 
          new ($T25())(), 
          num22, 
          $T2A().None, 
          0
        );
      }
    }
    if ($thisType.player[$thisType.myPlayer].dead) {
      $thisType.playerInventory = false;
    }
    if (!$thisType.playerInventory) {
      $thisType.player[$thisType.myPlayer].chest = -1;
    }
    var text3 = "";
    if ($thisType.playerInventory) {
      if (($thisType.netMode | 0) === 1) {
        var num27 = 675;
        if ($thisType.player[$thisType.myPlayer].hostile) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[4], 
            $S04().Construct(+(num27 - 2), +134), 
            new ($T24())(0, 0, ($thisType.itemTexture[4]).get_Width(), ($thisType.itemTexture[4]).get_Height()), 
            $thisType.teamColor[$thisType.player[$thisType.myPlayer].team].MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[4], 
            $S04().Construct(+(num27 + 2), +134), 
            new ($T24())(0, 0, ($thisType.itemTexture[4]).get_Width(), ($thisType.itemTexture[4]).get_Height()), 
            $thisType.teamColor[$thisType.player[$thisType.myPlayer].team].MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().FlipHorizontally, 
            0
          );
        } else {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[4], 
            $S04().Construct(+(num27 - 16), +(134 + 14)), 
            new ($T24())(0, 0, ($thisType.itemTexture[4]).get_Width(), ($thisType.itemTexture[4]).get_Height()), 
            $thisType.teamColor[$thisType.player[$thisType.myPlayer].team].MemberwiseClone(), 
            -0.785, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[4], 
            $S04().Construct(+(num27 + 2), +(134 + 14)), 
            new ($T24())(0, 0, ($thisType.itemTexture[4]).get_Width(), ($thisType.itemTexture[4]).get_Height()), 
            $thisType.teamColor[$thisType.player[$thisType.myPlayer].team].MemberwiseClone(), 
            -0.785, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
        if (!((($thisType.mouseState.get_X() | 0) <= num27) || 
            (($thisType.mouseState.get_X() | 0) >= ((num27 + 34) | 0)) || 
            (($thisType.mouseState.get_Y() | 0) <= ((134 - 2) | 0)) || (($thisType.mouseState.get_Y() | 0) >= ((134 + 34) | 0)))) {
          $thisType.player[$thisType.myPlayer].mouseInterface = true;
          if (!(($thisType.mouseState.get_LeftButton() !== $T2B().Pressed) || !$thisType.mouseLeftRelease)) {
            $thisType.PlaySound(12, -1, -1, 1);
            if ($thisType.player[$thisType.myPlayer].hostile) {
              $thisType.player[$thisType.myPlayer].hostile = false;
            } else {
              $thisType.player[$thisType.myPlayer].hostile = true;
            }
            $T2D().SendData(
              30, 
              -1, 
              -1, 
              "", 
              $thisType.myPlayer, 
              0, 
              0, 
              0
            );
          }
        }
        num27 = ((num27 - 3) | 0);
        (value = value.MemberwiseClone(), 
          $T24().prototype._ctor.call(value, 
            $thisType.mouseState.get_X(), 
            $thisType.mouseState.get_Y(), 
            1, 
            1
          ));
        var width = ($thisType.teamTexture.get_Width() | 0);
        var height = ($thisType.teamTexture.get_Height() | 0);

        for (var m = 0; m < 5; m = ((m + 1) | 0)) {
          var rectangle = new ($T24())();
          if (m === 0) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T24().prototype._ctor.call(rectangle, ((num27 + 50) | 0), ((134 - 20) | 0), width, height));
          }
          if (m === 1) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T24().prototype._ctor.call(rectangle, ((num27 + 40) | 0), 134, width, height));
          }
          if (m === 2) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T24().prototype._ctor.call(rectangle, ((num27 + 60) | 0), 134, width, height));
          }
          if (m === 3) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T24().prototype._ctor.call(rectangle, ((num27 + 40) | 0), ((134 + 20) | 0), width, height));
          }
          if (m === 4) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T24().prototype._ctor.call(rectangle, ((num27 + 60) | 0), ((134 + 20) | 0), width, height));
          }
          if (rectangle.Intersects(value.MemberwiseClone())) {
            $thisType.player[$thisType.myPlayer].mouseInterface = true;
            if (!(($thisType.mouseState.get_LeftButton() !== $T2B().Pressed) || 
                !$thisType.mouseLeftRelease || (($thisType.player[$thisType.myPlayer].team | 0) === m))) {
              $thisType.PlaySound(12, -1, -1, 1);
              $thisType.player[$thisType.myPlayer].team = m;
              $T2D().SendData(
                45, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
          }
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.teamTexture, 
          $S04().Construct(+(num27 + 50), +(134 - 20)), 
          new ($T24())(0, 0, $thisType.teamTexture.get_Width(), $thisType.teamTexture.get_Height()), 
          $thisType.teamColor[0].MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.teamTexture, 
          $S04().Construct(+(num27 + 40), +134), 
          new ($T24())(0, 0, $thisType.teamTexture.get_Width(), $thisType.teamTexture.get_Height()), 
          $thisType.teamColor[1].MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.teamTexture, 
          $S04().Construct(+(num27 + 60), +134), 
          new ($T24())(0, 0, $thisType.teamTexture.get_Width(), $thisType.teamTexture.get_Height()), 
          $thisType.teamColor[2].MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.teamTexture, 
          $S04().Construct(+(num27 + 40), +(134 + 20)), 
          new ($T24())(0, 0, $thisType.teamTexture.get_Width(), $thisType.teamTexture.get_Height()), 
          $thisType.teamColor[3].MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.teamTexture, 
          $S04().Construct(+(num27 + 60), +(134 + 20)), 
          new ($T24())(0, 0, $thisType.teamTexture.get_Width(), $thisType.teamTexture.get_Height()), 
          $thisType.teamColor[4].MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
      }
      var text4 = "Save & Exit";
      if (($thisType.netMode | 0) !== 0) {
        text4 = "Disconnect";
      }
      var vector2 = $S06().CallVirtual("MeasureString", null, $thisType.fontDeathText, text4).MemberwiseClone();
      var num29 = ((($thisType.screenWidth | 0) - 110) | 0);
      var num30 = ((($thisType.screenHeight | 0) - 20) | 0);
      if ($thisType.mouseExit) {
        if (+$thisType.exitScale < 1) {
          $thisType.exitScale = +$thisType.exitScale + 0.02;
        }
      } else if ($thisType.exitScale > 0.8) {
        $thisType.exitScale = +$thisType.exitScale - 0.02;
      }

      for (var n = 0; n < 5; n = ((n + 1) | 0)) {
        var num31 = 0;
        var num32 = 0;
        var color3 = $T04().get_Black().MemberwiseClone();
        if (n === 0) {
          num31 = -2;
        }
        if (n === 1) {
          num31 = 2;
        }
        if (n === 2) {
          num32 = -2;
        }
        if (n === 3) {
          num32 = 2;
        }
        if (n === 4) {
          color3 = $T04().get_White().MemberwiseClone();
        }
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontDeathText, 
          text4, 
          $S04().Construct(+(num29 + num31), +(num30 + num32)), 
          color3.MemberwiseClone(), 
          0, 
          $S04().Construct(+((+vector2.X / 2)), +((+vector2.Y / 2))), 
          +$thisType.exitScale - 0.2, 
          $T2A().None, 
          0
        );
      }
      if (!((+($thisType.mouseState.get_X()) <= (+num29 - +((+vector2.X / 2)))) || 
          (+($thisType.mouseState.get_X()) >= (+num29 + +((+vector2.X / 2)))) || 
          (+($thisType.mouseState.get_Y()) <= (+num30 - +((+vector2.Y / 2)))) || (+($thisType.mouseState.get_Y()) >= ((+num30 + +((+vector2.Y / 2))) - 10)))) {
        if (!$thisType.mouseExit) {
          $thisType.PlaySound(12, -1, -1, 1);
        }
        $thisType.mouseExit = true;
        $thisType.player[$thisType.myPlayer].mouseInterface = true;
        if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
          $thisType.menuMode = 10;
          $T39().SaveAndQuit();
        }
      } else {
        $thisType.mouseExit = false;
      }
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Inventory", 
        $S04().Construct(40, 0), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
      $thisType.inventoryScale = 0.85;

      for (var num33 = 0; num33 < 10; num33 = ((num33 + 1) | 0)) {

        for (var num34 = 0; num34 < 4; num34 = ((num34 + 1) | 0)) {
          var num35 = ((20 + (+(num33 * 56) * +$thisType.inventoryScale)) | 0);
          var num36 = ((20 + (+(num34 * 56) * +$thisType.inventoryScale)) | 0);
          var num37 = ((num33 + Math.imul(num34, 10)) | 0);
          (white = white.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, white, 100, 100, 100, 100));
          if (!((($thisType.mouseState.get_X() | 0) < num35) || 
              (+($thisType.mouseState.get_X()) > (+num35 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
              (($thisType.mouseState.get_Y() | 0) < num36) || (+($thisType.mouseState.get_Y()) > (+num36 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
            $thisType.player[$thisType.myPlayer].mouseInterface = true;
            if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
              if (!((($thisType.player[$thisType.myPlayer].selectedItem | 0) === num37) && (($thisType.player[$thisType.myPlayer].itemAnimation | 0) > 0))) {
                var item = $thisType.mouseItem;
                $thisType.mouseItem = $thisType.player[$thisType.myPlayer].inventory[num37];
                $thisType.player[$thisType.myPlayer].inventory[num37] = item;
                if (!((($thisType.player[$thisType.myPlayer].inventory[num37].type | 0) !== 0) && (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) >= 1))) {
                  $thisType.player[$thisType.myPlayer].inventory[num37] = new ($T10())();
                }
                if (!(!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].inventory[num37]) || 
                    (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) === ($thisType.player[$thisType.myPlayer].inventory[num37].maxStack | 0)) || (($thisType.mouseItem.stack | 0) === ($thisType.mouseItem.maxStack | 0)))) {
                  if (((($thisType.mouseItem.stack | 0) + ($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0)) | 0) <= ($thisType.mouseItem.maxStack | 0)) {
                    $thisType.player[$thisType.myPlayer].inventory[num37].stack = ((($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) + ($thisType.mouseItem.stack | 0)) | 0);
                    $thisType.mouseItem.stack = 0;
                  } else {
                    var num38 = ((($thisType.mouseItem.maxStack | 0) - ($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0)) | 0);
                    $thisType.player[$thisType.myPlayer].inventory[num37].stack = ((($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) + num38) | 0);
                    $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) - num38) | 0);
                  }
                }
                if (!((($thisType.mouseItem.type | 0) !== 0) && (($thisType.mouseItem.stack | 0) >= 1))) {
                  $thisType.mouseItem = new ($T10())();
                }
                if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.player[$thisType.myPlayer].inventory[num37].type | 0) <= 0))) {
                  $T18().FindRecipes();
                  $thisType.PlaySound(7, -1, -1, 1);
                }
              }
            } else if (!((($thisType.stackSplit | 0) > 1) || 
                ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || 
                (!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].inventory[num37]) && 
                  (($thisType.mouseItem.type | 0) !== 0)) || ((($thisType.mouseItem.stack | 0) >= ($thisType.mouseItem.maxStack | 0)) && 
                  (($thisType.mouseItem.type | 0) !== 0)))) {
              if (($thisType.mouseItem.type | 0) === 0) {
                $thisType.mouseItem = $T10().$Cast(($thisType.player[$thisType.myPlayer].inventory[num37]).Clone());
                $thisType.mouseItem.stack = 0;
              }
              $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + 1) | 0);
              $thisType.player[$thisType.myPlayer].inventory[num37].stack = ((($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) - 1) | 0);
              if (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) <= 0) {
                $thisType.player[$thisType.myPlayer].inventory[num37] = new ($T10())();
              }
              $T18().FindRecipes();
              $thisType.soundInstanceMenuTick.Stop();
              $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
              $thisType.PlaySound(12, -1, -1, 1);
              if (($thisType.stackSplit | 0) === 0) {
                $thisType.stackSplit = 15;
              } else {
                $thisType.stackSplit = ($thisType.stackDelay | 0);
              }
            }
            text3 = $thisType.player[$thisType.myPlayer].inventory[num37].$name;
            $thisType.toolTip = $T10().$Cast(($thisType.player[$thisType.myPlayer].inventory[num37]).Clone());
            if (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) > 1) {
              obj = text3;
              text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num37].stack), ")"])));
            }
          }
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.inventoryBackTexture, 
            $S04().Construct(+num35, +num36), 
            new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
            color2.MemberwiseClone(), 
            0, 
            new ($T25())(), 
            $thisType.inventoryScale, 
            $T2A().None, 
            0
          );
          white = $T04().get_White().MemberwiseClone();
          if (!((($thisType.player[$thisType.myPlayer].inventory[num37].type | 0) <= 0) || (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) <= 0))) {
            var num39 = 1;
            if (!(((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height() | 0) <= 32))) {
              if ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height() | 0)) {
                num39 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width())));
              } else {
                num39 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height())));
              }
            }
            num39 *= +$thisType.inventoryScale;
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type], 
              $S04().Construct(((+num35 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width()) * 0.5) * num39)), ((+num36 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height()) * 0.5) * num39))), 
              new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height()), 
              ($thisType.player[$thisType.myPlayer].inventory[num37]).GetAlpha(white).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num39, 
              $T2A().None, 
              0
            );
            if ($T04().op_Inequality($thisType.player[$thisType.myPlayer].inventory[num37].color.MemberwiseClone(), new ($T04())())) {
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type], 
                $S04().Construct(((+num35 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width()) * 0.5) * num39)), ((+num36 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height()) * 0.5) * num39))), 
                new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num37].type]).get_Height()), 
                ($thisType.player[$thisType.myPlayer].inventory[num37]).GetColor(white).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num39, 
                $T2A().None, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].inventory[num37].stack | 0) > 1) {
              $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                $thisType.fontItemStack, 
                String($T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num37].stack)), 
                $S04().Construct((+num35 + (10 * +$thisType.inventoryScale)), (+num36 + (26 * +$thisType.inventoryScale))), 
                white.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num39, 
                $T2A().None, 
                0
              );
            }
          }
        }
      }

      for (var num40 = 0; num40 < 8; num40 = ((num40 + 1) | 0)) {
        var num41 = ((((($thisType.screenWidth | 0) - 64) | 0) - 28) | 0);
        var num42 = ((174 + (+(num40 * 56) * +$thisType.inventoryScale)) | 0);
        (white2 = white2.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, white2, 100, 100, 100, 100));
        var text5 = "";
        if (num40 === 0) {
          text5 = "Helmet";
        } else if (num40 === 1) {
          text5 = "Shirt";
        } else if (num40 === 2) {
          text5 = "Pants";
        } else if (num40 === 3) {
          text5 = "Accessories";
        }
        var vector3 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, text5);
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          text5, 
          $S04().Construct(((+num41 - +vector3.X) - 10), ((+num42 + (+($thisType.inventoryBackTexture.get_Height()) * 0.5)) - (+vector3.Y * 0.5))), 
          $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        if (!((($thisType.mouseState.get_X() | 0) < num41) || 
            (+($thisType.mouseState.get_X()) > (+num41 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
            (($thisType.mouseState.get_Y() | 0) < num42) || (+($thisType.mouseState.get_Y()) > (+num42 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
          $thisType.player[$thisType.myPlayer].mouseInterface = true;
          if (!(!$thisType.mouseLeftRelease || 
              ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed) || (!((($thisType.mouseItem.type | 0) === 0) || 
                  ((($thisType.mouseItem.headSlot | 0) > -1) && 
                    (num40 === 0))) && 
                !((($thisType.mouseItem.bodySlot | 0) > -1) && 
                  (num40 === 1)) && 
                !((($thisType.mouseItem.legSlot | 0) > -1) && 
                  (num40 === 2)) && 
                (!$thisType.mouseItem.accessory || 
                  (num40 <= 2))))) {
            var item2 = $thisType.mouseItem;
            $thisType.mouseItem = $thisType.player[$thisType.myPlayer].armor[num40];
            $thisType.player[$thisType.myPlayer].armor[num40] = item2;
            if (!((($thisType.player[$thisType.myPlayer].armor[num40].type | 0) !== 0) && (($thisType.player[$thisType.myPlayer].armor[num40].stack | 0) >= 1))) {
              $thisType.player[$thisType.myPlayer].armor[num40] = new ($T10())();
            }
            if (!((($thisType.mouseItem.type | 0) !== 0) && (($thisType.mouseItem.stack | 0) >= 1))) {
              $thisType.mouseItem = new ($T10())();
            }
            if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.player[$thisType.myPlayer].armor[num40].type | 0) <= 0))) {
              $T18().FindRecipes();
              $thisType.PlaySound(7, -1, -1, 1);
            }
          }
          text3 = $thisType.player[$thisType.myPlayer].armor[num40].$name;
          $thisType.toolTip = $T10().$Cast(($thisType.player[$thisType.myPlayer].armor[num40]).Clone());
          if (num40 <= 2) {
            $thisType.toolTip.wornArmor = true;
          }
          if (($thisType.player[$thisType.myPlayer].armor[num40].stack | 0) > 1) {
            obj = text3;
            text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.player[$thisType.myPlayer].armor[num40].stack), ")"])));
          }
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.inventoryBackTexture, 
          $S04().Construct(+num41, +num42), 
          new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
          color2.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          $thisType.inventoryScale, 
          $T2A().None, 
          0
        );
        white2 = $T04().get_White().MemberwiseClone();
        if (!((($thisType.player[$thisType.myPlayer].armor[num40].type | 0) <= 0) || (($thisType.player[$thisType.myPlayer].armor[num40].stack | 0) <= 0))) {
          var num43 = 1;
          if (!(((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height() | 0) <= 32))) {
            if ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height() | 0)) {
              num43 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width())));
            } else {
              num43 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height())));
            }
          }
          num43 *= +$thisType.inventoryScale;
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type], 
            $S04().Construct(((+num41 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width()) * 0.5) * num43)), ((+num42 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height()) * 0.5) * num43))), 
            new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height()), 
            ($thisType.player[$thisType.myPlayer].armor[num40]).GetAlpha(white2).MemberwiseClone(), 
            0, 
            new ($T25())(), 
            num43, 
            $T2A().None, 
            0
          );
          if ($T04().op_Inequality($thisType.player[$thisType.myPlayer].armor[num40].color.MemberwiseClone(), new ($T04())())) {
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type], 
              $S04().Construct(((+num41 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width()) * 0.5) * num43)), ((+num42 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height()) * 0.5) * num43))), 
              new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].armor[num40].type]).get_Height()), 
              ($thisType.player[$thisType.myPlayer].armor[num40]).GetColor(white2).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num43, 
              $T2A().None, 
              0
            );
          }
          if (($thisType.player[$thisType.myPlayer].armor[num40].stack | 0) > 1) {
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontItemStack, 
              String($T0C().$Box($thisType.player[$thisType.myPlayer].armor[num40].stack)), 
              $S04().Construct((+num41 + (10 * +$thisType.inventoryScale)), (+num42 + (26 * +$thisType.inventoryScale))), 
              white2.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num43, 
              $T2A().None, 
              0
            );
          }
        }
      }
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Crafting", 
        $S04().Construct(76, 414), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );

      for (var num44 = 0; num44 < ($T18().maxRecipes | 0); num44 = ((num44 + 1) | 0)) {
        $thisType.inventoryScale = +((100 / ((Math.abs($thisType.availableRecipeY[num44])) + 100)));
        if ($thisType.inventoryScale < 0.75) {
          $thisType.inventoryScale = 0.75;
        }
        if (+$thisType.availableRecipeY[num44] < +(((num44 - ($thisType.focusRecipe | 0)) | 0) * 65)) {
          if (+$thisType.availableRecipeY[num44] === 0) {
            $thisType.PlaySound(12, -1, -1, 1);
          }
          $thisType.availableRecipeY[num44] += 6.5;
        } else if (+$thisType.availableRecipeY[num44] > +(((num44 - ($thisType.focusRecipe | 0)) | 0) * 65)) {
          if (+$thisType.availableRecipeY[num44] === 0) {
            $thisType.PlaySound(12, -1, -1, 1);
          }
          $thisType.availableRecipeY[num44] -= 6.5;
        }
        if (!((num44 >= ($thisType.numAvailableRecipes | 0)) || ((Math.abs($thisType.availableRecipeY[num44])) > 250))) {
          var num45 = ((46 - (26 * +$thisType.inventoryScale)) | 0);
          var num46 = (((410 + (+$thisType.availableRecipeY[num44] * +$thisType.inventoryScale)) - (30 * +$thisType.inventoryScale)) | 0);
          var num47 = +((color2.get_A() | 0) + 50);
          var num48 = 255;
          if ((Math.abs($thisType.availableRecipeY[num44])) > 150) {
            num47 = 150 * (100 - ((Math.abs($thisType.availableRecipeY[num44])) - 150)) * 0.01;
            num48 = 255 * (100 - ((Math.abs($thisType.availableRecipeY[num44])) - 150)) * 0.01;
          }
          (color4 = color4.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, color4, ((num47) | 0), ((num47) | 0), ((num47) | 0), ((num47) | 0)));
          (newColor = newColor.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, newColor, ((num48) | 0), ((num48) | 0), ((num48) | 0), ((num48) | 0)));
          if (!((($thisType.mouseState.get_X() | 0) < num45) || 
              (+($thisType.mouseState.get_X()) > (+num45 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
              (($thisType.mouseState.get_Y() | 0) < num46) || (+($thisType.mouseState.get_Y()) > (+num46 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
            $thisType.player[$thisType.myPlayer].mouseInterface = true;
            if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
              if (($thisType.focusRecipe | 0) === num44) {
                if (!((($thisType.mouseItem.type | 0) !== 0) && (!$thisType.mouseItem.IsTheSameAs($thisType.recipe[$thisType.availableRecipe[num44]].createItem) || 
                      (((($thisType.mouseItem.stack | 0) + ($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack | 0)) | 0) > ($thisType.mouseItem.maxStack | 0))))) {
                  var stack = ($thisType.mouseItem.stack | 0);
                  $thisType.mouseItem = $T10().$Cast(($thisType.recipe[$thisType.availableRecipe[num44]].createItem).Clone());
                  $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + stack) | 0);
                  ($thisType.recipe[$thisType.availableRecipe[num44]]).Create();
                  if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.recipe[$thisType.availableRecipe[num44]].createItem.type | 0) <= 0))) {
                    $thisType.PlaySound(7, -1, -1, 1);
                  }
                }
              } else {
                $thisType.focusRecipe = num44;
              }
            }
            text3 = $thisType.recipe[$thisType.availableRecipe[num44]].createItem.$name;
            $thisType.toolTip = $T10().$Cast(($thisType.recipe[$thisType.availableRecipe[num44]].createItem).Clone());
            if (($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack | 0) > 1) {
              obj = text3;
              text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack), ")"])));
            }
          }
          if (($thisType.numAvailableRecipes | 0) > 0) {
            num47 -= 50;
            if (num47 < 0) {
              num47 = 0;
            }
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.inventoryBackTexture, 
              $S04().Construct(+num45, +num46), 
              new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
              $S01().Construct(((num47) | 0), ((num47) | 0), ((num47) | 0), ((num47) | 0)), 
              0, 
              new ($T25())(), 
              $thisType.inventoryScale, 
              $T2A().None, 
              0
            );
            if (!((($thisType.recipe[$thisType.availableRecipe[num44]].createItem.type | 0) <= 0) || (($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack | 0) <= 0))) {
              var num49 = 1;
              if (!(((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height() | 0) <= 32))) {
                if ((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height() | 0)) {
                  num49 = +((32 / +(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width())));
                } else {
                  num49 = +((32 / +(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height())));
                }
              }
              num49 *= +$thisType.inventoryScale;
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type], 
                $S04().Construct(((+num45 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width()) * 0.5) * num49)), ((+num46 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height()) * 0.5) * num49))), 
                new ($T24())(0, 0, ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width(), ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height()), 
                ($thisType.recipe[$thisType.availableRecipe[num44]].createItem).GetAlpha(newColor).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num49, 
                $T2A().None, 
                0
              );
              if ($T04().op_Inequality($thisType.recipe[$thisType.availableRecipe[num44]].createItem.color.MemberwiseClone(), new ($T04())())) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type], 
                  $S04().Construct(((+num45 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width()) * 0.5) * num49)), ((+num46 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height()) * 0.5) * num49))), 
                  new ($T24())(0, 0, ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Width(), ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[num44]].createItem.type]).get_Height()), 
                  ($thisType.recipe[$thisType.availableRecipe[num44]].createItem).GetColor(newColor).MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num49, 
                  $T2A().None, 
                  0
                );
              }
              if (($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack | 0) > 1) {
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontItemStack, 
                  String($T0C().$Box($thisType.recipe[$thisType.availableRecipe[num44]].createItem.stack)), 
                  $S04().Construct((+num45 + (10 * +$thisType.inventoryScale)), (+num46 + (26 * +$thisType.inventoryScale))), 
                  color4.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num49, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
        }
      }
      if (($thisType.numAvailableRecipes | 0) > 0) {

      $loop12: 
        for (var num50 = 0; !((num50 >= ($T18().maxRequirements | 0)) || (($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type | 0) === 0)); num50 = ((num50 + 1) | 0)) {
          var num51 = ((80 + Math.imul(num50, 40)) | 0);
          var num53 = +((color2.get_A() | 0) + 50);
          var white3 = $T04().get_White().MemberwiseClone();
          var white4 = $T04().get_White().MemberwiseClone();
          num53 = +((color2.get_A() | 0) + 50) - ((Math.abs($thisType.availableRecipeY[$thisType.focusRecipe])) * 2);
          var num54 = 255 - ((Math.abs($thisType.availableRecipeY[$thisType.focusRecipe])) * 2);
          if (num53 < 0) {
            num53 = 0;
          }
          if (num54 < 0) {
            num54 = 0;
          }
          white3.set_R(((num53) | 0));
          white3.set_G(((num53) | 0));
          white3.set_B(((num53) | 0));
          white3.set_A(((num53) | 0));
          white4.set_R(((num54) | 0));
          white4.set_G(((num54) | 0));
          white4.set_B(((num54) | 0));
          white4.set_A(((num54) | 0));
          $thisType.inventoryScale = 0.6;
          if (num53 === 0) {
            break $loop12;
          }
          if (!((($thisType.mouseState.get_X() | 0) < num51) || 
              (+($thisType.mouseState.get_X()) > (+num51 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
              (($thisType.mouseState.get_Y() | 0) < 380) || (+($thisType.mouseState.get_Y()) > (+380 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
            $thisType.player[$thisType.myPlayer].mouseInterface = true;
            text3 = $thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].$name;
            $thisType.toolTip = $T10().$Cast(($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50]).Clone());
            if (($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].stack | 0) > 1) {
              obj = text3;
              text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].stack), ")"])));
            }
          }
          num53 -= 50;
          if (num53 < 0) {
            num53 = 0;
          }
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.inventoryBackTexture, 
            $S04().Construct(+num51, +380), 
            new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
            $S01().Construct(((num53) | 0), ((num53) | 0), ((num53) | 0), ((num53) | 0)), 
            0, 
            new ($T25())(), 
            $thisType.inventoryScale, 
            $T2A().None, 
            0
          );
          if (!((($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type | 0) <= 0) || (($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].stack | 0) <= 0))) {
            var num55 = 1;
            if (!(((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height() | 0) <= 32))) {
              if ((($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height() | 0)) {
                num55 = +((32 / +(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width())));
              } else {
                num55 = +((32 / +(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height())));
              }
            }
            num55 *= +$thisType.inventoryScale;
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type], 
              $S04().Construct(((+num51 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width()) * 0.5) * num55)), ((+380 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height()) * 0.5) * num55))), 
              new ($T24())(0, 0, ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width(), ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height()), 
              ($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50]).GetAlpha(white4).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num55, 
              $T2A().None, 
              0
            );
            if ($T04().op_Inequality($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].color.MemberwiseClone(), new ($T04())())) {
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type], 
                $S04().Construct(((+num51 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width()) * 0.5) * num55)), ((+380 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height()) * 0.5) * num55))), 
                new ($T24())(0, 0, ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Width(), ($thisType.itemTexture[$thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].type]).get_Height()), 
                ($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50]).GetColor(white4).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num55, 
                $T2A().None, 
                0
              );
            }
            if (($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].stack | 0) > 1) {
              $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                $thisType.fontItemStack, 
                String($T0C().$Box($thisType.recipe[$thisType.availableRecipe[$thisType.focusRecipe]].requiredItem[num50].stack)), 
                $S04().Construct((+num51 + (10 * +$thisType.inventoryScale)), (+380 + (26 * +$thisType.inventoryScale))), 
                white3.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num55, 
                $T2A().None, 
                0
              );
            }
          }
        }
      }
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Coins", 
        $S04().Construct(528, 84), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        0.8, 
        $T2A().None, 
        0
      );
      $thisType.inventoryScale = 0.55;

      for (var num56 = 0; num56 < 4; num56 = ((num56 + 1) | 0)) {
        var num58 = ((85 + (+(num56 * 56) * +$thisType.inventoryScale)) | 0);
        var num59 = ((num56 + 40) | 0);
        (white5 = white5.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, white5, 100, 100, 100, 100));
        if (!((($thisType.mouseState.get_X() | 0) < 497) || 
            (+($thisType.mouseState.get_X()) > (+497 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
            (($thisType.mouseState.get_Y() | 0) < num58) || (+($thisType.mouseState.get_Y()) > (+num58 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
          $thisType.player[$thisType.myPlayer].mouseInterface = true;
          if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
            if (!(((($thisType.player[$thisType.myPlayer].selectedItem | 0) === num59) && 
                  (($thisType.player[$thisType.myPlayer].itemAnimation | 0) > 0)) || ((($thisType.mouseItem.type | 0) !== 0) && 
                  (($thisType.mouseItem.type | 0) !== 71) && 
                  (($thisType.mouseItem.type | 0) !== 72) && 
                  (($thisType.mouseItem.type | 0) !== 73) && 
                  (($thisType.mouseItem.type | 0) !== 74)))) {
              var item3 = $thisType.mouseItem;
              $thisType.mouseItem = $thisType.player[$thisType.myPlayer].inventory[num59];
              $thisType.player[$thisType.myPlayer].inventory[num59] = item3;
              if (!((($thisType.player[$thisType.myPlayer].inventory[num59].type | 0) !== 0) && (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) >= 1))) {
                $thisType.player[$thisType.myPlayer].inventory[num59] = new ($T10())();
              }
              if (!(!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].inventory[num59]) || 
                  (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) === ($thisType.player[$thisType.myPlayer].inventory[num59].maxStack | 0)) || (($thisType.mouseItem.stack | 0) === ($thisType.mouseItem.maxStack | 0)))) {
                if (((($thisType.mouseItem.stack | 0) + ($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0)) | 0) <= ($thisType.mouseItem.maxStack | 0)) {
                  $thisType.player[$thisType.myPlayer].inventory[num59].stack = ((($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) + ($thisType.mouseItem.stack | 0)) | 0);
                  $thisType.mouseItem.stack = 0;
                } else {
                  var num60 = ((($thisType.mouseItem.maxStack | 0) - ($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0)) | 0);
                  $thisType.player[$thisType.myPlayer].inventory[num59].stack = ((($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) + num60) | 0);
                  $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) - num60) | 0);
                }
              }
              if (!((($thisType.mouseItem.type | 0) !== 0) && (($thisType.mouseItem.stack | 0) >= 1))) {
                $thisType.mouseItem = new ($T10())();
              }
              if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.player[$thisType.myPlayer].inventory[num59].type | 0) <= 0))) {
                $thisType.PlaySound(7, -1, -1, 1);
              }
            }
          } else if (!((($thisType.stackSplit | 0) > 1) || 
              ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || 
              (!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].inventory[num59]) && 
                (($thisType.mouseItem.type | 0) !== 0)) || ((($thisType.mouseItem.stack | 0) >= ($thisType.mouseItem.maxStack | 0)) && 
                (($thisType.mouseItem.type | 0) !== 0)))) {
            if (($thisType.mouseItem.type | 0) === 0) {
              $thisType.mouseItem = $T10().$Cast(($thisType.player[$thisType.myPlayer].inventory[num59]).Clone());
              $thisType.mouseItem.stack = 0;
            }
            $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + 1) | 0);
            $thisType.player[$thisType.myPlayer].inventory[num59].stack = ((($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) - 1) | 0);
            if (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) <= 0) {
              $thisType.player[$thisType.myPlayer].inventory[num59] = new ($T10())();
            }
            $T18().FindRecipes();
            $thisType.soundInstanceMenuTick.Stop();
            $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
            $thisType.PlaySound(12, -1, -1, 1);
            if (($thisType.stackSplit | 0) === 0) {
              $thisType.stackSplit = 15;
            } else {
              $thisType.stackSplit = ($thisType.stackDelay | 0);
            }
          }
          text3 = $thisType.player[$thisType.myPlayer].inventory[num59].$name;
          $thisType.toolTip = $T10().$Cast(($thisType.player[$thisType.myPlayer].inventory[num59]).Clone());
          if (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) > 1) {
            obj = text3;
            text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num59].stack), ")"])));
          }
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.inventoryBackTexture, 
          $S04().Construct(+497, +num58), 
          new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
          color2.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          $thisType.inventoryScale, 
          $T2A().None, 
          0
        );
        white5 = $T04().get_White().MemberwiseClone();
        if (!((($thisType.player[$thisType.myPlayer].inventory[num59].type | 0) <= 0) || (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) <= 0))) {
          var num61 = 1;
          if (!(((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height() | 0) <= 32))) {
            if ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height() | 0)) {
              num61 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width())));
            } else {
              num61 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height())));
            }
          }
          num61 *= +$thisType.inventoryScale;
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type], 
            $S04().Construct(((+497 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width()) * 0.5) * num61)), ((+num58 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height()) * 0.5) * num61))), 
            new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height()), 
            ($thisType.player[$thisType.myPlayer].inventory[num59]).GetAlpha(white5).MemberwiseClone(), 
            0, 
            new ($T25())(), 
            num61, 
            $T2A().None, 
            0
          );
          if ($T04().op_Inequality($thisType.player[$thisType.myPlayer].inventory[num59].color.MemberwiseClone(), new ($T04())())) {
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type], 
              $S04().Construct(((+497 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width()) * 0.5) * num61)), ((+num58 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height()) * 0.5) * num61))), 
              new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num59].type]).get_Height()), 
              ($thisType.player[$thisType.myPlayer].inventory[num59]).GetColor(white5).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num61, 
              $T2A().None, 
              0
            );
          }
          if (($thisType.player[$thisType.myPlayer].inventory[num59].stack | 0) > 1) {
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontItemStack, 
              String($T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num59].stack)), 
              $S04().Construct((+497 + (10 * +$thisType.inventoryScale)), (+num58 + (26 * +$thisType.inventoryScale))), 
              white5.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num61, 
              $T2A().None, 
              0
            );
          }
        }
      }
      if (!((($thisType.npcShop | 0) <= 0) || ($thisType.playerInventory && 
            (($thisType.player[$thisType.myPlayer].talkNPC | 0) !== -1)))) {
        $thisType.npcShop = 0;
      }
      if (($thisType.npcShop | 0) > 0) {
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          "Shop", 
          $S04().Construct(284, 210), 
          $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $thisType.inventoryScale = 0.75;

        for (var num62 = 0; num62 < 5; num62 = ((num62 + 1) | 0)) {

          for (var num63 = 0; num63 < 4; num63 = ((num63 + 1) | 0)) {
            var num64 = ((73 + (+(num62 * 56) * +$thisType.inventoryScale)) | 0);
            var num65 = ((210 + (+(num63 * 56) * +$thisType.inventoryScale)) | 0);
            var num66 = ((num62 + Math.imul(num63, 5)) | 0);
            (white6 = white6.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, white6, 100, 100, 100, 100));
            if (!((($thisType.mouseState.get_X() | 0) < num64) || 
                (+($thisType.mouseState.get_X()) > (+num64 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
                (($thisType.mouseState.get_Y() | 0) < num65) || (+($thisType.mouseState.get_Y()) > (+num65 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
              $thisType.player[$thisType.myPlayer].mouseInterface = true;
              if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
                if (($thisType.mouseItem.type | 0) === 0) {
                  if (!(((($thisType.player[$thisType.myPlayer].selectedItem | 0) === num66) && 
                        (($thisType.player[$thisType.myPlayer].itemAnimation | 0) > 0)) || !$thisType.player[$thisType.myPlayer].BuyItem(this.shop[$thisType.npcShop].item[num66].value))) {
                    $S0B().CallVirtual("SetDefaults", null, $thisType.mouseItem, this.shop[$thisType.npcShop].item[num66].$name);
                    $thisType.PlaySound(18, -1, -1, 1);
                  }
                } else if ((this.shop[$thisType.npcShop].item[num66].type | 0) === 0) {
                  if ($thisType.player[$thisType.myPlayer].SellItem(Math.imul($thisType.mouseItem.value, $thisType.mouseItem.stack))) {
                    $thisType.mouseItem.stack = 0;
                    $thisType.mouseItem.type = 0;
                    $thisType.PlaySound(18, -1, -1, 1);
                  } else if (($thisType.mouseItem.value | 0) === 0) {
                    $thisType.mouseItem.stack = 0;
                    $thisType.mouseItem.type = 0;
                    $thisType.PlaySound(7, -1, -1, 1);
                  }
                }
              } else if (!((($thisType.stackSplit | 0) > 1) || 
                  ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || 
                  (!$thisType.mouseItem.IsTheSameAs(this.shop[$thisType.npcShop].item[num66]) && 
                    (($thisType.mouseItem.type | 0) !== 0)) || 
                  ((($thisType.mouseItem.stack | 0) >= ($thisType.mouseItem.maxStack | 0)) && 
                    (($thisType.mouseItem.type | 0) !== 0)) || !$thisType.player[$thisType.myPlayer].BuyItem(this.shop[$thisType.npcShop].item[num66].value))) {
                $thisType.PlaySound(18, -1, -1, 1);
                if (($thisType.mouseItem.type | 0) === 0) {
                  $thisType.mouseItem = $T10().$Cast((this.shop[$thisType.npcShop].item[num66]).Clone());
                  $thisType.mouseItem.stack = 0;
                }
                $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + 1) | 0);
                if (($thisType.stackSplit | 0) === 0) {
                  $thisType.stackSplit = 15;
                } else {
                  $thisType.stackSplit = ($thisType.stackDelay | 0);
                }
              }
              text3 = this.shop[$thisType.npcShop].item[num66].$name;
              $thisType.toolTip = $T10().$Cast((this.shop[$thisType.npcShop].item[num66]).Clone());
              $thisType.toolTip.buy = true;
              if ((this.shop[$thisType.npcShop].item[num66].stack | 0) > 1) {
                obj = text3;
                text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box(this.shop[$thisType.npcShop].item[num66].stack), ")"])));
              }
            }
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.inventoryBackTexture, 
              $S04().Construct(+num64, +num65), 
              new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
              color2.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              $thisType.inventoryScale, 
              $T2A().None, 
              0
            );
            white6 = $T04().get_White().MemberwiseClone();
            if (!(((this.shop[$thisType.npcShop].item[num66].type | 0) <= 0) || ((this.shop[$thisType.npcShop].item[num66].stack | 0) <= 0))) {
              var num67 = 1;
              if (!(((($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height() | 0) <= 32))) {
                if ((($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width() | 0) > (($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height() | 0)) {
                  num67 = +((32 / +(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width())));
                } else {
                  num67 = +((32 / +(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height())));
                }
              }
              num67 *= +$thisType.inventoryScale;
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type], 
                $S04().Construct(((+num64 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width()) * 0.5) * num67)), ((+num65 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height()) * 0.5) * num67))), 
                new ($T24())(0, 0, ($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width(), ($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height()), 
                (this.shop[$thisType.npcShop].item[num66]).GetAlpha(white6).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num67, 
                $T2A().None, 
                0
              );
              if ($T04().op_Inequality(this.shop[$thisType.npcShop].item[num66].color.MemberwiseClone(), new ($T04())())) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type], 
                  $S04().Construct(((+num64 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width()) * 0.5) * num67)), ((+num65 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height()) * 0.5) * num67))), 
                  new ($T24())(0, 0, ($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Width(), ($thisType.itemTexture[this.shop[$thisType.npcShop].item[num66].type]).get_Height()), 
                  (this.shop[$thisType.npcShop].item[num66]).GetColor(white6).MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num67, 
                  $T2A().None, 
                  0
                );
              }
              if ((this.shop[$thisType.npcShop].item[num66].stack | 0) > 1) {
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontItemStack, 
                  String($T0C().$Box(this.shop[$thisType.npcShop].item[num66].stack)), 
                  $S04().Construct((+num64 + (10 * +$thisType.inventoryScale)), (+num65 + (26 * +$thisType.inventoryScale))), 
                  white6.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num67, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
        }
      }
      if (!((($thisType.player[$thisType.myPlayer].chest | 0) <= -1) || (($thisType.tile.Get($thisType.player[$thisType.myPlayer].chestX, $thisType.player[$thisType.myPlayer].chestY).type | 0) === 21))) {
        $thisType.player[$thisType.myPlayer].chest = -1;
      }
      if (($thisType.player[$thisType.myPlayer].chest | 0) > -1) {
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          "Chest", 
          $S04().Construct(284, 210), 
          $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $thisType.inventoryScale = 0.75;

        for (var num68 = 0; num68 < 5; num68 = ((num68 + 1) | 0)) {

          for (var num69 = 0; num69 < 4; num69 = ((num69 + 1) | 0)) {
            var num70 = ((73 + (+(num68 * 56) * +$thisType.inventoryScale)) | 0);
            var num71 = ((210 + (+(num69 * 56) * +$thisType.inventoryScale)) | 0);
            var num72 = ((num68 + Math.imul(num69, 5)) | 0);
            (white7 = white7.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, white7, 100, 100, 100, 100));
            if (!((($thisType.mouseState.get_X() | 0) < num70) || 
                (+($thisType.mouseState.get_X()) > (+num70 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
                (($thisType.mouseState.get_Y() | 0) < num71) || (+($thisType.mouseState.get_Y()) > (+num71 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
              $thisType.player[$thisType.myPlayer].mouseInterface = true;
              if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
                if (!((($thisType.player[$thisType.myPlayer].selectedItem | 0) === num72) && (($thisType.player[$thisType.myPlayer].itemAnimation | 0) > 0))) {
                  var item4 = $thisType.mouseItem;
                  $thisType.mouseItem = $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72];
                  $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72] = item4;
                  if (!((($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type | 0) !== 0) && (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) >= 1))) {
                    $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72] = new ($T10())();
                  }
                  if (!(!$thisType.mouseItem.IsTheSameAs($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]) || 
                      (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) === ($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].maxStack | 0)) || (($thisType.mouseItem.stack | 0) === ($thisType.mouseItem.maxStack | 0)))) {
                    if (((($thisType.mouseItem.stack | 0) + ($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0)) | 0) <= ($thisType.mouseItem.maxStack | 0)) {
                      $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack = ((($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) + ($thisType.mouseItem.stack | 0)) | 0);
                      $thisType.mouseItem.stack = 0;
                    } else {
                      var num73 = ((($thisType.mouseItem.maxStack | 0) - ($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0)) | 0);
                      $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack = ((($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) + num73) | 0);
                      $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) - num73) | 0);
                    }
                  }
                  if (!((($thisType.mouseItem.type | 0) !== 0) && (($thisType.mouseItem.stack | 0) >= 1))) {
                    $thisType.mouseItem = new ($T10())();
                  }
                  if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type | 0) <= 0))) {
                    $T18().FindRecipes();
                    $thisType.PlaySound(7, -1, -1, 1);
                  }
                  if (($thisType.netMode | 0) === 1) {
                    $T2D().SendData(
                      32, 
                      -1, 
                      -1, 
                      "", 
                      $thisType.player[$thisType.myPlayer].chest, 
                      +num72, 
                      0, 
                      0
                    );
                  }
                }
              } else if (!((($thisType.stackSplit | 0) > 1) || 
                  ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || 
                  (!$thisType.mouseItem.IsTheSameAs($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]) && 
                    (($thisType.mouseItem.type | 0) !== 0)) || ((($thisType.mouseItem.stack | 0) >= ($thisType.mouseItem.maxStack | 0)) && 
                    (($thisType.mouseItem.type | 0) !== 0)))) {
                if (($thisType.mouseItem.type | 0) === 0) {
                  $thisType.mouseItem = $T10().$Cast(($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]).Clone());
                  $thisType.mouseItem.stack = 0;
                }
                $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + 1) | 0);
                $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack = ((($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) - 1) | 0);
                if (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) <= 0) {
                  $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72] = new ($T10())();
                }
                $T18().FindRecipes();
                $thisType.soundInstanceMenuTick.Stop();
                $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
                $thisType.PlaySound(12, -1, -1, 1);
                if (($thisType.stackSplit | 0) === 0) {
                  $thisType.stackSplit = 15;
                } else {
                  $thisType.stackSplit = ($thisType.stackDelay | 0);
                }
                if (($thisType.netMode | 0) === 1) {
                  $T2D().SendData(
                    32, 
                    -1, 
                    -1, 
                    "", 
                    $thisType.player[$thisType.myPlayer].chest, 
                    +num72, 
                    0, 
                    0
                  );
                }
              }
              text3 = $thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].$name;
              $thisType.toolTip = $T10().$Cast(($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]).Clone());
              if (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) > 1) {
                obj = text3;
                text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack), ")"])));
              }
            }
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.inventoryBackTexture, 
              $S04().Construct(+num70, +num71), 
              new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
              color2.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              $thisType.inventoryScale, 
              $T2A().None, 
              0
            );
            white7 = $T04().get_White().MemberwiseClone();
            if (!((($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type | 0) <= 0) || (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) <= 0))) {
              var num74 = 1;
              if (!(((($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height() | 0) <= 32))) {
                if ((($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height() | 0)) {
                  num74 = +((32 / +(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width())));
                } else {
                  num74 = +((32 / +(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height())));
                }
              }
              num74 *= +$thisType.inventoryScale;
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type], 
                $S04().Construct(((+num70 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width()) * 0.5) * num74)), ((+num71 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height()) * 0.5) * num74))), 
                new ($T24())(0, 0, ($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width(), ($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height()), 
                ($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]).GetAlpha(white7).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num74, 
                $T2A().None, 
                0
              );
              if ($T04().op_Inequality($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].color.MemberwiseClone(), new ($T04())())) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type], 
                  $S04().Construct(((+num70 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width()) * 0.5) * num74)), ((+num71 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height()) * 0.5) * num74))), 
                  new ($T24())(0, 0, ($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Width(), ($thisType.itemTexture[$thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].type]).get_Height()), 
                  ($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72]).GetColor(white7).MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num74, 
                  $T2A().None, 
                  0
                );
              }
              if (($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack | 0) > 1) {
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontItemStack, 
                  String($T0C().$Box($thisType.chest[$thisType.player[$thisType.myPlayer].chest].item[num72].stack)), 
                  $S04().Construct((+num70 + (10 * +$thisType.inventoryScale)), (+num71 + (26 * +$thisType.inventoryScale))), 
                  white7.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num74, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
        }
      }
      if (($thisType.player[$thisType.myPlayer].chest | 0) === -2) {
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          "Piggy Bank", 
          $S04().Construct(284, 210), 
          $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
        $thisType.inventoryScale = 0.75;

        for (var num75 = 0; num75 < 5; num75 = ((num75 + 1) | 0)) {

          for (var num76 = 0; num76 < 4; num76 = ((num76 + 1) | 0)) {
            var num77 = ((73 + (+(num75 * 56) * +$thisType.inventoryScale)) | 0);
            var num78 = ((210 + (+(num76 * 56) * +$thisType.inventoryScale)) | 0);
            var num79 = ((num75 + Math.imul(num76, 5)) | 0);
            (white8 = white8.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, white8, 100, 100, 100, 100));
            if (!((($thisType.mouseState.get_X() | 0) < num77) || 
                (+($thisType.mouseState.get_X()) > (+num77 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.inventoryScale))) || 
                (($thisType.mouseState.get_Y() | 0) < num78) || (+($thisType.mouseState.get_Y()) > (+num78 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.inventoryScale))))) {
              $thisType.player[$thisType.myPlayer].mouseInterface = true;
              if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
                if (!((($thisType.player[$thisType.myPlayer].selectedItem | 0) === num79) && (($thisType.player[$thisType.myPlayer].itemAnimation | 0) > 0))) {
                  var item5 = $thisType.mouseItem;
                  $thisType.mouseItem = $thisType.player[$thisType.myPlayer].bank[num79];
                  $thisType.player[$thisType.myPlayer].bank[num79] = item5;
                  if (!((($thisType.player[$thisType.myPlayer].bank[num79].type | 0) !== 0) && (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) >= 1))) {
                    $thisType.player[$thisType.myPlayer].bank[num79] = new ($T10())();
                  }
                  if (!(!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].bank[num79]) || 
                      (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) === ($thisType.player[$thisType.myPlayer].bank[num79].maxStack | 0)) || (($thisType.mouseItem.stack | 0) === ($thisType.mouseItem.maxStack | 0)))) {
                    if (((($thisType.mouseItem.stack | 0) + ($thisType.player[$thisType.myPlayer].bank[num79].stack | 0)) | 0) <= ($thisType.mouseItem.maxStack | 0)) {
                      $thisType.player[$thisType.myPlayer].bank[num79].stack = ((($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) + ($thisType.mouseItem.stack | 0)) | 0);
                      $thisType.mouseItem.stack = 0;
                    } else {
                      var num80 = ((($thisType.mouseItem.maxStack | 0) - ($thisType.player[$thisType.myPlayer].bank[num79].stack | 0)) | 0);
                      $thisType.player[$thisType.myPlayer].bank[num79].stack = ((($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) + num80) | 0);
                      $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) - num80) | 0);
                    }
                  }
                  if (!((($thisType.mouseItem.type | 0) !== 0) && (($thisType.mouseItem.stack | 0) >= 1))) {
                    $thisType.mouseItem = new ($T10())();
                  }
                  if (!((($thisType.mouseItem.type | 0) <= 0) && (($thisType.player[$thisType.myPlayer].bank[num79].type | 0) <= 0))) {
                    $T18().FindRecipes();
                    $thisType.PlaySound(7, -1, -1, 1);
                  }
                }
              } else if (!((($thisType.stackSplit | 0) > 1) || 
                  ($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || 
                  (!$thisType.mouseItem.IsTheSameAs($thisType.player[$thisType.myPlayer].bank[num79]) && 
                    (($thisType.mouseItem.type | 0) !== 0)) || ((($thisType.mouseItem.stack | 0) >= ($thisType.mouseItem.maxStack | 0)) && 
                    (($thisType.mouseItem.type | 0) !== 0)))) {
                if (($thisType.mouseItem.type | 0) === 0) {
                  $thisType.mouseItem = $T10().$Cast(($thisType.player[$thisType.myPlayer].bank[num79]).Clone());
                  $thisType.mouseItem.stack = 0;
                }
                $thisType.mouseItem.stack = ((($thisType.mouseItem.stack | 0) + 1) | 0);
                $thisType.player[$thisType.myPlayer].bank[num79].stack = ((($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) - 1) | 0);
                if (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) <= 0) {
                  $thisType.player[$thisType.myPlayer].bank[num79] = new ($T10())();
                }
                $T18().FindRecipes();
                $thisType.soundInstanceMenuTick.Stop();
                $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
                $thisType.PlaySound(12, -1, -1, 1);
                if (($thisType.stackSplit | 0) === 0) {
                  $thisType.stackSplit = 15;
                } else {
                  $thisType.stackSplit = ($thisType.stackDelay | 0);
                }
              }
              text3 = $thisType.player[$thisType.myPlayer].bank[num79].$name;
              $thisType.toolTip = $T10().$Cast(($thisType.player[$thisType.myPlayer].bank[num79]).Clone());
              if (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) > 1) {
                obj = text3;
                text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.player[$thisType.myPlayer].bank[num79].stack), ")"])));
              }
            }
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.inventoryBackTexture, 
              $S04().Construct(+num77, +num78), 
              new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
              color2.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              $thisType.inventoryScale, 
              $T2A().None, 
              0
            );
            white8 = $T04().get_White().MemberwiseClone();
            if (!((($thisType.player[$thisType.myPlayer].bank[num79].type | 0) <= 0) || (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) <= 0))) {
              var num81 = 1;
              if (!(((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height() | 0) <= 32))) {
                if ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height() | 0)) {
                  num81 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width())));
                } else {
                  num81 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height())));
                }
              }
              num81 *= +$thisType.inventoryScale;
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type], 
                $S04().Construct(((+num77 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width()) * 0.5) * num81)), ((+num78 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height()) * 0.5) * num81))), 
                new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height()), 
                ($thisType.player[$thisType.myPlayer].bank[num79]).GetAlpha(white8).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                num81, 
                $T2A().None, 
                0
              );
              if ($T04().op_Inequality($thisType.player[$thisType.myPlayer].bank[num79].color.MemberwiseClone(), new ($T04())())) {
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type], 
                  $S04().Construct(((+num77 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width()) * 0.5) * num81)), ((+num78 + (26 * +$thisType.inventoryScale)) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height()) * 0.5) * num81))), 
                  new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].bank[num79].type]).get_Height()), 
                  ($thisType.player[$thisType.myPlayer].bank[num79]).GetColor(white8).MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num81, 
                  $T2A().None, 
                  0
                );
              }
              if (($thisType.player[$thisType.myPlayer].bank[num79].stack | 0) > 1) {
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontItemStack, 
                  String($T0C().$Box($thisType.player[$thisType.myPlayer].bank[num79].stack)), 
                  $S04().Construct((+num77 + (10 * +$thisType.inventoryScale)), (+num78 + (26 * +$thisType.inventoryScale))), 
                  white8.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  num81, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
        }
      }
    } else {
      var flag2 = false;
      var flag3 = false;

      for (var num82 = 0; num82 < 3; num82 = ((num82 + 1) | 0)) {
        var text6 = "";
        if (!((($thisType.player[$thisType.myPlayer].accDepthMeter | 0) <= 0) || flag3)) {
          var num83 = ((+(((+$thisType.player[$thisType.myPlayer].position.Y + +($thisType.player[$thisType.myPlayer].height)) * 2) / 16) - (+$thisType.worldSurface * 2)) | 0);
          if (num83 > 0) {
            text6 = (JSIL.ConcatString("Depth: ", $T0C().$Box(num83), " feet below"));
            if (num83 === 1) {
              text6 = (JSIL.ConcatString("Depth: ", $T0C().$Box(num83), " foot below"));
            }
          } else if (num83 < 0) {
            num83 = Math.imul(num83, -1);
            text6 = (JSIL.ConcatString("Depth: ", $T0C().$Box(num83), " feet above"));
            if (num83 === 1) {
              text6 = (JSIL.ConcatString("Depth: ", $T0C().$Box(num83), " foot above"));
            }
          } else {
            text6 = "Depth: Level";
          }
          flag3 = true;
        } else if (!((($thisType.player[$thisType.myPlayer].accWatch | 0) <= 0) || flag2)) {
          var text7 = "AM";
          var num84 = +$thisType.time;
          if (!$thisType.dayTime) {
            num84 += 54000;
          }
          num84 = +((num84 / 86400)) * 24;
          num84 = (num84 - 7.5) - 12;
          if (num84 < 0) {
            num84 += 24;
          }
          if (num84 >= 12) {
            text7 = "PM";
          }
          var num86 = ((num84) | 0);
          var num87 = num84 - +num86;
          num87 = +(((num87 * 60) | 0));
          var text8 = (String($T20().$Box(num87)));
          if (num87 < 10) {
            text8 = (JSIL.ConcatString("0", text8));
          }
          if (num86 > 12) {
            num86 = ((num86 - 12) | 0);
          }
          if (num86 === 0) {
            num86 = 12;
          }
          if (($thisType.player[$thisType.myPlayer].accWatch | 0) === 1) {
            text8 = "00";
          } else if (($thisType.player[$thisType.myPlayer].accWatch | 0) === 2) {
            if (num87 < 30) {
              text8 = "00";
            } else {
              text8 = "30";
            }
          }
          text6 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), ["Time: ", $T0C().$Box(num86), ":", text8, " ", text7])));
          flag2 = true;
        }
        if (text6 != "") {

          for (var num88 = 0; num88 < 5; num88 = ((num88 + 1) | 0)) {
            var num89 = 0;
            var num90 = 0;
            var black = $T04().get_Black().MemberwiseClone();
            if (num88 === 0) {
              num89 = -2;
            }
            if (num88 === 1) {
              num89 = 2;
            }
            if (num88 === 2) {
              num90 = -2;
            }
            if (num88 === 3) {
              num90 = 2;
            }
            if (num88 === 4) {
              (black = black.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, black, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor));
            }
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontMouseText, 
              text6, 
              $S04().Construct(+(22 + num89), +(((74 + Math.imul(22, num82)) | 0) + num90)), 
              black.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
        }
      }
    }
    if (!$thisType.playerInventory) {
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Items", 
        $S04().Construct(215, 0), 
        $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
      var num91 = 20;

      for (var num92 = 0; num92 < 10; num92 = ((num92 + 1) | 0)) {
        if (num92 === ($thisType.player[$thisType.myPlayer].selectedItem | 0)) {
          if (+$thisType.hotbarScale[num92] < 1) {
            $thisType.hotbarScale[num92] += 0.05;
          }
        } else if ($thisType.hotbarScale[num92] > 0.75) {
          $thisType.hotbarScale[num92] -= 0.05;
        }
        var num93 = ((20 + (22 * (1 - +$thisType.hotbarScale[num92]))) | 0);
        var a = ((75 + (150 * +$thisType.hotbarScale[num92])) | 0);
        (color5 = color5.MemberwiseClone(), 
          $S07().Call($T04().prototype, "_ctor", null, color5, 255, 255, 255, a));
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.inventoryBackTexture, 
          $S04().Construct(+num91, +num93), 
          new ($T24())(0, 0, $thisType.inventoryBackTexture.get_Width(), $thisType.inventoryBackTexture.get_Height()), 
          $S01().Construct(100, 100, 100, 100), 
          0, 
          new ($T25())(), 
          $thisType.hotbarScale[num92], 
          $T2A().None, 
          0
        );
        if (!((($thisType.mouseState.get_X() | 0) < num91) || 
            (+($thisType.mouseState.get_X()) > (+num91 + (+($thisType.inventoryBackTexture.get_Width()) * +$thisType.hotbarScale[num92]))) || 
            (($thisType.mouseState.get_Y() | 0) < num93) || 
            (+($thisType.mouseState.get_Y()) > (+num93 + (+($thisType.inventoryBackTexture.get_Height()) * +$thisType.hotbarScale[num92]))) || $thisType.player[$thisType.myPlayer].channel)) {
          $thisType.player[$thisType.myPlayer].mouseInterface = true;
          if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
            $thisType.player[$thisType.myPlayer].changeItem = num92;
          }
          $thisType.player[$thisType.myPlayer].showItemIcon = false;
          text3 = $thisType.player[$thisType.myPlayer].inventory[num92].$name;
          if (($thisType.player[$thisType.myPlayer].inventory[num92].stack | 0) > 1) {
            obj = text3;
            text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num92].stack), ")"])));
          }
          rare = ($thisType.player[$thisType.myPlayer].inventory[num92].rare | 0);
        }
        if (!((($thisType.player[$thisType.myPlayer].inventory[num92].type | 0) <= 0) || (($thisType.player[$thisType.myPlayer].inventory[num92].stack | 0) <= 0))) {
          var num94 = 1;
          if (!(((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width() | 0) <= 32) && ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height() | 0) <= 32))) {
            if ((($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width() | 0) > (($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height() | 0)) {
              num94 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width())));
            } else {
              num94 = +((32 / +(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height())));
            }
          }
          num94 *= +$thisType.hotbarScale[num92];
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type], 
            $S04().Construct(((+num91 + (26 * +$thisType.hotbarScale[num92])) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width()) * 0.5) * num94)), ((+num93 + (26 * +$thisType.hotbarScale[num92])) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height()) * 0.5) * num94))), 
            new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height()), 
            ($thisType.player[$thisType.myPlayer].inventory[num92]).GetAlpha(color5).MemberwiseClone(), 
            0, 
            new ($T25())(), 
            num94, 
            $T2A().None, 
            0
          );
          if ($T04().op_Inequality($thisType.player[$thisType.myPlayer].inventory[num92].color.MemberwiseClone(), new ($T04())())) {
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type], 
              $S04().Construct(((+num91 + (26 * +$thisType.hotbarScale[num92])) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width()) * 0.5) * num94)), ((+num93 + (26 * +$thisType.hotbarScale[num92])) - ((+(($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height()) * 0.5) * num94))), 
              new ($T24())(0, 0, ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Width(), ($thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[num92].type]).get_Height()), 
              ($thisType.player[$thisType.myPlayer].inventory[num92]).GetColor(color5).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num94, 
              $T2A().None, 
              0
            );
          }
          if (($thisType.player[$thisType.myPlayer].inventory[num92].stack | 0) > 1) {
            $S08().CallVirtual("DrawString", null, this.spriteBatch, 
              $thisType.fontItemStack, 
              String($T0C().$Box($thisType.player[$thisType.myPlayer].inventory[num92].stack)), 
              $S04().Construct((+num91 + (10 * +$thisType.hotbarScale[num92])), (+num93 + (26 * +$thisType.hotbarScale[num92]))), 
              color5.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num94, 
              $T2A().None, 
              0
            );
          }
          if ($thisType.player[$thisType.myPlayer].inventory[num92].potion) {
            var alpha = ($thisType.player[$thisType.myPlayer].inventory[num92]).GetAlpha(color5).MemberwiseClone();
            var num95 = +((+($thisType.player[$thisType.myPlayer].potionDelay) / +($T10().potionDelay)));
            var num96 = +(alpha.get_R()) * num95;
            var num97 = +(alpha.get_G()) * num95;
            var num98 = +(alpha.get_B()) * num95;
            var num99 = +(alpha.get_A()) * num95;
            (alpha = alpha.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, alpha, ((num96) | 0), ((num97) | 0), ((num98) | 0), ((num99) | 0)));
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.cdTexture, 
              $S04().Construct(((+num91 + (26 * +$thisType.hotbarScale[num92])) - ((+($thisType.cdTexture.get_Width()) * 0.5) * num94)), ((+num93 + (26 * +$thisType.hotbarScale[num92])) - ((+($thisType.cdTexture.get_Height()) * 0.5) * num94))), 
              new ($T24())(0, 0, $thisType.cdTexture.get_Width(), $thisType.cdTexture.get_Height()), 
              alpha.MemberwiseClone(), 
              0, 
              new ($T25())(), 
              num94, 
              $T2A().None, 
              0
            );
          }
        }
        num91 = ((num91 + ((((+($thisType.inventoryBackTexture.get_Width()) * +$thisType.hotbarScale[num92]) | 0) + 4) | 0)) | 0);
      }
    }
    if (!((text3 === null) || 
        !(text3 != "") || (($thisType.mouseItem.type | 0) !== 0))) {
      $thisType.player[$thisType.myPlayer].showItemIcon = false;
      this.MouseText(text3, rare);
      flag = true;
    }
    if ($thisType.chatMode) {
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      var text9 = $thisType.chatText;
      if ((this.textBlinkerState | 0) === 1) {
        text9 = (JSIL.ConcatString(text9, "|"));
      }
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.textBackTexture, 
        $S04().Construct(78, +(($thisType.screenHeight | 0) - 36)), 
        new ($T24())(0, 0, $thisType.textBackTexture.get_Width(), $thisType.textBackTexture.get_Height()), 
        $S01().Construct(100, 100, 100, 100), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );

      for (var num100 = 0; num100 < 5; num100 = ((num100 + 1) | 0)) {
        var num101 = 0;
        var num102 = 0;
        var black2 = $T04().get_Black().MemberwiseClone();
        if (num100 === 0) {
          num101 = -2;
        }
        if (num100 === 1) {
          num101 = 2;
        }
        if (num100 === 2) {
          num102 = -2;
        }
        if (num100 === 3) {
          num102 = 2;
        }
        if (num100 === 4) {
          (black2 = black2.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, black2, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor));
        }
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontMouseText, 
          text9, 
          $S04().Construct(+(88 + num101), +(((($thisType.screenHeight | 0) - 30) | 0) + num102)), 
          black2.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
      }
    }

    for (var num103 = 0; num103 < ($thisType.numChatLines | 0); num103 = ((num103 + 1) | 0)) {
      if (!(!$thisType.chatMode && (($thisType.chatLine[num103].showTime | 0) <= 0))) {
        var num104 = +((+($thisType.mouseTextColor) / 255));

        for (var num105 = 0; num105 < 5; num105 = ((num105 + 1) | 0)) {
          var num106 = 0;
          var num107 = 0;
          var black3 = $T04().get_Black().MemberwiseClone();
          if (num105 === 0) {
            num106 = -2;
          }
          if (num105 === 1) {
            num106 = 2;
          }
          if (num105 === 2) {
            num107 = -2;
          }
          if (num105 === 3) {
            num107 = 2;
          }
          if (num105 === 4) {
            (black3 = black3.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, black3, 
                ((+(($thisType.chatLine[num103].color).get_R()) * num104) | 0), 
                ((+(($thisType.chatLine[num103].color).get_G()) * num104) | 0), 
                ((+(($thisType.chatLine[num103].color).get_B()) * num104) | 0), 
                $thisType.mouseTextColor
              ));
          }
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            $thisType.chatLine[num103].text, 
            $S04().Construct(+(88 + num106), +(((((((($thisType.screenHeight | 0) - 30) | 0) + num107) | 0) - 28) | 0) - Math.imul(num103, 21))), 
            black3.MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
      }
    }
    if ($thisType.player[$thisType.myPlayer].dead) {
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontDeathText, 
        "You were slain...", 
        $S04().Construct(+(((($thisType.screenWidth | 0) / 2) | 0) - Math.imul("You were slain...".length, 10)), +(((($thisType.screenHeight | 0) / 2) | 0) - 20)), 
        $thisType.player[$thisType.myPlayer].GetDeathAlpha($S01().Construct(0, 0, 0, 0)).MemberwiseClone(), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
    }
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.cursorTexture, 
      $S04().Construct(+(($thisType.mouseState.get_X() | 0) + 1), +(($thisType.mouseState.get_Y() | 0) + 1)), 
      new ($T24())(0, 0, $thisType.cursorTexture.get_Width(), $thisType.cursorTexture.get_Height()), 
      $S01().Construct(((+($thisType.cursorColor.get_R()) * 0.2) | 0), ((+($thisType.cursorColor.get_G()) * 0.2) | 0), ((+($thisType.cursorColor.get_B()) * 0.2) | 0), ((+($thisType.cursorColor.get_A()) * 0.5) | 0)), 
      0, 
      new ($T25())(), 
      +$thisType.cursorScale * 1.1, 
      $T2A().None, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.cursorTexture, 
      $S04().Construct(+($thisType.mouseState.get_X()), +($thisType.mouseState.get_Y())), 
      new ($T24())(0, 0, $thisType.cursorTexture.get_Width(), $thisType.cursorTexture.get_Height()), 
      $thisType.cursorColor.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      $thisType.cursorScale, 
      $T2A().None, 
      0
    );
    if (!((($thisType.mouseItem.type | 0) <= 0) || (($thisType.mouseItem.stack | 0) <= 0))) {
      $thisType.player[$thisType.myPlayer].showItemIcon = false;
      $thisType.player[$thisType.myPlayer].showItemIcon2 = 0;
      flag = true;
      var num108 = 1;
      if (!((($thisType.itemTexture[$thisType.mouseItem.type].get_Width() | 0) <= 32) && (($thisType.itemTexture[$thisType.mouseItem.type].get_Height() | 0) <= 32))) {
        if (($thisType.itemTexture[$thisType.mouseItem.type].get_Width() | 0) > ($thisType.itemTexture[$thisType.mouseItem.type].get_Height() | 0)) {
          num108 = +((32 / +($thisType.itemTexture[$thisType.mouseItem.type].get_Width())));
        } else {
          num108 = +((32 / +($thisType.itemTexture[$thisType.mouseItem.type].get_Height())));
        }
      }
      var white9 = $T04().get_White().MemberwiseClone();
      num108 *= 1;
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.itemTexture[$thisType.mouseItem.type], 
        $S04().Construct(((+($thisType.mouseState.get_X()) + (26 * 1)) - ((+($thisType.itemTexture[$thisType.mouseItem.type].get_Width()) * 0.5) * num108)), ((+($thisType.mouseState.get_Y()) + (26 * 1)) - ((+($thisType.itemTexture[$thisType.mouseItem.type].get_Height()) * 0.5) * num108))), 
        new ($T24())(0, 0, $thisType.itemTexture[$thisType.mouseItem.type].get_Width(), $thisType.itemTexture[$thisType.mouseItem.type].get_Height()), 
        $thisType.mouseItem.GetAlpha(white9).MemberwiseClone(), 
        0, 
        new ($T25())(), 
        num108, 
        $T2A().None, 
        0
      );
      if ($T04().op_Inequality($thisType.mouseItem.color.MemberwiseClone(), new ($T04())())) {
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.itemTexture[$thisType.mouseItem.type], 
          $S04().Construct(((+($thisType.mouseState.get_X()) + (26 * 1)) - ((+($thisType.itemTexture[$thisType.mouseItem.type].get_Width()) * 0.5) * num108)), ((+($thisType.mouseState.get_Y()) + (26 * 1)) - ((+($thisType.itemTexture[$thisType.mouseItem.type].get_Height()) * 0.5) * num108))), 
          new ($T24())(0, 0, $thisType.itemTexture[$thisType.mouseItem.type].get_Width(), $thisType.itemTexture[$thisType.mouseItem.type].get_Height()), 
          $thisType.mouseItem.GetColor(white9).MemberwiseClone(), 
          0, 
          new ($T25())(), 
          num108, 
          $T2A().None, 
          0
        );
      }
      if (($thisType.mouseItem.stack | 0) > 1) {
        $S08().CallVirtual("DrawString", null, this.spriteBatch, 
          $thisType.fontItemStack, 
          String($T0C().$Box($thisType.mouseItem.stack)), 
          $S04().Construct((+($thisType.mouseState.get_X()) + (10 * 1)), (+($thisType.mouseState.get_Y()) + (26 * 1))), 
          white9.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          num108, 
          $T2A().None, 
          0
        );
      }
    }
    var rectangle2 = new ($T24())(((+($thisType.mouseState.get_X()) + +$thisType.screenPosition.X) | 0), ((+($thisType.mouseState.get_Y()) + +$thisType.screenPosition.Y) | 0), 1, 1);
    if (!flag) {
      var num110 = ((Math.imul(26, $thisType.player[$thisType.myPlayer].statLifeMax) / num10) | 0);
      var num111 = 0;
      if (($thisType.player[$thisType.myPlayer].statLifeMax | 0) > 200) {
        num110 = 260;
        num111 = ((num111 + 26) | 0);
      }
      if (!((($thisType.mouseState.get_X() | 0) <= 500) || 
          (($thisType.mouseState.get_X() | 0) >= ((500 + num110) | 0)) || 
          (($thisType.mouseState.get_Y() | 0) <= 32) || (($thisType.mouseState.get_Y() | 0) >= ((((32 + ($thisType.heartTexture.get_Height() | 0)) | 0) + num111) | 0)))) {
        $thisType.player[$thisType.myPlayer].showItemIcon = false;
        var cursorText = (JSIL.ConcatString($T0C().$Box($thisType.player[$thisType.myPlayer].statLife), "/", $T0C().$Box($thisType.player[$thisType.myPlayer].statLifeMax)));
        this.MouseText(cursorText, 0);
        flag = true;
      }
    }
    if (!flag) {
      if (!((($thisType.mouseState.get_X() | 0) <= 762) || 
          (($thisType.mouseState.get_X() | 0) >= ((762 + 24) | 0)) || 
          (($thisType.mouseState.get_Y() | 0) <= 30) || (($thisType.mouseState.get_Y() | 0) >= ((30 + ((Math.imul(28, $thisType.player[$thisType.myPlayer].statManaMax) / num16) | 0)) | 0)))) {
        $thisType.player[$thisType.myPlayer].showItemIcon = false;
        var cursorText2 = (JSIL.ConcatString($T0C().$Box($thisType.player[$thisType.myPlayer].statMana), "/", $T0C().$Box($thisType.player[$thisType.myPlayer].statManaMax)));
        this.MouseText(cursorText2, 0);
        flag = true;
      }
    }
    if (!flag) {

    $loop24: 
      for (var num114 = 0; num114 < 200; num114 = ((num114 + 1) | 0)) {
        if ($thisType.item[num114].active) {
          (value2 = value2.MemberwiseClone(), 
            $T24().prototype._ctor.call(value2, 
              ((($thisType.item[num114].position.X + (+($thisType.item[num114].width) * 0.5)) - (+(($thisType.itemTexture[$thisType.item[num114].type]).get_Width()) * 0.5)) | 0), 
              (((+$thisType.item[num114].position.Y + +($thisType.item[num114].height)) - +(($thisType.itemTexture[$thisType.item[num114].type]).get_Height())) | 0), 
              ($thisType.itemTexture[$thisType.item[num114].type]).get_Width(), 
              ($thisType.itemTexture[$thisType.item[num114].type]).get_Height()
            ));
          if (rectangle2.Intersects(value2.MemberwiseClone())) {
            $thisType.player[$thisType.myPlayer].showItemIcon = false;
            var text11 = $thisType.item[num114].$name;
            if (($thisType.item[num114].stack | 0) > 1) {
              obj = text11;
              text11 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.item[num114].stack), ")"])));
            }
            if (!((($thisType.item[num114].owner | 0) >= 8) || !$thisType.showItemOwner)) {
              text11 = ((text11 + " <" + $thisType.player[$thisType.item[num114].owner].$name + ">"));
            }
            rare = ($thisType.item[num114].rare | 0);
            this.MouseText(text11, rare);
            flag = true;
            break $loop24;
          }
        }
      }
    }

    for (var num115 = 0; num115 < 8; num115 = ((num115 + 1) | 0)) {
      if (!(!$thisType.player[num115].active || 
          (($thisType.myPlayer | 0) === num115) || $thisType.player[num115].dead)) {
        (value3 = value3.MemberwiseClone(), 
          $T24().prototype._ctor.call(value3, ((($thisType.player[num115].position.X + (+($thisType.player[num115].width) * 0.5)) - 16) | 0), (((+$thisType.player[num115].position.Y + +($thisType.player[num115].height)) - 48) | 0), 32, 48));
        if (!(flag || !rectangle2.Intersects(value3.MemberwiseClone()))) {
          $thisType.player[$thisType.myPlayer].showItemIcon = false;
          var text12 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.player[num115].$name, ": ", $T0C().$Box($thisType.player[num115].statLife), "/", $T0C().$Box($thisType.player[num115].statLifeMax)])));
          if ($thisType.player[num115].hostile) {
            text12 = (JSIL.ConcatString(text12, " (PvP)"));
          }
          this.MouseText(text12, 0);
        }
      }
    }
    if (!flag) {

    $loop26: 
      for (var num116 = 0; num116 < 1000; num116 = ((num116 + 1) | 0)) {
        if ($thisType.npc[num116].active) {
          (value4 = value4.MemberwiseClone(), 
            $T24().prototype._ctor.call(value4, 
              ((($thisType.npc[num116].position.X + (+($thisType.npc[num116].width) * 0.5)) - (+(($thisType.npcTexture[$thisType.npc[num116].type]).get_Width()) * 0.5)) | 0), 
              (((+$thisType.npc[num116].position.Y + +($thisType.npc[num116].height)) - +(((($thisType.npcTexture[$thisType.npc[num116].type]).get_Height() | 0) / ($thisType.npcFrameCount[$thisType.npc[num116].type] | 0) | 0))) | 0), 
              ($thisType.npcTexture[$thisType.npc[num116].type]).get_Width(), 
              (((($thisType.npcTexture[$thisType.npc[num116].type]).get_Height() | 0) / ($thisType.npcFrameCount[$thisType.npc[num116].type] | 0)) | 0)
            ));
          if (rectangle2.Intersects(value4.MemberwiseClone())) {
            var flag4 = false;
            if ($thisType.npc[num116].townNPC) {
              (rectangle3 = rectangle3.MemberwiseClone(), 
                $T24().prototype._ctor.call(rectangle3, (((+$thisType.player[$thisType.myPlayer].position.X + +((($thisType.player[$thisType.myPlayer].width | 0) / 2 | 0))) - +(($T19().tileRangeX | 0) * 16)) | 0), (((+$thisType.player[$thisType.myPlayer].position.Y + +((($thisType.player[$thisType.myPlayer].height | 0) / 2 | 0))) - +(($T19().tileRangeY | 0) * 16)) | 0), Math.imul(Math.imul($T19().tileRangeX, 16), 2), Math.imul(Math.imul($T19().tileRangeY, 16), 2)));
              (value5 = value5.MemberwiseClone(), 
                $T24().prototype._ctor.call(value5, (($thisType.npc[num116].position.X) | 0), (($thisType.npc[num116].position.Y) | 0), $thisType.npc[num116].width, $thisType.npc[num116].height));
              if (rectangle3.Intersects(value5.MemberwiseClone())) {
                flag4 = true;
              }
            }
            if (flag4) {
              var num117 = (-((((($thisType.npc[num116].width | 0) / 2) | 0) + 8) | 0) | 0);
              var effects2 = $T2A().None;
              if (($thisType.npc[num116].spriteDirection | 0) === -1) {
                effects2 = $T2A().FlipHorizontally;
                num117 = ((((($thisType.npc[num116].width | 0) / 2) | 0) + 8) | 0);
              }
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.chatTexture, 
                $S04().Construct(((((+$thisType.npc[num116].position.X + +((($thisType.npc[num116].width | 0) / 2 | 0))) - +$thisType.screenPosition.X) - +((($thisType.chatTexture.get_Width() | 0) / 2 | 0))) - +num117), ((+$thisType.npc[num116].position.Y - +($thisType.chatTexture.get_Height())) - +$thisType.screenPosition.Y)), 
                new ($T24())(0, 0, $thisType.chatTexture.get_Width(), $thisType.chatTexture.get_Height()), 
                $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor), 
                0, 
                new ($T25())(), 
                1, 
                effects2, 
                0
              );
              if (!(($thisType.mouseState.get_RightButton() !== $T2B().Pressed) || !$thisType.npcChatRelease)) {
                $thisType.npcChatRelease = false;
                if (($thisType.player[$thisType.myPlayer].talkNPC | 0) !== num116) {
                  $thisType.player[$thisType.myPlayer].sign = -1;
                  $thisType.editSign = false;
                  $thisType.player[$thisType.myPlayer].talkNPC = num116;
                  $thisType.playerInventory = false;
                  $thisType.player[$thisType.myPlayer].chest = -1;
                  $thisType.npcChatText = ($thisType.npc[num116]).GetChat();
                  $thisType.PlaySound(10, -1, -1, 1);
                }
              }
            }
            $thisType.player[$thisType.myPlayer].showItemIcon = false;
            var cursorText3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.npc[num116].$name, ": ", $T0C().$Box($thisType.npc[num116].life), "/", $T0C().$Box($thisType.npc[num116].lifeMax)])));
            this.MouseText(cursorText3, 0);
            break $loop26;
          }
        }
      }
    }
    if ($thisType.mouseState.get_RightButton() === $T2B().Pressed) {
      $thisType.npcChatRelease = false;
    } else {
      $thisType.npcChatRelease = true;
    }
    if (!(!$thisType.player[$thisType.myPlayer].showItemIcon || ((($thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].type | 0) <= 0) && 
          (($thisType.player[$thisType.myPlayer].showItemIcon2 | 0) <= 0)))) {
      var num118 = ($thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].type | 0);
      var color6 = $thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].GetAlpha($T04().get_White()).MemberwiseClone();
      var color7 = $thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].GetColor($T04().get_White());
      if (($thisType.player[$thisType.myPlayer].showItemIcon2 | 0) > 0) {
        num118 = ($thisType.player[$thisType.myPlayer].showItemIcon2 | 0);
        color6 = $T04().get_White().MemberwiseClone();
        color7 = new ($T04())();
      }
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.itemTexture[num118], 
        $S04().Construct(+(($thisType.mouseState.get_X() | 0) + 10), +(($thisType.mouseState.get_Y() | 0) + 10)), 
        new ($T24())(0, 0, ($thisType.itemTexture[num118]).get_Width(), ($thisType.itemTexture[num118]).get_Height()), 
        color6.MemberwiseClone(), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
      if (!((($thisType.player[$thisType.myPlayer].showItemIcon2 | 0) !== 0) || !$T04().op_Inequality($thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].color.MemberwiseClone(), new ($T04())()))) {
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].type], 
          $S04().Construct(+(($thisType.mouseState.get_X() | 0) + 10), +(($thisType.mouseState.get_Y() | 0) + 10)), 
          new ($T24())(0, 0, $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].type].get_Width(), $thisType.itemTexture[$thisType.player[$thisType.myPlayer].inventory[$thisType.player[$thisType.myPlayer].selectedItem].type].get_Height()), 
          color7.MemberwiseClone(), 
          0, 
          new ($T25())(), 
          1, 
          $T2A().None, 
          0
        );
      }
    }
    $thisType.player[$thisType.myPlayer].showItemIcon = false;
    $thisType.player[$thisType.myPlayer].showItemIcon2 = 0;
  }; 

  function Main_DrawMenu ($exception) {
    var array6 = null, intPtr = new ($T36())(), vector3 = new ($T25())(), vector4 = new ($T25())(), vector5 = new ($T25())();
    $thisType.evilTiles = 0;
    $thisType.chatMode = false;

    for (var i = 0; i < ($thisType.numChatLines | 0); i = ((i + 1) | 0)) {
      $thisType.chatLine[i] = new ($T17())();
    }
    this.DrawFPS();
    $thisType.screenPosition.Y = Math.fround((+$thisType.worldSurface * 16) - +($thisType.screenHeight));
    $thisType.background = 0;
    var b = (((((255 + ((($thisType.tileColor.get_R() | 0) * 2) | 0)) | 0) / 3) | 0) & 0xFF);
    var color = $S01().Construct(b, b, b, 255);
    this.logoRotation = +this.logoRotation + (+this.logoRotationSpeed * 3E-05);
    if (this.logoRotation > 0.1) {
      this.logoRotationDirection = -1;
    } else if (this.logoRotation < -0.1) {
      this.logoRotationDirection = 1;
    }
    if ((+this.logoRotationSpeed < 20) & (+this.logoRotationDirection === 1)) {
      this.logoRotationSpeed = +this.logoRotationSpeed + 1;
    } else if ((+this.logoRotationSpeed > -20) & (+this.logoRotationDirection === -1)) {
      this.logoRotationSpeed = +this.logoRotationSpeed - 1;
    }
    this.logoScale = +this.logoScale + (+this.logoScaleSpeed * 1E-05);
    if (this.logoScale > 1.1) {
      this.logoScaleDirection = -1;
    } else if (this.logoScale < 0.9) {
      this.logoScaleDirection = 1;
    }
    if ((+this.logoScaleSpeed < 50) & (+this.logoScaleDirection === 1)) {
      this.logoScaleSpeed = +this.logoScaleSpeed + 1;
    } else if ((+this.logoScaleSpeed > -50) & (+this.logoScaleDirection === -1)) {
      this.logoScaleSpeed = +this.logoScaleSpeed - 1;
    }
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.logoTexture, 
      $S04().Construct(+((($thisType.screenWidth | 0) / 2 | 0)), 100), 
      new ($T24())(0, 0, $thisType.logoTexture.get_Width(), $thisType.logoTexture.get_Height()), 
      color.MemberwiseClone(), 
      this.logoRotation, 
      $S04().Construct(+((($thisType.logoTexture.get_Width() | 0) / 2 | 0)), +((($thisType.logoTexture.get_Height() | 0) / 2 | 0))), 
      this.logoScale, 
      $T2A().None, 
      0
    );
    var num = 250;
    var num2 = ((($thisType.screenWidth | 0) / 2) | 0);
    var num3 = 80;
    var num4 = 0;
    var num5 = ($thisType.menuMode | 0);
    var num6 = -1;
    var num7 = 0;
    var num8 = 0;
    var flag = false;
    var flag2 = false;
    var flag3 = false;
    var num9 = 0;
    var array = JSIL.Array.New($T0B(), $thisType.maxMenuItems);
    var array2 = JSIL.Array.New($T0B(), $thisType.maxMenuItems);
    var array3 = JSIL.Array.New($T0C(), $thisType.maxMenuItems);
    var array4 = JSIL.Array.New($T0C(), $thisType.maxMenuItems);

    for (var j = 0; j < ($thisType.maxMenuItems | 0); j = ((j + 1) | 0)) {
      array[j] = false;
      array2[j] = false;
      array3[j] = 0;
      array4[j] = 0;
    }
    var array5 = JSIL.Array.New($T1A(), $thisType.maxMenuItems);
    if (($thisType.menuMode | 0) === -1) {
      $thisType.menuMode = 0;
    }
    if (($thisType.netMode | 0) === 2) {
      var flag4 = true;

      for (var k = 0; k < 8; k = ((k + 1) | 0)) {
        if (k < 8) {
          try {
            array5[k] = $T32().serverSock[k].statusText;
            if (!(!$T32().serverSock[k].active || !$thisType.showSpam)) {
              var expr_348 = array6 = array5;
              var expr_34D = intPtr = k;
              var obj = array6[intPtr];
              expr_348[expr_34D] = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($T2D().buffer[k].spamCount), ")"])));
            }
          } catch ($exception) {
            array5[k] = "";
          }
          array[k] = true;
          if (!(!(array5[k] != "") || (array5[k] === null))) {
            flag4 = false;
          }
        }
      }
      if (flag4) {
        array5[0] = "Start a new instance of Terraria to join!";
        array5[1] = "Running on port 31337.";
      }
      num4 = 11;
      array5[9] = $thisType.statusText;
      array[9] = true;
      num = 170;
      num3 = 30;
      array3[10] = 20;
      array3[10] = 40;
      array5[10] = "Disconnect";
      if ((this.selectedMenu | 0) === 10) {
        $T32().disconnect = true;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 31) {
      var password = $T32().password;
      $T32().password = $thisType.GetInputText($T32().password);
      if (password != $T32().password) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      array5[0] = "Server Requires Password:";
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      array5[1] = $T32().password;
      if ((this.textBlinkerState | 0) === 1) {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], "|"));
        array4[1] = 1;
      } else {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], " "));
      }
      array[0] = true;
      array[1] = true;
      array3[1] = -20;
      array3[2] = 20;
      array5[2] = "Accept";
      array5[3] = "Back";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 0;
        $T32().disconnect = true;
        $T32().password = "";
      } else if (!(((this.selectedMenu | 0) !== 2) && !$thisType.inputTextEnter)) {
        $T2D().SendData(
          38, 
          -1, 
          -1, 
          $T32().password, 
          0, 
          0, 
          0, 
          0
        );
        $thisType.menuMode = 14;
      }
    } else if (!((($thisType.netMode | 0) !== 1) && (($thisType.menuMode | 0) !== 14))) {
      num4 = 2;
      array5[0] = $thisType.statusText;
      array[0] = true;
      num = 300;
      array5[1] = "Cancel";
      if ((this.selectedMenu | 0) === 1) {
        $T32().disconnect = true;
        $T32().clientSock.tcpClient.Close();
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 0;
        $thisType.netMode = 0;
      }
    } else if (($thisType.menuMode | 0) === 30) {
      var password2 = $T32().password;
      $T32().password = $thisType.GetInputText($T32().password);
      if (password2 != $T32().password) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      array5[0] = "Enter Server Password:";
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      array5[1] = $T32().password;
      if ((this.textBlinkerState | 0) === 1) {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], "|"));
        array4[1] = 1;
      } else {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], " "));
      }
      array[0] = true;
      array[1] = true;
      array3[1] = -20;
      array3[2] = 20;
      array5[2] = "Accept";
      array5[3] = "Back";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 6;
        $T32().password = "";
      } else if (!(((this.selectedMenu | 0) !== 2) && !$thisType.inputTextEnter)) {
        $T39().serverLoadWorld();
        $thisType.menuMode = 10;
      }
    } else if (($thisType.menuMode | 0) === 15) {
      num4 = 2;
      array5[0] = $thisType.statusText;
      array[0] = true;
      num = 80;
      num3 = 400;
      array5[1] = "Back";
      if ((this.selectedMenu | 0) === 1) {
        $T32().disconnect = true;
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 0;
        $thisType.netMode = 0;
      }
    } else if (($thisType.menuMode | 0) === 10) {
      num4 = 1;
      array5[0] = $thisType.statusText;
      array[0] = true;
      num = 300;
    } else if (($thisType.menuMode | 0) === 0) {
      $thisType.menuMultiplayer = false;
      $thisType.netMode = 0;
      array5[0] = "Single Player";
      array5[1] = "Multiplayer";
      array5[2] = "Settings";
      array5[3] = "Exit";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        this.QuitGame();
      }
      if ((this.selectedMenu | 0) === 1) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 12;
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 11;
      }
      if ((this.selectedMenu | 0) === 0) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 1;
        $thisType.LoadPlayers();
      }
    } else if (($thisType.menuMode | 0) === 1) {
      $thisType.myPlayer = 0;
      num = 190;
      num3 = 50;
      array5[5] = "Create Character";
      array5[6] = "Delete";
      if (($thisType.numLoadPlayers | 0) === 5) {
        array2[5] = true;
        array5[5] = "";
      } else if (($thisType.numLoadPlayers | 0) === 0) {
        array2[6] = true;
        array5[6] = "";
      }
      array5[7] = "Back";

      for (var l = 0; l < 5; l = ((l + 1) | 0)) {
        if (l < ($thisType.numLoadPlayers | 0)) {
          array5[l] = $thisType.loadPlayer[l].$name;
        } else {
          array5[l] = null;
        }
      }
      num4 = 8;
      if (!(((this.focusMenu | 0) < 0) || ((this.focusMenu | 0) >= ($thisType.numLoadPlayers | 0)))) {
        num6 = (this.focusMenu | 0);
        var vector = $S06().CallVirtual("MeasureString", null, $thisType.fontDeathText, array5[num6]).MemberwiseClone();
        num7 = (((+((($thisType.screenWidth | 0) / 2 | 0)) + (vector.X * 0.5)) + 10) | 0);
        num8 = ((((num + Math.imul(num3, this.focusMenu)) | 0) + 4) | 0);
      }
      if ((this.selectedMenu | 0) === 7) {
        $thisType.PlaySound(11, -1, -1, 1);
        if ($thisType.menuMultiplayer) {
          $thisType.menuMode = 12;
        } else {
          $thisType.menuMode = 0;
        }
        $thisType.menuMultiplayer = false;
      } else if ((this.selectedMenu | 0) === 5) {
        $thisType.loadPlayer[$thisType.numLoadPlayers] = new ($T19())();
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 2;
      } else if ((this.selectedMenu | 0) === 6) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 4;
      } else if ((this.selectedMenu | 0) >= 0) {
        if ($thisType.menuMultiplayer) {
          this.selectedPlayer = (this.selectedMenu | 0);
          $thisType.player[$thisType.myPlayer] = $T19().$Cast(($thisType.loadPlayer[this.selectedPlayer]).Clone());
          $thisType.playerPathName = $thisType.loadPlayerPath[this.selectedPlayer];
          $thisType.PlaySound(10, -1, -1, 1);
          $thisType.menuMode = 13;
        } else {
          $thisType.myPlayer = 0;
          this.selectedPlayer = (this.selectedMenu | 0);
          $thisType.player[$thisType.myPlayer] = $T19().$Cast(($thisType.loadPlayer[this.selectedPlayer]).Clone());
          $thisType.playerPathName = $thisType.loadPlayerPath[this.selectedPlayer];
          $thisType.LoadWorlds();
          $thisType.PlaySound(10, -1, -1, 1);
          $thisType.menuMode = 6;
        }
      }
    } else if (($thisType.menuMode | 0) === 2) {
      if ((this.selectedMenu | 0) === 0) {
        $thisType.menuMode = 17;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].hairColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 1) {
        $thisType.menuMode = 18;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].eyeColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 19;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].skinColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 3) {
        $thisType.menuMode = 20;
        $thisType.PlaySound(10, -1, -1, 1);
      }
      array5[0] = "Hair";
      array5[1] = "Eyes";
      array5[2] = "Skin";
      array5[3] = "Clothes";
      num = 260;
      num3 = 50;
      array3[4] = 20;
      array3[5] = 20;
      array5[4] = "Create";
      array5[5] = "Back";
      num4 = 6;
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 1;
      } else if ((this.selectedMenu | 0) === 4) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.loadPlayer[$thisType.numLoadPlayers].$name = "";
        $thisType.menuMode = 3;
      }
    } else if (($thisType.menuMode | 0) === 20) {
      if ((this.selectedMenu | 0) === 0) {
        $thisType.menuMode = 21;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].shirtColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 1) {
        $thisType.menuMode = 22;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].underShirtColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 23;
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].pantsColor.MemberwiseClone();
      }
      if ((this.selectedMenu | 0) === 3) {
        this.selColor = $thisType.loadPlayer[$thisType.numLoadPlayers].shoeColor.MemberwiseClone();
        $thisType.menuMode = 24;
        $thisType.PlaySound(10, -1, -1, 1);
      }
      array5[0] = "Shirt";
      array5[1] = "Undershirt";
      array5[2] = "Pants";
      array5[3] = "Misc";
      num = 260;
      num3 = 50;
      array3[5] = 20;
      array5[5] = "Back";
      num4 = 6;
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 2;
      }
    } else if (($thisType.menuMode | 0) === 17) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 390;
      num = 260;
      num3 = 60;
      $thisType.loadPlayer[num6].hairColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = (JSIL.ConcatString("Hair ", $T0C().$Box(((($thisType.loadPlayer[num6].hair | 0) + 1) | 0))));
      array5[1] = "Hair Color";
      array[1] = true;
      array3[2] = 150;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 0) {
        $thisType.PlaySound(12, -1, -1, 1);
        $thisType.loadPlayer[num6].hair = ((($thisType.loadPlayer[num6].hair | 0) + 1) | 0);
        if (($thisType.loadPlayer[num6].hair | 0) >= 17) {
          $thisType.loadPlayer[num6].hair = 0;
        }
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 2;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 18) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].eyeColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Eye Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 2;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 19) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].skinColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Skin Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 2;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 21) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].shirtColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Shirt Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 20;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 22) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].underShirtColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Undershirt Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 20;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 23) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].pantsColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Pants Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 20;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 24) {
      num6 = ($thisType.numLoadPlayers | 0);
      num7 = ((((($thisType.screenWidth | 0) / 2) | 0) - 16) | 0);
      num8 = 210;
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.loadPlayer[num6].shoeColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Misc Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 20;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 3) {
      var name = $thisType.loadPlayer[$thisType.numLoadPlayers].$name;
      $thisType.loadPlayer[$thisType.numLoadPlayers].$name = $thisType.GetInputText($thisType.loadPlayer[$thisType.numLoadPlayers].$name);
      if (($thisType.loadPlayer[$thisType.numLoadPlayers].$name.length | 0) > 20) {
        $thisType.loadPlayer[$thisType.numLoadPlayers].$name = ($thisType.loadPlayer[$thisType.numLoadPlayers].$name.substr(0, 20));
      }
      if (name != $thisType.loadPlayer[$thisType.numLoadPlayers].$name) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      array5[0] = "Enter Character Name:";
      array2[2] = true;
      if ($thisType.loadPlayer[$thisType.numLoadPlayers].$name != "") {
        if ($thisType.loadPlayer[$thisType.numLoadPlayers].$name.substr(0, 1) == " ") {
          $thisType.loadPlayer[$thisType.numLoadPlayers].$name = "";
        }

        for (var m = 0; m < ($thisType.loadPlayer[$thisType.numLoadPlayers].$name.length | 0); m = ((m + 1) | 0)) {
          if ($thisType.loadPlayer[$thisType.numLoadPlayers].$name.substr(m, 1) != " ") {
            array2[2] = false;
          }
        }
      }
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      array5[1] = $thisType.loadPlayer[$thisType.numLoadPlayers].$name;
      if ((this.textBlinkerState | 0) === 1) {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], "|"));
        array4[1] = 1;
      } else {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], " "));
      }
      array[0] = true;
      array[1] = true;
      array3[1] = -20;
      array3[2] = 20;
      array5[2] = "Accept";
      array5[3] = "Back";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 2;
      }
      if (!(((this.selectedMenu | 0) !== 2) && (array2[2] || 
            !$thisType.inputTextEnter))) {
        $thisType.loadPlayerPath[$thisType.numLoadPlayers] = $thisType.nextLoadPlayer();
        $T19().SavePlayer($thisType.loadPlayer[$thisType.numLoadPlayers], $thisType.loadPlayerPath[$thisType.numLoadPlayers]);
        $thisType.LoadPlayers();
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 1;
      }
    } else if (($thisType.menuMode | 0) === 4) {
      num = 220;
      num3 = 60;
      array5[5] = "Back";

      for (var n = 0; n < 5; n = ((n + 1) | 0)) {
        if (n < ($thisType.numLoadPlayers | 0)) {
          array5[n] = $thisType.loadPlayer[n].$name;
        } else {
          array5[n] = null;
        }
      }
      num4 = 6;
      if (!(((this.focusMenu | 0) < 0) || ((this.focusMenu | 0) >= ($thisType.numLoadPlayers | 0)))) {
        num6 = (this.focusMenu | 0);
        var vector2 = $S06().CallVirtual("MeasureString", null, $thisType.fontDeathText, array5[num6]).MemberwiseClone();
        num7 = (((+((($thisType.screenWidth | 0) / 2 | 0)) + (vector2.X * 0.5)) + 10) | 0);
        num8 = ((((num + Math.imul(num3, this.focusMenu)) | 0) + 4) | 0);
      }
      if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 1;
      } else if ((this.selectedMenu | 0) >= 0) {
        this.selectedPlayer = (this.selectedMenu | 0);
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 5;
      }
    } else if (($thisType.menuMode | 0) === 5) {
      array5[0] = (("Delete " + $thisType.loadPlayer[this.selectedPlayer].$name + "?"));
      array[0] = true;
      array5[1] = "Yes";
      array5[2] = "No";
      num4 = 3;
      if ((this.selectedMenu | 0) === 1) {
        $thisType.ErasePlayer(this.selectedPlayer);
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 1;
      } else if ((this.selectedMenu | 0) === 2) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 1;
      }
    } else if (($thisType.menuMode | 0) === 6) {
      num = 190;
      num3 = 50;
      array5[5] = "Create World";
      array5[6] = "Delete";
      if (($thisType.numLoadWorlds | 0) === 5) {
        array2[5] = true;
        array5[5] = "";
      } else if (($thisType.numLoadWorlds | 0) === 0) {
        array2[6] = true;
        array5[6] = "";
      }
      array5[7] = "Back";

      for (var num10 = 0; num10 < 5; num10 = ((num10 + 1) | 0)) {
        if (num10 < ($thisType.numLoadWorlds | 0)) {
          array5[num10] = $thisType.loadWorld[num10];
        } else {
          array5[num10] = null;
        }
      }
      num4 = 8;
      if ((this.selectedMenu | 0) === 7) {
        if ($thisType.menuMultiplayer) {
          $thisType.menuMode = 12;
        } else {
          $thisType.menuMode = 1;
        }
        $thisType.PlaySound(11, -1, -1, 1);
      } else if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 16;
        $thisType.newWorldName = (JSIL.ConcatString("World ", $T0C().$Box(((($thisType.numLoadWorlds | 0) + 1) | 0))));
      } else if ((this.selectedMenu | 0) === 6) {
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 8;
      } else if ((this.selectedMenu | 0) >= 0) {
        if ($thisType.menuMultiplayer) {
          $thisType.PlaySound(10, -1, -1, 1);
          $thisType.worldPathName = $thisType.loadWorldPath[this.selectedMenu];
          $thisType.menuMode = 30;
        } else {
          $thisType.PlaySound(10, -1, -1, 1);
          $thisType.worldPathName = $thisType.loadWorldPath[this.selectedMenu];
          $T39().playWorld();
          $thisType.menuMode = 10;
        }
      }
    } else if (($thisType.menuMode | 0) === 7) {
      var a = $thisType.newWorldName;
      $thisType.newWorldName = $thisType.GetInputText($thisType.newWorldName);
      if (($thisType.newWorldName.length | 0) > 20) {
        $thisType.newWorldName = ($thisType.newWorldName.substr(0, 20));
      }
      if (a != $thisType.newWorldName) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      array5[0] = "Enter World Name:";
      array2[2] = true;
      if ($thisType.newWorldName != "") {
        if ($thisType.newWorldName.substr(0, 1) == " ") {
          $thisType.newWorldName = "";
        }

        for (var num11 = 0; num11 < ($thisType.newWorldName.length | 0); num11 = ((num11 + 1) | 0)) {
          if ($thisType.newWorldName != " ") {
            array2[2] = false;
          }
        }
      }
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      array5[1] = $thisType.newWorldName;
      if ((this.textBlinkerState | 0) === 1) {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], "|"));
        array4[1] = 1;
      } else {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], " "));
      }
      array[0] = true;
      array[1] = true;
      array3[1] = -20;
      array3[2] = 20;
      array5[2] = "Accept";
      array5[3] = "Back";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 16;
      }
      if (!(((this.selectedMenu | 0) !== 2) && (array2[2] || 
            !$thisType.inputTextEnter))) {
        $thisType.menuMode = 10;
        $thisType.worldName = $thisType.newWorldName;
        $thisType.worldPathName = $thisType.nextLoadWorld();
        $T39().CreateNewWorld();
      }
    } else if (($thisType.menuMode | 0) === 8) {
      num = 220;
      num3 = 60;
      array5[5] = "Back";

      for (var num12 = 0; num12 < 5; num12 = ((num12 + 1) | 0)) {
        if (num12 < ($thisType.numLoadWorlds | 0)) {
          array5[num12] = $thisType.loadWorld[num12];
        } else {
          array5[num12] = null;
        }
      }
      num4 = 6;
      if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 1;
      } else if ((this.selectedMenu | 0) >= 0) {
        this.selectedWorld = (this.selectedMenu | 0);
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 9;
      }
    } else if (($thisType.menuMode | 0) === 9) {
      array5[0] = (("Delete " + $thisType.loadWorld[this.selectedWorld] + "?"));
      array[0] = true;
      array5[1] = "Yes";
      array5[2] = "No";
      num4 = 3;
      if ((this.selectedMenu | 0) === 1) {
        $thisType.EraseWorld(this.selectedWorld);
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 6;
      } else if ((this.selectedMenu | 0) === 2) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 6;
      }
    } else if (($thisType.menuMode | 0) === 11) {
      num = 210;
      num3 = 60;
      array3[5] = 20;
      num4 = 6;
      if ((this.graphics).get_IsFullScreen()) {
        array5[0] = "Fullscreen Mode";
      } else {
        array5[0] = "Windowed Mode";
      }
      this.bgScroll = ((Math.round((1 - +$thisType.caveParrallax) * 500)) | 0);
      array5[1] = "Cursor Color";
      array5[2] = "Volume";
      array5[3] = "Controls";
      array5[4] = "Parallax";
      array5[5] = "Back";
      if ((this.selectedMenu | 0) === 5) {
        $thisType.PlaySound(11, -1, -1, 1);
        this.SaveSettings();
        $thisType.menuMode = 0;
      }
      if ((this.selectedMenu | 0) === 4) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 28;
      }
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 27;
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 26;
      }
      if ((this.selectedMenu | 0) === 1) {
        $thisType.PlaySound(10, -1, -1, 1);
        this.selColor = $thisType.mouseColor.MemberwiseClone();
        $thisType.menuMode = 25;
      }
      if ((this.selectedMenu | 0) === 0) {
        (this.graphics).ToggleFullScreen();
      }
    } else if (($thisType.menuMode | 0) === 25) {
      flag = true;
      num9 = 370;
      num = 240;
      num3 = 60;
      $thisType.mouseColor = this.selColor.MemberwiseClone();
      num4 = 3;
      array5[0] = "";
      array5[1] = "Cursor Color";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 11;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 26) {
      flag2 = true;
      num = 240;
      num3 = 60;
      num4 = 3;
      array5[0] = "";
      array5[1] = "Volume";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 11;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 28) {
      $thisType.caveParrallax = 1 - +((+(this.bgScroll) / 500));
      flag3 = true;
      num = 240;
      num3 = 60;
      num4 = 3;
      array5[0] = "";
      array5[1] = "Parallax";
      array[1] = true;
      array3[2] = 170;
      array3[1] = 10;
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 2) {
        $thisType.menuMode = 11;
        $thisType.PlaySound(11, -1, -1, 1);
      }
    } else if (($thisType.menuMode | 0) === 27) {
      num = 200;
      num3 = 50;
      num4 = 7;
      var array7 = JSIL.Array.New($T1A(), [$thisType.cUp, $thisType.cDown, $thisType.cLeft, $thisType.cRight, $thisType.cJump, $thisType.cThrowItem]);
      if ((this.setKey | 0) >= 0) {
        array7[this.setKey] = "_";
      }
      array5[0] = (JSIL.ConcatString("Up......", array7[0]));
      array5[1] = (JSIL.ConcatString("Down......", array7[1]));
      array5[2] = (JSIL.ConcatString("Left......", array7[2]));
      array5[3] = (JSIL.ConcatString("Right......", array7[3]));
      array5[4] = (JSIL.ConcatString("Jump......", array7[4]));
      array5[5] = (JSIL.ConcatString("Throw......", array7[5]));
      array3[6] = 20;
      array5[6] = "Back";
      if ((this.selectedMenu | 0) === 6) {
        $thisType.menuMode = 11;
        $thisType.PlaySound(11, -1, -1, 1);
      } else if ((this.selectedMenu | 0) >= 0) {
        this.setKey = (this.selectedMenu | 0);
      }
      if ((this.setKey | 0) >= 0) {
        var pressedKeys = $thisType.keyState.GetPressedKeys();
        if ((pressedKeys.length | 0) > 0) {
          var text = (String(pressedKeys[0]));
          if ((this.setKey | 0) === 0) {
            $thisType.cUp = text;
          }
          if ((this.setKey | 0) === 1) {
            $thisType.cDown = text;
          }
          if ((this.setKey | 0) === 2) {
            $thisType.cLeft = text;
          }
          if ((this.setKey | 0) === 3) {
            $thisType.cRight = text;
          }
          if ((this.setKey | 0) === 4) {
            $thisType.cJump = text;
          }
          if ((this.setKey | 0) === 5) {
            $thisType.cThrowItem = text;
          }
          this.setKey = -1;
        }
      }
    } else if (($thisType.menuMode | 0) === 12) {
      array5[0] = "Join";
      array5[1] = "Start Server";
      array5[2] = "Back";
      if ((this.selectedMenu | 0) === 0) {
        $thisType.LoadPlayers();
        $thisType.menuMultiplayer = true;
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 1;
      } else if ((this.selectedMenu | 0) === 1) {
        $thisType.LoadWorlds();
        $thisType.PlaySound(10, -1, -1, 1);
        $thisType.menuMode = 6;
        $thisType.menuMultiplayer = true;
      }
      if ((this.selectedMenu | 0) === 2) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 0;
      }
      num4 = 3;
    } else if (($thisType.menuMode | 0) === 13) {
      var a2 = $thisType.getIP;
      $thisType.getIP = $thisType.GetInputText($thisType.getIP);
      if (a2 != $thisType.getIP) {
        $thisType.PlaySound(12, -1, -1, 1);
      }
      array5[0] = "Enter Server IP Address:";
      array2[2] = true;
      if ($thisType.getIP != "") {
        if ($thisType.getIP.substr(0, 1) == " ") {
          $thisType.getIP = "";
        }

        for (var num13 = 0; num13 < ($thisType.getIP.length | 0); num13 = ((num13 + 1) | 0)) {
          if ($thisType.getIP != " ") {
            array2[2] = false;
          }
        }
      }
      this.textBlinkerCount = (((this.textBlinkerCount | 0) + 1) | 0);
      if ((this.textBlinkerCount | 0) >= 20) {
        if ((this.textBlinkerState | 0) === 0) {
          this.textBlinkerState = 1;
        } else {
          this.textBlinkerState = 0;
        }
        this.textBlinkerCount = 0;
      }
      array5[1] = $thisType.getIP;
      if ((this.textBlinkerState | 0) === 1) {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], "|"));
        array4[1] = 1;
      } else {
        (array6 = array5)[1] = (JSIL.ConcatString(array6[1], " "));
      }
      array[0] = true;
      array[1] = true;
      array3[1] = -20;
      array3[2] = 20;
      array5[2] = "Accept";
      array5[3] = "Back";
      num4 = 4;
      if ((this.selectedMenu | 0) === 3) {
        $thisType.PlaySound(11, -1, -1, 1);
        $thisType.menuMode = 1;
      }
      if (!((((this.selectedMenu | 0) !== 2) && 
            (array2[2] || 
              !$thisType.inputTextEnter)) || !$T32().SetIP($thisType.getIP))) {
        $thisType.menuMode = 10;
        $T32().StartClient();
      }
    } else if (($thisType.menuMode | 0) === 16) {
      num = 200;
      num3 = 60;
      array3[1] = 30;
      array3[2] = 30;
      array3[3] = 30;
      array3[4] = 70;
      array5[0] = "Choose world size:";
      array[0] = true;
      array5[1] = "Small";
      array5[2] = "Medium";
      array5[3] = "Large";
      array5[4] = "Back";
      num4 = 5;
      if ((this.selectedMenu | 0) === 4) {
        $thisType.menuMode = 6;
        $thisType.PlaySound(11, -1, -1, 1);
      } else if ((this.selectedMenu | 0) > 0) {
        if ((this.selectedMenu | 0) === 1) {
          $thisType.maxTilesX = 4200;
          $thisType.maxTilesY = 1200;
        } else if ((this.selectedMenu | 0) === 2) {
          $thisType.maxTilesX = 6300;
          $thisType.maxTilesY = 1800;
        } else {
          $thisType.maxTilesX = 8400;
          $thisType.maxTilesY = 2400;
        }
        $thisType.menuMode = 7;
        $thisType.PlaySound(10, -1, -1, 1);
        $T39().setWorldSize();
      }
    }
    if (($thisType.menuMode | 0) !== num5) {
      num4 = 0;

      for (var num14 = 0; num14 < ($thisType.maxMenuItems | 0); num14 = ((num14 + 1) | 0)) {
        this.menuItemScale[num14] = 0.8;
      }
    }
    var num15 = (this.focusMenu | 0);
    this.selectedMenu = -1;
    this.focusMenu = -1;

    for (var num16 = 0; num16 < num4; num16 = ((num16 + 1) | 0)) {
      if (array5[num16] !== null) {
        if (flag) {
          var text2 = "";

          for (var num17 = 0; num17 < 6; num17 = ((num17 + 1) | 0)) {
            var num18 = num9;
            var num19 = 370;
            if (num17 === 0) {
              text2 = "Red:";
            }
            if (num17 === 1) {
              text2 = "Green:";
              num18 = ((num18 + 30) | 0);
            }
            if (num17 === 2) {
              text2 = "Blue:";
              num18 = ((num18 + 60) | 0);
            }
            if (num17 === 3) {
              text2 = (String($T21().$Box((this.selColor).get_R())));
              num19 = ((num19 + 90) | 0);
            }
            if (num17 === 4) {
              text2 = (String($T21().$Box((this.selColor).get_G())));
              num19 = ((num19 + 90) | 0);
              num18 = ((num18 + 30) | 0);
            }
            if (num17 === 5) {
              text2 = (String($T21().$Box((this.selColor).get_B())));
              num19 = ((num19 + 90) | 0);
              num18 = ((num18 + 60) | 0);
            }

            for (var num20 = 0; num20 < 5; num20 = ((num20 + 1) | 0)) {
              var color2 = $T04().get_Black().MemberwiseClone();
              if (num20 === 4) {
                color2 = color.MemberwiseClone();
                color2.set_R((((((255 + (color2.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color2.set_G((((((255 + (color2.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color2.set_B((((((255 + (color2.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
              }
              var num22 = (((color2.get_R() | 0) - ((255 - 255) | 0)) | 0);
              if (num22 < 0) {
                num22 = 0;
              }
              (color2 = color2.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, color2, (num22 & 0xFF), (num22 & 0xFF), (num22 & 0xFF), (255 & 0xFF)));
              var num23 = 0;
              var num24 = 0;
              if (num20 === 0) {
                num23 = -2;
              }
              if (num20 === 1) {
                num23 = 2;
              }
              if (num20 === 2) {
                num24 = -2;
              }
              if (num20 === 3) {
                num24 = 2;
              }
              $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                $thisType.fontDeathText, 
                text2, 
                $S04().Construct(+(num19 + num23), +(num18 + num24)), 
                color2.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                0.5, 
                $T2A().None, 
                0
              );
            }
          }
          var flag5 = false;

          for (var num25 = 0; num25 < 2; num25 = ((num25 + 1) | 0)) {

            for (var num26 = 0; num26 < 3; num26 = ((num26 + 1) | 0)) {
              var num27 = ((((num9 + Math.imul(num26, 30)) | 0) - 12) | 0);
              var num28 = 360;
              if (num25 === 0) {
                num28 = ((num28 - 70) | 0);
                num27 = ((num27 + 2) | 0);
              } else {
                num28 = ((num28 - 40) | 0);
              }
              text2 = "-";
              if (num25 === 1) {
                text2 = "+";
              }
              (vector3 = vector3.MemberwiseClone(), 
                $T25().prototype._ctor.call(vector3, 24, 24));
              var num29 = 142;
              if (!((($thisType.mouseState.get_X() | 0) <= num28) || 
                  (+($thisType.mouseState.get_X()) >= (+num28 + +vector3.X)) || 
                  (($thisType.mouseState.get_Y() | 0) <= ((num27 + 13) | 0)) || (+($thisType.mouseState.get_Y()) >= (+(num27 + 13) + +vector3.Y)))) {
                if ((this.focusColor | 0) !== Math.imul(((num25 + 1) | 0), ((num26 + 10) | 0))) {
                  $thisType.PlaySound(12, -1, -1, 1);
                }
                this.focusColor = Math.imul(((num25 + 1) | 0), ((num26 + 10) | 0));
                flag5 = true;
                num29 = 255;
                if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
                  if ((this.colorDelay | 0) <= 1) {
                    if ((this.colorDelay | 0) === 0) {
                      this.colorDelay = 40;
                    } else {
                      this.colorDelay = 3;
                    }
                    var num30 = num25;
                    if (num25 === 0) {
                      num30 = -1;
                      if (((((((this.selColor).get_R() | 0) + ((this.selColor).get_G() | 0)) & 0xFF) + ((this.selColor).get_B() | 0)) & 0xFF) < 255) {
                        num30 = 0;
                      }
                    }
                    if (!((num26 !== 0) || 
                        (((((this.selColor).get_R() | 0) + num30) | 0) < 0) || (((((this.selColor).get_R() | 0) + num30) | 0) > 255))) {
                      (this.selColor).set_R((((((this.selColor).get_R() | 0) + num30) | 0) & 0xFF));
                    }
                    if (!((num26 !== 1) || 
                        (((((this.selColor).get_G() | 0) + num30) | 0) < 0) || (((((this.selColor).get_G() | 0) + num30) | 0) > 255))) {
                      (this.selColor).set_G((((((this.selColor).get_G() | 0) + num30) | 0) & 0xFF));
                    }
                    if (!((num26 !== 2) || 
                        (((((this.selColor).get_B() | 0) + num30) | 0) < 0) || (((((this.selColor).get_B() | 0) + num30) | 0) > 255))) {
                      (this.selColor).set_B((((((this.selColor).get_B() | 0) + num30) | 0) & 0xFF));
                    }
                  }
                  this.colorDelay = (((this.colorDelay | 0) - 1) | 0);
                } else {
                  this.colorDelay = 0;
                }
              }

              for (var num31 = 0; num31 < 5; num31 = ((num31 + 1) | 0)) {
                var color3 = $T04().get_Black().MemberwiseClone();
                if (num31 === 4) {
                  color3 = color.MemberwiseClone();
                  color3.set_R((((((255 + (color3.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color3.set_G((((((255 + (color3.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color3.set_B((((((255 + (color3.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                }
                var num32 = (((color3.get_R() | 0) - ((255 - num29) | 0)) | 0);
                if (num32 < 0) {
                  num32 = 0;
                }
                (color3 = color3.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color3, (num32 & 0xFF), (num32 & 0xFF), (num32 & 0xFF), (num29 & 0xFF)));
                var num33 = 0;
                var num34 = 0;
                if (num31 === 0) {
                  num33 = -2;
                }
                if (num31 === 1) {
                  num33 = 2;
                }
                if (num31 === 2) {
                  num34 = -2;
                }
                if (num31 === 3) {
                  num34 = 2;
                }
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontDeathText, 
                  text2, 
                  $S04().Construct(+(num28 + num33), +(num27 + num34)), 
                  color3.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  0.9, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
          if (!flag5) {
            this.focusColor = 0;
            this.colorDelay = 0;
          }
        }
        if (flag3) {
          var text3 = "";

          for (var num36 = 0; num36 < 4; num36 = ((num36 + 1) | 0)) {
            if (num36 === 0) {
              text3 = (JSIL.ConcatString("Parallax: ", $T0C().$Box(this.bgScroll)));
            }

            for (var num39 = 0; num39 < 5; num39 = ((num39 + 1) | 0)) {
              var color4 = $T04().get_Black().MemberwiseClone();
              if (num39 === 4) {
                color4 = color.MemberwiseClone();
                color4.set_R((((((255 + (color4.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color4.set_G((((((255 + (color4.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color4.set_B((((((255 + (color4.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
              }
              var num41 = (((color4.get_R() | 0) - ((255 - 255) | 0)) | 0);
              if (num41 < 0) {
                num41 = 0;
              }
              (color4 = color4.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, color4, (num41 & 0xFF), (num41 & 0xFF), (num41 & 0xFF), (255 & 0xFF)));
              var num42 = 0;
              var num43 = 0;
              if (num39 === 0) {
                num42 = -2;
              }
              if (num39 === 1) {
                num42 = 2;
              }
              if (num39 === 2) {
                num43 = -2;
              }
              if (num39 === 3) {
                num43 = 2;
              }
              $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                $thisType.fontDeathText, 
                text3, 
                $S04().Construct(+(370 + num42), +(400 + num43)), 
                color4.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                0.5, 
                $T2A().None, 
                0
              );
            }
          }
          var flag6 = false;

          for (var num44 = 0; num44 < 2; num44 = ((num44 + 1) | 0)) {

            for (var num45 = 0; num45 < 1; num45 = ((num45 + 1) | 0)) {
              var num46 = ((((400 + Math.imul(num45, 30)) | 0) - 12) | 0);
              var num47 = 360;
              if (num44 === 0) {
                num47 = ((num47 - 70) | 0);
                num46 = ((num46 + 2) | 0);
              } else {
                num47 = ((num47 - 40) | 0);
              }
              text3 = "-";
              if (num44 === 1) {
                text3 = "+";
              }
              (vector4 = vector4.MemberwiseClone(), 
                $T25().prototype._ctor.call(vector4, 24, 24));
              var num48 = 142;
              if (!((($thisType.mouseState.get_X() | 0) <= num47) || 
                  (+($thisType.mouseState.get_X()) >= (+num47 + +vector4.X)) || 
                  (($thisType.mouseState.get_Y() | 0) <= ((num46 + 13) | 0)) || (+($thisType.mouseState.get_Y()) >= (+(num46 + 13) + +vector4.Y)))) {
                if ((this.focusColor | 0) !== Math.imul(((num44 + 1) | 0), ((num45 + 10) | 0))) {
                  $thisType.PlaySound(12, -1, -1, 1);
                }
                this.focusColor = Math.imul(((num44 + 1) | 0), ((num45 + 10) | 0));
                flag6 = true;
                num48 = 255;
                if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
                  if ((this.colorDelay | 0) <= 1) {
                    if ((this.colorDelay | 0) === 0) {
                      this.colorDelay = 40;
                    } else {
                      this.colorDelay = 3;
                    }
                    var num49 = (JSIL.Coalesce(num44, -1) | 0);
                    if (num45 === 0) {
                      this.bgScroll = (((this.bgScroll | 0) + num49) | 0);
                      if ((this.bgScroll | 0) > 100) {
                        this.bgScroll = 100;
                      }
                      if ((this.bgScroll | 0) < 0) {
                        this.bgScroll = 0;
                      }
                    }
                  }
                  this.colorDelay = (((this.colorDelay | 0) - 1) | 0);
                } else {
                  this.colorDelay = 0;
                }
              }

              for (var num50 = 0; num50 < 5; num50 = ((num50 + 1) | 0)) {
                var color5 = $T04().get_Black().MemberwiseClone();
                if (num50 === 4) {
                  color5 = color.MemberwiseClone();
                  color5.set_R((((((255 + (color5.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color5.set_G((((((255 + (color5.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color5.set_B((((((255 + (color5.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                }
                var num51 = (((color5.get_R() | 0) - ((255 - num48) | 0)) | 0);
                if (num51 < 0) {
                  num51 = 0;
                }
                (color5 = color5.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color5, (num51 & 0xFF), (num51 & 0xFF), (num51 & 0xFF), (num48 & 0xFF)));
                var num52 = 0;
                var num53 = 0;
                if (num50 === 0) {
                  num52 = -2;
                }
                if (num50 === 1) {
                  num52 = 2;
                }
                if (num50 === 2) {
                  num53 = -2;
                }
                if (num50 === 3) {
                  num53 = 2;
                }
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontDeathText, 
                  text3, 
                  $S04().Construct(+(num47 + num52), +(num46 + num53)), 
                  color5.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  0.9, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
          if (!flag6) {
            this.focusColor = 0;
            this.colorDelay = 0;
          }
        }
        if (flag2) {
          var text4 = "";

          for (var num55 = 0; num55 < 4; num55 = ((num55 + 1) | 0)) {
            var num56 = 400;
            var num57 = 370;
            if (num55 === 0) {
              text4 = "Sound:";
            }
            if (num55 === 1) {
              text4 = "Music:";
              num56 = ((num56 + 30) | 0);
            }
            if (num55 === 2) {
              text4 = (JSIL.ConcatString($T20().$Box(Math.round(+$thisType.soundVolume * 100)), "%"));
              num57 = ((num57 + 90) | 0);
            }
            if (num55 === 3) {
              text4 = (JSIL.ConcatString($T20().$Box(Math.round(+$thisType.musicVolume * 100)), "%"));
              num57 = ((num57 + 90) | 0);
              num56 = ((num56 + 30) | 0);
            }

            for (var num58 = 0; num58 < 5; num58 = ((num58 + 1) | 0)) {
              var color6 = $T04().get_Black().MemberwiseClone();
              if (num58 === 4) {
                color6 = color.MemberwiseClone();
                color6.set_R((((((255 + (color6.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color6.set_G((((((255 + (color6.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                color6.set_B((((((255 + (color6.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
              }
              var num60 = (((color6.get_R() | 0) - ((255 - 255) | 0)) | 0);
              if (num60 < 0) {
                num60 = 0;
              }
              (color6 = color6.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, color6, (num60 & 0xFF), (num60 & 0xFF), (num60 & 0xFF), (255 & 0xFF)));
              var num61 = 0;
              var num62 = 0;
              if (num58 === 0) {
                num61 = -2;
              }
              if (num58 === 1) {
                num61 = 2;
              }
              if (num58 === 2) {
                num62 = -2;
              }
              if (num58 === 3) {
                num62 = 2;
              }
              $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                $thisType.fontDeathText, 
                text4, 
                $S04().Construct(+(num57 + num61), +(num56 + num62)), 
                color6.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                0.5, 
                $T2A().None, 
                0
              );
            }
          }
          var flag7 = false;

          for (var num63 = 0; num63 < 2; num63 = ((num63 + 1) | 0)) {

            for (var num64 = 0; num64 < 2; num64 = ((num64 + 1) | 0)) {
              var num65 = ((((400 + Math.imul(num64, 30)) | 0) - 12) | 0);
              var num66 = 360;
              if (num63 === 0) {
                num66 = ((num66 - 70) | 0);
                num65 = ((num65 + 2) | 0);
              } else {
                num66 = ((num66 - 40) | 0);
              }
              text4 = "-";
              if (num63 === 1) {
                text4 = "+";
              }
              (vector5 = vector5.MemberwiseClone(), 
                $T25().prototype._ctor.call(vector5, 24, 24));
              var num67 = 142;
              if (!((($thisType.mouseState.get_X() | 0) <= num66) || 
                  (+($thisType.mouseState.get_X()) >= (+num66 + +vector5.X)) || 
                  (($thisType.mouseState.get_Y() | 0) <= ((num65 + 13) | 0)) || (+($thisType.mouseState.get_Y()) >= (+(num65 + 13) + +vector5.Y)))) {
                if ((this.focusColor | 0) !== Math.imul(((num63 + 1) | 0), ((num64 + 10) | 0))) {
                  $thisType.PlaySound(12, -1, -1, 1);
                }
                this.focusColor = Math.imul(((num63 + 1) | 0), ((num64 + 10) | 0));
                flag7 = true;
                num67 = 255;
                if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
                  if ((this.colorDelay | 0) <= 1) {
                    if ((this.colorDelay | 0) === 0) {
                      this.colorDelay = 40;
                    } else {
                      this.colorDelay = 3;
                    }
                    var num68 = (JSIL.Coalesce(num63, -1) | 0);
                    if (num64 === 0) {
                      $thisType.soundVolume = +$thisType.soundVolume + (+num68 * 0.01);
                      if (+$thisType.soundVolume > 1) {
                        $thisType.soundVolume = 1;
                      }
                      if (+$thisType.soundVolume < 0) {
                        $thisType.soundVolume = 0;
                      }
                    }
                    if (num64 === 1) {
                      $thisType.musicVolume = +$thisType.musicVolume + (+num68 * 0.01);
                      if (+$thisType.musicVolume > 1) {
                        $thisType.musicVolume = 1;
                      }
                      if (+$thisType.musicVolume < 0) {
                        $thisType.musicVolume = 0;
                      }
                    }
                  }
                  this.colorDelay = (((this.colorDelay | 0) - 1) | 0);
                } else {
                  this.colorDelay = 0;
                }
              }

              for (var num69 = 0; num69 < 5; num69 = ((num69 + 1) | 0)) {
                var color7 = $T04().get_Black().MemberwiseClone();
                if (num69 === 4) {
                  color7 = color.MemberwiseClone();
                  color7.set_R((((((255 + (color7.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color7.set_G((((((255 + (color7.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                  color7.set_B((((((255 + (color7.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
                }
                var num70 = (((color7.get_R() | 0) - ((255 - num67) | 0)) | 0);
                if (num70 < 0) {
                  num70 = 0;
                }
                (color7 = color7.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color7, (num70 & 0xFF), (num70 & 0xFF), (num70 & 0xFF), (num67 & 0xFF)));
                var num71 = 0;
                var num72 = 0;
                if (num69 === 0) {
                  num71 = -2;
                }
                if (num69 === 1) {
                  num71 = 2;
                }
                if (num69 === 2) {
                  num72 = -2;
                }
                if (num69 === 3) {
                  num72 = 2;
                }
                $S08().CallVirtual("DrawString", null, this.spriteBatch, 
                  $thisType.fontDeathText, 
                  text4, 
                  $S04().Construct(+(num66 + num71), +(num65 + num72)), 
                  color7.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  0.9, 
                  $T2A().None, 
                  0
                );
              }
            }
          }
          if (!flag7) {
            this.focusColor = 0;
            this.colorDelay = 0;
          }
        }

        for (var num73 = 0; num73 < 5; num73 = ((num73 + 1) | 0)) {
          var color8 = $T04().get_Black().MemberwiseClone();
          if (num73 === 4) {
            color8 = color.MemberwiseClone();
            color8.set_R((((((255 + (color8.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
            color8.set_G((((((255 + (color8.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
            color8.set_B((((((255 + (color8.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
          }
          var num74 = ((255 * ((+this.menuItemScale[num16] * 2) - 1)) | 0);
          if (array[num16]) {
            num74 = 255;
          }
          var num75 = (((color8.get_R() | 0) - ((255 - num74) | 0)) | 0);
          if (num75 < 0) {
            num75 = 0;
          }
          (color8 = color8.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, color8, (num75 & 0xFF), (num75 & 0xFF), (num75 & 0xFF), (num74 & 0xFF)));
          var num76 = 0;
          var num77 = 0;
          if (num73 === 0) {
            num76 = -2;
          }
          if (num73 === 1) {
            num76 = 2;
          }
          if (num73 === 2) {
            num77 = -2;
          }
          if (num73 === 3) {
            num77 = 2;
          }
          var origin = $S06().CallVirtual("MeasureString", null, $thisType.fontDeathText, array5[num16]).MemberwiseClone();
          origin.X = +origin.X * 0.5;
          origin.Y = +origin.Y * 0.5;
          var num78 = +this.menuItemScale[num16];
          if (!((($thisType.menuMode | 0) !== 15) || (num16 !== 0))) {
            num78 *= 0.35;
          } else if (($thisType.netMode | 0) === 2) {
            num78 *= 0.5;
          }
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontDeathText, 
            array5[num16], 
            $S04().Construct(+(((num2 + num76) | 0) + (array4[num16] | 0)), ((+(((num + Math.imul(num3, num16)) | 0) + num77) + +origin.Y) + +(array3[num16]))), 
            color8.MemberwiseClone(), 
            0, 
            origin.MemberwiseClone(), 
            num78, 
            $T2A().None, 
            0
          );
        }
        if (!((($thisType.mouseState.get_X() | 0) <= ((((num2 - Math.imul(array5[num16].length, 10)) | 0) + (array4[num16] | 0)) | 0)) || 
            (($thisType.mouseState.get_X() | 0) >= ((((num2 + Math.imul(array5[num16].length, 10)) | 0) + (array4[num16] | 0)) | 0)) || 
            (($thisType.mouseState.get_Y() | 0) <= ((((num + Math.imul(num3, num16)) | 0) + (array3[num16] | 0)) | 0)) || 
            (($thisType.mouseState.get_Y() | 0) >= ((((((num + Math.imul(num3, num16)) | 0) + 50) | 0) + (array3[num16] | 0)) | 0)) || !$thisType.hasFocus)) {
          this.focusMenu = num16;
          if (!(!array[num16] && !array2[num16])) {
            this.focusMenu = -1;
          } else {
            if (num15 !== (this.focusMenu | 0)) {
              $thisType.PlaySound(12, -1, -1, 1);
            }
            if (!(!$thisType.mouseLeftRelease || ($thisType.mouseState.get_LeftButton() !== $T2B().Pressed))) {
              this.selectedMenu = num16;
            }
          }
        }
      }
    }

    for (var num79 = 0; num79 < ($thisType.maxMenuItems | 0); num79 = ((num79 + 1) | 0)) {
      if (num79 === (this.focusMenu | 0)) {
        if (+this.menuItemScale[num79] < 1) {
          this.menuItemScale[num79] += 0.02;
        }
        if (+this.menuItemScale[num79] > 1) {
          this.menuItemScale[num79] = 1;
        }
      } else if (this.menuItemScale[num79] > 0.8) {
        this.menuItemScale[num79] -= 0.02;
      }
    }
    if (num6 >= 0) {
      ($thisType.loadPlayer[num6]).PlayerFrame();
      $thisType.loadPlayer[num6].position.X = +num7 + +$thisType.screenPosition.X;
      $thisType.loadPlayer[num6].position.Y = +num8 + +$thisType.screenPosition.Y;
      this.DrawPlayer($thisType.loadPlayer[num6]);
    }

    for (var num80 = 0; num80 < 5; num80 = ((num80 + 1) | 0)) {
      var color9 = $T04().get_Black().MemberwiseClone();
      if (num80 === 4) {
        color9 = color.MemberwiseClone();
        color9.set_R((((((255 + (color9.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
        color9.set_G((((((255 + (color9.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
        color9.set_B((((((255 + (color9.get_R() | 0)) | 0) / 2) | 0) & 0xFF));
      }
      color9.set_A(((+(color9.get_A()) * 0.3) | 0));
      var num81 = 0;
      var num82 = 0;
      if (num80 === 0) {
        num81 = -2;
      }
      if (num80 === 1) {
        num81 = 2;
      }
      if (num80 === 2) {
        num82 = -2;
      }
      if (num80 === 3) {
        num82 = 2;
      }
      var origin2 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, "Copyright 2011 Re-Logic").MemberwiseClone();
      origin2.X = +origin2.X * 0.5;
      origin2.Y = +origin2.Y * 0.5;
      $S08().CallVirtual("DrawString", null, this.spriteBatch, 
        $thisType.fontMouseText, 
        "Copyright 2011 Re-Logic", 
        $S04().Construct((((+($thisType.screenWidth) - +origin2.X) + +num81) - 10), (((+($thisType.screenHeight) - +origin2.Y) + +num82) - 2)), 
        color9.MemberwiseClone(), 
        0, 
        origin2.MemberwiseClone(), 
        1, 
        $T2A().None, 
        0
      );
    }
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.cursorTexture, 
      $S04().Construct(+(($thisType.mouseState.get_X() | 0) + 1), +(($thisType.mouseState.get_Y() | 0) + 1)), 
      new ($T24())(0, 0, $thisType.cursorTexture.get_Width(), $thisType.cursorTexture.get_Height()), 
      $S01().Construct(((+($thisType.cursorColor.get_R()) * 0.2) | 0), ((+($thisType.cursorColor.get_G()) * 0.2) | 0), ((+($thisType.cursorColor.get_B()) * 0.2) | 0), ((+($thisType.cursorColor.get_A()) * 0.5) | 0)), 
      0, 
      new ($T25())(), 
      +$thisType.cursorScale * 1.1, 
      $T2A().None, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.cursorTexture, 
      $S04().Construct(+($thisType.mouseState.get_X()), +($thisType.mouseState.get_Y())), 
      new ($T24())(0, 0, $thisType.cursorTexture.get_Width(), $thisType.cursorTexture.get_Height()), 
      $thisType.cursorColor.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      $thisType.cursorScale, 
      $T2A().None, 
      0
    );
    if (($thisType.fadeCounter | 0) > 0) {
      var white = $T04().get_White().MemberwiseClone();
      $thisType.fadeCounter = ((($thisType.fadeCounter | 0) - 1) | 0);
      var b2 = ((+((+($thisType.fadeCounter) / 75)) * 255) | 0);
      (white = white.MemberwiseClone(), 
        $S07().Call($T04().prototype, "_ctor", null, white, b2, b2, b2, b2));
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.fadeTexture, 
        $S04().Construct(0, 0), 
        new ($T24())(0, 0, $thisType.splashTexture.get_Width(), $thisType.splashTexture.get_Height()), 
        white.MemberwiseClone(), 
        0, 
        new ($T25())(), 
        1, 
        $T2A().None, 
        0
      );
    }
    (this.spriteBatch).End();
    if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {
      $thisType.mouseLeftRelease = false;
    } else {
      $thisType.mouseLeftRelease = true;
    }
    if ($thisType.mouseState.get_RightButton() === $T2B().Pressed) {
      $thisType.mouseRightRelease = false;
      return;
    }
    $thisType.mouseRightRelease = true;
  }; 

  function Main_DrawNPCs (behindTiles) {
    var $hoisted00 = new ($T25())();
    var vector = new ($T25())(), vector2 = new ($T25())(), origin = new ($T25())();
    var rectangle = new ($T24())((((($thisType.screenPosition.X) | 0) - 300) | 0), (((($thisType.screenPosition.Y) | 0) - 300) | 0), ((($thisType.screenWidth | 0) + 600) | 0), ((($thisType.screenHeight | 0) + 600) | 0));

    for (var i = 999; i >= 0; i = ((i - 1) | 0)) {
      if (!(!$thisType.npc[i].active || 
          (($thisType.npc[i].type | 0) <= 0) || 
          ($thisType.npc[i].behindTiles !== behindTiles) || !rectangle.Intersects(new ($T24())((($thisType.npc[i].position.X) | 0), (($thisType.npc[i].position.Y) | 0), $thisType.npc[i].width, $thisType.npc[i].height)))) {
        if (($thisType.npc[i].aiStyle | 0) === 13) {
          (vector = vector.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector, +$thisType.npc[i].position.X + +((($thisType.npc[i].width | 0) / 2 | 0)), +$thisType.npc[i].position.Y + +((($thisType.npc[i].height | 0) / 2 | 0))));
          var num = ((+$thisType.npc[i].ai[0] * 16) + 8) - +vector.X;
          var num2 = ((+$thisType.npc[i].ai[1] * 16) + 8) - +vector.Y;
          var rotation = Math.fround(Math.atan2(num2, num)) - 1.57;

          for (var flag = true; flag; ) {
            var height = 28;
            var num3 = Math.fround(Math.sqrt((num * num) + (num2 * num2)));
            if (num3 < 40) {
              height = ((((((num3) | 0) - 40) | 0) + 28) | 0);
              flag = false;
            }
            num3 = +((28 / num3));
            num *= num3;
            num2 *= num3;
            vector.X = +vector.X + num;
            vector.Y = +vector.Y + num2;
            num = ((+$thisType.npc[i].ai[0] * 16) + 8) - +vector.X;
            num2 = ((+$thisType.npc[i].ai[1] * 16) + 8) - +vector.Y;
            var color = $T2F().GetColor(((((vector.X) | 0) / 16) | 0), ((+(+vector.Y / 16)) | 0)).MemberwiseClone();
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.chain4Texture, 
              $S04().Construct((+vector.X - +$thisType.screenPosition.X), (+vector.Y - +$thisType.screenPosition.Y)), 
              new ($T24())(0, 0, $thisType.chain4Texture.get_Width(), height), 
              color.MemberwiseClone(), 
              rotation, 
              $S04().Construct((+($thisType.chain4Texture.get_Width()) * 0.5), (+($thisType.chain4Texture.get_Height()) * 0.5)), 
              1, 
              $T2A().None, 
              0
            );
          }
        }
        if (($thisType.npc[i].type | 0) === 36) {
          (vector2 = vector2.MemberwiseClone(), 
            $T25().prototype._ctor.call(vector2, (+$thisType.npc[i].position.X + (+($thisType.npc[i].width) * 0.5)) - (5 * +$thisType.npc[i].ai[0]), +$thisType.npc[i].position.Y + 20));

          for (var j = 0; j < 2; j = ((j + 1) | 0)) {
            var num4 = (+$thisType.npc[(($thisType.npc[i].ai[1]) | 0)].position.X + +((($thisType.npc[(($thisType.npc[i].ai[1]) | 0)].width | 0) / 2 | 0))) - +vector2.X;
            var num5 = (+$thisType.npc[(($thisType.npc[i].ai[1]) | 0)].position.Y + +((($thisType.npc[(($thisType.npc[i].ai[1]) | 0)].height | 0) / 2 | 0))) - +vector2.Y;
            if (j === 0) {
              num4 -= 200 * +$thisType.npc[i].ai[0];
              num5 += 130;
              var num6 = Math.fround(Math.sqrt((num4 * num4) + (num5 * num5)));
              num6 = +((92 / num6));
              vector2.X = +vector2.X + (num4 * num6);
              vector2.Y = +vector2.Y + (num5 * num6);
            } else {
              num4 -= 50 * +$thisType.npc[i].ai[0];
              num5 += 80;
              num6 = Math.fround(Math.sqrt((num4 * num4) + (num5 * num5)));
              num6 = +((60 / num6));
              vector2.X = +vector2.X + (num4 * num6);
              vector2.Y = +vector2.Y + (num5 * num6);
            }
            var rotation2 = Math.fround(Math.atan2(num5, num4)) - 1.57;
            var color2 = $T2F().GetColor(((((vector2.X) | 0) / 16) | 0), ((+(+vector2.Y / 16)) | 0)).MemberwiseClone();
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.boneArmTexture, 
              $S04().Construct((+vector2.X - +$thisType.screenPosition.X), (+vector2.Y - +$thisType.screenPosition.Y)), 
              new ($T24())(0, 0, $thisType.boneArmTexture.get_Width(), $thisType.boneArmTexture.get_Height()), 
              color2.MemberwiseClone(), 
              rotation2, 
              $S04().Construct((+($thisType.boneArmTexture.get_Width()) * 0.5), (+($thisType.boneArmTexture.get_Height()) * 0.5)), 
              1, 
              $T2A().None, 
              0
            );
            if (j === 0) {
              vector2.X = +vector2.X + +(((num4 * num6) / 2));
              vector2.Y = +vector2.Y + +(((num5 * num6) / 2));
            } else if (this.get_IsActive()) {
              vector2.X = +vector2.X + ((num4 * num6) - 16);
              vector2.Y = +vector2.Y + ((num5 * num6) - 6);
              var num7 = ($T0E().NewDust(
                ($hoisted00._ctor(vector2.X, vector2.Y), 
                  $hoisted00), 
                30, 
                10, 
                5, 
                num4 * 0.02, 
                num5 * 0.02, 
                0, 
                new ($T04())(), 
                2
              ) | 0);
              $thisType.dust[num7].noGravity = true;
            }
          }
        }
        var num8 = 0;
        (origin = origin.MemberwiseClone(), 
          $T25().prototype._ctor.call(origin, 
            +(((($thisType.npcTexture[$thisType.npc[i].type]).get_Width() | 0) / 2 | 0)), 
            +(((((($thisType.npcTexture[$thisType.npc[i].type]).get_Height() | 0) / ($thisType.npcFrameCount[$thisType.npc[i].type] | 0)) | 0) / 2 | 0))
          ));
        if (($thisType.npc[i].type | 0) === 4) {
          (origin = origin.MemberwiseClone(), 
            $T25().prototype._ctor.call(origin, 55, 107));
        }
        if (($thisType.npc[i].type | 0) === 6) {
          num8 = 26;
        }
        if (!((($thisType.npc[i].type | 0) !== 7) && 
            (($thisType.npc[i].type | 0) !== 8) && (($thisType.npc[i].type | 0) !== 9))) {
          num8 = 13;
        }
        if (!((($thisType.npc[i].type | 0) !== 10) && 
            (($thisType.npc[i].type | 0) !== 11) && (($thisType.npc[i].type | 0) !== 12))) {
          num8 = 8;
        }
        if (!((($thisType.npc[i].type | 0) !== 13) && 
            (($thisType.npc[i].type | 0) !== 14) && (($thisType.npc[i].type | 0) !== 15))) {
          num8 = 26;
        }
        num8 *= +$thisType.npc[i].scale;
        var newColor = $T2F().GetColor((((($thisType.npc[i].position.X + (+($thisType.npc[i].width) * 0.5)) | 0) / 16) | 0), ((+(($thisType.npc[i].position.Y + (+($thisType.npc[i].height) * 0.5)) / 16)) | 0)).MemberwiseClone();
        if (($thisType.npc[i].aiStyle | 0) === 10) {
          newColor = $T04().get_White().MemberwiseClone();
        }
        var effects = $T2A().None;
        if (($thisType.npc[i].spriteDirection | 0) === 1) {
          effects = $T2A().FlipHorizontally;
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.npcTexture[$thisType.npc[i].type], 
          $S04().Construct(((((+$thisType.npc[i].position.X - +$thisType.screenPosition.X) + +((($thisType.npc[i].width | 0) / 2 | 0))) - +(((+(($thisType.npcTexture[$thisType.npc[i].type]).get_Width()) * +$thisType.npc[i].scale) / 2))) + (+origin.X * +$thisType.npc[i].scale)), ((((((+$thisType.npc[i].position.Y - +$thisType.screenPosition.Y) + +($thisType.npc[i].height)) - +(((+(($thisType.npcTexture[$thisType.npc[i].type]).get_Height()) * +$thisType.npc[i].scale) / +($thisType.npcFrameCount[$thisType.npc[i].type])))) + 4) + (+origin.Y * +$thisType.npc[i].scale)) + num8)), 
          $thisType.npc[i].frame.MemberwiseClone(), 
          ($thisType.npc[i]).GetAlpha(newColor).MemberwiseClone(), 
          $thisType.npc[i].rotation, 
          origin.MemberwiseClone(), 
          $thisType.npc[i].scale, 
          effects, 
          0
        );
        if ($T04().op_Inequality($thisType.npc[i].color.MemberwiseClone(), new ($T04())())) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.npcTexture[$thisType.npc[i].type], 
            $S04().Construct(((((+$thisType.npc[i].position.X - +$thisType.screenPosition.X) + +((($thisType.npc[i].width | 0) / 2 | 0))) - +(((+(($thisType.npcTexture[$thisType.npc[i].type]).get_Width()) * +$thisType.npc[i].scale) / 2))) + (+origin.X * +$thisType.npc[i].scale)), ((((((+$thisType.npc[i].position.Y - +$thisType.screenPosition.Y) + +($thisType.npc[i].height)) - +(((+(($thisType.npcTexture[$thisType.npc[i].type]).get_Height()) * +$thisType.npc[i].scale) / +($thisType.npcFrameCount[$thisType.npc[i].type])))) + 4) + (+origin.Y * +$thisType.npc[i].scale)) + num8)), 
            $thisType.npc[i].frame.MemberwiseClone(), 
            ($thisType.npc[i]).GetColor(newColor).MemberwiseClone(), 
            $thisType.npc[i].rotation, 
            origin.MemberwiseClone(), 
            $thisType.npc[i].scale, 
            effects, 
            0
          );
        }
      }
    }
  }; 

  function Main_DrawPlayer (drawPlayer) {
    var vector3 = new ($T25())(), origin2 = new ($T25())();
    var immuneAlpha = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.25)) / 16)) | 0), $T04().get_White().MemberwiseClone()));
    var immuneAlpha2 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.25)) / 16)) | 0), drawPlayer.eyeColor.MemberwiseClone()));
    var immuneAlpha3 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.25)) / 16)) | 0), drawPlayer.hairColor.MemberwiseClone()));
    var immuneAlpha4 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.25)) / 16)) | 0), drawPlayer.skinColor.MemberwiseClone()));
    var immuneAlpha5 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.5)) / 16)) | 0), drawPlayer.skinColor.MemberwiseClone()));
    var immuneAlpha6 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.5)) / 16)) | 0), drawPlayer.shirtColor.MemberwiseClone()));
    var immuneAlpha7 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.5)) / 16)) | 0), drawPlayer.underShirtColor.MemberwiseClone()));
    var immuneAlpha8 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.75)) / 16)) | 0), drawPlayer.pantsColor.MemberwiseClone()));
    var immuneAlpha9 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.75)) / 16)) | 0), drawPlayer.shoeColor.MemberwiseClone()));
    var immuneAlpha10 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((((drawPlayer.position.Y + (+(drawPlayer.height) * 0.75)) | 0) / 16) | 0), $T04().get_White().MemberwiseClone()));
    var immuneAlpha11 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((((drawPlayer.position.Y + (+(drawPlayer.height) * 0.5)) | 0) / 16) | 0), $T04().get_White().MemberwiseClone()));
    var immuneAlpha12 = drawPlayer.GetImmuneAlpha($T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((((drawPlayer.position.Y + (+(drawPlayer.height) * 0.25)) | 0) / 16) | 0), $T04().get_White().MemberwiseClone()));
    if ((drawPlayer.direction | 0) === 1) {
      var effects = $T2A().None;
      var effects2 = $T2A().None;
    } else {
      effects = $T2A().FlipHorizontally;
      effects2 = $T2A().FlipHorizontally;
    }
    var vector = $S04().Construct((+(drawPlayer.legFrame.Width) * 0.5), (+(drawPlayer.legFrame.Height) * 0.75));
    var origin = $S04().Construct((+(drawPlayer.legFrame.Width) * 0.5), (+(drawPlayer.legFrame.Height) * 0.5));
    var vector2 = $S04().Construct((+(drawPlayer.legFrame.Width) * 0.5), (+(drawPlayer.legFrame.Height) * 0.25));
    if (!(((drawPlayer.legs | 0) <= 0) || ((drawPlayer.legs | 0) >= 10))) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.armorLegTexture[drawPlayer.legs], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.legFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.legFrame.Height)) + 4) | 0))), drawPlayer.legPosition.MemberwiseClone()).MemberwiseClone(), vector.MemberwiseClone()).MemberwiseClone(), 
        drawPlayer.legFrame.MemberwiseClone(), 
        immuneAlpha12.MemberwiseClone(), 
        drawPlayer.legRotation, 
        vector.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    } else {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerPantsTexture, 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.legFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.legFrame.Height)) + 4) | 0))), drawPlayer.legPosition.MemberwiseClone()).MemberwiseClone(), vector.MemberwiseClone()).MemberwiseClone(), 
        drawPlayer.legFrame.MemberwiseClone(), 
        immuneAlpha8.MemberwiseClone(), 
        drawPlayer.legRotation, 
        vector.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerShoesTexture, 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.legFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.legFrame.Height)) + 4) | 0))), drawPlayer.legPosition.MemberwiseClone()).MemberwiseClone(), vector.MemberwiseClone()).MemberwiseClone(), 
        drawPlayer.legFrame.MemberwiseClone(), 
        immuneAlpha9.MemberwiseClone(), 
        drawPlayer.legRotation, 
        vector.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    }
    if (!(((drawPlayer.body | 0) <= 0) || ((drawPlayer.body | 0) >= 10))) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.armorBodyTexture[drawPlayer.body], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha11.MemberwiseClone(), 
        drawPlayer.bodyRotation, 
        origin.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    } else {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerUnderShirtTexture, 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha7.MemberwiseClone(), 
        drawPlayer.bodyRotation, 
        origin.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerShirtTexture, 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha6.MemberwiseClone(), 
        drawPlayer.bodyRotation, 
        origin.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerHandsTexture, 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha5.MemberwiseClone(), 
        drawPlayer.bodyRotation, 
        origin.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    }
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.playerHeadTexture, 
      $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
      drawPlayer.bodyFrame.MemberwiseClone(), 
      immuneAlpha4.MemberwiseClone(), 
      drawPlayer.headRotation, 
      vector2.MemberwiseClone(), 
      1, 
      effects, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.playerEyeWhitesTexture, 
      $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
      drawPlayer.bodyFrame.MemberwiseClone(), 
      immuneAlpha.MemberwiseClone(), 
      drawPlayer.headRotation, 
      vector2.MemberwiseClone(), 
      1, 
      effects, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.playerEyesTexture, 
      $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
      drawPlayer.bodyFrame.MemberwiseClone(), 
      immuneAlpha2.MemberwiseClone(), 
      drawPlayer.headRotation, 
      vector2.MemberwiseClone(), 
      1, 
      effects, 
      0
    );
    if ((drawPlayer.head | 0) === 10) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.armorHeadTexture[drawPlayer.head], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha10.MemberwiseClone(), 
        drawPlayer.headRotation, 
        vector2.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
      var bodyFrame = drawPlayer.bodyFrame.MemberwiseClone();
      bodyFrame.Y = (((bodyFrame.Y | 0) - 336) | 0);
      if ((bodyFrame.Y | 0) < 0) {
        bodyFrame.Y = 0;
      }
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerHairTexture[drawPlayer.hair], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
        bodyFrame.MemberwiseClone(), 
        immuneAlpha3.MemberwiseClone(), 
        drawPlayer.headRotation, 
        vector2.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    } else if (!(((drawPlayer.head | 0) <= 0) || ((drawPlayer.head | 0) >= 12))) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.armorHeadTexture[drawPlayer.head], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha10.MemberwiseClone(), 
        drawPlayer.headRotation, 
        vector2.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    } else {
      var bodyFrame2 = drawPlayer.bodyFrame.MemberwiseClone();
      bodyFrame2.Y = (((bodyFrame2.Y | 0) - 336) | 0);
      if ((bodyFrame2.Y | 0) < 0) {
        bodyFrame2.Y = 0;
      }
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.playerHairTexture[drawPlayer.hair], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.headPosition.MemberwiseClone()).MemberwiseClone(), vector2.MemberwiseClone()).MemberwiseClone(), 
        bodyFrame2.MemberwiseClone(), 
        immuneAlpha3.MemberwiseClone(), 
        drawPlayer.headRotation, 
        vector2.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
    }
    var color = $T2F().GetColor(((((drawPlayer.position.X + (+(drawPlayer.width) * 0.5)) | 0) / 16) | 0), ((+((drawPlayer.position.Y + (+(drawPlayer.height) * 0.5)) / 16)) | 0));
    if (!((((drawPlayer.itemAnimation | 0) <= 0) && 
          ((drawPlayer.inventory[drawPlayer.selectedItem].holdStyle | 0) <= 0)) || 
        ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) <= 0) || 
        drawPlayer.dead || drawPlayer.inventory[drawPlayer.selectedItem].noUseGraphic)) {
      if ((drawPlayer.inventory[drawPlayer.selectedItem].useStyle | 0) === 5) {
        var num = 10;
        (vector3 = vector3.MemberwiseClone(), 
          $T25().prototype._ctor.call(vector3, 
            +(((($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width() | 0) / 2 | 0)), 
            +(((($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height() | 0) / 2 | 0))
          ));
        if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 95) {
          num = 10;
          vector3.Y = +vector3.Y + 2;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 96) {
          num = -5;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 98) {
          num = -5;
          vector3.Y = +vector3.Y - 2;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 197) {
          num = -5;
          vector3.Y = +vector3.Y + 4;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 126) {
          num = 4;
          vector3.Y = +vector3.Y + 4;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 127) {
          num = 4;
          vector3.Y = +vector3.Y + 2;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 157) {
          num = 6;
          vector3.Y = +vector3.Y + 2;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 160) {
          num = -8;
        } else if (!(((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) !== 164) && ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) !== 219))) {
          num = 2;
          vector3.Y = +vector3.Y + 4;
        } else if ((drawPlayer.inventory[drawPlayer.selectedItem].type | 0) === 165) {
          num = 12;
          vector3.Y = +vector3.Y + 6;
        }
        (origin2 = origin2.MemberwiseClone(), 
          $T25().prototype._ctor.call(origin2, +(-+num), +(((($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height() | 0) / 2 | 0))));
        if ((drawPlayer.direction | 0) === -1) {
          (origin2 = origin2.MemberwiseClone(), 
            $T25().prototype._ctor.call(origin2, 
              +((($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width() | 0) + num), 
              +(((($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height() | 0) / 2 | 0))
            ));
        }
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], 
          $S04().Construct(+((((+drawPlayer.itemLocation.X - +$thisType.screenPosition.X) + +vector3.X) | 0)), +((((+drawPlayer.itemLocation.Y - +$thisType.screenPosition.Y) + +vector3.Y) | 0))), 
          new ($T24())(0, 0, ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width(), ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height()), 
          (drawPlayer.inventory[drawPlayer.selectedItem]).GetAlpha(color).MemberwiseClone(), 
          drawPlayer.itemRotation, 
          origin2.MemberwiseClone(), 
          drawPlayer.inventory[drawPlayer.selectedItem].scale, 
          effects2, 
          0
        );
        if ($T04().op_Inequality(drawPlayer.inventory[drawPlayer.selectedItem].color.MemberwiseClone(), new ($T04())())) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], 
            $S04().Construct(+((((+drawPlayer.itemLocation.X - +$thisType.screenPosition.X) + +vector3.X) | 0)), +((((+drawPlayer.itemLocation.Y - +$thisType.screenPosition.Y) + +vector3.Y) | 0))), 
            new ($T24())(0, 0, ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width(), ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height()), 
            (drawPlayer.inventory[drawPlayer.selectedItem]).GetColor(color).MemberwiseClone(), 
            drawPlayer.itemRotation, 
            origin2.MemberwiseClone(), 
            drawPlayer.inventory[drawPlayer.selectedItem].scale, 
            effects2, 
            0
          );
        }
      } else {
        $S03().CallVirtual("Draw", null, this.spriteBatch, 
          $thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], 
          $S04().Construct(+(((+drawPlayer.itemLocation.X - +$thisType.screenPosition.X) | 0)), +(((+drawPlayer.itemLocation.Y - +$thisType.screenPosition.Y) | 0))), 
          new ($T24())(0, 0, ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width(), ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height()), 
          (drawPlayer.inventory[drawPlayer.selectedItem]).GetAlpha(color).MemberwiseClone(), 
          drawPlayer.itemRotation, 
          $S04().Construct(((+(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width()) * 0.5) - ((+(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width()) * 0.5) * +(drawPlayer.direction))), +(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height())), 
          drawPlayer.inventory[drawPlayer.selectedItem].scale, 
          effects2, 
          0
        );
        if ($T04().op_Inequality(drawPlayer.inventory[drawPlayer.selectedItem].color.MemberwiseClone(), new ($T04())())) {
          $S03().CallVirtual("Draw", null, this.spriteBatch, 
            $thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], 
            $S04().Construct(+(((+drawPlayer.itemLocation.X - +$thisType.screenPosition.X) | 0)), +(((+drawPlayer.itemLocation.Y - +$thisType.screenPosition.Y) | 0))), 
            new ($T24())(0, 0, ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width(), ($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height()), 
            (drawPlayer.inventory[drawPlayer.selectedItem]).GetColor(color).MemberwiseClone(), 
            drawPlayer.itemRotation, 
            $S04().Construct(((+(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width()) * 0.5) - ((+(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Width()) * 0.5) * +(drawPlayer.direction))), +(($thisType.itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type]).get_Height())), 
            drawPlayer.inventory[drawPlayer.selectedItem].scale, 
            effects2, 
            0
          );
        }
      }
    }
    if (!(((drawPlayer.body | 0) <= 0) || ((drawPlayer.body | 0) >= 10))) {
      $S03().CallVirtual("Draw", null, this.spriteBatch, 
        $thisType.armorArmTexture[drawPlayer.body], 
        $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
        drawPlayer.bodyFrame.MemberwiseClone(), 
        immuneAlpha11.MemberwiseClone(), 
        drawPlayer.bodyRotation, 
        origin.MemberwiseClone(), 
        1, 
        effects, 
        0
      );
      return;
    }
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.playerUnderShirt2Texture, 
      $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
      drawPlayer.bodyFrame.MemberwiseClone(), 
      immuneAlpha7.MemberwiseClone(), 
      drawPlayer.bodyRotation, 
      origin.MemberwiseClone(), 
      1, 
      effects, 
      0
    );
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.playerHands2Texture, 
      $T25().op_Addition($T25().op_Addition($S04().Construct(+(((((+drawPlayer.position.X - +$thisType.screenPosition.X) - +(((drawPlayer.bodyFrame.Width | 0) / 2 | 0))) + +(((drawPlayer.width | 0) / 2 | 0))) | 0)), +((((((+drawPlayer.position.Y - +$thisType.screenPosition.Y) + +(drawPlayer.height)) - +(drawPlayer.bodyFrame.Height)) + 4) | 0))), drawPlayer.bodyPosition.MemberwiseClone()).MemberwiseClone(), $S04().Construct(+(((drawPlayer.bodyFrame.Width | 0) / 2 | 0)), +(((drawPlayer.bodyFrame.Height | 0) / 2 | 0)))).MemberwiseClone(), 
      drawPlayer.bodyFrame.MemberwiseClone(), 
      immuneAlpha5.MemberwiseClone(), 
      drawPlayer.bodyRotation, 
      origin.MemberwiseClone(), 
      1, 
      effects, 
      0
    );
  }; 

  function Main_DrawSplash (gameTime) {
    (this.get_GraphicsDevice()).Clear($T04().get_Black().MemberwiseClone());
    $T1D().prototype.Draw.call(this, gameTime);
    (this.spriteBatch).Begin();
    this.splashCounter = (((this.splashCounter | 0) + 1) | 0);
    var white = $T04().get_White().MemberwiseClone();
    var b = 0;
    if ((this.splashCounter | 0) <= 75) {
      b = ((+((+(this.splashCounter) / 75)) * 255) | 0);
    } else if ((this.splashCounter | 0) <= 200) {
      b = 255;
    } else if ((this.splashCounter | 0) <= 275) {
      b = ((+((+(275 - (this.splashCounter | 0)) / 75)) * 255) | 0);
    } else {
      $thisType.showSplash = false;
      $thisType.fadeCounter = 75;
    }
    (white = white.MemberwiseClone(), 
      $S07().Call($T04().prototype, "_ctor", null, white, b, b, b, b));
    $S03().CallVirtual("Draw", null, this.spriteBatch, 
      $thisType.splashTexture, 
      $S04().Construct(0, 0), 
      new ($T24())(0, 0, $thisType.splashTexture.get_Width(), $thisType.splashTexture.get_Height()), 
      white.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    (this.spriteBatch).End();
  }; 

  function Main_DrawTiles (solidOnly) {
    var $hoisted00 = new ($T25())(), $hoisted01 = new ($T25())(), $hoisted02 = new ($T25())(), $hoisted03 = new ($T25())(), $hoisted04 = new ($T25())(), $hoisted05 = new ($T25())(), $hoisted06 = new ($T25())(), $hoisted07 = new ($T25())(), $hoisted08 = new ($T25())(), $hoisted09 = new ($T25())(), $hoisted0A = new ($T25())(), $hoisted0B = new ($T25())(), $hoisted0C = new ($T25())(), $hoisted0D = new ($T25())();
    var value = new ($T25())(), value2 = new ($T24())();
    var num = ((+((+$thisType.screenPosition.X / 16)) - 1) | 0);
    var num2 = ((((+((+$thisType.screenPosition.X + +($thisType.screenWidth)) / 16)) | 0) + 2) | 0);
    var num3 = ((+((+$thisType.screenPosition.Y / 16)) - 1) | 0);
    var num4 = ((((+((+$thisType.screenPosition.Y + +($thisType.screenHeight)) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($thisType.maxTilesX | 0)) {
      num2 = ($thisType.maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($thisType.maxTilesY | 0)) {
      num4 = ($thisType.maxTilesY | 0);
    }

    for (var i = num3; i < ((num4 + 4) | 0); i = ((i + 1) | 0)) {

      for (var j = ((num - 2) | 0); j < ((num2 + 2) | 0); j = ((j + 1) | 0)) {
        if (!(!$thisType.tile.Get(j, i).active || ($thisType.tileSolid[$thisType.tile.Get(j, i).type] !== solidOnly))) {
          var num5 = 0;
          if (($thisType.tile.Get(j, i).type | 0) === 78) {
            num5 = 2;
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 33) && (($thisType.tile.Get(j, i).type | 0) !== 49))) {
            num5 = -4;
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 3) && 
              (($thisType.tile.Get(j, i).type | 0) !== 4) && 
              (($thisType.tile.Get(j, i).type | 0) !== 5) && 
              (($thisType.tile.Get(j, i).type | 0) !== 24) && 
              (($thisType.tile.Get(j, i).type | 0) !== 33) && 
              (($thisType.tile.Get(j, i).type | 0) !== 49) && 
              (($thisType.tile.Get(j, i).type | 0) !== 61) && (($thisType.tile.Get(j, i).type | 0) !== 71))) {
            var height = 20;
          } else if (!((($thisType.tile.Get(j, i).type | 0) !== 15) && 
              (($thisType.tile.Get(j, i).type | 0) !== 14) && 
              (($thisType.tile.Get(j, i).type | 0) !== 16) && 
              (($thisType.tile.Get(j, i).type | 0) !== 17) && 
              (($thisType.tile.Get(j, i).type | 0) !== 18) && 
              (($thisType.tile.Get(j, i).type | 0) !== 20) && 
              (($thisType.tile.Get(j, i).type | 0) !== 21) && 
              (($thisType.tile.Get(j, i).type | 0) !== 26) && 
              (($thisType.tile.Get(j, i).type | 0) !== 27) && 
              (($thisType.tile.Get(j, i).type | 0) !== 32) && 
              (($thisType.tile.Get(j, i).type | 0) !== 69) && 
              (($thisType.tile.Get(j, i).type | 0) !== 72) && (($thisType.tile.Get(j, i).type | 0) !== 77))) {
            height = 18;
          } else {
            height = 16;
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 4) && (($thisType.tile.Get(j, i).type | 0) !== 5))) {
            var num6 = 20;
          } else {
            num6 = 16;
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 73) && (($thisType.tile.Get(j, i).type | 0) !== 74))) {
            num5 = ((num5 - 12) | 0);
            height = 32;
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 4) || 
              (($thisType.rand.Next(40) | 0) !== 0) || !this.get_IsActive())) {
            if (($thisType.tile.Get(j, i).frameX | 0) === 22) {
              $T0E().NewDust(
                ($hoisted00._ctor(+(Math.imul(j, 16) + 6), +(i * 16)), 
                  $hoisted00), 
                4, 
                4, 
                6, 
                0, 
                0, 
                100, 
                new ($T04())(), 
                1
              );
            }
            if (($thisType.tile.Get(j, i).frameX | 0) === 44) {
              $T0E().NewDust(
                ($hoisted01._ctor(+(Math.imul(j, 16) + 2), +(i * 16)), 
                  $hoisted01), 
                4, 
                4, 
                6, 
                0, 
                0, 
                100, 
                new ($T04())(), 
                1
              );
            } else {
              $T0E().NewDust(
                ($hoisted02._ctor(+(Math.imul(j, 16) + 4), +(i * 16)), 
                  $hoisted02), 
                4, 
                4, 
                6, 
                0, 
                0, 
                100, 
                new ($T04())(), 
                1
              );
            }
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 33) || 
              (($thisType.rand.Next(40) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted03._ctor(+(Math.imul(j, 16) + 4), +(Math.imul(i, 16) - 4)), 
                $hoisted03), 
              4, 
              4, 
              6, 
              0, 
              0, 
              100, 
              new ($T04())(), 
              1
            );
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 49) || 
              (($thisType.rand.Next(20) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted04._ctor(+(Math.imul(j, 16) + 4), +(Math.imul(i, 16) - 4)), 
                $hoisted04), 
              4, 
              4, 
              29, 
              0, 
              0, 
              100, 
              new ($T04())(), 
              1
            );
          }
          if (!(((($thisType.tile.Get(j, i).type | 0) !== 34) && 
                (($thisType.tile.Get(j, i).type | 0) !== 35) && 
                (($thisType.tile.Get(j, i).type | 0) !== 36)) || 
              (($thisType.rand.Next(40) | 0) !== 0) || 
              !this.get_IsActive() || 
              (($thisType.tile.Get(j, i).frameY | 0) !== 18) || ((($thisType.tile.Get(j, i).frameX | 0) !== 0) && 
                (($thisType.tile.Get(j, i).frameX | 0) !== 36)))) {
            $T0E().NewDust(
              ($hoisted05._ctor(+(j * 16), +(Math.imul(i, 16) + 2)), 
                $hoisted05), 
              14, 
              6, 
              6, 
              0, 
              0, 
              100, 
              new ($T04())(), 
              1
            );
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 22) || 
              (($thisType.rand.Next(400) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted06._ctor(+(j * 16), +(i * 16)), 
                $hoisted06), 
              16, 
              16, 
              14, 
              0, 
              0, 
              0, 
              new ($T04())(), 
              1
            );
          } else if (!(((($thisType.tile.Get(j, i).type | 0) !== 23) && 
                (($thisType.tile.Get(j, i).type | 0) !== 24) && 
                (($thisType.tile.Get(j, i).type | 0) !== 32)) || 
              (($thisType.rand.Next(500) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted07._ctor(+(j * 16), +(i * 16)), 
                $hoisted07), 
              16, 
              16, 
              14, 
              0, 
              0, 
              0, 
              new ($T04())(), 
              1
            );
          } else if (!((($thisType.tile.Get(j, i).type | 0) !== 25) || 
              (($thisType.rand.Next(700) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted08._ctor(+(j * 16), +(i * 16)), 
                $hoisted08), 
              16, 
              16, 
              14, 
              0, 
              0, 
              0, 
              new ($T04())(), 
              1
            );
          } else if (!((($thisType.tile.Get(j, i).type | 0) !== 31) || 
              (($thisType.rand.Next(20) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted09._ctor(+(j * 16), +(i * 16)), 
                $hoisted09), 
              16, 
              16, 
              14, 
              0, 
              0, 
              100, 
              new ($T04())(), 
              1
            );
          } else if (!((($thisType.tile.Get(j, i).type | 0) !== 26) || 
              (($thisType.rand.Next(20) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted0A._ctor(+(j * 16), +(i * 16)), 
                $hoisted0A), 
              16, 
              16, 
              14, 
              0, 
              0, 
              100, 
              new ($T04())(), 
              1
            );
          } else if (!(((($thisType.tile.Get(j, i).type | 0) !== 71) && 
                (($thisType.tile.Get(j, i).type | 0) !== 72)) || 
              (($thisType.rand.Next(500) | 0) !== 0) || !this.get_IsActive())) {
            $T0E().NewDust(
              ($hoisted0B._ctor(+(j * 16), +(i * 16)), 
                $hoisted0B), 
              16, 
              16, 
              41, 
              0, 
              0, 
              250, 
              new ($T04())(), 
              0.8
            );
          } else if (!(((($thisType.tile.Get(j, i).type | 0) !== 17) && 
                (($thisType.tile.Get(j, i).type | 0) !== 77)) || 
              (($thisType.rand.Next(40) | 0) !== 0) || !this.get_IsActive())) {
            if ((($thisType.tile.Get(j, i).frameX | 0) === 18) & (($thisType.tile.Get(j, i).frameY | 0) === 18)) {
              $T0E().NewDust(
                ($hoisted0C._ctor(+(Math.imul(j, 16) + 2), +(i * 16)), 
                  $hoisted0C), 
                8, 
                6, 
                6, 
                0, 
                0, 
                100, 
                new ($T04())(), 
                1
              );
            }
          } else if (!(((($thisType.tile.Get(j, i).type | 0) !== 37) && 
                (($thisType.tile.Get(j, i).type | 0) !== 58) && 
                (($thisType.tile.Get(j, i).type | 0) !== 76)) || 
              (($thisType.rand.Next(200) | 0) !== 0) || !this.get_IsActive())) {
            var num7 = ($T0E().NewDust(
              ($hoisted0D._ctor(+(j * 16), +(i * 16)), 
                $hoisted0D), 
              16, 
              16, 
              6, 
              0, 
              0, 
              0, 
              new ($T04())(), 
              +($thisType.rand.Next(3))
            ) | 0);
            if (+$thisType.dust[num7].scale > 1) {
              $thisType.dust[num7].noGravity = true;
            }
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 5) || 
              (($thisType.tile.Get(j, i).frameY | 0) < 198) || (($thisType.tile.Get(j, i).frameX | 0) < 22))) {
            var num8 = 0;
            if (($thisType.tile.Get(j, i).frameX | 0) === 22) {
              if (($thisType.tile.Get(j, i).frameY | 0) === 220) {
                num8 = 1;
              } else if (($thisType.tile.Get(j, i).frameY | 0) === 242) {
                num8 = 2;
              }
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.treeTopTexture, 
                $S04().Construct(+(((Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)) | 0) - 32), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) - 64)), 
                new ($T24())(Math.imul(num8, 82), 0, 80, 80), 
                $T2F().GetColor(j, i).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                1, 
                $T2A().None, 
                0
              );
            } else if (($thisType.tile.Get(j, i).frameX | 0) === 44) {
              if (($thisType.tile.Get(j, i).frameY | 0) === 220) {
                num8 = 1;
              } else if (($thisType.tile.Get(j, i).frameY | 0) === 242) {
                num8 = 2;
              }
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.treeBranchTexture, 
                $S04().Construct(+(((Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)) | 0) - 24), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) - 12)), 
                new ($T24())(0, Math.imul(num8, 42), 40, 40), 
                $T2F().GetColor(j, i).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                1, 
                $T2A().None, 
                0
              );
            } else if (($thisType.tile.Get(j, i).frameX | 0) === 66) {
              if (($thisType.tile.Get(j, i).frameY | 0) === 220) {
                num8 = 1;
              } else if (($thisType.tile.Get(j, i).frameY | 0) === 242) {
                num8 = 2;
              }
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.treeBranchTexture, 
                $S04().Construct(+(Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) - 12)), 
                new ($T24())(42, Math.imul(num8, 42), 40, 40), 
                $T2F().GetColor(j, i).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                1, 
                $T2A().None, 
                0
              );
            }
          }
          if (!((($thisType.tile.Get(j, i).type | 0) !== 72) || (($thisType.tile.Get(j, i).frameX | 0) < 36))) {
            var num9 = 0;
            if (($thisType.tile.Get(j, i).frameY | 0) === 18) {
              num9 = 1;
            } else if (($thisType.tile.Get(j, i).frameY | 0) === 36) {
              num9 = 2;
            }
            $S03().CallVirtual("Draw", null, this.spriteBatch, 
              $thisType.shroomCapTexture, 
              $S04().Construct(+(((Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)) | 0) - 22), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) - 26)), 
              new ($T24())(Math.imul(num9, 62), 0, 60, 42), 
              $T2F().GetColor(j, i).MemberwiseClone(), 
              0, 
              new ($T25())(), 
              1, 
              $T2A().None, 
              0
            );
          }
          if (+$T2F().Brightness(j, i) > 0) {
            if (!(!solidOnly || ((($thisType.tile.Get(((j - 1) | 0), i).liquid | 0) <= 0) && 
                  (($thisType.tile.Get(((j + 1) | 0), i).liquid | 0) <= 0) && 
                  (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) <= 0) && 
                  (($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) <= 0)))) {
              var color = $T2F().GetColor(j, i).MemberwiseClone();
              var num10 = 0;
              var flag = false;
              var flag2 = false;
              var flag3 = false;
              var flag4 = false;
              var num11 = 0;
              var flag5 = false;
              if (($thisType.tile.Get(((j - 1) | 0), i).liquid | 0) > num10) {
                num10 = ($thisType.tile.Get(((j - 1) | 0), i).liquid | 0);
                flag = true;
              } else if (($thisType.tile.Get(((j - 1) | 0), i).liquid | 0) > 0) {
                flag = true;
              }
              if (($thisType.tile.Get(((j + 1) | 0), i).liquid | 0) > num10) {
                num10 = ($thisType.tile.Get(((j + 1) | 0), i).liquid | 0);
                flag2 = true;
              } else if (($thisType.tile.Get(((j + 1) | 0), i).liquid | 0) > 0) {
                num10 = ($thisType.tile.Get(((j + 1) | 0), i).liquid | 0);
                flag2 = true;
              }
              if (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) > 0) {
                flag3 = true;
              }
              if (($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) > 240) {
                flag4 = true;
              }
              if (($thisType.tile.Get(((j - 1) | 0), i).liquid | 0) > 0) {
                if ($thisType.tile.Get(((j - 1) | 0), i).lava) {
                  num11 = 1;
                } else {
                  flag5 = true;
                }
              }
              if (($thisType.tile.Get(((j + 1) | 0), i).liquid | 0) > 0) {
                if ($thisType.tile.Get(((j + 1) | 0), i).lava) {
                  num11 = 1;
                } else {
                  flag5 = true;
                }
              }
              if (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) > 0) {
                if ($thisType.tile.Get(j, ((i - 1) | 0)).lava) {
                  num11 = 1;
                } else {
                  flag5 = true;
                }
              }
              if (($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) > 0) {
                if ($thisType.tile.Get(j, ((i + 1) | 0)).lava) {
                  num11 = 1;
                } else {
                  flag5 = true;
                }
              }
              if (!(flag5 && (num11 === 1))) {
                (value = value.MemberwiseClone(), 
                  $T25().prototype._ctor.call(value, +(j * 16), +(i * 16)));
                (value2 = value2.MemberwiseClone(), 
                  $T24().prototype._ctor.call(value2, 0, 4, 16, 16));
                if (!(!flag4 || (!flag && 
                      !flag2))) {
                  flag = true;
                  flag2 = true;
                }
                if (!((flag3 && 
                      (flag || 
                        flag2)) || (flag4 && 
                      flag3))) {
                  if (flag3) {
                    (value2 = value2.MemberwiseClone(), 
                      $T24().prototype._ctor.call(value2, 0, 4, 16, 4));
                  } else if (!(!flag4 || 
                      flag || flag2)) {
                    (value = value.MemberwiseClone(), 
                      $T25().prototype._ctor.call(value, +(j * 16), +(Math.imul(i, 16) + 12)));
                    (value2 = value2.MemberwiseClone(), 
                      $T24().prototype._ctor.call(value2, 0, 4, 16, 4));
                  } else {
                    var num12 = +(256 - num10);
                    num12 = +((num12 / 32));
                    if (!(!flag || !flag2)) {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(j * 16), +(Math.imul(i, 16) + Math.imul(((num12) | 0), 2))));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 16, ((16 - Math.imul(((num12) | 0), 2)) | 0)));
                    } else if (flag) {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(j * 16), +(Math.imul(i, 16) + Math.imul(((num12) | 0), 2))));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 4, ((16 - Math.imul(((num12) | 0), 2)) | 0)));
                    } else {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(Math.imul(j, 16) + 12), +(Math.imul(i, 16) + Math.imul(((num12) | 0), 2))));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 4, ((16 - Math.imul(((num12) | 0), 2)) | 0)));
                    }
                  }
                }
                var num13 = 0.5;
                if (num11 === 1) {
                  num13 *= 1.6;
                }
                if (!((+i >= +$thisType.worldSurface) && (num13 <= 1))) {
                  num13 = 1;
                }
                var num14 = +(color.get_R()) * num13;
                var num15 = +(color.get_G()) * num13;
                var num16 = +(color.get_B()) * num13;
                var num17 = +(color.get_A()) * num13;
                (color = color.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color, ((num14) | 0), ((num15) | 0), ((num16) | 0), ((num17) | 0)));
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.liquidTexture[num11], 
                  $T25().op_Subtraction(value.MemberwiseClone(), $thisType.screenPosition.MemberwiseClone()).MemberwiseClone(), 
                  value2.MemberwiseClone(), 
                  color.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  1, 
                  $T2A().None, 
                  0
                );
              }
            }
            if (($thisType.tile.Get(j, i).type | 0) === 51) {
              var color2 = $T2F().GetColor(j, i).MemberwiseClone();
              var num19 = +(color2.get_R()) * 0.5;
              var num20 = +(color2.get_G()) * 0.5;
              var num21 = +(color2.get_B()) * 0.5;
              var num22 = +(color2.get_A()) * 0.5;
              (color2 = color2.MemberwiseClone(), 
                $S07().Call($T04().prototype, "_ctor", null, color2, ((num19) | 0), ((num20) | 0), ((num21) | 0), ((num22) | 0)));
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.tileTexture[$thisType.tile.Get(j, i).type], 
                $S04().Construct((+(Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)) - +(((+num6 - 16) / 2))), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) + num5)), 
                new ($T24())($thisType.tile.Get(j, i).frameX, $thisType.tile.Get(j, i).frameY, num6, height), 
                color2.MemberwiseClone(), 
                0, 
                new ($T25())(), 
                1, 
                $T2A().None, 
                0
              );
            } else {
              $S03().CallVirtual("Draw", null, this.spriteBatch, 
                $thisType.tileTexture[$thisType.tile.Get(j, i).type], 
                $S04().Construct((+(Math.imul(j, 16) - (($thisType.screenPosition.X) | 0)) - +(((+num6 - 16) / 2))), +(((Math.imul(i, 16) - (($thisType.screenPosition.Y) | 0)) | 0) + num5)), 
                new ($T24())($thisType.tile.Get(j, i).frameX, $thisType.tile.Get(j, i).frameY, num6, height), 
                $T2F().GetColor(j, i).MemberwiseClone(), 
                0, 
                new ($T25())(), 
                1, 
                $T2A().None, 
                0
              );
            }
          }
        }
      }
    }
  }; 

  function Main_DrawWater (bg) {
    var $hoisted00 = new ($T25())(), $hoisted01 = new ($T25())();
    var value = new ($T25())(), value2 = new ($T24())();
    var num = ((+((+$thisType.screenPosition.X / 16)) - 1) | 0);
    var num2 = ((((+((+$thisType.screenPosition.X + +($thisType.screenWidth)) / 16)) | 0) + 2) | 0);
    var num3 = ((+((+$thisType.screenPosition.Y / 16)) - 1) | 0);
    var num4 = ((((+((+$thisType.screenPosition.Y + +($thisType.screenHeight)) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($thisType.maxTilesX | 0)) {
      num2 = ($thisType.maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($thisType.maxTilesY | 0)) {
      num4 = ($thisType.maxTilesY | 0);
    }

  $loop0: 
    for (var i = num3; i < ((num4 + 4) | 0); i = ((i + 1) | 0)) {
      var j = ((num - 2) | 0);

    $loop1: 
      while (j < ((num2 + 2) | 0)) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              if (!((($thisType.tile.Get(j, i).liquid | 0) <= 0) || (+$T2F().Brightness(j, i) <= 0))) {
                var color = $T2F().GetColor(j, i).MemberwiseClone();
                var num5 = +(256 - ($thisType.tile.Get(j, i).liquid | 0));
                num5 = +((num5 / 32));
                var num6 = 0;
                if ($thisType.tile.Get(j, i).lava) {
                  num6 = 1;
                }
                var num7 = 0.5;
                if (bg) {
                  num7 = 1;
                }
                (value = value.MemberwiseClone(), 
                  $T25().prototype._ctor.call(value, +(j * 16), +(Math.imul(i, 16) + Math.imul(((num5) | 0), 2))));
                (value2 = value2.MemberwiseClone(), 
                  $T24().prototype._ctor.call(value2, 0, 0, 16, ((16 - Math.imul(((num5) | 0), 2)) | 0)));
                if (!((($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) >= 245) || ($thisType.tile.Get(j, ((i + 1) | 0)).active && 
                      $thisType.tileSolid[$thisType.tile.Get(j, ((i + 1) | 0)).type] && 
                      !$thisType.tileSolidTop[$thisType.tile.Get(j, ((i + 1) | 0)).type]))) {
                  var num8 = +(256 - ($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0));
                  num8 = +((num8 / 32));
                  num7 = +(((0.5 * (8 - num5)) / 4));
                  if (num7 > 0.55) {
                    num7 = 0.55;
                  }
                  if (num7 < 0.35) {
                    num7 = 0.35;
                  }
                  var num9 = +((num5 / 2));
                  if (($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) < 200) {
                    if (bg) {
                      $label0 = 1 /* goto IL_766 */ ;
                      continue $labelgroup0;
                    }
                    if (!((($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) <= 0) || (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) <= 0))) {
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 16, 16));
                      num7 = 0.5;
                    } else if (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) > 0) {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(j * 16), +(Math.imul(i, 16) + 4)));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 16, 12));
                      num7 = 0.5;
                    } else if (($thisType.tile.Get(j, ((i + 1) | 0)).liquid | 0) > 0) {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(j * 16), +(((Math.imul(i, 16) + Math.imul(((num5) | 0), 2)) | 0) + Math.imul(((num8) | 0), 2))));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, 16, ((16 - Math.imul(((num5) | 0), 2)) | 0)));
                    } else {
                      (value = value.MemberwiseClone(), 
                        $T25().prototype._ctor.call(value, +(Math.imul(j, 16) + ((num9) | 0)), +(((Math.imul(i, 16) + Math.imul(((num9) | 0), 2)) | 0) + Math.imul(((num8) | 0), 2))));
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, 0, 4, ((16 - Math.imul(((num9) | 0), 2)) | 0), ((16 - Math.imul(((num9) | 0), 2)) | 0)));
                    }
                  } else {
                    num7 = 0.5;
                    (value2 = value2.MemberwiseClone(), 
                      $T24().prototype._ctor.call(value2, 0, 4, 16, ((((16 - Math.imul(((num5) | 0), 2)) | 0) + Math.imul(((num8) | 0), 2)) | 0)));
                  }
                } else if (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) > 32) {
                  (value2 = value2.MemberwiseClone(), 
                    $T24().prototype._ctor.call(value2, 0, 4, value2.Width, value2.Height));
                } else if (!((num5 >= 1) || 
                    !$thisType.tile.Get(j, ((i - 1) | 0)).active || 
                    !$thisType.tileSolid[$thisType.tile.Get(j, ((i - 1) | 0)).type] || $thisType.tileSolidTop[$thisType.tile.Get(j, ((i - 1) | 0)).type])) {
                  (value = value.MemberwiseClone(), 
                    $T25().prototype._ctor.call(value, +(j * 16), +(i * 16)));
                  (value2 = value2.MemberwiseClone(), 
                    $T24().prototype._ctor.call(value2, 0, 4, 16, 16));
                } else {
                  var flag = true;

                $loop2: 
                  for (var num10 = ((i + 1) | 0); !((num10 >= ((i + 6) | 0)) || ($thisType.tile.Get(j, num10).active && 
                        $thisType.tileSolid[$thisType.tile.Get(j, num10).type] && 
                        !$thisType.tileSolidTop[$thisType.tile.Get(j, num10).type])); num10 = ((num10 + 1) | 0)) {
                    if (($thisType.tile.Get(j, num10).liquid | 0) < 200) {
                      flag = false;
                      break $loop2;
                    }
                  }
                  if (!flag) {
                    num7 = 0.5;
                    (value2 = value2.MemberwiseClone(), 
                      $T24().prototype._ctor.call(value2, 0, 4, 16, 16));
                  } else if (($thisType.tile.Get(j, ((i - 1) | 0)).liquid | 0) > 0) {
                    (value2 = value2.MemberwiseClone(), 
                      $T24().prototype._ctor.call(value2, 0, 2, value2.Width, value2.Height));
                  }
                }
                if ($thisType.tile.Get(j, i).lava) {
                  num7 *= 1.6;
                  if (num7 > 1) {
                    num7 = 1;
                  }
                  if (this.get_IsActive()) {
                    if (!((($thisType.tile.Get(j, i).liquid | 0) <= 200) || (($thisType.rand.Next(700) | 0) !== 0))) {
                      $T0E().NewDust(
                        ($hoisted00._ctor(+(j * 16), +(i * 16)), 
                          $hoisted00), 
                        16, 
                        16, 
                        35, 
                        0, 
                        0, 
                        0, 
                        new ($T04())(), 
                        1
                      );
                    }
                    if (!(((value2.Y | 0) !== 0) || 
                        !this.get_IsActive() || (($thisType.rand.Next(300) | 0) !== 0))) {
                      var num11 = ($T0E().NewDust(
                        ($hoisted01._ctor(+(j * 16), (+(i * 16) + (num5 * 2)) - 8), 
                          $hoisted01), 
                        16, 
                        8, 
                        35, 
                        0, 
                        0, 
                        50, 
                        new ($T04())(), 
                        1.5
                      ) | 0);
                      $thisType.dust[num11].velocity = $S0A().CallStatic($T25(), "op_Multiply", null, $thisType.dust[num11].velocity.MemberwiseClone(), 0.8).MemberwiseClone();
                      var expr_65E_cp_0 = $thisType.dust[num11];
                      expr_65E_cp_0.velocity.X = +expr_65E_cp_0.velocity.X * 2;
                      var expr_67C_cp_0 = $thisType.dust[num11];
                      expr_67C_cp_0.velocity.Y = +expr_67C_cp_0.velocity.Y - (+($thisType.rand.Next(1, 7)) * 0.1);
                      if (($thisType.rand.Next(10) | 0) === 0) {
                        var expr_6B6_cp_0 = $thisType.dust[num11];
                        expr_6B6_cp_0.velocity.Y = +expr_6B6_cp_0.velocity.Y * +($thisType.rand.Next(2, 5));
                      }
                      $thisType.dust[num11].noGravity = true;
                    }
                  }
                }
                var num12 = +(color.get_R()) * num7;
                var num13 = +(color.get_G()) * num7;
                var num14 = +(color.get_B()) * num7;
                var num15 = +(color.get_A()) * num7;
                (color = color.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color, ((num12) | 0), ((num13) | 0), ((num14) | 0), ((num15) | 0)));
                $S03().CallVirtual("Draw", null, this.spriteBatch, 
                  $thisType.liquidTexture[num6], 
                  $T25().op_Subtraction(value.MemberwiseClone(), $thisType.screenPosition.MemberwiseClone()).MemberwiseClone(), 
                  value2.MemberwiseClone(), 
                  color.MemberwiseClone(), 
                  0, 
                  new ($T25())(), 
                  1, 
                  $T2A().None, 
                  0
                );
              }

              $label0 = 1 /* goto IL_766 */ ;
              continue $labelgroup0;
            case 1: /* IL_766 */ 
              j = ((j + 1) | 0);

              break $labelgroup0;
          }
        }
      }
    }
  }; 

  function Main_ErasePlayer (i, $exception) {
    try {
      $T40().Delete($thisType.loadPlayerPath[i]);
      $T40().Delete(JSIL.ConcatString($thisType.loadPlayerPath[i], ".bak"));
      $thisType.LoadPlayers();
    } catch ($exception) {
    }
  }; 

  function Main_EraseWorld (i, $exception) {
    try {
      $T40().Delete($thisType.loadWorldPath[i]);
      $T40().Delete(JSIL.ConcatString($thisType.loadWorldPath[i], ".bak"));
      $thisType.LoadWorlds();
    } catch ($exception) {
    }
  }; 

  function Main_getAuth ($exception) {
    try {
      var stringBuilder = $S0C().Construct();
      var array = JSIL.Array.New($T21(), 8192);
      var httpWebRequest = $T42().$Cast($S0D().CallStatic($T43(), "Create", null, ""));
      var httpWebResponse = $T44().$Cast(httpWebRequest.GetResponse());
      var responseStream = httpWebResponse.GetResponseStream();

      do {
        var num = (responseStream.Read(array, 0, array.length) | 0);
        if (num !== 0) {
          var string = $T38().get_ASCII().GetString(array, 0, num);
          $S0E().CallVirtual("Append", null, stringBuilder, string);
        }
      } while (num > 0);
      var a = stringBuilder.toString();
      if (a == "") {
        $thisType.webAuth = true;
      }
    } catch ($exception) {
      this.QuitGame();
    }
  }; 

  function Main_GetInputText (oldString) {
    if (!$thisType.hasFocus) {
      return oldString;
    }
    $thisType.inputTextEnter = false;
    var text = oldString;
    if (text === null) {
      text = "";
    }
    $thisType.oldInputText = $thisType.inputText.MemberwiseClone();
    $thisType.inputText = $T01().GetState().MemberwiseClone();
    var flag = (($thisType.GetKeyState(20) & 0xFFFF) & 65535) !== 0;
    var flag2 = false;
    if (!(!$thisType.inputText.IsKeyDown($T3F().LeftShift) && !$thisType.inputText.IsKeyDown($T3F().RightShift))) {
      flag2 = true;
    }
    var pressedKeys = $thisType.inputText.GetPressedKeys();
    var pressedKeys2 = $thisType.oldInputText.GetPressedKeys();
    var flag3 = false;
    if (!(!$thisType.inputText.IsKeyDown($T3F().Back) || !$thisType.oldInputText.IsKeyDown($T3F().Back))) {
      if (($thisType.backSpaceCount | 0) === 0) {
        $thisType.backSpaceCount = 7;
        flag3 = true;
      }
      $thisType.backSpaceCount = ((($thisType.backSpaceCount | 0) - 1) | 0);
    } else {
      $thisType.backSpaceCount = 15;
    }

    for (var i = 0; i < (pressedKeys.length | 0); i = ((i + 1) | 0)) {
      var flag4 = true;

      for (var j = 0; j < (pressedKeys2.length | 0); j = ((j + 1) | 0)) {
        if (pressedKeys[i] === pressedKeys2[j]) {
          flag4 = false;
        }
      }
      var text2 = (String(pressedKeys[i]));
      if (!(!(text2 == "Back") || (!flag4 && 
            !flag3))) {
        if ((text.length | 0) > 0) {
          text = (text.substr(0, (((text.length | 0) - 1) | 0)));
        }
      } else if (flag4) {
        if (text2 == "Space") {
          text2 = " ";
        } else if ((text2.length | 0) === 1) {
          var c = $S0F().CallStatic($T49(), "ToChar", null, text2);
          var num = ($S10().CallStatic($T49(), "ToInt32", null, c) | 0);
          if (!((num < 65) || 
              (num > 90) || (!(!flag2 && 
                  !flag) && 
                (!flag2 || 
                  !flag)))) {
            num = ((num + 32) | 0);
            c = $S11().CallStatic($T49(), "ToChar", null, num);
            text2 = (String($T48().$Box(c)));
          }
        } else if (!(((text2.length | 0) !== 2) || !(text2.substr(0, 1) == "D"))) {
          text2 = (text2.substr(1, 1));
          if (flag2) {
            if (text2 == "1") {
              text2 = "!";
            }
            if (text2 == "2") {
              text2 = "@";
            }
            if (text2 == "3") {
              text2 = "#";
            }
            if (text2 == "4") {
              text2 = "$";
            }
            if (text2 == "5") {
              text2 = "%";
            }
            if (text2 == "6") {
              text2 = "^";
            }
            if (text2 == "7") {
              text2 = "&";
            }
            if (text2 == "8") {
              text2 = "*";
            }
            if (text2 == "9") {
              text2 = "(";
            }
            if (text2 == "0") {
              text2 = ")";
            }
          }
        } else if (!(((text2.length | 0) !== 7) || !(text2.substr(0, 6) == "NumPad"))) {
          text2 = (text2.substr(6, 1));
        } else if (text2 == "Divide") {
          text2 = "/";
        } else if (text2 == "Multiply") {
          text2 = "*";
        } else if (text2 == "Subtract") {
          text2 = "-";
        } else if (text2 == "Add") {
          text2 = "+";
        } else if (text2 == "Decimal") {
          text2 = ".";
        } else {
          if (text2 == "OemSemicolon") {
            text2 = ";";
          } else if (text2 == "OemPlus") {
            text2 = "=";
          } else if (text2 == "OemComma") {
            text2 = ",";
          } else if (text2 == "OemMinus") {
            text2 = "-";
          } else if (text2 == "OemPeriod") {
            text2 = ".";
          } else if (text2 == "OemQuestion") {
            text2 = "/";
          } else if (text2 == "OemTilde") {
            text2 = "`";
          } else if (text2 == "OemOpenBrackets") {
            text2 = "[";
          } else if (text2 == "OemPipe") {
            text2 = "\\";
          } else if (text2 == "OemCloseBrackets") {
            text2 = "]";
          } else if (text2 == "OemQuotes") {
            text2 = "'";
          } else if (text2 == "OemBackslash") {
            text2 = "\\";
          }
          if (flag2) {
            if (text2 == ";") {
              text2 = ":";
            } else if (text2 == "=") {
              text2 = "+";
            } else if (text2 == ",") {
              text2 = "<";
            } else if (text2 == "-") {
              text2 = "_";
            } else if (text2 == ".") {
              text2 = ">";
            } else if (text2 == "/") {
              text2 = "?";
            } else if (text2 == "`") {
              text2 = "~";
            } else if (text2 == "[") {
              text2 = "{";
            } else if (text2 == "\\") {
              text2 = "|";
            } else if (text2 == "]") {
              text2 = "}";
            } else if (text2 == "'") {
              text2 = "\"";
            }
          }
        }
        if (text2 == "Enter") {
          $thisType.inputTextEnter = true;
        }
        if ((text2.length | 0) === 1) {
          text = (JSIL.ConcatString(text, text2));
        }
      }
    }
    return text;
  }; 




  function Main_HelpText () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          var flag = false;
          if (($thisType.player[$thisType.myPlayer].statLifeMax | 0) > 100) {
            flag = true;
          }
          var flag2 = false;
          if (($thisType.player[$thisType.myPlayer].statManaMax | 0) > 0) {
            flag2 = true;
          }
          var flag3 = true;
          var flag4 = false;
          var flag5 = false;
          var flag6 = false;
          var flag7 = false;
          var flag8 = false;
          var flag9 = false;
          var flag10 = false;

          for (var i = 0; i < 44; i = ((i + 1) | 0)) {
            if (!((($thisType.player[$thisType.myPlayer].inventory[i].pick | 0) <= 0) || !($thisType.player[$thisType.myPlayer].inventory[i].$name != "Copper Pickaxe"))) {
              flag3 = false;
            }
            if (!((($thisType.player[$thisType.myPlayer].inventory[i].axe | 0) <= 0) || !($thisType.player[$thisType.myPlayer].inventory[i].$name != "Copper Axe"))) {
              flag3 = false;
            }
            if (($thisType.player[$thisType.myPlayer].inventory[i].hammer | 0) > 0) {
              flag3 = false;
            }
            if (!((($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 11) && 
                (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 12) && 
                (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 13) && (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 14))) {
              flag4 = true;
            }
            if (!((($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 19) && 
                (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 20) && 
                (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 21) && (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 22))) {
              flag5 = true;
            }
            if (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) === 75) {
              flag6 = true;
            }
            if (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) === 75) {
              flag8 = true;
            }
            if (!((($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 68) && (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) !== 70))) {
              flag9 = true;
            }
            if (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) === 84) {
              flag10 = true;
            }
            if (($thisType.player[$thisType.myPlayer].inventory[i].type | 0) === 117) {
              flag7 = true;
            }
          }
          var flag11 = false;
          var flag12 = false;
          var flag13 = false;
          var flag14 = false;

          for (var j = 0; j < 1000; j = ((j + 1) | 0)) {
            if ($thisType.npc[j].active) {
              if (($thisType.npc[j].type | 0) === 17) {
                flag11 = true;
              }
              if (($thisType.npc[j].type | 0) === 18) {
                flag12 = true;
              }
              if (($thisType.npc[j].type | 0) === 19) {
                flag14 = true;
              }
              if (($thisType.npc[j].type | 0) === 20) {
                flag13 = true;
              }
            }
          }

        $loop2: 
          while (true) {
            $thisType.helpText = ((($thisType.helpText | 0) + 1) | 0);
            if (flag3) {
              if (($thisType.helpText | 0) === 1) {
                break $loop2;
              }
              if (($thisType.helpText | 0) === 2) {
                $label0 = 1 /* goto Block_27 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 3) {
                $label0 = 2 /* goto Block_28 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 4) {
                $label0 = 3 /* goto Block_29 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 5) {
                $label0 = 4 /* goto Block_30 */ ;
                continue $labelgroup0;
              }
            }
            if (!(!flag3 || 
                flag4 || 
                flag5 || (($thisType.helpText | 0) !== 11))) {
              $label0 = 5 /* goto Block_34 */ ;
              continue $labelgroup0;
            }
            if (!(!flag3 || 
                !flag4 || flag5)) {
              if (($thisType.helpText | 0) === 21) {
                $label0 = 6 /* goto Block_38 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 22) {
                $label0 = 7 /* goto Block_39 */ ;
                continue $labelgroup0;
              }
            }
            if (!(!flag3 || !flag5)) {
              if (($thisType.helpText | 0) === 31) {
                $label0 = 8 /* goto Block_42 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 32) {
                $label0 = 9 /* goto Block_43 */ ;
                continue $labelgroup0;
              }
            }
            if (!(flag || (($thisType.helpText | 0) !== 41))) {
              $label0 = 10 /* goto Block_45 */ ;
              continue $labelgroup0;
            }
            if (!(flag2 || (($thisType.helpText | 0) !== 42))) {
              $label0 = 11 /* goto Block_47 */ ;
              continue $labelgroup0;
            }
            if (!(flag2 || 
                flag6 || (($thisType.helpText | 0) !== 43))) {
              $label0 = 12 /* goto Block_50 */ ;
              continue $labelgroup0;
            }
            if (!(flag11 || flag12)) {
              if (($thisType.helpText | 0) === 51) {
                $label0 = 13 /* goto Block_53 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 52) {
                $label0 = 14 /* goto Block_54 */ ;
                continue $labelgroup0;
              }
              if (($thisType.helpText | 0) === 53) {
                $label0 = 15 /* goto Block_55 */ ;
                continue $labelgroup0;
              }
            }
            if (!(flag11 || (($thisType.helpText | 0) !== 61))) {
              $label0 = 16 /* goto Block_57 */ ;
              continue $labelgroup0;
            }
            if (!(flag12 || (($thisType.helpText | 0) !== 62))) {
              $label0 = 17 /* goto Block_59 */ ;
              continue $labelgroup0;
            }
            if (!(flag14 || (($thisType.helpText | 0) !== 63))) {
              $label0 = 18 /* goto Block_61 */ ;
              continue $labelgroup0;
            }
            if (!(flag13 || (($thisType.helpText | 0) !== 64))) {
              $label0 = 19 /* goto Block_63 */ ;
              continue $labelgroup0;
            }
            if (!(!flag8 || (($thisType.helpText | 0) !== 71))) {
              $label0 = 20 /* goto Block_65 */ ;
              continue $labelgroup0;
            }
            if (!(!flag9 || (($thisType.helpText | 0) !== 72))) {
              $label0 = 21 /* goto Block_67 */ ;
              continue $labelgroup0;
            }
            if (!((!flag8 && 
                  !flag9) || (($thisType.helpText | 0) !== 80))) {
              $label0 = 22 /* goto Block_69 */ ;
              continue $labelgroup0;
            }
            if (!(flag10 || (($thisType.helpText | 0) !== 201))) {
              $label0 = 23 /* goto Block_71 */ ;
              continue $labelgroup0;
            }
            if (!(!flag7 || (($thisType.helpText | 0) !== 202))) {
              $label0 = 24 /* goto Block_73 */ ;
              continue $labelgroup0;
            }
            if (($thisType.helpText | 0) === 1000) {
              $label0 = 25 /* goto Block_74 */ ;
              continue $labelgroup0;
            }
            if (($thisType.helpText | 0) === 1001) {
              $label0 = 26 /* goto Block_75 */ ;
              continue $labelgroup0;
            }
            if (($thisType.helpText | 0) === 1002) {
              $label0 = 27 /* goto Block_76 */ ;
              continue $labelgroup0;
            }
            if (($thisType.helpText | 0) > 1100) {
              $thisType.helpText = 0;
            }
          }
          $thisType.npcChatText = "You can use your pickaxe to dig through dirt, and your axe to chop down trees. Just place your cursor over the tile and click!";
          return;

          $label0 = 1 /* goto Block_27 */ ;
          continue $labelgroup0;
        case 1: /* Block_27 */ 
          $thisType.npcChatText = "If you want to survive, you will need to create weapons and shelter. Start by chopping down trees and gathering wood.";
          return;

          $label0 = 2 /* goto Block_28 */ ;
          continue $labelgroup0;
        case 2: /* Block_28 */ 
          $thisType.npcChatText = "Press ESC to access your crafting menu. When you have enough wood, create a workbench. This will allow you to create more complicated things, as long as you are standing close to it.";
          return;

          $label0 = 3 /* goto Block_29 */ ;
          continue $labelgroup0;
        case 3: /* Block_29 */ 
          $thisType.npcChatText = "You can build a shelter by placing wood or other blocks in the world. Don't forget to create and place walls.";
          return;

          $label0 = 4 /* goto Block_30 */ ;
          continue $labelgroup0;
        case 4: /* Block_30 */ 
          $thisType.npcChatText = "Once you have a wooden sword, you might try to gather some gel from the slimes. Combine wood and gel to make a torch!";
          return;

          $label0 = 5 /* goto Block_34 */ ;
          continue $labelgroup0;
        case 5: /* Block_34 */ 
          $thisType.npcChatText = "You should do some mining to find metal ore. You can craft very usefull things with it.";
          return;

          $label0 = 6 /* goto Block_38 */ ;
          continue $labelgroup0;
        case 6: /* Block_38 */ 
          $thisType.npcChatText = "Now that you have some ore, you will need to turn it into a bar in order to make items with it. This requires a furnace!";
          return;

          $label0 = 7 /* goto Block_39 */ ;
          continue $labelgroup0;
        case 7: /* Block_39 */ 
          $thisType.npcChatText = "You can create a furnace out of torches, wood, and stone. Make sure you are standing near a work bench.";
          return;

          $label0 = 8 /* goto Block_42 */ ;
          continue $labelgroup0;
        case 8: /* Block_42 */ 
          $thisType.npcChatText = "You will need an anvil to make most things out of metal bars.";
          return;

          $label0 = 9 /* goto Block_43 */ ;
          continue $labelgroup0;
        case 9: /* Block_43 */ 
          $thisType.npcChatText = "Anvils can be crafted out of iron, or purchased from a merchant.";
          return;

          $label0 = 10 /* goto Block_45 */ ;
          continue $labelgroup0;
        case 10: /* Block_45 */ 
          $thisType.npcChatText = "Underground are crystal hearts that can be used to increase your max life. You will need a hammer to obtain them.";
          return;

          $label0 = 11 /* goto Block_47 */ ;
          continue $labelgroup0;
        case 11: /* Block_47 */ 
          $thisType.npcChatText = "If you gather 10 fallen stars, they can be combined to create an item that will increase your magic capacity.";
          return;

          $label0 = 12 /* goto Block_50 */ ;
          continue $labelgroup0;
        case 12: /* Block_50 */ 
          $thisType.npcChatText = "Stars fall all over the world at night. They can be used for all sorts of usefull things. If you see one, be sure to grab it because they disappear after sunrise.";
          return;

          $label0 = 13 /* goto Block_53 */ ;
          continue $labelgroup0;
        case 13: /* Block_53 */ 
          $thisType.npcChatText = "There are many different ways you can attract people to move in to our town. They will of course need a home to live in.";
          return;

          $label0 = 14 /* goto Block_54 */ ;
          continue $labelgroup0;
        case 14: /* Block_54 */ 
          $thisType.npcChatText = "In order for a room to be considered a home, it needs to have a door, chair, table, and a light source.  Make sure the house has walls as well.";
          return;

          $label0 = 15 /* goto Block_55 */ ;
          continue $labelgroup0;
        case 15: /* Block_55 */ 
          $thisType.npcChatText = "Two people will not live in the same home. Also, if their home is destroyed, they will look for a new place to live.";
          return;

          $label0 = 16 /* goto Block_57 */ ;
          continue $labelgroup0;
        case 16: /* Block_57 */ 
          $thisType.npcChatText = "If you want a merchant to move in, you will need to gather plenty of money. 50 silver coins should do the trick!";
          return;

          $label0 = 17 /* goto Block_59 */ ;
          continue $labelgroup0;
        case 17: /* Block_59 */ 
          $thisType.npcChatText = "For a nurse to move in, you might want to increase your maximum life.";
          return;

          $label0 = 18 /* goto Block_61 */ ;
          continue $labelgroup0;
        case 18: /* Block_61 */ 
          $thisType.npcChatText = "If you had a gun, I bet an arms dealer might show up to sell you some ammo!";
          return;

          $label0 = 19 /* goto Block_63 */ ;
          continue $labelgroup0;
        case 19: /* Block_63 */ 
          $thisType.npcChatText = "You should prove yourself by defeating a strong monster. That will get the attention of a dryad.";
          return;

          $label0 = 20 /* goto Block_65 */ ;
          continue $labelgroup0;
        case 20: /* Block_65 */ 
          $thisType.npcChatText = "If you combine lenses at a demon alter, you might be able to find a way to summon a powerful monster. You will want to wait until night before using it, though.";
          return;

          $label0 = 21 /* goto Block_67 */ ;
          continue $labelgroup0;
        case 21: /* Block_67 */ 
          $thisType.npcChatText = "You can create worm bait with rotten chunks and vile powder. Make sure you are in a corrupt area before using it.";
          return;

          $label0 = 22 /* goto Block_69 */ ;
          continue $labelgroup0;
        case 22: /* Block_69 */ 
          $thisType.npcChatText = "Demonic alters can usually be found in the corruption. You will need to be near them to craft some items.";
          return;

          $label0 = 23 /* goto Block_71 */ ;
          continue $labelgroup0;
        case 23: /* Block_71 */ 
          $thisType.npcChatText = "You can make a grappling hook from a hook and 3 chains. Skeletons found deep underground usually carry hooks, and chains can be made from iron bars.";
          return;

          $label0 = 24 /* goto Block_73 */ ;
          continue $labelgroup0;
        case 24: /* Block_73 */ 
          $thisType.npcChatText = "You can craft a space gun using a flintlock pistol, 10 fallen stars, and 30 meteorite bars.";
          return;

          $label0 = 25 /* goto Block_74 */ ;
          continue $labelgroup0;
        case 25: /* Block_74 */ 
          $thisType.npcChatText = "If you see a pot, be sure to smash it open. They contain all sorts of useful supplies.";
          return;

          $label0 = 26 /* goto Block_75 */ ;
          continue $labelgroup0;
        case 26: /* Block_75 */ 
          $thisType.npcChatText = "There is treasure hidden all over the world. Some amazing things can be found deep underground!";
          return;

          $label0 = 27 /* goto Block_76 */ ;
          continue $labelgroup0;
        case 27: /* Block_76 */ 
          $thisType.npcChatText = "Smashing a shadow orb will cause a meteor to fall out of the sky. Shadow orbs can usually be found in the chasms around corrupt areas.";

          break $labelgroup0;
      }
    }
  }; 

  function Main_Initialize () {
    this.set_IsFixedTimeStep(true);
    if ($thisType.webProtect) {
      this.getAuth();

      while (!$thisType.webAuth) {
        this.Exit();
      }
    }
    if ($thisType.rand === null) {
      $thisType.rand = $S12().Construct($T4B().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    if ($T39().genRand === null) {
      $T39().genRand = $S12().Construct($T4B().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    this.OpenSettings();
    var num = ($thisType.rand.Next(5) | 0);
    if (num === 0) {
      (this.get_Window()).set_Title("Terraria: Dig Peon, Dig!");
    }
    if (num === 1) {
      (this.get_Window()).set_Title("Terraria: Epic Dirt");
    }
    if (num === 2) {
      (this.get_Window()).set_Title("Terraria: Hey Guys!");
    }
    if (num === 3) {
      (this.get_Window()).set_Title("Terraria: Sand is Overpowered");
    } else {
      (this.get_Window()).set_Title("Terraria: Shut Up and Dig Gaiden!");
    }
    $thisType.tileSolid[0] = true;
    $thisType.tileBlockLight[0] = true;
    $thisType.tileSolid[1] = true;
    $thisType.tileBlockLight[1] = true;
    $thisType.tileSolid[2] = true;
    $thisType.tileBlockLight[2] = true;
    $thisType.tileSolid[3] = false;
    $thisType.tileNoAttach[3] = true;
    $thisType.tileNoFail[3] = true;
    $thisType.tileSolid[4] = false;
    $thisType.tileNoAttach[4] = true;
    $thisType.tileNoFail[4] = true;
    $thisType.tileNoFail[24] = true;
    $thisType.tileSolid[5] = false;
    $thisType.tileSolid[6] = true;
    $thisType.tileBlockLight[6] = true;
    $thisType.tileSolid[7] = true;
    $thisType.tileBlockLight[7] = true;
    $thisType.tileSolid[8] = true;
    $thisType.tileBlockLight[8] = true;
    $thisType.tileSolid[9] = true;
    $thisType.tileBlockLight[9] = true;
    $thisType.tileBlockLight[10] = true;
    $thisType.tileSolid[10] = true;
    $thisType.tileNoAttach[10] = true;
    $thisType.tileBlockLight[10] = true;
    $thisType.tileSolid[11] = false;
    $thisType.tileSolidTop[19] = true;
    $thisType.tileSolid[19] = true;
    $thisType.tileSolid[22] = true;
    $thisType.tileSolid[23] = true;
    $thisType.tileSolid[25] = true;
    $thisType.tileSolid[30] = true;
    $thisType.tileNoFail[32] = true;
    $thisType.tileBlockLight[32] = true;
    $thisType.tileSolid[37] = true;
    $thisType.tileBlockLight[37] = true;
    $thisType.tileSolid[38] = true;
    $thisType.tileBlockLight[38] = true;
    $thisType.tileSolid[39] = true;
    $thisType.tileBlockLight[39] = true;
    $thisType.tileSolid[40] = true;
    $thisType.tileBlockLight[40] = true;
    $thisType.tileSolid[41] = true;
    $thisType.tileBlockLight[41] = true;
    $thisType.tileSolid[43] = true;
    $thisType.tileBlockLight[43] = true;
    $thisType.tileSolid[44] = true;
    $thisType.tileBlockLight[44] = true;
    $thisType.tileSolid[45] = true;
    $thisType.tileBlockLight[45] = true;
    $thisType.tileSolid[46] = true;
    $thisType.tileBlockLight[46] = true;
    $thisType.tileSolid[47] = true;
    $thisType.tileBlockLight[47] = true;
    $thisType.tileSolid[48] = true;
    $thisType.tileBlockLight[48] = true;
    $thisType.tileSolid[53] = true;
    $thisType.tileBlockLight[53] = true;
    $thisType.tileSolid[54] = true;
    $thisType.tileBlockLight[52] = true;
    $thisType.tileSolid[56] = true;
    $thisType.tileBlockLight[56] = true;
    $thisType.tileSolid[57] = true;
    $thisType.tileBlockLight[57] = true;
    $thisType.tileSolid[58] = true;
    $thisType.tileBlockLight[58] = true;
    $thisType.tileSolid[59] = true;
    $thisType.tileBlockLight[59] = true;
    $thisType.tileSolid[60] = true;
    $thisType.tileBlockLight[60] = true;
    $thisType.tileSolid[63] = true;
    $thisType.tileBlockLight[63] = true;
    $thisType.tileStone[63] = true;
    $thisType.tileSolid[64] = true;
    $thisType.tileBlockLight[64] = true;
    $thisType.tileStone[64] = true;
    $thisType.tileSolid[65] = true;
    $thisType.tileBlockLight[65] = true;
    $thisType.tileStone[65] = true;
    $thisType.tileSolid[66] = true;
    $thisType.tileBlockLight[66] = true;
    $thisType.tileStone[66] = true;
    $thisType.tileSolid[67] = true;
    $thisType.tileBlockLight[67] = true;
    $thisType.tileStone[67] = true;
    $thisType.tileSolid[68] = true;
    $thisType.tileBlockLight[68] = true;
    $thisType.tileStone[68] = true;
    $thisType.tileSolid[75] = true;
    $thisType.tileBlockLight[75] = true;
    $thisType.tileSolid[76] = true;
    $thisType.tileBlockLight[76] = true;
    $thisType.tileSolid[70] = true;
    $thisType.tileBlockLight[70] = true;
    $thisType.tileBlockLight[51] = true;
    $thisType.tileNoFail[50] = true;
    $thisType.tileNoAttach[50] = true;
    $thisType.tileDungeon[41] = true;
    $thisType.tileDungeon[43] = true;
    $thisType.tileDungeon[44] = true;
    $thisType.tileBlockLight[30] = true;
    $thisType.tileBlockLight[25] = true;
    $thisType.tileBlockLight[23] = true;
    $thisType.tileBlockLight[22] = true;
    $thisType.tileBlockLight[62] = true;
    $thisType.tileSolidTop[18] = true;
    $thisType.tileSolidTop[14] = true;
    $thisType.tileSolidTop[16] = true;
    $thisType.tileNoAttach[20] = true;
    $thisType.tileNoAttach[19] = true;
    $thisType.tileNoAttach[13] = true;
    $thisType.tileNoAttach[14] = true;
    $thisType.tileNoAttach[15] = true;
    $thisType.tileNoAttach[16] = true;
    $thisType.tileNoAttach[17] = true;
    $thisType.tileNoAttach[18] = true;
    $thisType.tileNoAttach[19] = true;
    $thisType.tileNoAttach[21] = true;
    $thisType.tileNoAttach[27] = true;
    $thisType.tileFrameImportant[3] = true;
    $thisType.tileFrameImportant[5] = true;
    $thisType.tileFrameImportant[10] = true;
    $thisType.tileFrameImportant[11] = true;
    $thisType.tileFrameImportant[12] = true;
    $thisType.tileFrameImportant[13] = true;
    $thisType.tileFrameImportant[14] = true;
    $thisType.tileFrameImportant[15] = true;
    $thisType.tileFrameImportant[16] = true;
    $thisType.tileFrameImportant[17] = true;
    $thisType.tileFrameImportant[18] = true;
    $thisType.tileFrameImportant[20] = true;
    $thisType.tileFrameImportant[21] = true;
    $thisType.tileFrameImportant[24] = true;
    $thisType.tileFrameImportant[26] = true;
    $thisType.tileFrameImportant[27] = true;
    $thisType.tileFrameImportant[28] = true;
    $thisType.tileFrameImportant[29] = true;
    $thisType.tileFrameImportant[31] = true;
    $thisType.tileFrameImportant[33] = true;
    $thisType.tileFrameImportant[34] = true;
    $thisType.tileFrameImportant[35] = true;
    $thisType.tileFrameImportant[36] = true;
    $thisType.tileFrameImportant[42] = true;
    $thisType.tileFrameImportant[50] = true;
    $thisType.tileFrameImportant[55] = true;
    $thisType.tileFrameImportant[61] = true;
    $thisType.tileFrameImportant[71] = true;
    $thisType.tileFrameImportant[72] = true;
    $thisType.tileFrameImportant[73] = true;
    $thisType.tileFrameImportant[74] = true;
    $thisType.tileFrameImportant[77] = true;
    $thisType.tileFrameImportant[78] = true;
    $thisType.tileFrameImportant[79] = true;
    $thisType.tileTable[14] = true;
    $thisType.tileTable[18] = true;
    $thisType.tileTable[19] = true;
    $thisType.tileWaterDeath[4] = true;
    $thisType.tileWaterDeath[51] = true;
    $thisType.tileLavaDeath[3] = true;
    $thisType.tileLavaDeath[5] = true;
    $thisType.tileLavaDeath[10] = true;
    $thisType.tileLavaDeath[11] = true;
    $thisType.tileLavaDeath[12] = true;
    $thisType.tileLavaDeath[13] = true;
    $thisType.tileLavaDeath[14] = true;
    $thisType.tileLavaDeath[15] = true;
    $thisType.tileLavaDeath[16] = true;
    $thisType.tileLavaDeath[17] = true;
    $thisType.tileLavaDeath[18] = true;
    $thisType.tileLavaDeath[19] = true;
    $thisType.tileLavaDeath[20] = true;
    $thisType.tileLavaDeath[27] = true;
    $thisType.tileLavaDeath[28] = true;
    $thisType.tileLavaDeath[29] = true;
    $thisType.tileLavaDeath[32] = true;
    $thisType.tileLavaDeath[33] = true;
    $thisType.tileLavaDeath[34] = true;
    $thisType.tileLavaDeath[35] = true;
    $thisType.tileLavaDeath[36] = true;
    $thisType.tileLavaDeath[42] = true;
    $thisType.tileLavaDeath[49] = true;
    $thisType.tileLavaDeath[50] = true;
    $thisType.tileLavaDeath[52] = true;
    $thisType.tileLavaDeath[55] = true;
    $thisType.tileLavaDeath[61] = true;
    $thisType.tileLavaDeath[62] = true;
    $thisType.tileLavaDeath[69] = true;
    $thisType.tileLavaDeath[71] = true;
    $thisType.tileLavaDeath[72] = true;
    $thisType.tileLavaDeath[73] = true;
    $thisType.tileLavaDeath[74] = true;
    $thisType.tileLavaDeath[78] = true;
    $thisType.tileLavaDeath[79] = true;
    $thisType.wallHouse[1] = true;
    $thisType.wallHouse[4] = true;
    $thisType.wallHouse[5] = true;
    $thisType.wallHouse[6] = true;
    $thisType.wallHouse[10] = true;
    $thisType.wallHouse[11] = true;
    $thisType.wallHouse[12] = true;

    for (var i = 0; i < ($thisType.maxMenuItems | 0); i = ((i + 1) | 0)) {
      this.menuItemScale[i] = 0.8;
    }

    for (var j = 0; j < 2000; j = ((j + 1) | 0)) {
      $thisType.dust[j] = new ($T0E())();
    }

    for (var k = 0; k < 201; k = ((k + 1) | 0)) {
      $thisType.item[k] = new ($T10())();
    }

    for (var l = 0; l < 1001; l = ((l + 1) | 0)) {
      $thisType.npc[l] = new ($T11())();
      $thisType.npc[l].whoAmI = l;
    }

    for (var m = 0; m < 9; m = ((m + 1) | 0)) {
      $thisType.player[m] = new ($T19())();
    }

    for (var n = 0; n < 1001; n = ((n + 1) | 0)) {
      $thisType.projectile[n] = new ($T13())();
    }

    for (var num2 = 0; num2 < 201; num2 = ((num2 + 1) | 0)) {
      $thisType.gore[num2] = new ($T12())();
    }

    for (var num3 = 0; num3 < 100; num3 = ((num3 + 1) | 0)) {
      $thisType.cloud[num3] = new ($T05())();
    }

    for (var num4 = 0; num4 < 100; num4 = ((num4 + 1) | 0)) {
      $thisType.combatText[num4] = new ($T14())();
    }

    for (var num5 = 0; num5 < ($T18().maxRecipes | 0); num5 = ((num5 + 1) | 0)) {
      $thisType.recipe[num5] = new ($T18())();
      $thisType.availableRecipeY[num5] = +(65 * num5);
    }
    $T18().SetupRecipes();

    for (var num6 = 0; num6 < ($thisType.numChatLines | 0); num6 = ((num6 + 1) | 0)) {
      $thisType.chatLine[num6] = new ($T17())();
    }

    for (var num7 = 0; num7 < ($T02().resLiquid | 0); num7 = ((num7 + 1) | 0)) {
      $thisType.liquid[num7] = new ($T02())();
    }

    for (var num8 = 0; num8 < 10000; num8 = ((num8 + 1) | 0)) {
      $thisType.liquidBuffer[num8] = new ($T03())();
    }
    (this.graphics).set_PreferredBackBufferWidth($thisType.screenWidth);
    (this.graphics).set_PreferredBackBufferHeight($thisType.screenHeight);
    (this.graphics).ApplyChanges();
    this.shop[0] = new ($T15())();
    this.shop[1] = new ($T15())();
    (this.shop[1]).SetupShop(1);
    this.shop[2] = new ($T15())();
    (this.shop[2]).SetupShop(2);
    this.shop[3] = new ($T15())();
    (this.shop[3]).SetupShop(3);
    this.shop[4] = new ($T15())();
    (this.shop[4]).SetupShop(4);
    $thisType.teamColor[0] = $T04().get_White().MemberwiseClone();
    $thisType.teamColor[1] = $S00().Construct(230, 40, 20);
    $thisType.teamColor[2] = $S00().Construct(20, 200, 30);
    $thisType.teamColor[3] = $S00().Construct(75, 90, 255);
    $thisType.teamColor[4] = $S00().Construct(200, 180, 0);
    $T32().Init();
    if ($thisType.skipMenu) {
      $T39().clearWorld();
      $thisType.gameMenu = false;
      $thisType.LoadPlayers();
      $thisType.player[$thisType.myPlayer] = $T19().$Cast(($thisType.loadPlayer[0]).Clone());
      $thisType.PlayerPath = $thisType.loadPlayerPath[0];
      $thisType.LoadWorlds();
      $T39().generateWorld(-1);
      $T39().EveryTileFrame();
      $thisType.player[$thisType.myPlayer].Spawn();
    } else {
      var systemMenu = $thisType.GetSystemMenu((this.get_Window()).get_Handle().MemberwiseClone(), false).MemberwiseClone();
      var menuItemCount = ($thisType.GetMenuItemCount(systemMenu.MemberwiseClone()) | 0);
      $thisType.RemoveMenu(systemMenu.MemberwiseClone(), ((menuItemCount - 1) | 0), 1024);
    }
    $T1D().prototype.Initialize.call(this);
    $T0F().SpawnStars();
  }; 

  function Main_InvasionWarning () {
    if (($thisType.invasionType | 0) === 0) {
      return;
    }
    if (($thisType.invasionSize | 0) <= 0) {
      var text = "The goblin army has been defeated!";
    } else if (+$thisType.invasionX < +($thisType.spawnTileX)) {
      text = "A goblin army is approaching from the west!";
    } else if (+$thisType.invasionX > +($thisType.spawnTileX)) {
      text = "A goblin army is approaching from the east!";
    } else {
      text = "The goblin army has arrived!";
    }
    if (($thisType.netMode | 0) === 0) {
      $thisType.NewText(text, 175, 75, 255);
      return;
    }
    if (($thisType.netMode | 0) === 2) {
      $T2D().SendData(
        25, 
        -1, 
        -1, 
        text, 
        8, 
        175, 
        75, 
        255
      );
    }
  }; 

  function Main_LoadContent () {
    $thisType.engine = $S13().Construct("Content\\TerrariaMusic.xgs");
    $thisType.soundBank = new ($T4E())($thisType.engine, "Content\\Sound Bank.xsb");
    $thisType.waveBank = $S14().Construct($thisType.engine, "Content\\Wave Bank.xwb");
    $thisType.raTexture = (this.get_Content()).Load$b1($T06())("Images\\ra-logo");
    $thisType.reTexture = (this.get_Content()).Load$b1($T06())("Images\\re-logo");
    $thisType.splashTexture = (this.get_Content()).Load$b1($T06())("Images\\splash");
    $thisType.fadeTexture = (this.get_Content()).Load$b1($T06())("Images\\fade-out");

    for (var i = 1; i < 7; i = ((i + 1) | 0)) {
      $thisType.music[i] = $thisType.soundBank.GetCue(JSIL.ConcatString("Music_", $T0C().$Box(i)));
    }
    this.spriteBatch = new ($T28())(this.get_GraphicsDevice());

    for (var j = 0; j < 80; j = ((j + 1) | 0)) {
      $thisType.tileTexture[j] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Tiles_", $T0C().$Box(j)));
    }

    for (var k = 1; k < 14; k = ((k + 1) | 0)) {
      $thisType.wallTexture[k] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Wall_", $T0C().$Box(k)));
    }

    for (var l = 0; l < 7; l = ((l + 1) | 0)) {
      $thisType.backgroundTexture[l] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Background_", $T0C().$Box(l)));
      $thisType.backgroundWidth[l] = (($thisType.backgroundTexture[l]).get_Width() | 0);
      $thisType.backgroundHeight[l] = (($thisType.backgroundTexture[l]).get_Height() | 0);
    }

    for (var m = 0; m < 235; m = ((m + 1) | 0)) {
      $thisType.itemTexture[m] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Item_", $T0C().$Box(m)));
    }

    for (var n = 0; n < 44; n = ((n + 1) | 0)) {
      $thisType.npcTexture[n] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\NPC_", $T0C().$Box(n)));
    }

    for (var num = 0; num < 37; num = ((num + 1) | 0)) {
      $thisType.projectileTexture[num] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Projectile_", $T0C().$Box(num)));
    }

    for (var num2 = 1; num2 < 73; num2 = ((num2 + 1) | 0)) {
      $thisType.goreTexture[num2] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Gore_", $T0C().$Box(num2)));
    }

    for (var num3 = 0; num3 < 4; num3 = ((num3 + 1) | 0)) {
      $thisType.cloudTexture[num3] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Cloud_", $T0C().$Box(num3)));
    }

    for (var num4 = 0; num4 < 5; num4 = ((num4 + 1) | 0)) {
      $thisType.starTexture[num4] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Star_", $T0C().$Box(num4)));
    }

    for (var num5 = 0; num5 < 2; num5 = ((num5 + 1) | 0)) {
      $thisType.liquidTexture[num5] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Liquid_", $T0C().$Box(num5)));
    }
    $thisType.cdTexture = (this.get_Content()).Load$b1($T06())("Images\\CoolDown");
    $thisType.logoTexture = (this.get_Content()).Load$b1($T06())("Images\\Logo");
    $thisType.dustTexture = (this.get_Content()).Load$b1($T06())("Images\\Dust");
    $thisType.sunTexture = (this.get_Content()).Load$b1($T06())("Images\\Sun");
    $thisType.moonTexture = (this.get_Content()).Load$b1($T06())("Images\\Moon");
    $thisType.blackTileTexture = (this.get_Content()).Load$b1($T06())("Images\\Black_Tile");
    $thisType.heartTexture = (this.get_Content()).Load$b1($T06())("Images\\Heart");
    $thisType.bubbleTexture = (this.get_Content()).Load$b1($T06())("Images\\Bubble");
    $thisType.manaTexture = (this.get_Content()).Load$b1($T06())("Images\\Mana");
    $thisType.cursorTexture = (this.get_Content()).Load$b1($T06())("Images\\Cursor");
    $thisType.treeTopTexture = (this.get_Content()).Load$b1($T06())("Images\\Tree_Tops");
    $thisType.treeBranchTexture = (this.get_Content()).Load$b1($T06())("Images\\Tree_Branches");
    $thisType.shroomCapTexture = (this.get_Content()).Load$b1($T06())("Images\\Shroom_Tops");
    $thisType.inventoryBackTexture = (this.get_Content()).Load$b1($T06())("Images\\Inventory_Back");
    $thisType.textBackTexture = (this.get_Content()).Load$b1($T06())("Images\\Text_Back");
    $thisType.chatTexture = (this.get_Content()).Load$b1($T06())("Images\\Chat");
    $thisType.chat2Texture = (this.get_Content()).Load$b1($T06())("Images\\Chat2");
    $thisType.chatBackTexture = (this.get_Content()).Load$b1($T06())("Images\\Chat_Back");
    $thisType.teamTexture = (this.get_Content()).Load$b1($T06())("Images\\Team");

    for (var num6 = 1; num6 < 10; num6 = ((num6 + 1) | 0)) {
      $thisType.armorBodyTexture[num6] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Armor_Body_", $T0C().$Box(num6)));
      $thisType.armorArmTexture[num6] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Armor_Arm_", $T0C().$Box(num6)));
    }

    for (var num7 = 1; num7 < 12; num7 = ((num7 + 1) | 0)) {
      $thisType.armorHeadTexture[num7] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Armor_Head_", $T0C().$Box(num7)));
    }

    for (var num8 = 1; num8 < 10; num8 = ((num8 + 1) | 0)) {
      $thisType.armorLegTexture[num8] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Armor_Legs_", $T0C().$Box(num8)));
    }

    for (var num9 = 0; num9 < 17; num9 = ((num9 + 1) | 0)) {
      $thisType.playerHairTexture[num9] = (this.get_Content()).Load$b1($T06())(JSIL.ConcatString("Images\\Player_Hair_", $T0C().$Box(((num9 + 1) | 0))));
    }
    $thisType.playerEyeWhitesTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Eye_Whites");
    $thisType.playerEyesTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Eyes");
    $thisType.playerHandsTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Hands");
    $thisType.playerHands2Texture = (this.get_Content()).Load$b1($T06())("Images\\Player_Hands2");
    $thisType.playerHeadTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Head");
    $thisType.playerPantsTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Pants");
    $thisType.playerShirtTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Shirt");
    $thisType.playerShoesTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Shoes");
    $thisType.playerUnderShirtTexture = (this.get_Content()).Load$b1($T06())("Images\\Player_Undershirt");
    $thisType.playerUnderShirt2Texture = (this.get_Content()).Load$b1($T06())("Images\\Player_Undershirt2");
    $thisType.chainTexture = (this.get_Content()).Load$b1($T06())("Images\\Chain");
    $thisType.chain2Texture = (this.get_Content()).Load$b1($T06())("Images\\Chain2");
    $thisType.chain3Texture = (this.get_Content()).Load$b1($T06())("Images\\Chain3");
    $thisType.chain4Texture = (this.get_Content()).Load$b1($T06())("Images\\Chain4");
    $thisType.chain5Texture = (this.get_Content()).Load$b1($T06())("Images\\Chain5");
    $thisType.chain6Texture = (this.get_Content()).Load$b1($T06())("Images\\Chain6");
    $thisType.boneArmTexture = (this.get_Content()).Load$b1($T06())("Images\\Arm_Bone");
    $thisType.soundGrab = (this.get_Content()).Load$b1($T07())("Sounds\\Grab");
    $thisType.soundInstanceGrab = $thisType.soundGrab.CreateInstance();
    $thisType.soundDig[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Dig_0");
    $thisType.soundInstanceDig[0] = ($thisType.soundDig[0]).CreateInstance();
    $thisType.soundDig[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Dig_1");
    $thisType.soundInstanceDig[1] = ($thisType.soundDig[1]).CreateInstance();
    $thisType.soundDig[2] = (this.get_Content()).Load$b1($T07())("Sounds\\Dig_2");
    $thisType.soundInstanceDig[2] = ($thisType.soundDig[2]).CreateInstance();
    $thisType.soundPlayerHit[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Player_Hit_0");
    $thisType.soundInstancePlayerHit[0] = ($thisType.soundPlayerHit[0]).CreateInstance();
    $thisType.soundPlayerHit[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Player_Hit_1");
    $thisType.soundInstancePlayerHit[1] = ($thisType.soundPlayerHit[1]).CreateInstance();
    $thisType.soundPlayerHit[2] = (this.get_Content()).Load$b1($T07())("Sounds\\Player_Hit_2");
    $thisType.soundInstancePlayerHit[2] = ($thisType.soundPlayerHit[2]).CreateInstance();
    $thisType.soundFemaleHit[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Female_Hit_0");
    $thisType.soundInstanceFemaleHit[0] = ($thisType.soundFemaleHit[0]).CreateInstance();
    $thisType.soundFemaleHit[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Female_Hit_1");
    $thisType.soundInstanceFemaleHit[1] = ($thisType.soundFemaleHit[1]).CreateInstance();
    $thisType.soundFemaleHit[2] = (this.get_Content()).Load$b1($T07())("Sounds\\Female_Hit_2");
    $thisType.soundInstanceFemaleHit[2] = ($thisType.soundFemaleHit[2]).CreateInstance();
    $thisType.soundPlayerKilled = (this.get_Content()).Load$b1($T07())("Sounds\\Player_Killed");
    $thisType.soundInstancePlayerKilled = $thisType.soundPlayerKilled.CreateInstance();
    $thisType.soundGrass = (this.get_Content()).Load$b1($T07())("Sounds\\Grass");
    $thisType.soundInstanceGrass = $thisType.soundGrass.CreateInstance();
    $thisType.soundDoorOpen = (this.get_Content()).Load$b1($T07())("Sounds\\Door_Opened");
    $thisType.soundInstanceDoorOpen = $thisType.soundDoorOpen.CreateInstance();
    $thisType.soundDoorClosed = (this.get_Content()).Load$b1($T07())("Sounds\\Door_Closed");
    $thisType.soundInstanceDoorClosed = $thisType.soundDoorClosed.CreateInstance();
    $thisType.soundMenuTick = (this.get_Content()).Load$b1($T07())("Sounds\\Menu_Tick");
    $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
    $thisType.soundMenuOpen = (this.get_Content()).Load$b1($T07())("Sounds\\Menu_Open");
    $thisType.soundInstanceMenuOpen = $thisType.soundMenuOpen.CreateInstance();
    $thisType.soundMenuClose = (this.get_Content()).Load$b1($T07())("Sounds\\Menu_Close");
    $thisType.soundInstanceMenuClose = $thisType.soundMenuClose.CreateInstance();
    $thisType.soundShatter = (this.get_Content()).Load$b1($T07())("Sounds\\Shatter");
    $thisType.soundInstanceShatter = $thisType.soundShatter.CreateInstance();
    $thisType.soundZombie[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Zombie_0");
    $thisType.soundInstanceZombie[0] = ($thisType.soundZombie[0]).CreateInstance();
    $thisType.soundZombie[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Zombie_1");
    $thisType.soundInstanceZombie[1] = ($thisType.soundZombie[1]).CreateInstance();
    $thisType.soundZombie[2] = (this.get_Content()).Load$b1($T07())("Sounds\\Zombie_2");
    $thisType.soundInstanceZombie[2] = ($thisType.soundZombie[2]).CreateInstance();
    $thisType.soundRoar[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Roar_0");
    $thisType.soundInstanceRoar[0] = ($thisType.soundRoar[0]).CreateInstance();
    $thisType.soundRoar[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Roar_1");
    $thisType.soundInstanceRoar[1] = ($thisType.soundRoar[1]).CreateInstance();
    $thisType.soundSplash[0] = (this.get_Content()).Load$b1($T07())("Sounds\\Splash_0");
    $thisType.soundInstanceSplash[0] = ($thisType.soundRoar[0]).CreateInstance();
    $thisType.soundSplash[1] = (this.get_Content()).Load$b1($T07())("Sounds\\Splash_1");
    $thisType.soundInstanceSplash[1] = ($thisType.soundSplash[1]).CreateInstance();
    $thisType.soundDoubleJump = (this.get_Content()).Load$b1($T07())("Sounds\\Double_Jump");
    $thisType.soundInstanceDoubleJump = ($thisType.soundRoar[0]).CreateInstance();
    $thisType.soundRun = (this.get_Content()).Load$b1($T07())("Sounds\\Run");
    $thisType.soundInstanceRun = $thisType.soundRun.CreateInstance();
    $thisType.soundCoins = (this.get_Content()).Load$b1($T07())("Sounds\\Coins");
    $thisType.soundInstanceCoins = $thisType.soundCoins.CreateInstance();

    for (var num10 = 1; num10 < 17; num10 = ((num10 + 1) | 0)) {
      $thisType.soundItem[num10] = (this.get_Content()).Load$b1($T07())(JSIL.ConcatString("Sounds\\Item_", $T0C().$Box(num10)));
      $thisType.soundInstanceItem[num10] = ($thisType.soundItem[num10]).CreateInstance();
    }

    for (var num11 = 1; num11 < 4; num11 = ((num11 + 1) | 0)) {
      $thisType.soundNPCHit[num11] = (this.get_Content()).Load$b1($T07())(JSIL.ConcatString("Sounds\\NPC_Hit_", $T0C().$Box(num11)));
      $thisType.soundInstanceNPCHit[num11] = ($thisType.soundNPCHit[num11]).CreateInstance();
    }

    for (var num12 = 1; num12 < 4; num12 = ((num12 + 1) | 0)) {
      $thisType.soundNPCKilled[num12] = (this.get_Content()).Load$b1($T07())(JSIL.ConcatString("Sounds\\NPC_Killed_", $T0C().$Box(num12)));
      $thisType.soundInstanceNPCKilled[num12] = ($thisType.soundNPCKilled[num12]).CreateInstance();
    }
    $thisType.fontItemStack = (this.get_Content()).Load$b1($T31())("Fonts\\Item_Stack");
    $thisType.fontMouseText = (this.get_Content()).Load$b1($T31())("Fonts\\Mouse_Text");
    $thisType.fontDeathText = (this.get_Content()).Load$b1($T31())("Fonts\\Death_Text");
    $thisType.fontCombatText = (this.get_Content()).Load$b1($T31())("Fonts\\Combat_Text");
  }; 

  function Main_LoadPlayers () {
    $T50().CreateDirectory($thisType.PlayerPath);
    var files = $T50().GetFiles($thisType.PlayerPath, "*.plr");
    var num = (files.length | 0);
    if (num > 5) {
      num = 5;
    }

    for (var i = 0; i < 5; i = ((i + 1) | 0)) {
      $thisType.loadPlayer[i] = new ($T19())();
      if (i < num) {
        $thisType.loadPlayerPath[i] = files[i];
        $thisType.loadPlayer[i] = $T19().LoadPlayer($thisType.loadPlayerPath[i]);
      }
    }
    $thisType.numLoadPlayers = num;
  }; 

  function Main_LoadWorlds () {
    $T50().CreateDirectory($thisType.WorldPath);
    var files = $T50().GetFiles($thisType.WorldPath, "*.wld");
    var num = (files.length | 0);
    if (num > 5) {
      num = 5;
    }

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      $thisType.loadWorldPath[i] = files[i];
      var fileStream = $S15().Construct($thisType.loadWorldPath[i], $T52().Open);
      try {
        var binaryReader = $S16().Construct(fileStream);
        try {
          binaryReader.ReadInt32();
          $thisType.loadWorld[i] = binaryReader.ReadString();
          binaryReader.Close();
        } finally {
          if (binaryReader !== null) {
            $IM00().Call(binaryReader, null);
          }
        }
      } finally {
        if (fileStream !== null) {
          $IM00().Call(fileStream, null);
        }
      }
    }
    $thisType.numLoadWorlds = num;
  }; 

  function Main_MouseText (cursorText, rare) {
    var array2 = null, array3 = null, intPtr = new ($T36())();
    var num = ((($thisType.mouseState.get_X() | 0) + 10) | 0);
    var num2 = ((($thisType.mouseState.get_Y() | 0) + 10) | 0);
    var color = $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor);
    if (($thisType.toolTip.type | 0) > 0) {
      rare = ($thisType.toolTip.rare | 0);
      var num4 = 1;
      var array = JSIL.Array.New($T1A(), 20);
      array[0] = $thisType.toolTip.$name;
      if (($thisType.toolTip.stack | 0) > 1) {
        var expr_80 = array2 = array;
        var obj = array2[0];
        expr_80[0] = (JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [obj, " (", $T0C().$Box($thisType.toolTip.stack), ")"])));
      }
      if (($thisType.toolTip.damage | 0) > 0) {
        array[num4] = (JSIL.ConcatString($T0C().$Box($thisType.toolTip.damage), " damage"));
        num4 = ((num4 + 1) | 0);
        if (($thisType.toolTip.useStyle | 0) > 0) {
          if (($thisType.toolTip.useAnimation | 0) <= 8) {
            array[num4] = "Insanely fast";
          } else if (($thisType.toolTip.useAnimation | 0) <= 15) {
            array[num4] = "Very fast";
          } else if (($thisType.toolTip.useAnimation | 0) <= 20) {
            array[num4] = "Fast";
          } else if (($thisType.toolTip.useAnimation | 0) <= 25) {
            array[num4] = "Average";
          } else if (($thisType.toolTip.useAnimation | 0) <= 30) {
            array[num4] = "Slow";
          } else if (($thisType.toolTip.useAnimation | 0) <= 40) {
            array[num4] = "Very slow";
          } else if (($thisType.toolTip.useAnimation | 0) <= 50) {
            array[num4] = "Extremly slow";
          } else {
            array[num4] = "Snail";
          }
          (array3 = array)[(intPtr = num4)] = (JSIL.ConcatString(array3[intPtr], " speed"));
          num4 = ((num4 + 1) | 0);
        }
      }
      if (!((($thisType.toolTip.headSlot | 0) <= 0) && 
          (($thisType.toolTip.bodySlot | 0) <= 0) && 
          (($thisType.toolTip.legSlot | 0) <= 0) && !$thisType.toolTip.accessory)) {
        array[num4] = "Equipable";
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.defense | 0) > 0) {
        array[num4] = (JSIL.ConcatString($T0C().$Box($thisType.toolTip.defense), " defense"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.pick | 0) > 0) {
        array[num4] = (JSIL.ConcatString($T0C().$Box($thisType.toolTip.pick), "% pickaxe power"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.axe | 0) > 0) {
        array[num4] = (JSIL.ConcatString($T0C().$Box($thisType.toolTip.axe), "% axe power"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.hammer | 0) > 0) {
        array[num4] = (JSIL.ConcatString($T0C().$Box($thisType.toolTip.hammer), "% hammer power"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.healLife | 0) > 0) {
        array[num4] = (JSIL.ConcatString("Restores ", $T0C().$Box($thisType.toolTip.healLife), " life"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.healMana | 0) > 0) {
        array[num4] = (JSIL.ConcatString("Restores ", $T0C().$Box($thisType.toolTip.healMana), " mana"));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.toolTip.mana | 0) > 0) {
        array[num4] = (JSIL.ConcatString("Uses ", $T0C().$Box(((+($thisType.toolTip.mana) * +$thisType.player[$thisType.myPlayer].manaCost) | 0)), " mana"));
        num4 = ((num4 + 1) | 0);
      }
      if (!(((($thisType.toolTip.createWall | 0) <= 0) && 
            (($thisType.toolTip.createTile | 0) <= -1)) || (($thisType.toolTip.type | 0) === 213))) {
        array[num4] = "Can be placed";
        num4 = ((num4 + 1) | 0);
      }
      if ($thisType.toolTip.consumable) {
        array[num4] = "Consumable";
        num4 = ((num4 + 1) | 0);
      }
      if ($thisType.toolTip.toolTip !== null) {
        array[num4] = $thisType.toolTip.toolTip;
        num4 = ((num4 + 1) | 0);
      }
      if (!(!$thisType.toolTip.wornArmor || !($thisType.player[$thisType.myPlayer].setBonus != ""))) {
        array[num4] = (JSIL.ConcatString("Set bonus: ", $thisType.player[$thisType.myPlayer].setBonus));
        num4 = ((num4 + 1) | 0);
      }
      if (($thisType.npcShop | 0) > 0) {
        if (($thisType.toolTip.value | 0) > 0) {
          var text = "";
          var num5 = 0;
          var num6 = 0;
          var num7 = 0;
          var num8 = 0;
          var num9 = Math.imul($thisType.toolTip.value, $thisType.toolTip.stack);
          if (!$thisType.toolTip.buy) {
            num9 = ((num9 / 5) | 0);
          }
          if (num9 < 1) {
            num9 = 1;
          }
          if (num9 >= 1000000) {
            num5 = ((num9 / 1000000) | 0);
            num9 = ((num9 - Math.imul(num5, 1000000)) | 0);
          }
          if (num9 >= 10000) {
            num6 = ((num9 / 10000) | 0);
            num9 = ((num9 - Math.imul(num6, 10000)) | 0);
          }
          if (num9 >= 100) {
            num7 = ((num9 / 100) | 0);
            num9 = ((num9 - Math.imul(num7, 100)) | 0);
          }
          if (num9 >= 1) {
            num8 = num9;
          }
          if (num5 > 0) {
            text = (JSIL.ConcatString(text, $T0C().$Box(num5), " platinum "));
          }
          if (num6 > 0) {
            text = (JSIL.ConcatString(text, $T0C().$Box(num6), " gold "));
          }
          if (num7 > 0) {
            text = (JSIL.ConcatString(text, $T0C().$Box(num7), " silver "));
          }
          if (num8 > 0) {
            text = (JSIL.ConcatString(text, $T0C().$Box(num8), " copper "));
          }
          if (!$thisType.toolTip.buy) {
            array[num4] = (JSIL.ConcatString("Sell price: ", text));
          } else {
            array[num4] = (JSIL.ConcatString("Buy price: ", text));
          }
          num4 = ((num4 + 1) | 0);
          var num10 = +((+($thisType.mouseTextColor) / 255));
          if (num5 > 0) {
            (color = color.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, color, ((220 * num10) | 0), ((220 * num10) | 0), ((198 * num10) | 0), $thisType.mouseTextColor));
          } else if (num6 > 0) {
            (color = color.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, color, ((224 * num10) | 0), ((201 * num10) | 0), ((92 * num10) | 0), $thisType.mouseTextColor));
          } else if (num7 > 0) {
            (color = color.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, color, ((181 * num10) | 0), ((192 * num10) | 0), ((193 * num10) | 0), $thisType.mouseTextColor));
          } else if (num8 > 0) {
            (color = color.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, color, ((246 * num10) | 0), ((138 * num10) | 0), ((96 * num10) | 0), $thisType.mouseTextColor));
          }
        } else {
          num10 = +((+($thisType.mouseTextColor) / 255));
          array[num4] = "No value";
          num4 = ((num4 + 1) | 0);
          (color = color.MemberwiseClone(), 
            $S07().Call($T04().prototype, "_ctor", null, color, ((120 * num10) | 0), ((120 * num10) | 0), ((120 * num10) | 0), $thisType.mouseTextColor));
        }
      }
      var vector = new ($T25())();

      for (var i = 0; i < num4; i = ((i + 1) | 0)) {
        var vector2 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, array[i]).MemberwiseClone();
        if (+vector2.X > +vector.X) {
          vector.X = +vector2.X;
        }
        vector.Y = +vector.Y + (+vector2.Y + +0);
      }
      if (((+num + +vector.X) + 4) > +($thisType.screenWidth)) {
        num = (((+($thisType.screenWidth) - +vector.X) - 4) | 0);
      }
      if (((+num2 + +vector.Y) + 4) > +($thisType.screenHeight)) {
        num2 = (((+($thisType.screenHeight) - +vector.Y) - 4) | 0);
      }
      var num12 = 0;
      num10 = +((+($thisType.mouseTextColor) / 255));

      for (var j = 0; j < num4; j = ((j + 1) | 0)) {

        for (var k = 0; k < 5; k = ((k + 1) | 0)) {
          var num13 = num;
          var num14 = ((num2 + num12) | 0);
          var color2 = $T04().get_Black().MemberwiseClone();
          if (k === 0) {
            num13 = ((num13 - 2) | 0);
          } else if (k === 1) {
            num13 = ((num13 + 2) | 0);
          } else if (k === 2) {
            num14 = ((num14 - 2) | 0);
          } else if (k === 3) {
            num14 = ((num14 + 2) | 0);
          } else {
            (color2 = color2.MemberwiseClone(), 
              $S07().Call($T04().prototype, "_ctor", null, color2, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor));
            if (j === 0) {
              if ((rare | 0) === 1) {
                (color2 = color2.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color2, ((150 * num10) | 0), ((150 * num10) | 0), ((255 * num10) | 0), $thisType.mouseTextColor));
              }
              if ((rare | 0) === 2) {
                (color2 = color2.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color2, ((150 * num10) | 0), ((255 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
              }
              if ((rare | 0) === 3) {
                (color2 = color2.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color2, ((255 * num10) | 0), ((200 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
              }
              if ((rare | 0) === 4) {
                (color2 = color2.MemberwiseClone(), 
                  $S07().Call($T04().prototype, "_ctor", null, color2, ((255 * num10) | 0), ((150 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
              }
            } else if (j === ((num4 - 1) | 0)) {
              color2 = color.MemberwiseClone();
            }
          }
          $S08().CallVirtual("DrawString", null, this.spriteBatch, 
            $thisType.fontMouseText, 
            array[j], 
            $S04().Construct(+num13, +num14), 
            color2.MemberwiseClone(), 
            0, 
            new ($T25())(), 
            1, 
            $T2A().None, 
            0
          );
        }
        num12 = ((num12 + ((+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, array[j]).Y + +0) | 0)) | 0);
      }
      return;
    }
    var vector3 = $S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, cursorText);
    if (((+num + +vector3.X) + 4) > +($thisType.screenWidth)) {
      num = (((+($thisType.screenWidth) - +vector3.X) - 4) | 0);
    }
    if (((+num2 + +vector3.Y) + 4) > +($thisType.screenHeight)) {
      num2 = (((+($thisType.screenHeight) - +vector3.Y) - 4) | 0);
    }
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      cursorText, 
      $S04().Construct(+num, +(num2 - 2)), 
      $T04().get_Black().MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      cursorText, 
      $S04().Construct(+num, +(num2 + 2)), 
      $T04().get_Black().MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      cursorText, 
      $S04().Construct(+(num - 2), +num2), 
      $T04().get_Black().MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      cursorText, 
      $S04().Construct(+(num + 2), +num2), 
      $T04().get_Black().MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
    num10 = +((+($thisType.mouseTextColor) / 255));
    var color3 = $S01().Construct($thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor, $thisType.mouseTextColor);
    if ((rare | 0) === 1) {
      (color3 = color3.MemberwiseClone(), 
        $S07().Call($T04().prototype, "_ctor", null, color3, ((150 * num10) | 0), ((150 * num10) | 0), ((255 * num10) | 0), $thisType.mouseTextColor));
    }
    if ((rare | 0) === 2) {
      (color3 = color3.MemberwiseClone(), 
        $S07().Call($T04().prototype, "_ctor", null, color3, ((150 * num10) | 0), ((255 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
    }
    if ((rare | 0) === 3) {
      (color3 = color3.MemberwiseClone(), 
        $S07().Call($T04().prototype, "_ctor", null, color3, ((255 * num10) | 0), ((200 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
    }
    if ((rare | 0) === 4) {
      (color3 = color3.MemberwiseClone(), 
        $S07().Call($T04().prototype, "_ctor", null, color3, ((255 * num10) | 0), ((150 * num10) | 0), ((150 * num10) | 0), $thisType.mouseTextColor));
    }
    $S08().CallVirtual("DrawString", null, this.spriteBatch, 
      $thisType.fontMouseText, 
      cursorText, 
      $S04().Construct(+num, +num2), 
      color3.MemberwiseClone(), 
      0, 
      new ($T25())(), 
      1, 
      $T2A().None, 
      0
    );
  }; 

  function Main_NewText (newText, R, G, B) {

    for (var i = ((($thisType.numChatLines | 0) - 1) | 0); i > 0; i = ((i - 1) | 0)) {
      $thisType.chatLine[i].text = $thisType.chatLine[((i - 1) | 0)].text;
      $thisType.chatLine[i].showTime = ($thisType.chatLine[((i - 1) | 0)].showTime | 0);
      $thisType.chatLine[i].color = $thisType.chatLine[((i - 1) | 0)].color.MemberwiseClone();
    }
    if (!(((R | 0) !== 0) || 
        ((G | 0) !== 0) || ((B | 0) !== 0))) {
      $thisType.chatLine[0].color = $T04().get_White().MemberwiseClone();
    } else {
      $thisType.chatLine[0].color = $S00().Construct(R, G, B);
    }
    $thisType.chatLine[0].text = newText;
    $thisType.chatLine[0].showTime = ($thisType.chatLength | 0);
    $thisType.PlaySound(12, -1, -1, 1);
  }; 

  function Main_nextLoadPlayer () {

    for (var num = 1; $T40().Exists(JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.PlayerPath, "\\player", $T0C().$Box(num), ".plr"]))); num = ((num + 1) | 0)) {
    }
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.PlayerPath, "\\player", $T0C().$Box(num), ".plr"]));
  }; 

  function Main_nextLoadWorld () {

    for (var num = 1; $T40().Exists(JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.WorldPath, "\\world", $T0C().$Box(num), ".wld"]))); num = ((num + 1) | 0)) {
    }
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T33(), [$thisType.WorldPath, "\\world", $T0C().$Box(num), ".wld"]));
  }; 

  function Main_OpenSettings ($exception) {
    try {
      if ($T40().Exists(JSIL.ConcatString($thisType.SavePath, "\\config.dat"))) {
        var fileStream = $S15().Construct(JSIL.ConcatString($thisType.SavePath, "\\config.dat"), $T52().Open);
        try {
          var binaryReader = $S16().Construct(fileStream);
          try {
            binaryReader.ReadInt32();
            var flag = binaryReader.ReadBoolean();
            $thisType.mouseColor.set_R(binaryReader.ReadByte());
            $thisType.mouseColor.set_G(binaryReader.ReadByte());
            $thisType.mouseColor.set_B(binaryReader.ReadByte());
            $thisType.soundVolume = +binaryReader.ReadSingle();
            $thisType.musicVolume = +binaryReader.ReadSingle();
            $thisType.cUp = binaryReader.ReadString();
            $thisType.cDown = binaryReader.ReadString();
            $thisType.cLeft = binaryReader.ReadString();
            $thisType.cRight = binaryReader.ReadString();
            $thisType.cJump = binaryReader.ReadString();
            $thisType.cThrowItem = binaryReader.ReadString();
            $thisType.caveParrallax = +binaryReader.ReadSingle();
            binaryReader.Close();
            if (!(!flag || (this.graphics).get_IsFullScreen())) {
              (this.graphics).ToggleFullScreen();
            }
          } finally {
            if (binaryReader !== null) {
              $IM00().Call(binaryReader, null);
            }
          }
        } finally {
          if (fileStream !== null) {
            $IM00().Call(fileStream, null);
          }
        }
      }
    } catch ($exception) {
    }
  }; 

  function Main_PlaySound (type, x, y, style) {
    var value = new ($T24())(), rectangle = new ($T24())(), vector = new ($T25())();
    if (+$thisType.soundVolume === 0) {
      return;
    }
    var flag = false;
    var num = 1;
    var num2 = 0;
    if (!(((x | 0) !== -1) && ((y | 0) !== -1))) {
      flag = true;
    } else {
      if ($T39().gen) {
        return;
      }
      if (($thisType.netMode | 0) === 2) {
        return;
      }
      (value = value.MemberwiseClone(), 
        $T24().prototype._ctor.call(value, ((+$thisType.screenPosition.X - +(($thisType.screenWidth | 0) * 2)) | 0), ((+$thisType.screenPosition.Y - +(($thisType.screenHeight | 0) * 2)) | 0), Math.imul($thisType.screenWidth, 5), Math.imul($thisType.screenHeight, 5)));
      (rectangle = rectangle.MemberwiseClone(), 
        $T24().prototype._ctor.call(rectangle, x, y, 1, 1));
      (vector = vector.MemberwiseClone(), 
        $T25().prototype._ctor.call(vector, +$thisType.screenPosition.X + (+($thisType.screenWidth) * 0.5), +$thisType.screenPosition.Y + (+($thisType.screenHeight) * 0.5)));
      if (rectangle.Intersects(value.MemberwiseClone())) {
        flag = true;
      }
      if (flag) {
        num2 = +(((+x - +vector.X) / (+($thisType.screenWidth) * 0.5)));
        var num3 = (Math.abs((+x - +vector.X)));
        var num4 = (Math.abs((+y - +vector.Y)));
        var num5 = Math.fround(Math.sqrt((num3 * num3) + (num4 * num4)));
        num = 1 - +((num5 / (+($thisType.screenWidth) * 1.5)));
      }
    }
    if (num2 < -1) {
      num2 = -1;
    }
    if (num2 > 1) {
      num2 = 1;
    }
    if (num > 1) {
      num = 1;
    }
    if (num <= 0) {
      return;
    }
    if (flag) {
      num *= +$thisType.soundVolume;
      if ((type | 0) === 0) {
        var num6 = ($thisType.rand.Next(3) | 0);
        ($thisType.soundInstanceDig[num6]).Stop();
        $thisType.soundInstanceDig[num6] = ($thisType.soundDig[num6]).CreateInstance();
        ($thisType.soundInstanceDig[num6]).set_Volume(num);
        ($thisType.soundInstanceDig[num6]).set_Pan(num2);
        ($thisType.soundInstanceDig[num6]).Play();
        return;
      }
      if ((type | 0) === 1) {
        var num7 = ($thisType.rand.Next(3) | 0);
        ($thisType.soundInstancePlayerHit[num7]).Stop();
        $thisType.soundInstancePlayerHit[num7] = ($thisType.soundPlayerHit[num7]).CreateInstance();
        ($thisType.soundInstancePlayerHit[num7]).set_Volume(num);
        ($thisType.soundInstancePlayerHit[num7]).set_Pan(num2);
        ($thisType.soundInstancePlayerHit[num7]).Play();
        return;
      }
      if ((type | 0) === 2) {
        if (!(((style | 0) === 9) || ((style | 0) === 10))) {
          ($thisType.soundInstanceItem[style]).Stop();
        }
        $thisType.soundInstanceItem[style] = ($thisType.soundItem[style]).CreateInstance();
        ($thisType.soundInstanceItem[style]).set_Volume(num);
        ($thisType.soundInstanceItem[style]).set_Pan(num2);
        ($thisType.soundInstanceItem[style]).Play();
        return;
      }
      if ((type | 0) === 3) {
        ($thisType.soundInstanceNPCHit[style]).Stop();
        $thisType.soundInstanceNPCHit[style] = ($thisType.soundNPCHit[style]).CreateInstance();
        ($thisType.soundInstanceNPCHit[style]).set_Volume(num);
        ($thisType.soundInstanceNPCHit[style]).set_Pan(num2);
        ($thisType.soundInstanceNPCHit[style]).Play();
        return;
      }
      if ((type | 0) === 4) {
        $thisType.soundInstanceNPCKilled[style] = ($thisType.soundNPCKilled[style]).CreateInstance();
        ($thisType.soundInstanceNPCKilled[style]).set_Volume(num);
        ($thisType.soundInstanceNPCKilled[style]).set_Pan(num2);
        ($thisType.soundInstanceNPCKilled[style]).Play();
        return;
      }
      if ((type | 0) === 5) {
        $thisType.soundInstancePlayerKilled.Stop();
        $thisType.soundInstancePlayerKilled = $thisType.soundPlayerKilled.CreateInstance();
        $thisType.soundInstancePlayerKilled.set_Volume(num);
        $thisType.soundInstancePlayerKilled.set_Pan(num2);
        $thisType.soundInstancePlayerKilled.Play();
        return;
      }
      if ((type | 0) === 6) {
        $thisType.soundInstanceGrass.Stop();
        $thisType.soundInstanceGrass = $thisType.soundGrass.CreateInstance();
        $thisType.soundInstanceGrass.set_Volume(num);
        $thisType.soundInstanceGrass.set_Pan(num2);
        $thisType.soundInstanceGrass.Play();
        return;
      }
      if ((type | 0) === 7) {
        $thisType.soundInstanceGrab.Stop();
        $thisType.soundInstanceGrab = $thisType.soundGrab.CreateInstance();
        $thisType.soundInstanceGrab.set_Volume(num);
        $thisType.soundInstanceGrab.set_Pan(num2);
        $thisType.soundInstanceGrab.Play();
        return;
      }
      if ((type | 0) === 8) {
        $thisType.soundInstanceDoorOpen.Stop();
        $thisType.soundInstanceDoorOpen = $thisType.soundDoorOpen.CreateInstance();
        $thisType.soundInstanceDoorOpen.set_Volume(num);
        $thisType.soundInstanceDoorOpen.set_Pan(num2);
        $thisType.soundInstanceDoorOpen.Play();
        return;
      }
      if ((type | 0) === 9) {
        $thisType.soundInstanceDoorClosed.Stop();
        $thisType.soundInstanceDoorClosed = $thisType.soundDoorClosed.CreateInstance();
        $thisType.soundInstanceDoorClosed.set_Volume(num);
        $thisType.soundInstanceDoorClosed.set_Pan(num2);
        $thisType.soundInstanceDoorClosed.Play();
        return;
      }
      if ((type | 0) === 10) {
        $thisType.soundInstanceMenuOpen.Stop();
        $thisType.soundInstanceMenuOpen = $thisType.soundMenuOpen.CreateInstance();
        $thisType.soundInstanceMenuOpen.set_Volume(num);
        $thisType.soundInstanceMenuOpen.set_Pan(num2);
        $thisType.soundInstanceMenuOpen.Play();
        return;
      }
      if ((type | 0) === 11) {
        $thisType.soundInstanceMenuClose.Stop();
        $thisType.soundInstanceMenuClose = $thisType.soundMenuClose.CreateInstance();
        $thisType.soundInstanceMenuClose.set_Volume(num);
        $thisType.soundInstanceMenuClose.set_Pan(num2);
        $thisType.soundInstanceMenuClose.Play();
        return;
      }
      if ((type | 0) === 12) {
        $thisType.soundInstanceMenuTick.Stop();
        $thisType.soundInstanceMenuTick = $thisType.soundMenuTick.CreateInstance();
        $thisType.soundInstanceMenuTick.set_Volume(num);
        $thisType.soundInstanceMenuTick.set_Pan(num2);
        $thisType.soundInstanceMenuTick.Play();
        return;
      }
      if ((type | 0) === 13) {
        $thisType.soundInstanceShatter.Stop();
        $thisType.soundInstanceShatter = $thisType.soundShatter.CreateInstance();
        $thisType.soundInstanceShatter.set_Volume(num);
        $thisType.soundInstanceShatter.set_Pan(num2);
        $thisType.soundInstanceShatter.Play();
        return;
      }
      if ((type | 0) === 14) {
        var num8 = ($thisType.rand.Next(3) | 0);
        $thisType.soundInstanceZombie[num8] = ($thisType.soundZombie[num8]).CreateInstance();
        ($thisType.soundInstanceZombie[num8]).set_Volume(num * 0.4);
        ($thisType.soundInstanceZombie[num8]).set_Pan(num2);
        ($thisType.soundInstanceZombie[num8]).Play();
        return;
      }
      if ((type | 0) === 15) {
        $thisType.soundInstanceRoar[style] = ($thisType.soundRoar[style]).CreateInstance();
        ($thisType.soundInstanceRoar[style]).set_Volume(num);
        ($thisType.soundInstanceRoar[style]).set_Pan(num2);
        ($thisType.soundInstanceRoar[style]).Play();
        return;
      }
      if ((type | 0) === 16) {
        $thisType.soundInstanceDoubleJump.Stop();
        $thisType.soundInstanceDoubleJump = $thisType.soundDoubleJump.CreateInstance();
        $thisType.soundInstanceDoubleJump.set_Volume(num);
        $thisType.soundInstanceDoubleJump.set_Pan(num2);
        $thisType.soundInstanceDoubleJump.Play();
        return;
      }
      if ((type | 0) === 17) {
        $thisType.soundInstanceRun.Stop();
        $thisType.soundInstanceRun = $thisType.soundRun.CreateInstance();
        $thisType.soundInstanceRun.set_Volume(num);
        $thisType.soundInstanceRun.set_Pan(num2);
        $thisType.soundInstanceRun.Play();
        return;
      }
      if ((type | 0) === 18) {
        $thisType.soundInstanceCoins = $thisType.soundCoins.CreateInstance();
        $thisType.soundInstanceCoins.set_Volume(num);
        $thisType.soundInstanceCoins.set_Pan(num2);
        $thisType.soundInstanceCoins.Play();
        return;
      }
      if ((type | 0) === 19) {
        $thisType.soundInstanceSplash[style] = ($thisType.soundSplash[style]).CreateInstance();
        ($thisType.soundInstanceSplash[style]).set_Volume(num);
        ($thisType.soundInstanceSplash[style]).set_Pan(num2);
        ($thisType.soundInstanceSplash[style]).Play();
        return;
      }
      if ((type | 0) === 20) {
        var num9 = ($thisType.rand.Next(3) | 0);
        ($thisType.soundInstanceFemaleHit[num9]).Stop();
        $thisType.soundInstanceFemaleHit[num9] = ($thisType.soundFemaleHit[num9]).CreateInstance();
        ($thisType.soundInstanceFemaleHit[num9]).set_Volume(num);
        ($thisType.soundInstanceFemaleHit[num9]).set_Pan(num2);
        ($thisType.soundInstanceFemaleHit[num9]).Play();
      }
    }
  }; 

  function Main_QuitGame () {
    $T55().Kill();
    this.Exit();
  }; 


  function Main_SaveSettings () {
    var fileStream = $S15().Construct(JSIL.ConcatString($thisType.SavePath, "\\config.dat"), $T52().Create);
    try {
      var binaryWriter = $S17().Construct(fileStream);
      try {
        $S18().CallVirtual("Write", null, binaryWriter, $thisType.curRelease);
        $S19().CallVirtual("Write", null, binaryWriter, (this.graphics).get_IsFullScreen());
        $S1A().CallVirtual("Write", null, binaryWriter, $thisType.mouseColor.get_R());
        $S1A().CallVirtual("Write", null, binaryWriter, $thisType.mouseColor.get_G());
        $S1A().CallVirtual("Write", null, binaryWriter, $thisType.mouseColor.get_B());
        $S1B().CallVirtual("Write", null, binaryWriter, $thisType.soundVolume);
        $S1B().CallVirtual("Write", null, binaryWriter, $thisType.musicVolume);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cUp);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cDown);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cLeft);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cRight);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cJump);
        $S1C().CallVirtual("Write", null, binaryWriter, $thisType.cThrowItem);
        $S1B().CallVirtual("Write", null, binaryWriter, $thisType.caveParrallax);
        binaryWriter.Close();
      } finally {
        if (binaryWriter !== null) {
          $IM00().Call(binaryWriter, null);
        }
      }
    } finally {
      if (fileStream !== null) {
        $IM00().Call(fileStream, null);
      }
    }
  }; 

  function Main_StartInvasion () {
    if (!$T39().shadowOrbSmashed) {
      return;
    }
    if (!((($thisType.invasionType | 0) !== 0) || (($thisType.invasionDelay | 0) !== 0))) {
      var num = 0;

      for (var i = 0; i < 8; i = ((i + 1) | 0)) {
        if (!(!$thisType.player[i].active || (($thisType.player[i].statLife | 0) < 200))) {
          num = ((num + 1) | 0);
        }
      }
      if (num > 0) {
        $thisType.invasionType = 1;
        $thisType.invasionSize = ((100 + Math.imul(50, num)) | 0);
        $thisType.invasionWarn = 0;
        if (($thisType.rand.Next(2) | 0) === 0) {
          $thisType.invasionX = 0;
          return;
        }
        $thisType.invasionX = +($thisType.maxTilesX);
      }
    }
  }; 

  function Main_UnloadContent () {
  }; 

  function Main_Update (gameTime, $exception) {

    var $label5 = 0;
  $labelgroup5: 
    while (true) {
      switch ($label5) {
        case 0: /* $entry5 */ 
          this.UpdateMusic();
          if ($thisType.showSplash) {
            return;
          }
          if (!($thisType.gameMenu || (($thisType.netMode | 0) === 2))) {
            $thisType.saveTimer = ((($thisType.saveTimer | 0) + 1) | 0);
            if (($thisType.saveTimer | 0) > 18000) {
              $thisType.saveTimer = 0;
              $T39().saveToonWhilePlaying();
            }
          } else {
            $thisType.saveTimer = 0;
          }
          if (($thisType.rand.Next(99999) | 0) === 0) {
            $thisType.rand = $S12().Construct($T4B().get_Now().get_Ticks().ToNumber(4294967295, true));
          }
          $thisType.updateTime = ((($thisType.updateTime | 0) + 1) | 0);
          if (($thisType.updateTime | 0) >= 60) {
            $thisType.frameRate = ($thisType.drawTime | 0);
            $thisType.updateTime = 0;
            $thisType.drawTime = 0;
            if (($thisType.frameRate | 0) === 60) {
              $T2F().lightPasses = 2;
              $T2F().lightSkip = 0;
              $thisType.cloudLimit = 100;
              $T12().goreTime = 1200;
            } else if (($thisType.frameRate | 0) >= 58) {
              $T2F().lightPasses = 2;
              $T2F().lightSkip = 0;
              $thisType.cloudLimit = 100;
              $T12().goreTime = 600;
            } else if (($thisType.frameRate | 0) >= 43) {
              $T2F().lightPasses = 2;
              $T2F().lightSkip = 1;
              $thisType.cloudLimit = 75;
              $T12().goreTime = 300;
            } else if (($thisType.frameRate | 0) >= 28) {
              if (!$thisType.gameMenu) {
                $T02().maxLiquid = 3000;
                $T02().cycles = 6;
              }
              $T2F().lightPasses = 2;
              $T2F().lightSkip = 2;
              $thisType.cloudLimit = 50;
              $T12().goreTime = 180;
            } else {
              $T2F().lightPasses = 2;
              $T2F().lightSkip = 4;
              $thisType.cloudLimit = 0;
              $T12().goreTime = 0;
            }
            if ($T02().quickSettle) {
              $T02().maxLiquid = ($T02().resLiquid | 0);
              $T02().cycles = 1;
            } else if (($thisType.frameRate | 0) === 60) {
              $T02().maxLiquid = 5000;
              $T02().cycles = 7;
            } else if (($thisType.frameRate | 0) >= 58) {
              $T02().maxLiquid = 5000;
              $T02().cycles = 12;
            } else if (($thisType.frameRate | 0) >= 43) {
              $T02().maxLiquid = 4000;
              $T02().cycles = 13;
            } else if (($thisType.frameRate | 0) >= 28) {
              $T02().maxLiquid = 3500;
              $T02().cycles = 15;
            } else {
              $T02().maxLiquid = 3000;
              $T02().cycles = 17;
            }
            if (($thisType.netMode | 0) === 2) {
              $thisType.cloudLimit = 0;
            }
          }
          if (!this.get_IsActive()) {
            $thisType.hasFocus = false;
          } else {
            $thisType.hasFocus = true;
          }
          if (!(this.get_IsActive() || (($thisType.netMode | 0) !== 0))) {
            this.set_IsMouseVisible(true);
            if (!((($thisType.netMode | 0) === 2) || (($thisType.myPlayer | 0) < 0))) {
              $thisType.player[$thisType.myPlayer].delayUseItem = true;
            }
            $thisType.mouseLeftRelease = false;
            $thisType.mouseRightRelease = false;
            if ($thisType.gameMenu) {
              $thisType.UpdateMenu();
            }
            return;
          }
          this.set_IsMouseVisible(false);
          if (!(!$thisType.keyState.IsKeyDown($T3F().F10) || 
              $thisType.chatMode || $thisType.editSign)) {
            if ($thisType.frameRelease) {
              $thisType.PlaySound(12, -1, -1, 1);
              if ($thisType.showFrameRate) {
                $thisType.showFrameRate = false;
              } else {
                $thisType.showFrameRate = true;
              }
            }
            $thisType.frameRelease = false;
          } else {
            $thisType.frameRelease = true;
          }
          if ($thisType.keyState.IsKeyDown($T3F().F11)) {
            if ($thisType.releaseUI) {
              if ($thisType.hideUI) {
                $thisType.hideUI = false;
              } else {
                $thisType.hideUI = true;
              }
            }
            $thisType.releaseUI = false;
          } else {
            $thisType.releaseUI = true;
          }
          if (!((!$thisType.keyState.IsKeyDown($T3F().LeftAlt) && 
                !$thisType.keyState.IsKeyDown($T3F().RightAlt)) || !$thisType.keyState.IsKeyDown($T3F().Enter))) {
            if (this.toggleFullscreen) {
              (this.graphics).ToggleFullScreen();
              $thisType.chatRelease = false;
            }
            this.toggleFullscreen = false;
          } else {
            this.toggleFullscreen = true;
          }
          $thisType.oldMouseState = $thisType.mouseState.MemberwiseClone();
          $thisType.mouseState = $T00().GetState().MemberwiseClone();
          $thisType.keyState = $T01().GetState().MemberwiseClone();
          if ($thisType.editSign) {
            $thisType.chatMode = false;
          }
          if ($thisType.chatMode) {
            var a = $thisType.chatText;
            $thisType.chatText = $thisType.GetInputText($thisType.chatText);

            while (+$S06().CallVirtual("MeasureString", null, $thisType.fontMouseText, $thisType.chatText).X > 470) {
              $thisType.chatText = ($thisType.chatText.substr(0, ((($thisType.chatText.length | 0) - 1) | 0)));
            }
            if (a != $thisType.chatText) {
              $thisType.PlaySound(12, -1, -1, 1);
            }
            if (!(!$thisType.inputTextEnter || !$thisType.chatRelease)) {
              if ($thisType.chatText != "") {
                $T2D().SendData(
                  25, 
                  -1, 
                  -1, 
                  $thisType.chatText, 
                  $thisType.myPlayer, 
                  0, 
                  0, 
                  0
                );
              }
              $thisType.chatText = "";
              $thisType.chatMode = false;
              $thisType.chatRelease = false;
              $thisType.PlaySound(11, -1, -1, 1);
            }
          }
          if (!(!$thisType.keyState.IsKeyDown($T3F().Enter) || (($thisType.netMode | 0) !== 1))) {
            if (!(!$thisType.chatRelease || 
                $thisType.chatMode || $thisType.editSign)) {
              $thisType.PlaySound(10, -1, -1, 1);
              $thisType.chatMode = true;
              $thisType.chatText = "";
            }
            $thisType.chatRelease = false;
          } else {
            $thisType.chatRelease = true;
          }
          if ($thisType.gameMenu) {
            $thisType.UpdateMenu();
            if (($thisType.netMode | 0) !== 2) {
              return;
            }
          }
          if ($thisType.debugMode) {
            $thisType.UpdateDebug();
          }
          if (($thisType.netMode | 0) === 1) {

            for (var i = 0; i < 44; i = ((i + 1) | 0)) {
              if (($thisType.player[$thisType.myPlayer].inventory[i]).IsNotTheSameAs($thisType.clientPlayer.inventory[i])) {
                $T2D().SendData(
                  5, 
                  -1, 
                  -1, 
                  $thisType.player[$thisType.myPlayer].inventory[i].$name, 
                  $thisType.myPlayer, 
                  +i, 
                  0, 
                  0
                );
              }
            }
            if (($thisType.player[$thisType.myPlayer].armor[0]).IsNotTheSameAs($thisType.clientPlayer.armor[0])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[0].$name, 
                $thisType.myPlayer, 
                44, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].armor[1]).IsNotTheSameAs($thisType.clientPlayer.armor[1])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[1].$name, 
                $thisType.myPlayer, 
                45, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].armor[2]).IsNotTheSameAs($thisType.clientPlayer.armor[2])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[2].$name, 
                $thisType.myPlayer, 
                46, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].armor[3]).IsNotTheSameAs($thisType.clientPlayer.armor[3])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[3].$name, 
                $thisType.myPlayer, 
                47, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].armor[4]).IsNotTheSameAs($thisType.clientPlayer.armor[4])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[4].$name, 
                $thisType.myPlayer, 
                48, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].armor[5]).IsNotTheSameAs($thisType.clientPlayer.armor[5])) {
              $T2D().SendData(
                5, 
                -1, 
                -1, 
                $thisType.player[$thisType.myPlayer].armor[5].$name, 
                $thisType.myPlayer, 
                49, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].chest | 0) !== ($thisType.clientPlayer.chest | 0)) {
              $T2D().SendData(
                33, 
                -1, 
                -1, 
                "", 
                $thisType.player[$thisType.myPlayer].chest, 
                0, 
                0, 
                0
              );
            }
            if (($thisType.player[$thisType.myPlayer].talkNPC | 0) !== ($thisType.clientPlayer.talkNPC | 0)) {
              $T2D().SendData(
                40, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
            if ($thisType.player[$thisType.myPlayer].zoneEvil !== $thisType.clientPlayer.zoneEvil) {
              $T2D().SendData(
                36, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
            if ($thisType.player[$thisType.myPlayer].zoneMeteor !== $thisType.clientPlayer.zoneMeteor) {
              $T2D().SendData(
                36, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
            if ($thisType.player[$thisType.myPlayer].zoneDungeon !== $thisType.clientPlayer.zoneDungeon) {
              $T2D().SendData(
                36, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
            if ($thisType.player[$thisType.myPlayer].zoneJungle !== $thisType.clientPlayer.zoneJungle) {
              $T2D().SendData(
                36, 
                -1, 
                -1, 
                "", 
                $thisType.myPlayer, 
                0, 
                0, 
                0
              );
            }
          }
          if (($thisType.netMode | 0) === 1) {
            $thisType.clientPlayer = $T19().$Cast($thisType.player[$thisType.myPlayer].clientClone());
          }
          var j = 0;

        $loop2: 
          while (j < 8) {

            var $label0 = 0;
          $labelgroup0: 
            while (true) {
              switch ($label0) {
                case 0: /* $entry0 */ 
                  if ($thisType.ignoreErrors) {
                    try {
                      ($thisType.player[j]).UpdatePlayer(j);
                      $label0 = 1 /* goto IL_921 */ ;
                      continue $labelgroup0;
                    } catch ($exception) {
                    }
                  }
                  $label0 = 2 /* goto IL_914 */ ;
                  continue $labelgroup0;

                case 1: /* IL_921 */ 
                  j = ((j + 1) | 0);
                  continue $loop2;

                case 2: /* IL_914 */ 
                  ($thisType.player[j]).UpdatePlayer(j);
                  $label0 = 1 /* goto IL_921 */ ;
                  continue $labelgroup0;

              }
            }
          }
          if (($thisType.netMode | 0) !== 1) {
            $T11().SpawnNPC();
          }

          for (var k = 0; k < 8; k = ((k + 1) | 0)) {
            $thisType.player[k].activeNPCs = 0;
            $thisType.player[k].townNPCs = 0;
          }
          var l = 0;

        $loop4: 
          while (l < 1000) {

            var $label1 = 0;
          $labelgroup1: 
            while (true) {
              switch ($label1) {
                case 0: /* $entry1 */ 
                  if ($thisType.ignoreErrors) {
                    try {
                      ($thisType.npc[l]).UpdateNPC(l);
                      $label1 = 1 /* goto IL_998 */ ;
                      continue $labelgroup1;
                    } catch ($exception) {
                      $thisType.npc[l] = new ($T11())();
                    }
                  }
                  $label1 = 2 /* goto IL_989 */ ;
                  continue $labelgroup1;

                case 1: /* IL_998 */ 
                  l = ((l + 1) | 0);
                  continue $loop4;

                case 2: /* IL_989 */ 
                  ($thisType.npc[l]).UpdateNPC(l);
                  $label1 = 1 /* goto IL_998 */ ;
                  continue $labelgroup1;

              }
            }
          }
          var m = 0;

        $loop5: 
          while (m < 200) {

            var $label2 = 0;
          $labelgroup2: 
            while (true) {
              switch ($label2) {
                case 0: /* $entry2 */ 
                  if ($thisType.ignoreErrors) {
                    try {
                      ($thisType.gore[m]).Update();
                      $label2 = 1 /* goto IL_9DF */ ;
                      continue $labelgroup2;
                    } catch ($exception) {
                      $thisType.gore[m] = new ($T12())();
                    }
                  }
                  $label2 = 2 /* goto IL_9D2 */ ;
                  continue $labelgroup2;

                case 1: /* IL_9DF */ 
                  m = ((m + 1) | 0);
                  continue $loop5;

                case 2: /* IL_9D2 */ 
                  ($thisType.gore[m]).Update();
                  $label2 = 1 /* goto IL_9DF */ ;
                  continue $labelgroup2;

              }
            }
          }
          var n = 0;

        $loop6: 
          while (n < 1000) {

            var $label3 = 0;
          $labelgroup3: 
            while (true) {
              switch ($label3) {
                case 0: /* $entry3 */ 
                  if ($thisType.ignoreErrors) {
                    try {
                      ($thisType.projectile[n]).Update(n);
                      $label3 = 1 /* goto IL_A2A */ ;
                      continue $labelgroup3;
                    } catch ($exception) {
                      $thisType.projectile[n] = new ($T13())();
                    }
                  }
                  $label3 = 2 /* goto IL_A1B */ ;
                  continue $labelgroup3;

                case 1: /* IL_A2A */ 
                  n = ((n + 1) | 0);
                  continue $loop6;

                case 2: /* IL_A1B */ 
                  ($thisType.projectile[n]).Update(n);
                  $label3 = 1 /* goto IL_A2A */ ;
                  continue $labelgroup3;

              }
            }
          }
          var num = 0;

        $loop7: 
          while (num < 200) {

            var $label4 = 0;
          $labelgroup4: 
            while (true) {
              switch ($label4) {
                case 0: /* $entry4 */ 
                  if ($thisType.ignoreErrors) {
                    try {
                      ($thisType.item[num]).UpdateItem(num);
                      $label4 = 1 /* goto IL_A75 */ ;
                      continue $labelgroup4;
                    } catch ($exception) {
                      $thisType.item[num] = new ($T10())();
                    }
                  }
                  $label4 = 2 /* goto IL_A66 */ ;
                  continue $labelgroup4;

                case 1: /* IL_A75 */ 
                  num = ((num + 1) | 0);
                  continue $loop7;

                case 2: /* IL_A66 */ 
                  ($thisType.item[num]).UpdateItem(num);
                  $label4 = 1 /* goto IL_A75 */ ;
                  continue $labelgroup4;

              }
            }
          }
          if ($thisType.ignoreErrors) {
            try {
              $T0E().UpdateDust();
              $label5 = 1 /* goto IL_ABB */ ;
              continue $labelgroup5;
            } catch ($exception) {

              for (var num2 = 0; num2 < 2000; num2 = ((num2 + 1) | 0)) {
                $thisType.dust[num2] = new ($T0E())();
              }
            }
          }
          $T0E().UpdateDust();

          $label5 = 1 /* goto IL_ABB */ ;
          continue $labelgroup5;
        case 1: /* IL_ABB */ 
          if (($thisType.netMode | 0) !== 2) {
            $T14().UpdateCombatText();
          }
          if ($thisType.ignoreErrors) {
            try {
              $thisType.UpdateTime();
              $label5 = 2 /* goto IL_AE4 */ ;
              continue $labelgroup5;
            } catch ($exception) {
              $thisType.checkForSpawns = 0;
            }
          }
          $thisType.UpdateTime();

          $label5 = 2 /* goto IL_AE4 */ ;
          continue $labelgroup5;
        case 2: /* IL_AE4 */ 
          if (($thisType.netMode | 0) !== 1) {
            if ($thisType.ignoreErrors) {
              try {
                $T39().UpdateWorld();
                $thisType.UpdateInvasion();
                $label5 = 3 /* goto IL_B0C */ ;
                continue $labelgroup5;
              } catch ($exception) {
              }
            }
            $T39().UpdateWorld();
            $thisType.UpdateInvasion();
          }

          $label5 = 3 /* goto IL_B0C */ ;
          continue $labelgroup5;
        case 3: /* IL_B0C */ 
          if ($thisType.ignoreErrors) {
            try {
              if (($thisType.netMode | 0) === 2) {
                $thisType.UpdateServer();
              }
              if (($thisType.netMode | 0) === 1) {
                $thisType.UpdateClient();
              }
              $label5 = 4 /* goto IL_B54 */ ;
              continue $labelgroup5;
            } catch ($exception) {
              var arg_B37_0 = ($thisType.netMode | 0);
            }
          }
          if (($thisType.netMode | 0) === 2) {
            $thisType.UpdateServer();
          }
          if (($thisType.netMode | 0) === 1) {
            $thisType.UpdateClient();
          }

          $label5 = 4 /* goto IL_B54 */ ;
          continue $labelgroup5;
        case 4: /* IL_B54 */ 
          if ($thisType.ignoreErrors) {
            try {

              for (var num3 = 0; num3 < ($thisType.numChatLines | 0); num3 = ((num3 + 1) | 0)) {
                if (($thisType.chatLine[num3].showTime | 0) > 0) {
                  $thisType.chatLine[num3].showTime = ((($thisType.chatLine[num3].showTime | 0) - 1) | 0);
                }
              }
              break $labelgroup5;
            } catch ($exception) {

              for (var num4 = 0; num4 < ($thisType.numChatLines | 0); num4 = ((num4 + 1) | 0)) {
                $thisType.chatLine[num4] = new ($T17())();
              }
            }
          }

          for (var num5 = 0; num5 < ($thisType.numChatLines | 0); num5 = ((num5 + 1) | 0)) {
            if (($thisType.chatLine[num5].showTime | 0) > 0) {
              $thisType.chatLine[num5].showTime = ((($thisType.chatLine[num5].showTime | 0) - 1) | 0);
            }
          }
          break $labelgroup5;

      }
    }
    /* Original label IL_BF3 */ 
    $T1D().prototype.Update.call(this, gameTime);
  }; 

  function Main_UpdateClient () {
    if (($thisType.myPlayer | 0) === 8) {
      $T32().disconnect = true;
    }
    $thisType.netPlayCounter = ((($thisType.netPlayCounter | 0) + 1) | 0);
    if (($thisType.netPlayCounter | 0) > 3600) {
      $thisType.netPlayCounter = 0;
    }
    if (+$T29().IEEERemainder(+($thisType.netPlayCounter), 300) === 0) {
      $T2D().SendData(
        13, 
        -1, 
        -1, 
        "", 
        $thisType.myPlayer, 
        0, 
        0, 
        0
      );
      $T2D().SendData(
        36, 
        -1, 
        -1, 
        "", 
        $thisType.myPlayer, 
        0, 
        0, 
        0
      );
    }
    if (+$T29().IEEERemainder(+($thisType.netPlayCounter), 600) === 0) {
      $T2D().SendData(
        16, 
        -1, 
        -1, 
        "", 
        $thisType.myPlayer, 
        0, 
        0, 
        0
      );
      $T2D().SendData(
        40, 
        -1, 
        -1, 
        "", 
        $thisType.myPlayer, 
        0, 
        0, 
        0
      );
    }
    if ($T32().clientSock.active) {
      $T32().clientSock.timeOut = ((($T32().clientSock.timeOut | 0) + 1) | 0);
      if (!($thisType.stopTimeOuts || (($T32().clientSock.timeOut | 0) <= Math.imul(60, $thisType.timeOut)))) {
        $thisType.statusText = "Connection timed out";
        $T32().disconnect = true;
      }
    }

    for (var i = 0; i < 200; i = ((i + 1) | 0)) {
      if (!(!$thisType.item[i].active || (($thisType.item[i].owner | 0) !== ($thisType.myPlayer | 0)))) {
        ($thisType.item[i]).FindOwner(i);
      }
    }
  }; 

  function Main_UpdateDebug () {
    if (($thisType.netMode | 0) === 2) {
      return;
    }
    if ($thisType.keyState.IsKeyDown($T3F().Left)) {
      $thisType.screenPosition.X = +$thisType.screenPosition.X - 32;
    }
    if ($thisType.keyState.IsKeyDown($T3F().Right)) {
      $thisType.screenPosition.X = +$thisType.screenPosition.X + 32;
    }
    if ($thisType.keyState.IsKeyDown($T3F().Up)) {
      $thisType.screenPosition.Y = +$thisType.screenPosition.Y - 32;
    }
    if ($thisType.keyState.IsKeyDown($T3F().Down)) {
      $thisType.screenPosition.Y = +$thisType.screenPosition.Y + 32;
    }
    var num = ((+((+($thisType.mouseState.get_X()) + +$thisType.screenPosition.X) / 16)) | 0);
    var num2 = ((+((+($thisType.mouseState.get_Y()) + +$thisType.screenPosition.Y) / 16)) | 0);
    if (!((($thisType.mouseState.get_X() | 0) >= ($thisType.screenWidth | 0)) || 
        (($thisType.mouseState.get_Y() | 0) >= ($thisType.screenHeight | 0)) || 
        (num < 0) || 
        (num2 < 0) || 
        (num >= ($thisType.maxTilesX | 0)) || (num2 >= ($thisType.maxTilesY | 0)))) {
      $T2F().addLight(num, num2, 1);
      if ($thisType.mouseState.get_RightButton() === $T2B().Pressed) {
        var arg_14A_0 = $thisType.mouseState.get_LeftButton();
      }
      if ($thisType.mouseState.get_RightButton() === $T2B().Pressed) {
        var num3 = ($thisType.myPlayer | 0);
        if ($thisType.player[num3].active) {
          $thisType.player[num3].position.X = +(num * 16);
          $thisType.player[num3].position.Y = +(num2 * 16);
          $thisType.player[num3].fallStart = ((+(+$thisType.player[num3].position.Y / 16)) | 0);
          $T2D().SendData(
            13, 
            -1, 
            -1, 
            "", 
            num3, 
            0, 
            0, 
            0
          );
        }

        for (var i = -1; i < 2; i = ((i + 1) | 0)) {

          for (var j = -1; j < 2; j = ((j + 1) | 0)) {
          }
        }
        return;
      }
      if ($thisType.mouseState.get_LeftButton() === $T2B().Pressed) {

        for (var k = -5; k <= 5; k = ((k + 1) | 0)) {

          for (var l = 5; l >= -5; l = ((l - 1) | 0)) {
            if (($thisType.netMode | 0) !== 1) {
              $T02().AddWater(((num + k) | 0), ((num2 + l) | 0));
            }
          }
        }
      }
    }
  }; 

  function Main_UpdateInvasion () {
    if (($thisType.invasionType | 0) > 0) {
      if (($thisType.invasionSize | 0) <= 0) {
        $thisType.InvasionWarning();
        $thisType.invasionType = 0;
        $thisType.invasionDelay = 7;
      }
      if (+$thisType.invasionX === +($thisType.spawnTileX)) {
        return;
      }
      if (+$thisType.invasionX > +($thisType.spawnTileX)) {
        $thisType.invasionX = +$thisType.invasionX - 0.2;
        if (+$thisType.invasionX <= +($thisType.spawnTileX)) {
          $thisType.invasionX = +($thisType.spawnTileX);
          $thisType.InvasionWarning();
        } else {
          $thisType.invasionWarn = ((($thisType.invasionWarn | 0) - 1) | 0);
        }
      } else if (+$thisType.invasionX < +($thisType.spawnTileX)) {
        $thisType.invasionX = +$thisType.invasionX + 0.2;
        if (+$thisType.invasionX >= +($thisType.spawnTileX)) {
          $thisType.invasionX = +($thisType.spawnTileX);
          $thisType.InvasionWarning();
        } else {
          $thisType.invasionWarn = ((($thisType.invasionWarn | 0) - 1) | 0);
        }
      }
      if (($thisType.invasionWarn | 0) <= 0) {
        $thisType.invasionWarn = 3600;
        $thisType.InvasionWarning();
      }
    }
  }; 

  function Main_UpdateMenu () {
    $thisType.playerInventory = false;
    $thisType.exitScale = 0.8;
    if (($thisType.netMode | 0) === 0) {
      if (!$thisType.grabSky) {
        $thisType.time = +$thisType.time + 86.4;
        if (!$thisType.dayTime) {
          if (+$thisType.time > 32400) {
            $thisType.bloodMoon = false;
            $thisType.time = 0;
            $thisType.dayTime = true;
            $thisType.moonPhase = ((($thisType.moonPhase | 0) + 1) | 0);
            if (($thisType.moonPhase | 0) >= 8) {
              $thisType.moonPhase = 0;
              return;
            }
          }
        } else if (+$thisType.time > 54000) {
          $thisType.time = 0;
          $thisType.dayTime = false;
          return;
        }
      }
    } else if (($thisType.netMode | 0) === 1) {
      $thisType.UpdateTime();
    }
  }; 

  function Main_UpdateMusic () {
    var value = new ($T24())();
    if ((this.curMusic | 0) > 0) {
      if (!this.get_IsActive()) {
        if (!(($thisType.music[this.curMusic]).get_IsPaused() || !($thisType.music[this.curMusic]).get_IsPlaying())) {
          ($thisType.music[this.curMusic]).Pause();
        }
        return;
      }
      if (($thisType.music[this.curMusic]).get_IsPaused()) {
        ($thisType.music[this.curMusic]).Resume();
      }
    }
    var flag = false;
    var rectangle = new ($T24())((($thisType.screenPosition.X) | 0), (($thisType.screenPosition.Y) | 0), $thisType.screenWidth, $thisType.screenHeight);

  $loop0: 
    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(!$thisType.npc[i].active || (!$thisType.npc[i].boss && 
            (($thisType.npc[i].type | 0) !== 13) && 
            (($thisType.npc[i].type | 0) !== 14) && 
            (($thisType.npc[i].type | 0) !== 15) && 
            (($thisType.npc[i].type | 0) !== 26) && 
            (($thisType.npc[i].type | 0) !== 27) && 
            (($thisType.npc[i].type | 0) !== 28) && 
            (($thisType.npc[i].type | 0) !== 29)))) {
        (value = value.MemberwiseClone(), 
          $T24().prototype._ctor.call(value, ((((+$thisType.npc[i].position.X + +((($thisType.npc[i].width | 0) / 2 | 0))) | 0) - 5000) | 0), ((((+$thisType.npc[i].position.Y + +((($thisType.npc[i].height | 0) / 2 | 0))) | 0) - 5000) | 0), Math.imul(5000, 2), Math.imul(5000, 2)));
        if (rectangle.Intersects(value.MemberwiseClone())) {
          flag = true;
          break $loop0;
        }
      }
    }
    if (+$thisType.musicVolume === 0) {
      this.newMusic = 0;
    } else if ($thisType.gameMenu) {
      if (($thisType.netMode | 0) !== 2) {
        this.newMusic = 6;
      } else {
        this.newMusic = 0;
      }
    } else if (flag) {
      this.newMusic = 5;
    } else if (!(!$thisType.player[$thisType.myPlayer].zoneEvil && 
        !$thisType.player[$thisType.myPlayer].zoneMeteor && !$thisType.player[$thisType.myPlayer].zoneDungeon)) {
      this.newMusic = 2;
    } else if (+$thisType.player[$thisType.myPlayer].position.Y > +(((($thisType.maxTilesY | 0) - 200) | 0) * 16)) {
      this.newMusic = 2;
    } else if ($thisType.player[$thisType.myPlayer].position.Y > ((+$thisType.worldSurface * 16) + +($thisType.screenHeight))) {
      this.newMusic = 4;
    } else if ($thisType.dayTime) {
      this.newMusic = 1;
    } else if (!$thisType.dayTime) {
      if ($thisType.bloodMoon) {
        this.newMusic = 2;
      } else {
        this.newMusic = 3;
      }
    }
    this.curMusic = (this.newMusic | 0);

    for (var j = 1; j < 7; j = ((j + 1) | 0)) {
      if (j === (this.curMusic | 0)) {
        if (!($thisType.music[j]).get_IsPlaying()) {
          $thisType.music[j] = $thisType.soundBank.GetCue(JSIL.ConcatString("Music_", $T0C().$Box(j)));
          ($thisType.music[j]).Play();
          ($thisType.music[j]).SetVariable("Volume", +$thisType.musicFade[j] * +$thisType.musicVolume);
        } else {
          $thisType.musicFade[j] += 0.005;
          if (+$thisType.musicFade[j] > 1) {
            $thisType.musicFade[j] = 1;
          }
          ($thisType.music[j]).SetVariable("Volume", +$thisType.musicFade[j] * +$thisType.musicVolume);
        }
      } else if (($thisType.music[j]).get_IsPlaying()) {
        if (+$thisType.musicFade[this.curMusic] > 0.25) {
          $thisType.musicFade[j] -= 0.005;
        } else if ((this.curMusic | 0) === 0) {
          $thisType.musicFade[j] = 0;
        }
        if (+$thisType.musicFade[j] <= 0) {
          $thisType.musicFade[j] -= 0;
          ($thisType.music[j]).Stop($T57().Immediate);
        } else {
          ($thisType.music[j]).SetVariable("Volume", +$thisType.musicFade[j] * +$thisType.musicVolume);
        }
      } else {
        $thisType.musicFade[j] = 0;
      }
    }
  }; 

  function Main_UpdateServer () {
    $thisType.netPlayCounter = ((($thisType.netPlayCounter | 0) + 1) | 0);
    if (($thisType.netPlayCounter | 0) > 3600) {
      $T2D().SendData(
        7, 
        -1, 
        -1, 
        "", 
        0, 
        0, 
        0, 
        0
      );
      $T2D().syncPlayers();
      $thisType.netPlayCounter = 0;
    }
    $T29().IEEERemainder(+($thisType.netPlayCounter), 60);
    if (+$T29().IEEERemainder(+($thisType.netPlayCounter), 360) === 0) {
      var flag = true;
      var num = ($thisType.lastItemUpdate | 0);
      var num2 = 0;

      while (flag) {
        num = ((num + 1) | 0);
        if (num >= 200) {
          num = 0;
        }
        num2 = ((num2 + 1) | 0);
        if (!($thisType.item[num].active && (($thisType.item[num].owner | 0) !== 8))) {
          $T2D().SendData(
            21, 
            -1, 
            -1, 
            "", 
            num, 
            0, 
            0, 
            0
          );
        }
        if (!((num2 < ($thisType.maxItemUpdates | 0)) && (num !== ($thisType.lastItemUpdate | 0)))) {
          flag = false;
        }
      }
      $thisType.lastItemUpdate = num;
    }

    for (var i = 0; i < 200; i = ((i + 1) | 0)) {
      if (!(!$thisType.item[i].active || ((($thisType.item[i].owner | 0) !== 8) && 
            $thisType.player[$thisType.item[i].owner].active))) {
        ($thisType.item[i]).FindOwner(i);
      }
    }

    for (var j = 0; j < 8; j = ((j + 1) | 0)) {
      if ($T32().serverSock[j].active) {
        $T32().serverSock[j].timeOut = ((($T32().serverSock[j].timeOut | 0) + 1) | 0);
        if (!($thisType.stopTimeOuts || (($T32().serverSock[j].timeOut | 0) <= Math.imul(60, $thisType.timeOut)))) {
          $T32().serverSock[j].kill = true;
        }
      }
      if ($thisType.player[j].active) {
        var sectionX = ($T32().GetSectionX(((+(+$thisType.player[j].position.X / 16)) | 0)) | 0);
        var sectionY = ($T32().GetSectionY(((+(+$thisType.player[j].position.Y / 16)) | 0)) | 0);
        var num3 = 0;

        for (var k = ((sectionX - 1) | 0); k < ((sectionX + 2) | 0); k = ((k + 1) | 0)) {

          for (var l = ((sectionY - 1) | 0); l < ((sectionY + 2) | 0); l = ((l + 1) | 0)) {
            if (!((k < 0) || 
                (k >= ($thisType.maxSectionsX | 0)) || 
                (l < 0) || 
                (l >= ($thisType.maxSectionsY | 0)) || ($T32().serverSock[j].tileSection).Get(k, l))) {
              num3 = ((num3 + 1) | 0);
            }
          }
        }
        if (num3 > 0) {
          var num4 = Math.imul(num3, 150);
          $T2D().SendData(
            9, 
            j, 
            -1, 
            "Recieving tile data", 
            num4, 
            0, 
            0, 
            0
          );
          $T32().serverSock[j].statusText2 = "is recieving tile data";
          $T32().serverSock[j].statusMax = ((($T32().serverSock[j].statusMax | 0) + num4) | 0);

          for (var m = ((sectionX - 1) | 0); m < ((sectionX + 2) | 0); m = ((m + 1) | 0)) {

            for (var n = ((sectionY - 1) | 0); n < ((sectionY + 2) | 0); n = ((n + 1) | 0)) {
              if (!((m < 0) || 
                  (m >= ($thisType.maxSectionsX | 0)) || 
                  (n < 0) || 
                  (n >= ($thisType.maxSectionsY | 0)) || ($T32().serverSock[j].tileSection).Get(m, n))) {
                $T2D().SendSection(j, m, n);
                $T2D().SendData(
                  11, 
                  j, 
                  -1, 
                  "", 
                  m, 
                  +n, 
                  +m, 
                  +n
                );
              }
            }
          }
        }
      }
    }
  }; 

  function Main_UpdateTime () {
    $thisType.time = +$thisType.time + 1;
    if (!$thisType.dayTime) {
      if (!(!$T39().spawnEye || 
          (($thisType.netMode | 0) === 1) || (+$thisType.time <= 4860))) {

      $loop7: 
        for (var i = 0; i < 8; i = ((i + 1) | 0)) {
          if (!(!$thisType.player[i].active || 
              $thisType.player[i].dead || ($thisType.player[i].position.Y >= (+$thisType.worldSurface * 16)))) {
            $T11().SpawnOnPlayer(i, 4);
            $T39().spawnEye = false;
            break $loop7;
          }
        }
      }
      if (+$thisType.time > 32400) {
        if (($thisType.invasionDelay | 0) > 0) {
          $thisType.invasionDelay = ((($thisType.invasionDelay | 0) - 1) | 0);
        }
        $T39().spawnNPC = 0;
        $thisType.checkForSpawns = 0;
        $thisType.time = 0;
        $thisType.bloodMoon = false;
        $thisType.dayTime = true;
        $thisType.moonPhase = ((($thisType.moonPhase | 0) + 1) | 0);
        if (($thisType.moonPhase | 0) >= 8) {
          $thisType.moonPhase = 0;
        }
        if (($thisType.netMode | 0) === 2) {
          $T2D().SendData(
            7, 
            -1, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
          $T39().saveAndPlay();
        }
        if (!((($thisType.netMode | 0) === 1) || (($thisType.rand.Next(15) | 0) !== 0))) {
          $thisType.StartInvasion();
        }
      }
      if (!((+$thisType.time <= 16200) || !$T39().spawnMeteor)) {
        $T39().spawnMeteor = false;
        $T39().dropMeteor();
        return;
      }
    } else {
      if (+$thisType.time > 54000) {
        $T39().spawnNPC = 0;
        $thisType.checkForSpawns = 0;
        if (!((($thisType.rand.Next(50) | 0) !== 0) || 
            (($thisType.netMode | 0) === 1) || !$T39().shadowOrbSmashed)) {
          $T39().spawnMeteor = true;
        }
        if (!($T11().downedBoss1 || (($thisType.netMode | 0) === 1))) {
          var flag = false;

        $loop0: 
          for (var j = 0; j < 8; j = ((j + 1) | 0)) {
            if (!(!$thisType.player[j].active || (($thisType.player[j].statLifeMax | 0) < 200))) {
              flag = true;
              break $loop0;
            }
          }
          if (!(!flag || (($thisType.rand.Next(3) | 0) !== 0))) {
            var num = 0;

            for (var k = 0; k < 1000; k = ((k + 1) | 0)) {
              if (!(!$thisType.npc[k].active || !$thisType.npc[k].townNPC)) {
                num = ((num + 1) | 0);
              }
            }
            if (num >= 4) {
              $T39().spawnEye = true;
              if (($thisType.netMode | 0) === 0) {
                $thisType.NewText("You feel an evil presence watching you...", 50, 255, 130);
              } else if (($thisType.netMode | 0) === 2) {
                $T2D().SendData(
                  25, 
                  -1, 
                  -1, 
                  "You feel an evil presence watching you...", 
                  8, 
                  50, 
                  255, 
                  130
                );
              }
            }
          }
        }
        if (!($T39().spawnEye || 
            (($thisType.moonPhase | 0) === 4) || 
            (($thisType.rand.Next(7) | 0) !== 0) || (($thisType.netMode | 0) === 1))) {

        $loop2: 
          for (var l = 0; l < 8; l = ((l + 1) | 0)) {
            if (!(!$thisType.player[l].active || (($thisType.player[l].statLifeMax | 0) <= 100))) {
              $thisType.bloodMoon = true;
              break $loop2;
            }
          }
          if ($thisType.bloodMoon) {
            if (($thisType.netMode | 0) === 0) {
              $thisType.NewText("The Blood Moon is rising...", 50, 255, 130);
            } else if (($thisType.netMode | 0) === 2) {
              $T2D().SendData(
                25, 
                -1, 
                -1, 
                "The Blood Moon is rising...", 
                8, 
                50, 
                255, 
                130
              );
            }
          }
        }
        $thisType.time = 0;
        $thisType.dayTime = false;
        if (($thisType.netMode | 0) === 2) {
          $T2D().SendData(
            7, 
            -1, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
        }
      }
      if (($thisType.netMode | 0) !== 1) {
        $thisType.checkForSpawns = ((($thisType.checkForSpawns | 0) + 1) | 0);
        if (($thisType.checkForSpawns | 0) >= 7200) {
          var num2 = 0;

          for (var m = 0; m < 8; m = ((m + 1) | 0)) {
            if ($thisType.player[m].active) {
              num2 = ((num2 + 1) | 0);
            }
          }
          $thisType.checkForSpawns = 0;
          $T39().spawnNPC = 0;
          var num3 = 0;
          var num4 = 0;
          var num5 = 0;
          var num6 = 0;
          var num7 = 0;
          var num8 = 0;
          var num9 = 0;
          var num10 = 0;

          for (var n = 0; n < 1000; n = ((n + 1) | 0)) {
            if (!(!$thisType.npc[n].active || !$thisType.npc[n].townNPC)) {
              if (!((($thisType.npc[n].type | 0) === 37) || $thisType.npc[n].homeless)) {
                $T39().QuickFindHome(n);
              } else {
                num8 = ((num8 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 17) {
                num3 = ((num3 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 18) {
                num4 = ((num4 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 19) {
                num6 = ((num6 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 20) {
                num5 = ((num5 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 22) {
                num7 = ((num7 + 1) | 0);
              }
              if (($thisType.npc[n].type | 0) === 38) {
                num9 = ((num9 + 1) | 0);
              }
              num10 = ((num10 + 1) | 0);
            }
          }
          if (($T39().spawnNPC | 0) === 0) {
            var num11 = 0;
            var flag2 = false;
            var num12 = 0;
            var flag3 = false;
            var flag4 = false;

            for (var num13 = 0; num13 < 8; num13 = ((num13 + 1) | 0)) {
              if ($thisType.player[num13].active) {

                for (var num14 = 0; num14 < 44; num14 = ((num14 + 1) | 0)) {
                  if (($thisType.player[num13].inventory[num14] !== null) & (($thisType.player[num13].inventory[num14].stack | 0) > 0)) {
                    if (($thisType.player[num13].inventory[num14].type | 0) === 71) {
                      num11 = ((num11 + ($thisType.player[num13].inventory[num14].stack | 0)) | 0);
                    }
                    if (($thisType.player[num13].inventory[num14].type | 0) === 72) {
                      num11 = ((num11 + Math.imul($thisType.player[num13].inventory[num14].stack, 100)) | 0);
                    }
                    if (($thisType.player[num13].inventory[num14].type | 0) === 73) {
                      num11 = ((num11 + Math.imul($thisType.player[num13].inventory[num14].stack, 10000)) | 0);
                    }
                    if (($thisType.player[num13].inventory[num14].type | 0) === 74) {
                      num11 = ((num11 + Math.imul($thisType.player[num13].inventory[num14].stack, 1000000)) | 0);
                    }
                    if (!((($thisType.player[num13].inventory[num14].type | 0) !== 95) && 
                        (($thisType.player[num13].inventory[num14].type | 0) !== 96) && 
                        (($thisType.player[num13].inventory[num14].type | 0) !== 97) && 
                        (($thisType.player[num13].inventory[num14].type | 0) !== 98) && (($thisType.player[num13].inventory[num14].useAmmo | 0) !== 14))) {
                      flag3 = true;
                    }
                    if (!((($thisType.player[num13].inventory[num14].type | 0) !== 166) && (($thisType.player[num13].inventory[num14].type | 0) !== 167))) {
                      flag4 = true;
                    }
                  }
                }
                var num15 = ((($thisType.player[num13].statLifeMax | 0) / 20) | 0);
                if (num15 > 5) {
                  flag2 = true;
                }
                num12 = ((num12 + num15) | 0);
              }
            }
            if (!((($T39().spawnNPC | 0) !== 0) || (num7 >= 1))) {
              $T39().spawnNPC = 22;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                (+num11 <= 5000) || (num3 >= 1))) {
              $T39().spawnNPC = 17;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                !flag2 || (num4 >= 1))) {
              $T39().spawnNPC = 18;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                !flag3 || (num6 >= 1))) {
              $T39().spawnNPC = 19;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                (!$T11().downedBoss1 && 
                  !$T11().downedBoss2 && 
                  !$T11().downedBoss3) || (num5 >= 1))) {
              $T39().spawnNPC = 20;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                !flag4 || 
                (num3 <= 0) || (num9 >= 1))) {
              $T39().spawnNPC = 38;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                (num11 <= 100000) || 
                (num3 >= 2) || (num2 <= 2))) {
              $T39().spawnNPC = 17;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                (num12 < 20) || 
                (num4 >= 2) || (num2 <= 2))) {
              $T39().spawnNPC = 18;
            }
            if (!((($T39().spawnNPC | 0) !== 0) || 
                (num11 <= 5000000) || 
                (num3 >= 3) || (num2 <= 4))) {
              $T39().spawnNPC = 17;
            }
            if (!($T11().downedBoss3 || (num8 !== 0))) {
              var num16 = ($T11().NewNPC(((Math.imul($thisType.dungeonX, 16) + 8) | 0), Math.imul($thisType.dungeonY, 16), 37, 0) | 0);
              $thisType.npc[num16].homeless = false;
              $thisType.npc[num16].homeTileX = ($thisType.dungeonX | 0);
              $thisType.npc[num16].homeTileY = ($thisType.dungeonY | 0);
            }
          }
        }
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("Microsoft.Xna.Framework.Game"), 
      Name: "Terraria.Main", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Main__ctor
    );

    $.Method({Static:true , Public:true }, "CalculateDamage", 
      new JSIL.MethodSignature($.Double, [$.Int32, $.Int32]), 
      Main_CalculateDamage
    );

    $.Method({Static:true , Public:true }, "CursorColor", 
      JSIL.MethodSignature.Void, 
      Main_CursorColor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Draw", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.GameTime")), 
      Main_Draw
    );

    $.Method({Static:false, Public:false}, "DrawChat", 
      JSIL.MethodSignature.Void, 
      Main_DrawChat
    );

    $.Method({Static:false, Public:false}, "DrawFPS", 
      JSIL.MethodSignature.Void, 
      Main_DrawFPS
    );

    $.Method({Static:false, Public:false}, "DrawGore", 
      JSIL.MethodSignature.Void, 
      Main_DrawGore
    );

    $.Method({Static:false, Public:false}, "DrawInterface", 
      JSIL.MethodSignature.Void, 
      Main_DrawInterface
    );

    $.Method({Static:false, Public:false}, "DrawMenu", 
      JSIL.MethodSignature.Void, 
      Main_DrawMenu
    );

    $.Method({Static:false, Public:false}, "DrawNPCs", 
      JSIL.MethodSignature.Action($.Boolean), 
      Main_DrawNPCs
    );

    $.Method({Static:false, Public:false}, "DrawPlayer", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("Terraria.Player")), 
      Main_DrawPlayer
    );

    $.Method({Static:false, Public:false}, "DrawSplash", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.GameTime")), 
      Main_DrawSplash
    );

    $.Method({Static:false, Public:false}, "DrawTiles", 
      JSIL.MethodSignature.Action($.Boolean), 
      Main_DrawTiles
    );

    $.Method({Static:false, Public:false}, "DrawWater", 
      JSIL.MethodSignature.Action($.Boolean), 
      Main_DrawWater
    );

    $.Method({Static:true , Public:false}, "ErasePlayer", 
      JSIL.MethodSignature.Action($.Int32), 
      Main_ErasePlayer
    );

    $.Method({Static:true , Public:false}, "EraseWorld", 
      JSIL.MethodSignature.Action($.Int32), 
      Main_EraseWorld
    );

    $.Method({Static:false, Public:false}, "getAuth", 
      JSIL.MethodSignature.Void, 
      Main_getAuth
    );

    $.Method({Static:true , Public:true }, "GetInputText", 
      new JSIL.MethodSignature($.String, [$.String]), 
      Main_GetInputText
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetKeyState", 
      new JSIL.MethodSignature($.Int16, [$.Int32]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetMenuItemCount", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "User32", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetSystemMenu", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.Boolean]), 
      {
        Module: "User32", 
      }
    );

    $.Method({Static:true , Public:false}, "HelpText", 
      JSIL.MethodSignature.Void, 
      Main_HelpText
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Initialize", 
      JSIL.MethodSignature.Void, 
      Main_Initialize
    );

    $.Method({Static:true , Public:false}, "InvasionWarning", 
      JSIL.MethodSignature.Void, 
      Main_InvasionWarning
    );

    $.Method({Static:false, Public:false, Virtual:true }, "LoadContent", 
      JSIL.MethodSignature.Void, 
      Main_LoadContent
    );

    $.Method({Static:true , Public:false}, "LoadPlayers", 
      JSIL.MethodSignature.Void, 
      Main_LoadPlayers
    );

    $.Method({Static:true , Public:true }, "LoadWorlds", 
      JSIL.MethodSignature.Void, 
      Main_LoadWorlds
    );

    $.Method({Static:false, Public:false}, "MouseText", 
      new JSIL.MethodSignature(null, [$.String, $.Int32]), 
      Main_MouseText
    );

    $.Method({Static:true , Public:true }, "NewText", 
      new JSIL.MethodSignature(null, [
          $.String, $.Byte, 
          $.Byte, $.Byte
        ]), 
      Main_NewText
    );

    $.Method({Static:true , Public:false}, "nextLoadPlayer", 
      JSIL.MethodSignature.Return($.String), 
      Main_nextLoadPlayer
    );

    $.Method({Static:true , Public:false}, "nextLoadWorld", 
      JSIL.MethodSignature.Return($.String), 
      Main_nextLoadWorld
    );

    $.Method({Static:false, Public:false}, "OpenSettings", 
      JSIL.MethodSignature.Void, 
      Main_OpenSettings
    );

    $.Method({Static:true , Public:true }, "PlaySound", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      Main_PlaySound
    );

    $.Method({Static:false, Public:false}, "QuitGame", 
      JSIL.MethodSignature.Void, 
      Main_QuitGame
    );

    $.PInvokeMethod({Static:true , Public:false}, "RemoveMenu", 
      new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $.Int32
        ]), 
      {
        Module: "User32", 
      }
    );

    $.Method({Static:false, Public:false}, "SaveSettings", 
      JSIL.MethodSignature.Void, 
      Main_SaveSettings
    );

    $.Method({Static:true , Public:false}, "StartInvasion", 
      JSIL.MethodSignature.Void, 
      Main_StartInvasion
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UnloadContent", 
      JSIL.MethodSignature.Void, 
      Main_UnloadContent
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Update", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.GameTime")), 
      Main_Update
    );

    $.Method({Static:true , Public:false}, "UpdateClient", 
      JSIL.MethodSignature.Void, 
      Main_UpdateClient
    );

    $.Method({Static:true , Public:false}, "UpdateDebug", 
      JSIL.MethodSignature.Void, 
      Main_UpdateDebug
    );

    $.Method({Static:true , Public:false}, "UpdateInvasion", 
      JSIL.MethodSignature.Void, 
      Main_UpdateInvasion
    );

    $.Method({Static:true , Public:false}, "UpdateMenu", 
      JSIL.MethodSignature.Void, 
      Main_UpdateMenu
    );

    $.Method({Static:false, Public:false}, "UpdateMusic", 
      JSIL.MethodSignature.Void, 
      Main_UpdateMusic
    );

    $.Method({Static:true , Public:false}, "UpdateServer", 
      JSIL.MethodSignature.Void, 
      Main_UpdateServer
    );

    $.Method({Static:true , Public:false}, "UpdateTime", 
      JSIL.MethodSignature.Void, 
      Main_UpdateTime
    );

    $.Constant({Static:true , Public:false}, "MF_BYPOSITION", $.Int32, 1024);

    $.Constant({Static:true , Public:true }, "sectionWidth", $.Int32, 200);

    $.Constant({Static:true , Public:true }, "sectionHeight", $.Int32, 150);

    $.Constant({Static:true , Public:true }, "maxTileSets", $.Int32, 80);

    $.Constant({Static:true , Public:true }, "maxWallTypes", $.Int32, 14);

    $.Constant({Static:true , Public:true }, "maxBackgrounds", $.Int32, 7);

    $.Constant({Static:true , Public:true }, "maxDust", $.Int32, 2000);

    $.Constant({Static:true , Public:true }, "maxCombatText", $.Int32, 100);

    $.Constant({Static:true , Public:true }, "maxPlayers", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "maxChests", $.Int32, 1000);

    $.Constant({Static:true , Public:true }, "maxItemTypes", $.Int32, 235);

    $.Constant({Static:true , Public:true }, "maxItems", $.Int32, 200);

    $.Constant({Static:true , Public:true }, "maxProjectileTypes", $.Int32, 37);

    $.Constant({Static:true , Public:true }, "maxProjectiles", $.Int32, 1000);

    $.Constant({Static:true , Public:true }, "maxNPCTypes", $.Int32, 44);

    $.Constant({Static:true , Public:true }, "maxNPCs", $.Int32, 1000);

    $.Constant({Static:true , Public:true }, "maxGoreTypes", $.Int32, 73);

    $.Constant({Static:true , Public:true }, "maxGore", $.Int32, 200);

    $.Constant({Static:true , Public:true }, "maxInventory", $.Int32, 44);

    $.Constant({Static:true , Public:true }, "maxItemSounds", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "maxNPCHitSounds", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "maxNPCKilledSounds", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "maxLiquidTypes", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "maxMusic", $.Int32, 7);

    $.Constant({Static:true , Public:true }, "numArmorHead", $.Int32, 12);

    $.Constant({Static:true , Public:true }, "numArmorBody", $.Int32, 10);

    $.Constant({Static:true , Public:true }, "numArmorLegs", $.Int32, 10);

    $.Constant({Static:true , Public:true }, "dayLength", $.Double, 54000);

    $.Constant({Static:true , Public:true }, "nightLength", $.Double, 32400);

    $.Constant({Static:true , Public:true }, "maxStars", $.Int32, 130);

    $.Constant({Static:true , Public:true }, "maxStarTypes", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "maxClouds", $.Int32, 100);

    $.Constant({Static:true , Public:true }, "maxCloudTypes", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "maxHair", $.Int32, 17);

    $.Field({Static:true , Public:true }, "saveTimer", $.Int32, 0);

    $.Field({Static:true , Public:true }, "grabSun", $.Boolean, false);

    $.Field({Static:true , Public:true }, "debugMode", $.Boolean, false);

    $.Field({Static:true , Public:true }, "godMode", $.Boolean, false);

    $.Field({Static:true , Public:true }, "stopSpawns", $.Boolean, false);

    $.Field({Static:true , Public:true }, "dumbAI", $.Boolean, false);

    $.Field({Static:true , Public:true }, "skipMenu", $.Boolean, false);

    $.Field({Static:true , Public:true }, "lightTiles", $.Boolean, false);

    $.Field({Static:true , Public:true }, "verboseNetplay", $.Boolean, false);

    $.Field({Static:true , Public:true }, "stopTimeOuts", $.Boolean, false);

    $.Field({Static:true , Public:true }, "showSpam", $.Boolean, false);

    $.Field({Static:true , Public:true }, "showItemOwner", $.Boolean, false);

    $.Field({Static:true , Public:true }, "ignoreErrors", $.Boolean, false);

    $.Field({Static:true , Public:true }, "webProtect", $.Boolean, false);

    $.Field({Static:true , Public:true }, "showSplash", $.Boolean, true);

    $.Field({Static:true , Public:true }, "defaultIP", $.String, "");

    $.Field({Static:false, Public:false}, "graphics", $asm01.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceManager"));

    $.Field({Static:false, Public:false}, "spriteBatch", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch"));

    $.Field({Static:true , Public:true }, "mouseState", $asm00.TypeRef("Microsoft.Xna.Framework.Input.MouseState"));

    $.Field({Static:true , Public:true }, "oldMouseState", $asm00.TypeRef("Microsoft.Xna.Framework.Input.MouseState"));

    $.Field({Static:true , Public:true }, "keyState", $asm00.TypeRef("Microsoft.Xna.Framework.Input.KeyboardState"));

    $.Field({Static:true , Public:false}, "webAuth", $.Boolean, false);

    $.Field({Static:true , Public:true }, "updateTime", $.Int32, 0);

    $.Field({Static:true , Public:true }, "drawTime", $.Int32, 0);

    $.Field({Static:true , Public:true }, "frameRate", $.Int32, 0);

    $.Field({Static:true , Public:true }, "frameRelease", $.Boolean, false);

    $.Field({Static:true , Public:true }, "showFrameRate", $.Boolean, false);

    $.Field({Static:true , Public:true }, "magmaBGFrame", $.Int32, 0);

    $.Field({Static:true , Public:true }, "magmaBGFrameCounter", $.Int32, 0);

    $.Field({Static:true , Public:true }, "leftWorld", $.Single, 0);

    $.Field({Static:true , Public:true }, "rightWorld", $.Single, 134400);

    $.Field({Static:true , Public:true }, "topWorld", $.Single, 0);

    $.Field({Static:true , Public:true }, "bottomWorld", $.Single, 38400);

    $.Field({Static:true , Public:true }, "maxTilesX", $.Int32, function ($pi) {
        return (((((($pi.rightWorld) | 0) / 16) | 0) + 1) | 0);
      });

    $.Field({Static:true , Public:true }, "maxTilesY", $.Int32, function ($pi) {
        return (((((($pi.bottomWorld) | 0) / 16) | 0) + 1) | 0);
      });

    $.Field({Static:true , Public:true }, "maxSectionsX", $.Int32, function ($pi) {
        return ((($pi.maxTilesX | 0) / 200) | 0);
      });

    $.Field({Static:true , Public:true }, "maxSectionsY", $.Int32, function ($pi) {
        return ((($pi.maxTilesY | 0) / 150) | 0);
      });

    $.Field({Static:true , Public:true }, "caveParrallax", $.Single, 1);

    $.Field({Static:true , Public:true }, "dungeonX", $.Int32);

    $.Field({Static:true , Public:true }, "dungeonY", $.Int32);

    $.Field({Static:true , Public:true }, "liquid", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Liquid")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Liquid, $asm0F.Terraria.Liquid.resLiquid);
      });

    $.Field({Static:true , Public:true }, "liquidBuffer", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.LiquidBuffer")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.LiquidBuffer, 10000);
      });

    $.Field({Static:false, Public:true }, "curMusic", $.Int32);

    $.Field({Static:false, Public:true }, "newMusic", $.Int32);

    $.Field({Static:true , Public:true }, "statusText", $.String, "");

    $.Field({Static:true , Public:true }, "worldName", $.String, "");

    $.Field({Static:true , Public:true }, "worldID", $.Int32);

    $.Field({Static:true , Public:true }, "background", $.Int32, 0);

    $.Field({Static:true , Public:true }, "tileColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:true , Public:true }, "worldSurface", $.Double);

    $.Field({Static:true , Public:true }, "rockLayer", $.Double);

    $.Field({Static:true , Public:true }, "teamColor", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Color, 5);
      });

    $.Field({Static:true , Public:true }, "dayTime", $.Boolean, true);

    $.Field({Static:true , Public:true }, "time", $.Double, 13500);

    $.Field({Static:true , Public:true }, "moonPhase", $.Int32, 0);

    $.Field({Static:true , Public:true }, "sunModY", $.Int16, 0);

    $.Field({Static:true , Public:true }, "moonModY", $.Int16, 0);

    $.Field({Static:true , Public:true }, "grabSky", $.Boolean, false);

    $.Field({Static:true , Public:true }, "bloodMoon", $.Boolean, false);

    $.Field({Static:true , Public:true }, "checkForSpawns", $.Int32, 0);

    $.Field({Static:true , Public:true }, "helpText", $.Int32, 0);

    $.Field({Static:true , Public:true }, "numStars", $.Int32);

    $.Field({Static:true , Public:true }, "cloudLimit", $.Int32, 100);

    $.Field({Static:true , Public:true }, "numClouds", $.Int32, function ($pi) {
        return $pi.cloudLimit;
      });

    $.Field({Static:true , Public:true }, "windSpeed", $.Single, 0);

    $.Field({Static:true , Public:true }, "windSpeedSpeed", $.Single, 0);

    $.Field({Static:true , Public:true }, "cloud", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Cloud")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Cloud, 100);
      });

    $.Field({Static:true , Public:true }, "resetClouds", $.Boolean, true);

    $.Field({Static:true , Public:true }, "evilTiles", $.Int32);

    $.Field({Static:true , Public:true }, "meteorTiles", $.Int32);

    $.Field({Static:true , Public:true }, "jungleTiles", $.Int32);

    $.Field({Static:true , Public:true }, "dungeonTiles", $.Int32);

    $.Field({Static:true , Public:true }, "fadeCounter", $.Int32, 0);

    $.Field({Static:true , Public:true }, "rand", $asm06.TypeRef("System.Random"))
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute"));

    $.Field({Static:true , Public:true }, "armorHeadTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 12);
      });

    $.Field({Static:true , Public:true }, "armorBodyTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 10);
      });

    $.Field({Static:true , Public:true }, "armorArmTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 10);
      });

    $.Field({Static:true , Public:true }, "armorLegTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 10);
      });

    $.Field({Static:true , Public:true }, "chainTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chain2Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chain3Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chain4Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chain5Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chain6Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "cdTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "boneArmTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "itemTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 235);
      });

    $.Field({Static:true , Public:true }, "npcTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 44);
      });

    $.Field({Static:true , Public:true }, "projectileTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 37);
      });

    $.Field({Static:true , Public:true }, "goreTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 73);
      });

    $.Field({Static:true , Public:true }, "cursorTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "dustTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "sunTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "moonTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "tileTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 80);
      });

    $.Field({Static:true , Public:true }, "blackTileTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "wallTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 14);
      });

    $.Field({Static:true , Public:true }, "backgroundTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 7);
      });

    $.Field({Static:true , Public:true }, "cloudTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 4);
      });

    $.Field({Static:true , Public:true }, "starTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 5);
      });

    $.Field({Static:true , Public:true }, "liquidTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 2);
      });

    $.Field({Static:true , Public:true }, "heartTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "manaTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "bubbleTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "treeTopTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "shroomCapTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "treeBranchTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "inventoryBackTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "logoTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "textBackTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chatTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chat2Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "chatBackTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "teamTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "reTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "raTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "splashTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "fadeTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerEyeWhitesTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerEyesTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerHandsTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerHands2Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerHeadTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerPantsTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerShirtTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerShoesTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerBeltTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerUnderShirtTexture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerUnderShirt2Texture", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Field({Static:true , Public:true }, "playerHairTexture", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.Graphics.Texture2D, 17);
      });

    $.Field({Static:true , Public:true }, "soundDig", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 3);
      });

    $.Field({Static:true , Public:true }, "soundInstanceDig", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 3);
      });

    $.Field({Static:true , Public:true }, "soundPlayerHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 3);
      });

    $.Field({Static:true , Public:true }, "soundInstancePlayerHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 3);
      });

    $.Field({Static:true , Public:true }, "soundFemaleHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 3);
      });

    $.Field({Static:true , Public:true }, "soundInstanceFemaleHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 3);
      });

    $.Field({Static:true , Public:true }, "soundPlayerKilled", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstancePlayerKilled", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundGrass", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceGrass", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundGrab", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceGrab", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundItem", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 17);
      });

    $.Field({Static:true , Public:true }, "soundInstanceItem", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 17);
      });

    $.Field({Static:true , Public:true }, "soundNPCHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 4);
      });

    $.Field({Static:true , Public:true }, "soundInstanceNPCHit", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 4);
      });

    $.Field({Static:true , Public:true }, "soundNPCKilled", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 4);
      });

    $.Field({Static:true , Public:true }, "soundInstanceNPCKilled", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 4);
      });

    $.Field({Static:true , Public:true }, "soundDoorOpen", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceDoorOpen", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundDoorClosed", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceDoorClosed", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundMenuOpen", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceMenuOpen", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundMenuClose", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceMenuClose", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundMenuTick", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceMenuTick", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundShatter", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceShatter", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundZombie", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 3);
      });

    $.Field({Static:true , Public:true }, "soundInstanceZombie", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 3);
      });

    $.Field({Static:true , Public:true }, "soundRoar", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 2);
      });

    $.Field({Static:true , Public:true }, "soundInstanceRoar", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 2);
      });

    $.Field({Static:true , Public:true }, "soundSplash", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffect, 2);
      });

    $.Field({Static:true , Public:true }, "soundInstanceSplash", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance")]), function ($pi) {
        return JSIL.Array.New($asm00.Microsoft.Xna.Framework.Audio.SoundEffectInstance, 2);
      });

    $.Field({Static:true , Public:true }, "soundDoubleJump", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceDoubleJump", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundRun", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceRun", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "soundCoins", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffect"));

    $.Field({Static:true , Public:true }, "soundInstanceCoins", $asm00.TypeRef("Microsoft.Xna.Framework.Audio.SoundEffectInstance"));

    $.Field({Static:true , Public:true }, "engine", $asm05.TypeRef("Microsoft.Xna.Framework.Audio.AudioEngine"));

    $.Field({Static:true , Public:true }, "soundBank", $asm05.TypeRef("Microsoft.Xna.Framework.Audio.SoundBank"));

    $.Field({Static:true , Public:true }, "waveBank", $asm05.TypeRef("Microsoft.Xna.Framework.Audio.WaveBank"));

    $.Field({Static:true , Public:true }, "music", $jsilcore.TypeRef("System.Array", [$asm05.TypeRef("Microsoft.Xna.Framework.Audio.Cue")]), function ($pi) {
        return JSIL.Array.New($asm05.Microsoft.Xna.Framework.Audio.Cue, 7);
      });

    $.Field({Static:true , Public:true }, "musicFade", $jsilcore.TypeRef("System.Array", [$.Single]), function ($pi) {
        return JSIL.Array.New($asm06.System.Single, 7);
      });

    $.Field({Static:true , Public:true }, "musicVolume", $.Single, 0.75);

    $.Field({Static:true , Public:true }, "soundVolume", $.Single, 1);

    $.Field({Static:true , Public:true }, "fontItemStack", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"));

    $.Field({Static:true , Public:true }, "fontMouseText", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"));

    $.Field({Static:true , Public:true }, "fontDeathText", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"));

    $.Field({Static:true , Public:true }, "fontCombatText", $asm03.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"));

    $.Field({Static:true , Public:true }, "wallHouse", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 14);
      });

    $.Field({Static:true , Public:true }, "tileStone", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileWaterDeath", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileLavaDeath", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileTable", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileBlockLight", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileDungeon", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileSolidTop", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileSolid", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileNoAttach", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileNoFail", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "tileFrameImportant", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "backgroundWidth", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 7);
      });

    $.Field({Static:true , Public:true }, "backgroundHeight", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 7);
      });

    $.Field({Static:true , Public:true }, "tilesLoaded", $.Boolean, false);

    $.Field({Static:true , Public:true }, "tile", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Tile"), JSIL.ArrayDimensionParameter(2)]), function ($pi) {
        return JSIL.MultidimensionalArray.New($asm0F.Terraria.Tile, [0, $pi.maxTilesX, 0, $pi.maxTilesY]);
      });

    $.Field({Static:true , Public:true }, "dust", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Dust")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Dust, 2000);
      });

    $.Field({Static:true , Public:true }, "star", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Star")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Star, 130);
      });

    $.Field({Static:true , Public:true }, "item", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Item, 201);
      });

    $.Field({Static:true , Public:true }, "npc", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.NPC")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.NPC, 1001);
      });

    $.Field({Static:true , Public:true }, "gore", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Gore")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Gore, 201);
      });

    $.Field({Static:true , Public:true }, "projectile", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Projectile")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Projectile, 1001);
      });

    $.Field({Static:true , Public:true }, "combatText", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.CombatText")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.CombatText, 100);
      });

    $.Field({Static:true , Public:true }, "chest", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Chest")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Chest, 1000);
      });

    $.Field({Static:true , Public:true }, "sign", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Sign")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Sign, 1000);
      });

    $.Field({Static:true , Public:true }, "screenPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:true , Public:true }, "screenLastPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:true , Public:true }, "screenWidth", $.Int32, 800);

    $.Field({Static:true , Public:true }, "screenHeight", $.Int32, 600);

    $.Field({Static:true , Public:true }, "chatLength", $.Int32, 600);

    $.Field({Static:true , Public:true }, "chatMode", $.Boolean, false);

    $.Field({Static:true , Public:true }, "chatRelease", $.Boolean, false);

    $.Field({Static:true , Public:true }, "numChatLines", $.Int32, 7);

    $.Field({Static:true , Public:true }, "chatText", $.String, "");

    $.Field({Static:true , Public:true }, "chatLine", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.ChatLine")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.ChatLine, $pi.numChatLines);
      });

    $.Field({Static:true , Public:true }, "inputTextEnter", $.Boolean, false);

    $.Field({Static:true , Public:true }, "hotbarScale", $jsilcore.TypeRef("System.Array", [$.Single]));

    $.Field({Static:true , Public:true }, "mouseTextColor", $.Byte, 0);

    $.Field({Static:true , Public:true }, "mouseTextColorChange", $.Int32, 1);

    $.Field({Static:true , Public:true }, "mouseLeftRelease", $.Boolean, false);

    $.Field({Static:true , Public:true }, "mouseRightRelease", $.Boolean, false);

    $.Field({Static:true , Public:true }, "playerInventory", $.Boolean, false);

    $.Field({Static:true , Public:true }, "stackSplit", $.Int32);

    $.Field({Static:true , Public:true }, "stackCounter", $.Int32, 0);

    $.Field({Static:true , Public:true }, "stackDelay", $.Int32, 7);

    $.Field({Static:true , Public:true }, "mouseItem", $asm0F.TypeRef("Terraria.Item"));

    $.Field({Static:true , Public:false}, "inventoryScale", $.Single, 0.75);

    $.Field({Static:true , Public:true }, "hasFocus", $.Boolean, true);

    $.Field({Static:true , Public:true }, "recipe", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Recipe")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Recipe, $asm0F.Terraria.Recipe.maxRecipes);
      });

    $.Field({Static:true , Public:true }, "availableRecipe", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $asm0F.Terraria.Recipe.maxRecipes);
      });

    $.Field({Static:true , Public:true }, "availableRecipeY", $jsilcore.TypeRef("System.Array", [$.Single]), function ($pi) {
        return JSIL.Array.New($asm06.System.Single, $asm0F.Terraria.Recipe.maxRecipes);
      });

    $.Field({Static:true , Public:true }, "numAvailableRecipes", $.Int32);

    $.Field({Static:true , Public:true }, "focusRecipe", $.Int32);

    $.Field({Static:true , Public:true }, "myPlayer", $.Int32, 0);

    $.Field({Static:true , Public:true }, "player", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Player")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Player, 9);
      });

    $.Field({Static:true , Public:true }, "spawnTileX", $.Int32);

    $.Field({Static:true , Public:true }, "spawnTileY", $.Int32);

    $.Field({Static:true , Public:true }, "npcChatRelease", $.Boolean, false);

    $.Field({Static:true , Public:true }, "editSign", $.Boolean, false);

    $.Field({Static:true , Public:true }, "signText", $.String, "");

    $.Field({Static:true , Public:true }, "npcChatText", $.String, "");

    $.Field({Static:true , Public:true }, "npcChatFocus1", $.Boolean, false);

    $.Field({Static:true , Public:true }, "npcChatFocus2", $.Boolean, false);

    $.Field({Static:true , Public:true }, "npcShop", $.Int32, 0);

    $.Field({Static:false, Public:true }, "shop", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Chest")]));

    $.Field({Static:true , Public:false}, "toolTip", $asm0F.TypeRef("Terraria.Item"));

    $.Field({Static:true , Public:false}, "backSpaceCount", $.Int32, 0);

    $.Field({Static:false, Public:true }, "toggleFullscreen", $.Boolean);

    $.Field({Static:true , Public:true }, "gameMenu", $.Boolean, true);

    $.Field({Static:true , Public:true }, "loadPlayer", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Player")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.Player, 5);
      });

    $.Field({Static:true , Public:true }, "loadPlayerPath", $jsilcore.TypeRef("System.Array", [$.String]), function ($pi) {
        return JSIL.Array.New($asm06.System.String, 5);
      });

    $.Field({Static:true , Public:false}, "numLoadPlayers", $.Int32, 0);

    $.Field({Static:true , Public:true }, "playerPathName", $.String);

    $.Field({Static:true , Public:true }, "loadWorld", $jsilcore.TypeRef("System.Array", [$.String]), function ($pi) {
        return JSIL.Array.New($asm06.System.String, 5);
      });

    $.Field({Static:true , Public:true }, "loadWorldPath", $jsilcore.TypeRef("System.Array", [$.String]), function ($pi) {
        return JSIL.Array.New($asm06.System.String, 5);
      });

    $.Field({Static:true , Public:false}, "numLoadWorlds", $.Int32, 0);

    $.Field({Static:true , Public:true }, "worldPathName", $.String);

    $.Field({Static:true , Public:true }, "SavePath", $.String);

    $.Field({Static:true , Public:true }, "WorldPath", $.String, function ($pi) {
        return JSIL.ConcatString($pi.SavePath, "\\Worlds");
      });

    $.Field({Static:true , Public:true }, "PlayerPath", $.String, function ($pi) {
        return JSIL.ConcatString($pi.SavePath, "\\Players");
      });

    $.Field({Static:true , Public:false}, "inputText", $asm00.TypeRef("Microsoft.Xna.Framework.Input.KeyboardState"));

    $.Field({Static:true , Public:false}, "oldInputText", $asm00.TypeRef("Microsoft.Xna.Framework.Input.KeyboardState"));

    $.Field({Static:true , Public:true }, "invasionType", $.Int32, 0);

    $.Field({Static:true , Public:true }, "invasionX", $.Double, 0);

    $.Field({Static:true , Public:true }, "invasionSize", $.Int32, 0);

    $.Field({Static:true , Public:true }, "invasionDelay", $.Int32, 0);

    $.Field({Static:true , Public:true }, "invasionWarn", $.Int32, 0);

    $.Field({Static:true , Public:true }, "npcFrameCount", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:true , Public:false}, "mouseExit", $.Boolean, false);

    $.Field({Static:true , Public:false}, "exitScale", $.Single, 0.8);

    $.Field({Static:true , Public:true }, "clientPlayer", $asm0F.TypeRef("Terraria.Player"));

    $.Field({Static:true , Public:true }, "getIP", $.String, function ($pi) {
        return $pi.defaultIP;
      });

    $.Field({Static:true , Public:true }, "menuMultiplayer", $.Boolean, false);

    $.Field({Static:true , Public:true }, "netMode", $.Int32, 0);

    $.Field({Static:true , Public:true }, "timeOut", $.Int32, 120);

    $.Field({Static:true , Public:true }, "netPlayCounter", $.Int32);

    $.Field({Static:true , Public:true }, "lastNPCUpdate", $.Int32);

    $.Field({Static:true , Public:true }, "lastItemUpdate", $.Int32);

    $.Field({Static:true , Public:true }, "maxNPCUpdates", $.Int32, 15);

    $.Field({Static:true , Public:true }, "maxItemUpdates", $.Int32, 10);

    $.Field({Static:true , Public:true }, "cUp", $.String, "W");

    $.Field({Static:true , Public:true }, "cLeft", $.String, "A");

    $.Field({Static:true , Public:true }, "cDown", $.String, "S");

    $.Field({Static:true , Public:true }, "cRight", $.String, "D");

    $.Field({Static:true , Public:true }, "cJump", $.String, "Space");

    $.Field({Static:true , Public:true }, "cThrowItem", $.String, "Q");

    $.Field({Static:true , Public:true }, "mouseColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:true , Public:true }, "cursorColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:true , Public:true }, "cursorColorDirection", $.Int32, 1);

    $.Field({Static:true , Public:true }, "cursorAlpha", $.Single, 0);

    $.Field({Static:true , Public:true }, "cursorScale", $.Single, 0);

    $.Field({Static:true , Public:true }, "signBubble", $.Boolean, false);

    $.Field({Static:true , Public:true }, "signX", $.Int32, 0);

    $.Field({Static:true , Public:true }, "signY", $.Int32, 0);

    $.Field({Static:true , Public:true }, "hideUI", $.Boolean, false);

    $.Field({Static:true , Public:true }, "releaseUI", $.Boolean, false);

    $.Field({Static:false, Public:false}, "splashCounter", $.Int32);

    $.Field({Static:true , Public:true }, "curRelease", $.Int32, 0);

    $.Field({Static:false, Public:false}, "logoRotation", $.Single);

    $.Field({Static:false, Public:false}, "logoRotationDirection", $.Single);

    $.Field({Static:false, Public:false}, "logoRotationSpeed", $.Single);

    $.Field({Static:false, Public:false}, "logoScale", $.Single);

    $.Field({Static:false, Public:false}, "logoScaleDirection", $.Single);

    $.Field({Static:false, Public:false}, "logoScaleSpeed", $.Single);

    $.Field({Static:true , Public:false}, "maxMenuItems", $.Int32, 11);

    $.Field({Static:false, Public:false}, "menuItemScale", $jsilcore.TypeRef("System.Array", [$.Single]));

    $.Field({Static:false, Public:false}, "focusMenu", $.Int32);

    $.Field({Static:false, Public:false}, "selectedMenu", $.Int32);

    $.Field({Static:false, Public:false}, "selectedPlayer", $.Int32);

    $.Field({Static:false, Public:false}, "selectedWorld", $.Int32);

    $.Field({Static:true , Public:true }, "menuMode", $.Int32, 0);

    $.Field({Static:false, Public:false}, "textBlinkerCount", $.Int32);

    $.Field({Static:false, Public:false}, "textBlinkerState", $.Int32);

    $.Field({Static:true , Public:true }, "newWorldName", $.String, "");

    $.Field({Static:false, Public:false}, "selColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:false}, "focusColor", $.Int32);

    $.Field({Static:false, Public:false}, "colorDelay", $.Int32);

    $.Field({Static:false, Public:false}, "setKey", $.Int32);

    $.Field({Static:false, Public:false}, "bgScroll", $.Int32);


    function Main__cctor () {
      $thisType.mouseState = new $asm00.Microsoft.Xna.Framework.Input.MouseState();
      $thisType.oldMouseState = new $asm00.Microsoft.Xna.Framework.Input.MouseState();
      $thisType.keyState = new $asm00.Microsoft.Xna.Framework.Input.KeyboardState();
      $thisType.tileColor = new $asm00.Microsoft.Xna.Framework.Color();
      $thisType.screenPosition = new $asm00.Microsoft.Xna.Framework.Vector2();
      $thisType.screenLastPosition = new $asm00.Microsoft.Xna.Framework.Vector2();
      $thisType.inputText = new $asm00.Microsoft.Xna.Framework.Input.KeyboardState();
      $thisType.oldInputText = new $asm00.Microsoft.Xna.Framework.Input.KeyboardState();
      $thisType.mouseColor = new $asm00.Microsoft.Xna.Framework.Color();
      $thisType.cursorColor = new $asm00.Microsoft.Xna.Framework.Color();
      $thisType.saveTimer = 0;
      $thisType.grabSun = false;
      $thisType.debugMode = false;
      $thisType.godMode = false;
      $thisType.stopSpawns = false;
      $thisType.dumbAI = false;
      $thisType.skipMenu = false;
      $thisType.lightTiles = false;
      $thisType.verboseNetplay = false;
      $thisType.stopTimeOuts = false;
      $thisType.showSpam = false;
      $thisType.showItemOwner = false;
      $thisType.ignoreErrors = false;
      $thisType.webProtect = false;
      $thisType.showSplash = true;
      $thisType.defaultIP = "";
      $thisType.mouseState = $T00().GetState().MemberwiseClone();
      $thisType.oldMouseState = $T00().GetState().MemberwiseClone();
      $thisType.keyState = $T01().GetState().MemberwiseClone();
      $thisType.webAuth = false;
      $thisType.updateTime = 0;
      $thisType.drawTime = 0;
      $thisType.frameRate = 0;
      $thisType.frameRelease = false;
      $thisType.showFrameRate = false;
      $thisType.magmaBGFrame = 0;
      $thisType.magmaBGFrameCounter = 0;
      $thisType.leftWorld = 0;
      $thisType.rightWorld = 134400;
      $thisType.topWorld = 0;
      $thisType.bottomWorld = 38400;
      $thisType.maxTilesX = (((((($thisType.rightWorld) | 0) / 16) | 0) + 1) | 0);
      $thisType.maxTilesY = (((((($thisType.bottomWorld) | 0) / 16) | 0) + 1) | 0);
      $thisType.maxSectionsX = ((($thisType.maxTilesX | 0) / 200) | 0);
      $thisType.maxSectionsY = ((($thisType.maxTilesY | 0) / 150) | 0);
      $thisType.caveParrallax = 1;
      $thisType.liquid = JSIL.Array.New($T02(), $T02().resLiquid);
      $thisType.liquidBuffer = JSIL.Array.New($T03(), 10000);
      $thisType.statusText = "";
      $thisType.worldName = "";
      $thisType.background = 0;
      $thisType.teamColor = JSIL.Array.New($T04(), 5);
      $thisType.dayTime = true;
      $thisType.time = 13500;
      $thisType.moonPhase = 0;
      $thisType.sunModY = 0;
      $thisType.moonModY = 0;
      $thisType.grabSky = false;
      $thisType.bloodMoon = false;
      $thisType.checkForSpawns = 0;
      $thisType.helpText = 0;
      $thisType.cloudLimit = 100;
      $thisType.numClouds = ($thisType.cloudLimit | 0);
      $thisType.windSpeed = 0;
      $thisType.windSpeedSpeed = 0;
      $thisType.cloud = JSIL.Array.New($T05(), 100);
      $thisType.resetClouds = true;
      $thisType.fadeCounter = 0;
      $thisType.armorHeadTexture = JSIL.Array.New($T06(), 12);
      $thisType.armorBodyTexture = JSIL.Array.New($T06(), 10);
      $thisType.armorArmTexture = JSIL.Array.New($T06(), 10);
      $thisType.armorLegTexture = JSIL.Array.New($T06(), 10);
      $thisType.itemTexture = JSIL.Array.New($T06(), 235);
      $thisType.npcTexture = JSIL.Array.New($T06(), 44);
      $thisType.projectileTexture = JSIL.Array.New($T06(), 37);
      $thisType.goreTexture = JSIL.Array.New($T06(), 73);
      $thisType.tileTexture = JSIL.Array.New($T06(), 80);
      $thisType.wallTexture = JSIL.Array.New($T06(), 14);
      $thisType.backgroundTexture = JSIL.Array.New($T06(), 7);
      $thisType.cloudTexture = JSIL.Array.New($T06(), 4);
      $thisType.starTexture = JSIL.Array.New($T06(), 5);
      $thisType.liquidTexture = JSIL.Array.New($T06(), 2);
      $thisType.playerHairTexture = JSIL.Array.New($T06(), 17);
      $thisType.soundDig = JSIL.Array.New($T07(), 3);
      $thisType.soundInstanceDig = JSIL.Array.New($T08(), 3);
      $thisType.soundPlayerHit = JSIL.Array.New($T07(), 3);
      $thisType.soundInstancePlayerHit = JSIL.Array.New($T08(), 3);
      $thisType.soundFemaleHit = JSIL.Array.New($T07(), 3);
      $thisType.soundInstanceFemaleHit = JSIL.Array.New($T08(), 3);
      $thisType.soundItem = JSIL.Array.New($T07(), 17);
      $thisType.soundInstanceItem = JSIL.Array.New($T08(), 17);
      $thisType.soundNPCHit = JSIL.Array.New($T07(), 4);
      $thisType.soundInstanceNPCHit = JSIL.Array.New($T08(), 4);
      $thisType.soundNPCKilled = JSIL.Array.New($T07(), 4);
      $thisType.soundInstanceNPCKilled = JSIL.Array.New($T08(), 4);
      $thisType.soundZombie = JSIL.Array.New($T07(), 3);
      $thisType.soundInstanceZombie = JSIL.Array.New($T08(), 3);
      $thisType.soundRoar = JSIL.Array.New($T07(), 2);
      $thisType.soundInstanceRoar = JSIL.Array.New($T08(), 2);
      $thisType.soundSplash = JSIL.Array.New($T07(), 2);
      $thisType.soundInstanceSplash = JSIL.Array.New($T08(), 2);
      $thisType.music = JSIL.Array.New($T09(), 7);
      $thisType.musicFade = JSIL.Array.New($T0A(), 7);
      $thisType.musicVolume = 0.75;
      $thisType.soundVolume = 1;
      $thisType.wallHouse = JSIL.Array.New($T0B(), 14);
      $thisType.tileStone = JSIL.Array.New($T0B(), 80);
      $thisType.tileWaterDeath = JSIL.Array.New($T0B(), 80);
      $thisType.tileLavaDeath = JSIL.Array.New($T0B(), 80);
      $thisType.tileTable = JSIL.Array.New($T0B(), 80);
      $thisType.tileBlockLight = JSIL.Array.New($T0B(), 80);
      $thisType.tileDungeon = JSIL.Array.New($T0B(), 80);
      $thisType.tileSolidTop = JSIL.Array.New($T0B(), 80);
      $thisType.tileSolid = JSIL.Array.New($T0B(), 80);
      $thisType.tileNoAttach = JSIL.Array.New($T0B(), 80);
      $thisType.tileNoFail = JSIL.Array.New($T0B(), 80);
      $thisType.tileFrameImportant = JSIL.Array.New($T0B(), 80);
      $thisType.backgroundWidth = JSIL.Array.New($T0C(), 7);
      $thisType.backgroundHeight = JSIL.Array.New($T0C(), 7);
      $thisType.tilesLoaded = false;
      $thisType.tile = JSIL.MultidimensionalArray.New($T0D(), [0, $thisType.maxTilesX, 0, $thisType.maxTilesY]);
      $thisType.dust = JSIL.Array.New($T0E(), 2000);
      $thisType.star = JSIL.Array.New($T0F(), 130);
      $thisType.item = JSIL.Array.New($T10(), 201);
      $thisType.npc = JSIL.Array.New($T11(), 1001);
      $thisType.gore = JSIL.Array.New($T12(), 201);
      $thisType.projectile = JSIL.Array.New($T13(), 1001);
      $thisType.combatText = JSIL.Array.New($T14(), 100);
      $thisType.chest = JSIL.Array.New($T15(), 1000);
      $thisType.sign = JSIL.Array.New($T16(), 1000);
      $thisType.screenWidth = 800;
      $thisType.screenHeight = 600;
      $thisType.chatLength = 600;
      $thisType.chatMode = false;
      $thisType.chatRelease = false;
      $thisType.numChatLines = 7;
      $thisType.chatText = "";
      $thisType.chatLine = JSIL.Array.New($T17(), $thisType.numChatLines);
      $thisType.inputTextEnter = false;
      $thisType.hotbarScale = JSIL.Array.New($T0A(), [1, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75]);
      $thisType.mouseTextColor = 0;
      $thisType.mouseTextColorChange = 1;
      $thisType.mouseLeftRelease = false;
      $thisType.mouseRightRelease = false;
      $thisType.playerInventory = false;
      $thisType.stackCounter = 0;
      $thisType.stackDelay = 7;
      $thisType.mouseItem = new ($T10())();
      $thisType.inventoryScale = 0.75;
      $thisType.hasFocus = true;
      $thisType.recipe = JSIL.Array.New($T18(), $T18().maxRecipes);
      $thisType.availableRecipe = JSIL.Array.New($T0C(), $T18().maxRecipes);
      $thisType.availableRecipeY = JSIL.Array.New($T0A(), $T18().maxRecipes);
      $thisType.myPlayer = 0;
      $thisType.player = JSIL.Array.New($T19(), 9);
      $thisType.npcChatRelease = false;
      $thisType.editSign = false;
      $thisType.signText = "";
      $thisType.npcChatText = "";
      $thisType.npcChatFocus1 = false;
      $thisType.npcChatFocus2 = false;
      $thisType.npcShop = 0;
      $thisType.toolTip = new ($T10())();
      $thisType.backSpaceCount = 0;
      $thisType.gameMenu = true;
      $thisType.loadPlayer = JSIL.Array.New($T19(), 5);
      $thisType.loadPlayerPath = JSIL.Array.New($T1A(), 5);
      $thisType.numLoadPlayers = 0;
      $thisType.loadWorld = JSIL.Array.New($T1A(), 5);
      $thisType.loadWorldPath = JSIL.Array.New($T1A(), 5);
      $thisType.numLoadWorlds = 0;
      $thisType.SavePath = (JSIL.ConcatString($T1B().GetFolderPath($T1C().MyDocuments), "\\My Games\\Terraria"));
      $thisType.WorldPath = (JSIL.ConcatString($thisType.SavePath, "\\Worlds"));
      $thisType.PlayerPath = (JSIL.ConcatString($thisType.SavePath, "\\Players"));
      $thisType.invasionType = 0;
      $thisType.invasionX = 0;
      $thisType.invasionSize = 0;
      $thisType.invasionDelay = 0;
      $thisType.invasionWarn = 0;
      $thisType.npcFrameCount = JSIL.Array.New($T0C(), [1, 2, 2, 3, 6, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 16, 14, 16, 14, 14, 16, 2, 10, 1, 16, 16, 16, 3, 1, 14, 3, 1, 3, 1, 1, 16, 16, 1, 1, 1, 3, 3]);
      $thisType.mouseExit = false;
      $thisType.exitScale = 0.8;
      $thisType.clientPlayer = new ($T19())();
      $thisType.getIP = $thisType.defaultIP;
      $thisType.menuMultiplayer = false;
      $thisType.netMode = 0;
      $thisType.timeOut = 120;
      $thisType.maxNPCUpdates = 15;
      $thisType.maxItemUpdates = 10;
      $thisType.cUp = "W";
      $thisType.cLeft = "A";
      $thisType.cDown = "S";
      $thisType.cRight = "D";
      $thisType.cJump = "Space";
      $thisType.cThrowItem = "Q";
      $thisType.mouseColor = $S00().Construct(255, 50, 95);
      $thisType.cursorColor = $T04().get_White().MemberwiseClone();
      $thisType.cursorColorDirection = 1;
      $thisType.cursorAlpha = 0;
      $thisType.cursorScale = 0;
      $thisType.signBubble = false;
      $thisType.signX = 0;
      $thisType.signY = 0;
      $thisType.hideUI = false;
      $thisType.releaseUI = false;
      $thisType.curRelease = 0;
      $thisType.maxMenuItems = 11;
      $thisType.menuMode = 0;
      $thisType.newWorldName = "";
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Main__cctor
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Program */ 

(function Program$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Steam)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.Microsoft.Xna.Framework.Game)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };


  function Program_Main (args) {
    var main = new ($T01())();
    try {
      $T02().Init();
      if ($T02().SteamInit) {
        main.Run();
      }
    } finally {
      if (main !== null) {
        $IM00().Call(main, null);
      }
    }
  }; 

  JSIL.MakeStaticClass("Terraria.Program", false, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "Main", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String])), 
      Program_Main
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.WorldGen */ 

(function WorldGen$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.DateTime)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.Sign)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.Terraria.Liquid)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.Terraria.LiquidBuffer)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.Terraria.Projectile)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Threading.ThreadPool)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Threading.WaitCallback)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0F.Terraria.Chest)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm06.System.IO.FileStream)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.System.IO.FileMode)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.IO.BinaryReader)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm06.System.IO.File)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm06.System.IO.BinaryWriter)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm06.System.Threading.Monitor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, [$asm06.System.Int32]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.FileStream, [$asm06.System.String, $asm06.System.IO.FileMode]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryReader, [$asm06.System.IO.Stream]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryWriter, [$asm06.System.IO.Stream]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Double")))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Boolean")))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Byte")))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int16")))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Single")))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Object")))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };


  function WorldGen__ctor () {
  }; 

  function WorldGen_AddBuriedChest (i, j, contain) {
    if ($thisType.genRand === null) {
      $thisType.genRand = $S01().Construct($T06().get_Now().get_Ticks().ToNumber(4294967295, true));
    }

    for (var k = (j | 0); k < ($T00().maxTilesY | 0); ) {
      if (!(!$T00().tile.Get(i, k).active || !$T00().tileSolid[$T00().tile.Get(i, k).type])) {
        var num = k;
        var num2 = ($thisType.PlaceChest((((i | 0) - 1) | 0), ((num - 1) | 0), 21) | 0);
        if (num2 >= 0) {

          for (var num3 = 0; num3 === 0; ) {
            if ((contain | 0) > 0) {
              $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], contain);
              num3 = ((num3 + 1) | 0);
            } else {
              var num4 = ($thisType.genRand.Next(7) | 0);
              if (num4 === 0) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 49);
              }
              if (num4 === 1) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 50);
              }
              if (num4 === 2) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 52);
              }
              if (num4 === 3) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 53);
              }
              if (num4 === 4) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 54);
              }
              if (num4 === 5) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 55);
              }
              if (num4 === 6) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 51);
                $T00().chest[num2].item[num3].stack = ((($thisType.genRand.Next(26) | 0) + 25) | 0);
              }
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(3) | 0) === 0) {
              $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 167);
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(2) | 0) === 0) {
              var num5 = ($thisType.genRand.Next(4) | 0);
              var stack = ((($thisType.genRand.Next(8) | 0) + 3) | 0);
              if (num5 === 0) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 19);
              }
              if (num5 === 1) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 20);
              }
              if (num5 === 2) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 21);
              }
              if (num5 === 3) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 22);
              }
              $T00().chest[num2].item[num3].stack = stack;
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(2) | 0) === 0) {
              var num6 = ($thisType.genRand.Next(2) | 0);
              var stack2 = ((($thisType.genRand.Next(26) | 0) + 25) | 0);
              if (num6 === 0) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 40);
              }
              if (num6 === 1) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 42);
              }
              $T00().chest[num2].item[num3].stack = stack2;
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(2) | 0) === 0) {
              var num7 = ($thisType.genRand.Next(1) | 0);
              var stack3 = ((($thisType.genRand.Next(3) | 0) + 3) | 0);
              if (num7 === 0) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 28);
              }
              $T00().chest[num2].item[num3].stack = stack3;
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(2) | 0) === 0) {
              var num8 = ($thisType.genRand.Next(2) | 0);
              var stack4 = ((($thisType.genRand.Next(11) | 0) + 10) | 0);
              if (num8 === 0) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 8);
              }
              if (num8 === 1) {
                $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 31);
              }
              $T00().chest[num2].item[num3].stack = stack4;
              num3 = ((num3 + 1) | 0);
            }
            if (($thisType.genRand.Next(2) | 0) === 0) {
              $S02().CallVirtual("SetDefaults", null, $T00().chest[num2].item[num3], 73);
              $T00().chest[num2].item[num3].stack = ($thisType.genRand.Next(1, 3) | 0);
              num3 = ((num3 + 1) | 0);
            }
          }
          return true;
        }
        return false;
      } else {
        k = ((k + 1) | 0);
      }
    }
    return false;
  }; 

  function WorldGen_AddHellHouses () {
    var num = ((+($T00().maxTilesX) * 0.25) | 0);

    for (var i = num; i < ((($T00().maxTilesX | 0) - num) | 0); i = ((i + 1) | 0)) {

      for (var num2 = ((($T00().maxTilesY | 0) - 40) | 0); $T00().tile.Get(i, num2).active || (($T00().tile.Get(i, num2).liquid | 0) > 0); num2 = ((num2 - 1) | 0)) {
      }
      if ($T00().tile.Get(i, ((num2 + 1) | 0)).active) {
        $thisType.HellHouse(i, num2);
        i = ((i + ($thisType.genRand.Next(15, 80) | 0)) | 0);
      }
    }
  }; 

  function WorldGen_AddLifeCrystal (i, j) {

    for (var k = (j | 0); k < ($T00().maxTilesY | 0); ) {
      if (!(!$T00().tile.Get(i, k).active || !$T00().tileSolid[$T00().tile.Get(i, k).type])) {
        var num = ((k - 1) | 0);
        if (!(!$T00().tile.Get(i, ((num - 1) | 0)).lava && !$T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).lava)) {
          return false;
        }
        if (!$thisType.EmptyTileCheck(
            (((i | 0) - 1) | 0), 
            i, 
            ((num - 1) | 0), 
            num, 
            -1
          )) {
          return false;
        }
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).active = true;
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).type = 12;
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 0;
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 0;
        $T00().tile.Get(i, ((num - 1) | 0)).active = true;
        $T00().tile.Get(i, ((num - 1) | 0)).type = 12;
        $T00().tile.Get(i, ((num - 1) | 0)).frameX = 18;
        $T00().tile.Get(i, ((num - 1) | 0)).frameY = 0;
        $T00().tile.Get((((i | 0) - 1) | 0), num).active = true;
        $T00().tile.Get((((i | 0) - 1) | 0), num).type = 12;
        $T00().tile.Get((((i | 0) - 1) | 0), num).frameX = 0;
        $T00().tile.Get((((i | 0) - 1) | 0), num).frameY = 18;
        $T00().tile.Get(i, num).active = true;
        $T00().tile.Get(i, num).type = 12;
        $T00().tile.Get(i, num).frameX = 18;
        $T00().tile.Get(i, num).frameY = 18;
        return true;
      } else {
        k = ((k + 1) | 0);
      }
    }
    return false;
  }; 

  function WorldGen_AddPlants () {

    for (var i = 0; i < ($T00().maxTilesX | 0); i = ((i + 1) | 0)) {

      for (var j = 1; j < ($T00().maxTilesY | 0); j = ((j + 1) | 0)) {
        if (!((($T00().tile.Get(i, j).type | 0) !== 2) || !$T00().tile.Get(i, j).active)) {
          if (!$T00().tile.Get(i, ((j - 1) | 0)).active) {
            $thisType.PlaceTile(
              i, 
              ((j - 1) | 0), 
              3, 
              true, 
              false, 
              -1
            );
          }
        } else if (!((($T00().tile.Get(i, j).type | 0) !== 23) || 
            !$T00().tile.Get(i, j).active || $T00().tile.Get(i, ((j - 1) | 0)).active)) {
          $thisType.PlaceTile(
            i, 
            ((j - 1) | 0), 
            24, 
            true, 
            false, 
            -1
          );
        }
      }
    }
  }; 

  function WorldGen_AddShadowOrb (x, y) {
    if (!(((x | 0) >= 10) && ((x | 0) <= ((($T00().maxTilesX | 0) - 10) | 0)))) {
      return;
    }
    if (!(((y | 0) >= 10) && ((y | 0) <= ((($T00().maxTilesY | 0) - 10) | 0)))) {
      return;
    }
    $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).active = true;
    $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).type = 31;
    $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameX = 0;
    $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
    $T00().tile.Get(x, (((y | 0) - 1) | 0)).active = true;
    $T00().tile.Get(x, (((y | 0) - 1) | 0)).type = 31;
    $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameX = 18;
    $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameY = 0;
    $T00().tile.Get((((x | 0) - 1) | 0), y).active = true;
    $T00().tile.Get((((x | 0) - 1) | 0), y).type = 31;
    $T00().tile.Get((((x | 0) - 1) | 0), y).frameX = 0;
    $T00().tile.Get((((x | 0) - 1) | 0), y).frameY = 18;
    $T00().tile.Get(x, y).active = true;
    $T00().tile.Get(x, y).type = 31;
    $T00().tile.Get(x, y).frameX = 18;
    $T00().tile.Get(x, y).frameY = 18;
  }; 

  function WorldGen_AddTrees () {

    for (var i = 1; i < ((($T00().maxTilesX | 0) - 1) | 0); i = ((i + 1) | 0)) {

      for (var num = 20; +num < +$T00().worldSurface; num = ((num + 1) | 0)) {
        $thisType.GrowTree(i, num);
      }
    }
  }; 

  function WorldGen_CaveOpenater (i, j) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(7, 12));
    var num2 = 1;
    if (($thisType.genRand.Next(2) | 0) === 0) {
      num2 = -1;
    }
    value.X = +i;
    value.Y = +j;
    var k = 100;
    value2.Y = 0;
    value2.X = +num2;

    while (k > 0) {
      if (($T00().tile.Get(((value.X) | 0), ((value.Y) | 0)).wall | 0) === 0) {
        k = 0;
      }
      k = ((k - 1) | 0);
      var num3 = ((value.X - (num * 0.5)) | 0);
      var num4 = ((value.X + (num * 0.5)) | 0);
      var num5 = ((value.Y - (num * 0.5)) | 0);
      var num6 = ((value.Y + (num * 0.5)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      var num7 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var l = num3; l < num4; l = ((l + 1) | 0)) {

        for (var m = num5; m < num6; m = ((m + 1) | 0)) {
          var num8 = (Math.abs((+l - +value.X)));
          var num9 = (Math.abs((+m - +value.Y)));
          var num10 = (Math.sqrt((num8 * num8) + (num9 * num9)));
          if (num10 < (num7 * 0.4)) {
            $T00().tile.Get(l, m).active = false;
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value2.X > (+num2 + 0.5)) {
        value2.X = +num2 + 0.5;
      }
      if (+value2.X < (+num2 - 0.5)) {
        value2.X = +num2 - 0.5;
      }
      if (+value2.Y > 0) {
        value2.Y = 0;
      }
      if (value2.Y < -0.5) {
        value2.Y = -0.5;
      }
    }
  }; 

  function WorldGen_Cavinator (i, j, steps) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(7, 15));
    var num2 = 1;
    if (($thisType.genRand.Next(2) | 0) === 0) {
      num2 = -1;
    }
    value.X = +i;
    value.Y = +j;
    var k = ($thisType.genRand.Next(20, 40) | 0);
    value2.Y = +($thisType.genRand.Next(10, 20)) * 0.01;
    value2.X = +num2;

    while (k > 0) {
      k = ((k - 1) | 0);
      var num3 = ((value.X - (num * 0.5)) | 0);
      var num4 = ((value.X + (num * 0.5)) | 0);
      var num5 = ((value.Y - (num * 0.5)) | 0);
      var num6 = ((value.Y + (num * 0.5)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      var num7 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var l = num3; l < num4; l = ((l + 1) | 0)) {

        for (var m = num5; m < num6; m = ((m + 1) | 0)) {
          var num8 = (Math.abs((+l - +value.X)));
          var num9 = (Math.abs((+m - +value.Y)));
          var num10 = (Math.sqrt((num8 * num8) + (num9 * num9)));
          if (num10 < (num7 * 0.4)) {
            $T00().tile.Get(l, m).active = false;
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value2.X > (+num2 + 0.5)) {
        value2.X = +num2 + 0.5;
      }
      if (+value2.X < (+num2 - 0.5)) {
        value2.X = +num2 - 0.5;
      }
      if (+value2.Y > 2) {
        value2.Y = 2;
      }
      if (+value2.Y < 0) {
        value2.Y = 0;
      }
    }
    if (!(((steps | 0) <= 0) || (+(((value.Y) | 0)) >= (+$T00().rockLayer + 50)))) {
      $thisType.Cavinator(((value.X) | 0), ((value.Y) | 0), (((steps | 0) - 1) | 0));
    }
  }; 

  function WorldGen_ChasmRunner (i, j, steps, makeOrb) {
    var value = new ($T04())(), value2 = new ($T04())();
    var flag = false;
    var flag2 = false;
    if (!makeOrb) {
      flag = true;
    }
    var num = +steps;
    value.X = +i;
    value.Y = +j;
    value2.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.Y = (+($thisType.genRand.Next(11)) * 0.2) + 0.5;

    for (var num3 = +(($thisType.genRand.Next(5) | 0) + 7); num3 > 0; ) {
      if (num > 0) {
        num3 += +($thisType.genRand.Next(3));
        num3 -= +($thisType.genRand.Next(3));
        if (num3 < 7) {
          num3 = 7;
        }
        if (num3 > 20) {
          num3 = 20;
        }
        if (!((num !== 1) || (num3 >= 10))) {
          num3 = 10;
        }
      } else {
        num3 -= +($thisType.genRand.Next(4));
      }
      if (!((value.Y <= +$T00().rockLayer) || (num <= 0))) {
        num = 0;
      }
      num -= 1;
      if (num > +5) {
        var num4 = ((value.X - (num3 * 0.5)) | 0);
        var num5 = ((value.X + (num3 * 0.5)) | 0);
        var num6 = ((value.Y - (num3 * 0.5)) | 0);
        var num7 = ((value.Y + (num3 * 0.5)) | 0);
        if (num4 < 0) {
          num4 = 0;
        }
        if (num5 > ((($T00().maxTilesX | 0) - 1) | 0)) {
          num5 = ((($T00().maxTilesX | 0) - 1) | 0);
        }
        if (num6 < 0) {
          num6 = 0;
        }
        if (num7 > ($T00().maxTilesY | 0)) {
          num7 = ($T00().maxTilesY | 0);
        }

        for (var k = num4; k < num5; k = ((k + 1) | 0)) {

          for (var l = num6; l < num7; l = ((l + 1) | 0)) {
            if ((Math.abs((+k - +value.X))) + (Math.abs((+l - +value.Y))) < ((num3 * 0.5) * (1 + (+($thisType.genRand.Next(-10, 11)) * 0.015)))) {
              $T00().tile.Get(k, l).active = false;
            }
          }
        }
      }
      if (num <= 0) {
        if (!flag) {
          flag = true;
          $thisType.AddShadowOrb(((value.X) | 0), ((value.Y) | 0));
        } else if (!flag2) {
          flag2 = false;
          var flag3 = false;
          var num8 = 0;

          while (!flag3) {
            var num9 = ($thisType.genRand.Next(((((value.X) | 0) - 25) | 0), ((((value.X) | 0) + 25) | 0)) | 0);
            var num10 = ($thisType.genRand.Next(((((value.Y) | 0) - 50) | 0), ((value.Y) | 0)) | 0);
            if (num9 < 5) {
              num9 = 5;
            }
            if (num9 > ((($T00().maxTilesX | 0) - 5) | 0)) {
              num9 = ((($T00().maxTilesX | 0) - 5) | 0);
            }
            if (num10 < 5) {
              num10 = 5;
            }
            if (num10 > ((($T00().maxTilesY | 0) - 5) | 0)) {
              num10 = ((($T00().maxTilesY | 0) - 5) | 0);
            }
            if (+num10 > +$T00().worldSurface) {
              $thisType.Place3x2(num9, num10, 26);
              if (($T00().tile.Get(num9, num10).type | 0) === 26) {
                flag3 = true;
              } else {
                num8 = ((num8 + 1) | 0);
                if (num8 >= 10000) {
                  flag3 = true;
                }
              }
            } else {
              flag3 = true;
            }
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.01);
      if (value2.X > 0.3) {
        value2.X = 0.3;
      }
      if (value2.X < -0.3) {
        value2.X = -0.3;
      }
      num4 = ((value.X - (num3 * 1.1)) | 0);
      num5 = ((value.X + (num3 * 1.1)) | 0);
      num6 = ((value.Y - (num3 * 1.1)) | 0);
      num7 = ((value.Y + (num3 * 1.1)) | 0);
      if (num4 < 1) {
        num4 = 1;
      }
      if (num5 > ((($T00().maxTilesX | 0) - 1) | 0)) {
        num5 = ((($T00().maxTilesX | 0) - 1) | 0);
      }
      if (num6 < 0) {
        num6 = 0;
      }
      if (num7 > ($T00().maxTilesY | 0)) {
        num7 = ($T00().maxTilesY | 0);
      }

      for (var m = num4; m < num5; m = ((m + 1) | 0)) {

        for (var n = num6; n < num7; n = ((n + 1) | 0)) {
          if ((Math.abs((+m - +value.X))) + (Math.abs((+n - +value.Y))) < ((num3 * 1.1) * (1 + (+($thisType.genRand.Next(-10, 11)) * 0.015)))) {
            if (!((($T00().tile.Get(m, n).type | 0) === 25) || (n <= (((j | 0) + ($thisType.genRand.Next(3, 20) | 0)) | 0)))) {
              $T00().tile.Get(m, n).active = true;
            }
            if ((steps | 0) <= 5) {
              $T00().tile.Get(m, n).active = true;
            }
            if (($T00().tile.Get(m, n).type | 0) !== 31) {
              $T00().tile.Get(m, n).type = 25;
            }
            if (($T00().tile.Get(m, n).wall | 0) === 2) {
              $T00().tile.Get(m, n).wall = 0;
            }
          }
        }
      }

      for (var num11 = num4; num11 < num5; num11 = ((num11 + 1) | 0)) {

        for (var num12 = num6; num12 < num7; num12 = ((num12 + 1) | 0)) {
          if ((Math.abs((+num11 - +value.X))) + (Math.abs((+num12 - +value.Y))) < ((num3 * 1.1) * (1 + (+($thisType.genRand.Next(-10, 11)) * 0.015)))) {
            if (($T00().tile.Get(num11, num12).type | 0) !== 31) {
              $T00().tile.Get(num11, num12).type = 25;
            }
            if ((steps | 0) <= 5) {
              $T00().tile.Get(num11, num12).active = true;
            }
            if (num12 > (((j | 0) + ($thisType.genRand.Next(3, 20) | 0)) | 0)) {
              $thisType.PlaceWall(num11, num12, 3, true);
            }
          }
        }
      }
    }
  }; 

  function WorldGen_Check1x2 (x, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var num = (j | 0);
    var flag = true;
    if ($T00().tile.Get(x, num) === null) {
      $T00().tile.Set(x, num, new ($T0D())());
    }
    if ($T00().tile.Get(x, ((num + 1) | 0)) === null) {
      $T00().tile.Set(x, ((num + 1) | 0), new ($T0D())());
    }
    if (($T00().tile.Get(x, num).frameY | 0) === 18) {
      num = ((num - 1) | 0);
    }
    if ($T00().tile.Get(x, num) === null) {
      $T00().tile.Set(x, num, new ($T0D())());
    }
    if (!((($T00().tile.Get(x, num).frameY | 0) !== 0) || 
        (($T00().tile.Get(x, ((num + 1) | 0)).frameY | 0) !== 18) || 
        (($T00().tile.Get(x, num).type | 0) !== (type | 0)) || (($T00().tile.Get(x, ((num + 1) | 0)).type | 0) !== (type | 0)))) {
      flag = false;
    }
    if ($T00().tile.Get(x, ((num + 2) | 0)) === null) {
      $T00().tile.Set(x, ((num + 2) | 0), new ($T0D())());
    }
    if (!($T00().tile.Get(x, ((num + 2) | 0)).active && $T00().tileSolid[$T00().tile.Get(x, ((num + 2) | 0)).type])) {
      flag = true;
    }
    if (!((($T00().tile.Get(x, ((num + 2) | 0)).type | 0) === 2) || (($T00().tile.Get(x, num).type | 0) !== 20))) {
      flag = true;
    }
    if (flag) {
      $thisType.destroyObject = true;
      if (($T00().tile.Get(x, num).type | 0) === (type | 0)) {
        $thisType.KillTile(
          x, 
          num, 
          false, 
          false, 
          false
        );
      }
      if (($T00().tile.Get(x, ((num + 1) | 0)).type | 0) === (type | 0)) {
        $thisType.KillTile(
          x, 
          ((num + 1) | 0), 
          false, 
          false, 
          false
        );
      }
      if ((type | 0) === 15) {
        $T08().NewItem(
          Math.imul(x, 16), 
          Math.imul(num, 16), 
          32, 
          32, 
          34, 
          1, 
          false
        );
      }
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_Check1x2Top (x, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var num = (j | 0);
    var flag = true;
    if ($T00().tile.Get(x, num) === null) {
      $T00().tile.Set(x, num, new ($T0D())());
    }
    if ($T00().tile.Get(x, ((num + 1) | 0)) === null) {
      $T00().tile.Set(x, ((num + 1) | 0), new ($T0D())());
    }
    if (($T00().tile.Get(x, num).frameY | 0) === 18) {
      num = ((num - 1) | 0);
    }
    if ($T00().tile.Get(x, num) === null) {
      $T00().tile.Set(x, num, new ($T0D())());
    }
    if (!((($T00().tile.Get(x, num).frameY | 0) !== 0) || 
        (($T00().tile.Get(x, ((num + 1) | 0)).frameY | 0) !== 18) || 
        (($T00().tile.Get(x, num).type | 0) !== (type | 0)) || (($T00().tile.Get(x, ((num + 1) | 0)).type | 0) !== (type | 0)))) {
      flag = false;
    }
    if ($T00().tile.Get(x, ((num - 1) | 0)) === null) {
      $T00().tile.Set(x, ((num - 1) | 0), new ($T0D())());
    }
    if (!($T00().tile.Get(x, ((num - 1) | 0)).active && 
        $T00().tileSolid[$T00().tile.Get(x, ((num - 1) | 0)).type] && !$T00().tileSolidTop[$T00().tile.Get(x, ((num - 1) | 0)).type])) {
      flag = true;
    }
    if (flag) {
      $thisType.destroyObject = true;
      if (($T00().tile.Get(x, num).type | 0) === (type | 0)) {
        $thisType.KillTile(
          x, 
          num, 
          false, 
          false, 
          false
        );
      }
      if (($T00().tile.Get(x, ((num + 1) | 0)).type | 0) === (type | 0)) {
        $thisType.KillTile(
          x, 
          ((num + 1) | 0), 
          false, 
          false, 
          false
        );
      }
      if ((type | 0) === 42) {
        $T08().NewItem(
          Math.imul(x, 16), 
          Math.imul(num, 16), 
          32, 
          32, 
          136, 
          1, 
          false
        );
      }
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_Check2x1 (i, y, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var num = (i | 0);
    var flag = true;
    if ($T00().tile.Get(num, y) === null) {
      $T00().tile.Set(num, y, new ($T0D())());
    }
    if ($T00().tile.Get(((num + 1) | 0), y) === null) {
      $T00().tile.Set(((num + 1) | 0), y, new ($T0D())());
    }
    if ($T00().tile.Get(num, (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(num, (((y | 0) + 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(((num + 1) | 0), (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(((num + 1) | 0), (((y | 0) + 1) | 0), new ($T0D())());
    }
    if (($T00().tile.Get(num, y).frameX | 0) === 18) {
      num = ((num - 1) | 0);
    }
    if ($T00().tile.Get(num, y) === null) {
      $T00().tile.Set(num, y, new ($T0D())());
    }
    if (!((($T00().tile.Get(num, y).frameX | 0) !== 0) || 
        (($T00().tile.Get(((num + 1) | 0), y).frameX | 0) !== 18) || 
        (($T00().tile.Get(num, y).type | 0) !== (type | 0)) || (($T00().tile.Get(((num + 1) | 0), y).type | 0) !== (type | 0)))) {
      flag = false;
    }
    if ((type | 0) === 29) {
      if (!($T00().tile.Get(num, (((y | 0) + 1) | 0)).active && $T00().tileTable[$T00().tile.Get(num, (((y | 0) + 1) | 0)).type])) {
        flag = true;
      }
      if (!($T00().tile.Get(((num + 1) | 0), (((y | 0) + 1) | 0)).active && $T00().tileTable[$T00().tile.Get(((num + 1) | 0), (((y | 0) + 1) | 0)).type])) {
        flag = true;
      }
    } else {
      if (!($T00().tile.Get(num, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(num, (((y | 0) + 1) | 0)).type])) {
        flag = true;
      }
      if (!($T00().tile.Get(((num + 1) | 0), (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(((num + 1) | 0), (((y | 0) + 1) | 0)).type])) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;
      if (($T00().tile.Get(num, y).type | 0) === (type | 0)) {
        $thisType.KillTile(
          num, 
          y, 
          false, 
          false, 
          false
        );
      }
      if (($T00().tile.Get(((num + 1) | 0), y).type | 0) === (type | 0)) {
        $thisType.KillTile(
          ((num + 1) | 0), 
          y, 
          false, 
          false, 
          false
        );
      }
      if ((type | 0) === 16) {
        $T08().NewItem(
          Math.imul(num, 16), 
          Math.imul(y, 16), 
          32, 
          32, 
          35, 
          1, 
          false
        );
      }
      if ((type | 0) === 18) {
        $T08().NewItem(
          Math.imul(num, 16), 
          Math.imul(y, 16), 
          32, 
          32, 
          36, 
          1, 
          false
        );
      }
      if ((type | 0) === 29) {
        $T08().NewItem(
          Math.imul(num, 16), 
          Math.imul(y, 16), 
          32, 
          32, 
          87, 
          1, 
          false
        );
        $T00().PlaySound(13, Math.imul(i, 16), Math.imul(y, 16), 1);
      }
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_Check3x2 (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var num = (((i | 0) + Math.imul(((($T00().tile.Get(i, j).frameX | 0) / 18) | 0), -1)) | 0);
    var num2 = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    for (var k = num; k < ((num + 3) | 0); k = ((k + 1) | 0)) {

      for (var l = num2; l < ((num2 + 2) | 0); l = ((l + 1) | 0)) {
        if ($T00().tile.Get(k, l) === null) {
          $T00().tile.Set(k, l, new ($T0D())());
        }
        if (!($T00().tile.Get(k, l).active && 
            (($T00().tile.Get(k, l).type | 0) === (type | 0)) && 
            (($T00().tile.Get(k, l).frameX | 0) === Math.imul(((k - num) | 0), 18)) && (($T00().tile.Get(k, l).frameY | 0) === Math.imul(((l - num2) | 0), 18)))) {
          flag = true;
        }
      }
      if ($T00().tile.Get(k, ((num2 + 2) | 0)) === null) {
        $T00().tile.Set(k, ((num2 + 2) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(k, ((num2 + 2) | 0)).active && $T00().tileSolid[$T00().tile.Get(k, ((num2 + 2) | 0)).type])) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var m = num; m < ((num + 3) | 0); m = ((m + 1) | 0)) {

        for (var n = num2; n < ((num2 + 3) | 0); n = ((n + 1) | 0)) {
          if (!((($T00().tile.Get(m, n).type | 0) !== (type | 0)) || !$T00().tile.Get(m, n).active)) {
            $thisType.KillTile(
              m, 
              n, 
              false, 
              false, 
              false
            );
          }
        }
      }
      if ((type | 0) === 14) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          32, 
          1, 
          false
        );
      } else if ((type | 0) === 17) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          33, 
          1, 
          false
        );
      } else if ((type | 0) === 77) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          221, 
          1, 
          false
        );
      }
      $thisType.destroyObject = false;

      for (var num3 = ((num - 1) | 0); num3 < ((num + 4) | 0); num3 = ((num3 + 1) | 0)) {

        for (var num4 = ((num2 - 1) | 0); num4 < ((num2 + 4) | 0); num4 = ((num4 + 1) | 0)) {
          $thisType.TileFrame(num3, num4, false, false);
        }
      }
    }
  }; 

  function WorldGen_Check3x3 (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var num = (((i | 0) + Math.imul(((($T00().tile.Get(i, j).frameX | 0) / 18) | 0), -1)) | 0);
    var num2 = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    for (var k = num; k < ((num + 3) | 0); k = ((k + 1) | 0)) {

      for (var l = num2; l < ((num2 + 3) | 0); l = ((l + 1) | 0)) {
        if ($T00().tile.Get(k, l) === null) {
          $T00().tile.Set(k, l, new ($T0D())());
        }
        if (!($T00().tile.Get(k, l).active && 
            (($T00().tile.Get(k, l).type | 0) === (type | 0)) && 
            (($T00().tile.Get(k, l).frameX | 0) === Math.imul(((k - num) | 0), 18)) && (($T00().tile.Get(k, l).frameY | 0) === Math.imul(((l - num2) | 0), 18)))) {
          flag = true;
        }
      }
    }
    if ($T00().tile.Get(((num + 1) | 0), ((num2 - 1) | 0)) === null) {
      $T00().tile.Set(((num + 1) | 0), ((num2 - 1) | 0), new ($T0D())());
    }
    if (!($T00().tile.Get(((num + 1) | 0), ((num2 - 1) | 0)).active && 
        $T00().tileSolid[$T00().tile.Get(((num + 1) | 0), ((num2 - 1) | 0)).type] && !$T00().tileSolidTop[$T00().tile.Get(((num + 1) | 0), ((num2 - 1) | 0)).type])) {
      flag = true;
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var m = num; m < ((num + 3) | 0); m = ((m + 1) | 0)) {

        for (var n = num2; n < ((num2 + 3) | 0); n = ((n + 1) | 0)) {
          if (!((($T00().tile.Get(m, n).type | 0) !== (type | 0)) || !$T00().tile.Get(m, n).active)) {
            $thisType.KillTile(
              m, 
              n, 
              false, 
              false, 
              false
            );
          }
        }
      }
      if ((type | 0) === 34) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          106, 
          1, 
          false
        );
      } else if ((type | 0) === 35) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          107, 
          1, 
          false
        );
      } else if ((type | 0) === 36) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          108, 
          1, 
          false
        );
      }
      $thisType.destroyObject = false;

      for (var num3 = ((num - 1) | 0); num3 < ((num + 4) | 0); num3 = ((num3 + 1) | 0)) {

        for (var num4 = ((num2 - 1) | 0); num4 < ((num2 + 4) | 0); num4 = ((num4 + 1) | 0)) {
          $thisType.TileFrame(num3, num4, false, false);
        }
      }
    }
  }; 

  function WorldGen_Check4x2 (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var num = (((i | 0) + Math.imul(((($T00().tile.Get(i, j).frameX | 0) / 18) | 0), -1)) | 0);
    if (!(((type | 0) !== 79) || (($T00().tile.Get(i, j).frameX | 0) < 72))) {
      num = ((num + 4) | 0);
    }
    var num2 = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    for (var k = num; k < ((num + 4) | 0); k = ((k + 1) | 0)) {

      for (var l = num2; l < ((num2 + 2) | 0); l = ((l + 1) | 0)) {
        var num3 = Math.imul(((k - num) | 0), 18);
        if (!(((type | 0) !== 79) || (($T00().tile.Get(i, j).frameX | 0) < 72))) {
          num3 = Math.imul(((((k - num) | 0) + 4) | 0), 18);
        }
        if ($T00().tile.Get(k, l) === null) {
          $T00().tile.Set(k, l, new ($T0D())());
        }
        if (!($T00().tile.Get(k, l).active && 
            (($T00().tile.Get(k, l).type | 0) === (type | 0)) && 
            (($T00().tile.Get(k, l).frameX | 0) === num3) && (($T00().tile.Get(k, l).frameY | 0) === Math.imul(((l - num2) | 0), 18)))) {
          flag = true;
        }
      }
      if ($T00().tile.Get(k, ((num2 + 2) | 0)) === null) {
        $T00().tile.Set(k, ((num2 + 2) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(k, ((num2 + 2) | 0)).active && $T00().tileSolid[$T00().tile.Get(k, ((num2 + 2) | 0)).type])) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var m = num; m < ((num + 4) | 0); m = ((m + 1) | 0)) {

        for (var n = num2; n < ((num2 + 3) | 0); n = ((n + 1) | 0)) {
          if (!((($T00().tile.Get(m, n).type | 0) !== (type | 0)) || !$T00().tile.Get(m, n).active)) {
            $thisType.KillTile(
              m, 
              n, 
              false, 
              false, 
              false
            );
          }
        }
      }
      if ((type | 0) === 79) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          32, 
          32, 
          224, 
          1, 
          false
        );
      }
      $thisType.destroyObject = false;

      for (var num4 = ((num - 1) | 0); num4 < ((num + 4) | 0); num4 = ((num4 + 1) | 0)) {

        for (var num5 = ((num2 - 1) | 0); num5 < ((num2 + 4) | 0); num5 = ((num5 + 1) | 0)) {
          $thisType.TileFrame(num4, num5, false, false);
        }
      }
    }
  }; 

  function WorldGen_CheckChest (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var num = (((i | 0) + Math.imul(((($T00().tile.Get(i, j).frameX | 0) / 18) | 0), -1)) | 0);
    var num2 = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    for (var k = num; k < ((num + 2) | 0); k = ((k + 1) | 0)) {

      for (var l = num2; l < ((num2 + 2) | 0); l = ((l + 1) | 0)) {
        if ($T00().tile.Get(k, l) === null) {
          $T00().tile.Set(k, l, new ($T0D())());
        }
        if (!($T00().tile.Get(k, l).active && 
            (($T00().tile.Get(k, l).type | 0) === (type | 0)) && 
            (($T00().tile.Get(k, l).frameX | 0) === Math.imul(((k - num) | 0), 18)) && (($T00().tile.Get(k, l).frameY | 0) === Math.imul(((l - num2) | 0), 18)))) {
          flag = true;
        }
      }
      if ($T00().tile.Get(k, ((num2 + 2) | 0)) === null) {
        $T00().tile.Set(k, ((num2 + 2) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(k, ((num2 + 2) | 0)).active && $T00().tileSolid[$T00().tile.Get(k, ((num2 + 2) | 0)).type])) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var m = num; m < ((num + 2) | 0); m = ((m + 1) | 0)) {

        for (var n = num2; n < ((num2 + 3) | 0); n = ((n + 1) | 0)) {
          if (!((($T00().tile.Get(m, n).type | 0) !== (type | 0)) || !$T00().tile.Get(m, n).active)) {
            $thisType.KillTile(
              m, 
              n, 
              false, 
              false, 
              false
            );
          }
        }
      }
      $T08().NewItem(
        Math.imul(i, 16), 
        Math.imul(j, 16), 
        32, 
        32, 
        48, 
        1, 
        false
      );
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_CheckOnTable1x1 (x, y, type) {
    if (!(($T00().tile.Get(x, (((y | 0) + 1) | 0)) === null) || ($T00().tile.Get(x, (((y | 0) + 1) | 0)).active && 
          $T00().tileTable[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type]))) {
      if ((type | 0) === 78) {
        if (!($T00().tile.Get(x, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type])) {
          $thisType.KillTile(
            x, 
            y, 
            false, 
            false, 
            false
          );
          return;
        }
      } else {
        $thisType.KillTile(
          x, 
          y, 
          false, 
          false, 
          false
        );
      }
    }
  }; 

  function WorldGen_CheckPot (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var k = 0;
    k = ((k + (((($T00().tile.Get(i, j).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
    var num = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    while (k > 1) {
      k = ((k - 2) | 0);
    }
    k = Math.imul(k, -1);
    k = ((k + (i | 0)) | 0);

    for (var l = k; l < ((k + 2) | 0); l = ((l + 1) | 0)) {

      for (var m = num; m < ((num + 2) | 0); m = ((m + 1) | 0)) {
        if ($T00().tile.Get(l, m) === null) {
          $T00().tile.Set(l, m, new ($T0D())());
        }

        for (var n = (((($T00().tile.Get(l, m).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000); n > 1; n = ((n - 2) | 0)) {
        }
        if (!($T00().tile.Get(l, m).active && 
            (($T00().tile.Get(l, m).type | 0) === (type | 0)) && 
            (n === ((l - k) | 0)) && (($T00().tile.Get(l, m).frameY | 0) === Math.imul(((m - num) | 0), 18)))) {
          flag = true;
        }
      }
      if ($T00().tile.Get(l, ((num + 2) | 0)) === null) {
        $T00().tile.Set(l, ((num + 2) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(l, ((num + 2) | 0)).active && $T00().tileSolid[$T00().tile.Get(l, ((num + 2) | 0)).type])) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;
      $T00().PlaySound(13, Math.imul(i, 16), Math.imul(j, 16), 1);

      for (var num2 = k; num2 < ((k + 2) | 0); num2 = ((num2 + 1) | 0)) {

        for (var num3 = num; num3 < ((num + 2) | 0); num3 = ((num3 + 1) | 0)) {
          if (!((($T00().tile.Get(num2, num3).type | 0) !== (type | 0)) || !$T00().tile.Get(num2, num3).active)) {
            $thisType.KillTile(
              num2, 
              num3, 
              false, 
              false, 
              false
            );
          }
        }
      }
      $T0F().NewGore($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), new ($T04())(), 51);
      $T0F().NewGore($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), new ($T04())(), 52);
      $T0F().NewGore($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), new ($T04())(), 53);
      var num4 = ($T00().rand.Next(10) | 0);
      if (!((num4 !== 0) || (($T00().player[$T10().FindClosest($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), 16, 16)].statLife | 0) >= ($T00().player[$T10().FindClosest($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), 16, 16)].statLifeMax | 0)))) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          58, 
          1, 
          false
        );
      } else if (!((num4 !== 1) || (($T00().player[$T10().FindClosest($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), 16, 16)].statMana | 0) >= ($T00().player[$T10().FindClosest($S03().Construct(+((i | 0) * 16), +((j | 0) * 16)), 16, 16)].statManaMax | 0)))) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          184, 
          1, 
          false
        );
      } else if (num4 === 2) {
        var stack = ((($T00().rand.Next(3) | 0) + 1) | 0);
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          8, 
          stack, 
          false
        );
      } else if (num4 === 3) {
        var stack2 = ((($T00().rand.Next(8) | 0) + 3) | 0);
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          40, 
          stack2, 
          false
        );
      } else if (num4 === 4) {
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          28, 
          1, 
          false
        );
      } else if (num4 === 5) {
        var stack3 = ((($T00().rand.Next(4) | 0) + 1) | 0);
        $T08().NewItem(
          Math.imul(i, 16), 
          Math.imul(j, 16), 
          16, 
          16, 
          166, 
          stack3, 
          false
        );
      } else {
        var num5 = +(200 + ($thisType.genRand.Next(-100, 101) | 0));
        num5 *= 1 + (+($T00().rand.Next(-20, 21)) * 0.01);
        if (($T00().rand.Next(5) | 0) === 0) {
          num5 *= 1 + (+($T00().rand.Next(5, 11)) * 0.01);
        }
        if (($T00().rand.Next(10) | 0) === 0) {
          num5 *= 1 + (+($T00().rand.Next(10, 21)) * 0.01);
        }
        if (($T00().rand.Next(15) | 0) === 0) {
          num5 *= 1 + (+($T00().rand.Next(20, 41)) * 0.01);
        }
        if (($T00().rand.Next(20) | 0) === 0) {
          num5 *= 1 + (+($T00().rand.Next(40, 81)) * 0.01);
        }
        if (($T00().rand.Next(25) | 0) === 0) {
          num5 *= 1 + (+($T00().rand.Next(50, 101)) * 0.01);
        }

        while (((num5) | 0) > 0) {
          if (num5 > 1000000) {
            var num6 = ((+(num5 / 1000000)) | 0);
            if (!((num6 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
              num6 = ((num6 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            if (($T00().rand.Next(2) | 0) === 0) {
              num6 = ((num6 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            num5 -= +(1000000 * num6);
            $T08().NewItem(
              Math.imul(i, 16), 
              Math.imul(j, 16), 
              16, 
              16, 
              74, 
              num6, 
              false
            );
          } else if (num5 > 10000) {
            var num7 = ((+(num5 / 10000)) | 0);
            if (!((num7 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
              num7 = ((num7 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            if (($T00().rand.Next(2) | 0) === 0) {
              num7 = ((num7 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            num5 -= +(10000 * num7);
            $T08().NewItem(
              Math.imul(i, 16), 
              Math.imul(j, 16), 
              16, 
              16, 
              73, 
              num7, 
              false
            );
          } else if (num5 > 100) {
            var num8 = ((+(num5 / 100)) | 0);
            if (!((num8 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
              num8 = ((num8 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            if (($T00().rand.Next(2) | 0) === 0) {
              num8 = ((num8 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            num5 -= +(100 * num8);
            $T08().NewItem(
              Math.imul(i, 16), 
              Math.imul(j, 16), 
              16, 
              16, 
              72, 
              num8, 
              false
            );
          } else {
            var num9 = ((num5) | 0);
            if (!((num9 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
              num9 = ((num9 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
            }
            if (($T00().rand.Next(2) | 0) === 0) {
              num9 = ((num9 / ((($T00().rand.Next(4) | 0) + 1) | 0)) | 0);
            }
            if (num9 < 1) {
              num9 = 1;
            }
            num5 -= +num9;
            $T08().NewItem(
              Math.imul(i, 16), 
              Math.imul(j, 16), 
              16, 
              16, 
              71, 
              num9, 
              false
            );
          }
        }
      }
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_CheckRoom (x, y) {
    if (!$thisType.canSpawn) {
      return;
    }
    if (!(((x | 0) >= 10) && 
        ((y | 0) >= 10) && 
        ((x | 0) < ((($T00().maxTilesX | 0) - 10) | 0)) && ((y | 0) < ((($thisType.lastMaxTilesY | 0) - 10) | 0)))) {
      $thisType.canSpawn = false;
      return;
    }

    for (var i = 0; i < ($thisType.numRoomTiles | 0); i = ((i + 1) | 0)) {
      if (!((($thisType.roomX[i] | 0) !== (x | 0)) || (($thisType.roomY[i] | 0) !== (y | 0)))) {
        return;
      }
    }
    $thisType.roomX[$thisType.numRoomTiles] = (x | 0);
    $thisType.roomY[$thisType.numRoomTiles] = (y | 0);
    $thisType.numRoomTiles = ((($thisType.numRoomTiles | 0) + 1) | 0);
    if (($thisType.numRoomTiles | 0) >= ($thisType.maxRoomTiles | 0)) {
      $thisType.canSpawn = false;
      return;
    }
    if ($T00().tile.Get(x, y).active) {
      $thisType.houseTile[$T00().tile.Get(x, y).type] = true;
      if (!(!$T00().tileSolid[$T00().tile.Get(x, y).type] && (($T00().tile.Get(x, y).type | 0) !== 11))) {
        return;
      }
    }
    if ((x | 0) < ($thisType.roomX1 | 0)) {
      $thisType.roomX1 = (x | 0);
    }
    if ((x | 0) > ($thisType.roomX2 | 0)) {
      $thisType.roomX2 = (x | 0);
    }
    if ((y | 0) < ($thisType.roomY1 | 0)) {
      $thisType.roomY1 = (y | 0);
    }
    if ((y | 0) > ($thisType.roomY2 | 0)) {
      $thisType.roomY2 = (y | 0);
    }
    var flag = false;
    var flag2 = false;

    for (var j = -2; j < 3; j = ((j + 1) | 0)) {
      if ($T00().wallHouse[$T00().tile.Get((((x | 0) + j) | 0), y).wall]) {
        flag = true;
      }
      if (!(!$T00().tile.Get((((x | 0) + j) | 0), y).active || (!$T00().tileSolid[$T00().tile.Get((((x | 0) + j) | 0), y).type] && 
            (($T00().tile.Get((((x | 0) + j) | 0), y).type | 0) !== 11)))) {
        flag = true;
      }
      if ($T00().wallHouse[$T00().tile.Get(x, (((y | 0) + j) | 0)).wall]) {
        flag2 = true;
      }
      if (!(!$T00().tile.Get(x, (((y | 0) + j) | 0)).active || (!$T00().tileSolid[$T00().tile.Get(x, (((y | 0) + j) | 0)).type] && 
            (($T00().tile.Get(x, (((y | 0) + j) | 0)).type | 0) !== 11)))) {
        flag2 = true;
      }
    }
    if (!(flag && flag2)) {
      $thisType.canSpawn = false;
      return;
    }

    for (var k = (((x | 0) - 1) | 0); k < (((x | 0) + 2) | 0); k = ((k + 1) | 0)) {

      for (var l = (((y | 0) - 1) | 0); l < (((y | 0) + 2) | 0); l = ((l + 1) | 0)) {
        if (!(((k === (x | 0)) && 
              (l === (y | 0))) || !$thisType.canSpawn)) {
          $thisType.CheckRoom(k, l);
        }
      }
    }
  }; 

  function WorldGen_CheckSign (x, y, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var num = (((x | 0) - 2) | 0);
    var num2 = (((x | 0) + 3) | 0);
    var num3 = (((y | 0) - 2) | 0);
    var num4 = (((y | 0) + 3) | 0);
    if (num < 0) {
      return;
    }
    if (num2 > ($T00().maxTilesX | 0)) {
      return;
    }
    if (num3 < 0) {
      return;
    }
    if (num4 > ($T00().maxTilesY | 0)) {
      return;
    }
    var flag = false;

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
      }
    }
    var k = (((($T00().tile.Get(x, y).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);
    var num5 = (((($T00().tile.Get(x, y).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);

    while (k > 1) {
      k = ((k - 2) | 0);
    }
    var num6 = (((x | 0) - k) | 0);
    var num7 = (((y | 0) - num5) | 0);
    var num8 = (((((($T00().tile.Get(num6, num7).frameX | 0) / 18) | 0) / 2) + 0x8000 & 0xFFFF) - 0x8000);
    num = num6;
    num2 = ((num6 + 2) | 0);
    num3 = num7;
    num4 = ((num7 + 2) | 0);
    k = 0;

    for (var l = num; l < num2; l = ((l + 1) | 0)) {
      num5 = 0;

    $loop4: 
      for (var m = num3; m < num4; m = ((m + 1) | 0)) {
        if (!($T00().tile.Get(l, m).active && (($T00().tile.Get(l, m).type | 0) === (type | 0)))) {
          flag = true;
          break $loop4;
        }
        if (!(((((($T00().tile.Get(l, m).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000) === ((k + Math.imul(num8, 2)) | 0)) && ((((($T00().tile.Get(l, m).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000) === num5))) {
          flag = true;
          break $loop4;
        }
        num5 = ((num5 + 1) | 0);
      }
      k = ((k + 1) | 0);
    }
    if (!flag) {
      if (!(!$T00().tile.Get(num6, ((num7 + 2) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(num6, ((num7 + 2) | 0)).type] || 
          !$T00().tile.Get(((num6 + 1) | 0), ((num7 + 2) | 0)).active || !$T00().tileSolid[$T00().tile.Get(((num6 + 1) | 0), ((num7 + 2) | 0)).type])) {
        num8 = 0;
      } else if (!(!$T00().tile.Get(num6, ((num7 - 1) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(num6, ((num7 - 1) | 0)).type] || 
          $T00().tileSolidTop[$T00().tile.Get(num6, ((num7 - 1) | 0)).type] || 
          !$T00().tile.Get(((num6 + 1) | 0), ((num7 - 1) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(((num6 + 1) | 0), ((num7 - 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get(((num6 + 1) | 0), ((num7 - 1) | 0)).type])) {
        num8 = 1;
      } else if (!(!$T00().tile.Get(((num6 - 1) | 0), num7).active || 
          !$T00().tileSolid[$T00().tile.Get(((num6 - 1) | 0), num7).type] || 
          $T00().tileSolidTop[$T00().tile.Get(((num6 - 1) | 0), num7).type] || 
          !$T00().tile.Get(((num6 - 1) | 0), ((num7 + 1) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(((num6 - 1) | 0), ((num7 + 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get(((num6 - 1) | 0), ((num7 + 1) | 0)).type])) {
        num8 = 2;
      } else if (!(!$T00().tile.Get(((num6 + 2) | 0), num7).active || 
          !$T00().tileSolid[$T00().tile.Get(((num6 + 2) | 0), num7).type] || 
          $T00().tileSolidTop[$T00().tile.Get(((num6 + 2) | 0), num7).type] || 
          !$T00().tile.Get(((num6 + 2) | 0), ((num7 + 1) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(((num6 + 2) | 0), ((num7 + 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get(((num6 + 2) | 0), ((num7 + 1) | 0)).type])) {
        num8 = 3;
      } else {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var n = num; n < num2; n = ((n + 1) | 0)) {

        for (var num9 = num3; num9 < num4; num9 = ((num9 + 1) | 0)) {
          if (($T00().tile.Get(n, num9).type | 0) === (type | 0)) {
            $thisType.KillTile(
              n, 
              num9, 
              false, 
              false, 
              false
            );
          }
        }
      }
      $T11().KillSign(num6, num7);
      $T08().NewItem(
        Math.imul(x, 16), 
        Math.imul(y, 16), 
        32, 
        32, 
        171, 
        1, 
        false
      );
      $thisType.destroyObject = false;
      return;
    }
    var num10 = Math.imul(36, num8);

    for (var num11 = 0; num11 < 2; num11 = ((num11 + 1) | 0)) {

      for (var num12 = 0; num12 < 2; num12 = ((num12 + 1) | 0)) {
        $T00().tile.Get(((num6 + num11) | 0), ((num7 + num12) | 0)).active = true;
        $T00().tile.Get(((num6 + num11) | 0), ((num7 + num12) | 0)).type = (type & 0xFF);
        $T00().tile.Get(((num6 + num11) | 0), ((num7 + num12) | 0)).frameX = ((((num10 + Math.imul(18, num11)) | 0) + 0x8000 & 0xFFFF) - 0x8000);
        $T00().tile.Get(((num6 + num11) | 0), ((num7 + num12) | 0)).frameY = ((Math.imul(18, num12) + 0x8000 & 0xFFFF) - 0x8000);
      }
    }
  }; 

  function WorldGen_CheckSunflower (i, j, type) {
    if ($thisType.destroyObject) {
      return;
    }
    var flag = false;
    var k = 0;
    k = ((k + (((($T00().tile.Get(i, j).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
    var num = (((j | 0) + Math.imul(((($T00().tile.Get(i, j).frameY | 0) / 18) | 0), -1)) | 0);

    while (k > 1) {
      k = ((k - 2) | 0);
    }
    k = Math.imul(k, -1);
    k = ((k + (i | 0)) | 0);

    for (var l = k; l < ((k + 2) | 0); l = ((l + 1) | 0)) {

      for (var m = num; m < ((num + 4) | 0); m = ((m + 1) | 0)) {
        if ($T00().tile.Get(l, m) === null) {
          $T00().tile.Set(l, m, new ($T0D())());
        }

        for (var n = (((($T00().tile.Get(l, m).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000); n > 1; n = ((n - 2) | 0)) {
        }
        if (!($T00().tile.Get(l, m).active && 
            (($T00().tile.Get(l, m).type | 0) === (type | 0)) && 
            (n === ((l - k) | 0)) && (($T00().tile.Get(l, m).frameY | 0) === Math.imul(((m - num) | 0), 18)))) {
          flag = true;
        }
      }
      if ($T00().tile.Get(l, ((num + 4) | 0)) === null) {
        $T00().tile.Set(l, ((num + 4) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(l, ((num + 4) | 0)).active && (($T00().tile.Get(l, ((num + 4) | 0)).type | 0) === 2))) {
        flag = true;
      }
    }
    if (flag) {
      $thisType.destroyObject = true;

      for (var num2 = k; num2 < ((k + 2) | 0); num2 = ((num2 + 1) | 0)) {

        for (var num3 = num; num3 < ((num + 4) | 0); num3 = ((num3 + 1) | 0)) {
          if (!((($T00().tile.Get(num2, num3).type | 0) !== (type | 0)) || !$T00().tile.Get(num2, num3).active)) {
            $thisType.KillTile(
              num2, 
              num3, 
              false, 
              false, 
              false
            );
          }
        }
      }
      $T08().NewItem(
        Math.imul(i, 16), 
        Math.imul(j, 16), 
        32, 
        32, 
        63, 
        1, 
        false
      );
      $thisType.destroyObject = false;
    }
  }; 

  function WorldGen_clearWorld () {
    $thisType.spawnEye = false;
    $thisType.spawnNPC = 0;
    $thisType.shadowOrbCount = 0;
    $T00().helpText = 0;
    $T00().dungeonX = 0;
    $T00().dungeonY = 0;
    $T12().downedBoss1 = false;
    $T12().downedBoss2 = false;
    $T12().downedBoss3 = false;
    $thisType.shadowOrbSmashed = false;
    $thisType.spawnMeteor = false;
    $thisType.stopDrops = false;
    $T00().invasionDelay = 0;
    $T00().invasionType = 0;
    $T00().invasionSize = 0;
    $T00().invasionWarn = 0;
    $T00().invasionX = 0;
    $thisType.noLiquidCheck = false;
    $T13().numLiquid = 0;
    $T14().numLiquidBuffer = 0;
    if (!((($T00().netMode | 0) !== 1) && 
        (($thisType.lastMaxTilesX | 0) <= ($T00().maxTilesX | 0)) && (($thisType.lastMaxTilesY | 0) <= ($T00().maxTilesY | 0)))) {

      for (var i = 0; i < ($thisType.lastMaxTilesX | 0); i = ((i + 1) | 0)) {
        var num = +((+i / +($thisType.lastMaxTilesX)));
        $T00().statusText = (JSIL.ConcatString("Freeing unused resources: ", $T02().$Box((((num * 100) + 1) | 0)), "%"));

        for (var j = 0; j < ($thisType.lastMaxTilesY | 0); j = ((j + 1) | 0)) {
          $T00().tile.Set(i, j, null);
        }
      }
    }
    $thisType.lastMaxTilesX = ($T00().maxTilesX | 0);
    $thisType.lastMaxTilesY = ($T00().maxTilesY | 0);
    if (($T00().netMode | 0) !== 1) {

      for (var k = 0; k < ($T00().maxTilesX | 0); k = ((k + 1) | 0)) {
        var num2 = +((+k / +($T00().maxTilesX)));
        $T00().statusText = (JSIL.ConcatString("Resetting game objects: ", $T02().$Box((((num2 * 100) + 1) | 0)), "%"));

        for (var l = 0; l < ($T00().maxTilesY | 0); l = ((l + 1) | 0)) {
          $T00().tile.Set(k, l, new ($T0D())());
        }
      }
    }

    for (var m = 0; m < 2000; m = ((m + 1) | 0)) {
      $T00().dust[m] = new ($T16())();
    }

    for (var n = 0; n < 200; n = ((n + 1) | 0)) {
      $T00().gore[n] = new ($T0F())();
    }

    for (var num3 = 0; num3 < 200; num3 = ((num3 + 1) | 0)) {
      $T00().item[num3] = new ($T08())();
    }

    for (var num4 = 0; num4 < 1000; num4 = ((num4 + 1) | 0)) {
      $T00().npc[num4] = new ($T12())();
    }

    for (var num5 = 0; num5 < 1000; num5 = ((num5 + 1) | 0)) {
      $T00().projectile[num5] = new ($T17())();
    }

    for (var num6 = 0; num6 < 1000; num6 = ((num6 + 1) | 0)) {
      $T00().chest[num6] = null;
    }

    for (var num7 = 0; num7 < 1000; num7 = ((num7 + 1) | 0)) {
      $T00().sign[num7] = null;
    }

    for (var num8 = 0; num8 < ($T13().resLiquid | 0); num8 = ((num8 + 1) | 0)) {
      $T00().liquid[num8] = new ($T13())();
    }

    for (var num9 = 0; num9 < 10000; num9 = ((num9 + 1) | 0)) {
      $T00().liquidBuffer[num9] = new ($T14())();
    }
    $thisType.setWorldSize();
    $thisType.worldCleared = true;
  }; 

  function WorldGen_CloseDoor (i, j, forced) {
    var num = 0;
    var num2 = (i | 0);
    var num3 = (j | 0);
    if ($T00().tile.Get(i, j) === null) {
      $T00().tile.Set(i, j, new ($T0D())());
    }
    var frameX = ($T00().tile.Get(i, j).frameX | 0);
    var frameY = ($T00().tile.Get(i, j).frameY | 0);
    if (frameX === 0) {
      num2 = (i | 0);
      num = 1;
    } else if (frameX === 18) {
      num2 = (((i | 0) - 1) | 0);
      num = 1;
    } else if (frameX === 36) {
      num2 = (((i | 0) + 1) | 0);
      num = -1;
    } else if (frameX === 54) {
      num2 = (i | 0);
      num = -1;
    }
    if (frameY === 0) {
      num3 = (j | 0);
    } else if (frameY === 18) {
      num3 = (((j | 0) - 1) | 0);
    } else if (frameY === 36) {
      num3 = (((j | 0) - 2) | 0);
    }
    var num4 = num2;
    if (num === -1) {
      num4 = ((num2 - 1) | 0);
    }
    if (!forced) {

      for (var k = num3; k < ((num3 + 3) | 0); k = ((k + 1) | 0)) {
        if (!$T18().EmptyTile(num2, k, true)) {
          return false;
        }
      }
    }

    for (var l = num4; l < ((num4 + 2) | 0); l = ((l + 1) | 0)) {

      for (var m = num3; m < ((num3 + 3) | 0); m = ((m + 1) | 0)) {
        if (l === num2) {
          if ($T00().tile.Get(l, m) === null) {
            $T00().tile.Set(l, m, new ($T0D())());
          }
          $T00().tile.Get(l, m).type = 10;
          $T00().tile.Get(l, m).frameX = ((Math.imul($thisType.genRand.Next(3), 18) + 0x8000 & 0xFFFF) - 0x8000);
        } else {
          if ($T00().tile.Get(l, m) === null) {
            $T00().tile.Set(l, m, new ($T0D())());
          }
          $T00().tile.Get(l, m).active = false;
        }
      }
    }

    for (var n = ((num2 - 1) | 0); n <= ((num2 + 1) | 0); n = ((n + 1) | 0)) {

      for (var num5 = ((num3 - 1) | 0); num5 <= ((num3 + 2) | 0); num5 = ((num5 + 1) | 0)) {
        $thisType.TileFrame(n, num5, false, false);
      }
    }
    $T00().PlaySound(9, Math.imul(i, 16), Math.imul(j, 16), 1);
    return true;
  }; 

  function WorldGen_CreateNewWorld () {
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "worldGenCallBack", $S04(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_dropMeteor () {
    var flag = true;
    var num = 0;
    if (($T00().netMode | 0) === 1) {
      return;
    }

  $loop0: 
    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if ($T00().player[i].active) {
        flag = false;
        break $loop0;
      }
    }
    var num2 = 0;

    for (var j = 5; j < ((($T00().maxTilesX | 0) - 5) | 0); j = ((j + 1) | 0)) {

      for (var num5 = 5; +num5 < +$T00().worldSurface; num5 = ((num5 + 1) | 0)) {
        if (!(!$T00().tile.Get(j, num5).active || (($T00().tile.Get(j, num5).type | 0) !== 37))) {
          num2 = ((num2 + 1) | 0);
          if (num2 > ((400 * +((($T00().maxTilesX | 0) / 4200 | 0))) | 0)) {
            return;
          }
        }
      }
    }

    while (!flag) {
      var num6 = +($T00().maxTilesX) * 0.08;

      for (var num7 = ($T00().rand.Next(50, ((($T00().maxTilesX | 0) - 50) | 0)) | 0); (+num7 > (+($T00().spawnTileX) - num6)) && (+num7 < (+($T00().spawnTileX) + num6)); ) {
        num7 = ($T00().rand.Next(50, ((($T00().maxTilesX | 0) - 50) | 0)) | 0);
      }

    $loop5: 
      for (var k = ($T00().rand.Next(100) | 0); k < ($T00().maxTilesY | 0); k = ((k + 1) | 0)) {
        if (!(!$T00().tile.Get(num7, k).active || !$T00().tileSolid[$T00().tile.Get(num7, k).type])) {
          flag = $thisType.meteor(num7, k);
          break $loop5;
        }
      }
      num = ((num + 1) | 0);
      if (num >= 100) {
        return;
      }
    }
  }; 

  function WorldGen_DungeonEnt (i, j, tileType, wallType) {
    var vector = new ($T04())();
    var num = +$thisType.dxStrength1;
    var num2 = +$thisType.dyStrength1;
    vector.X = +i;
    vector.Y = +j - +((Math.fround(num2) / 2));
    $thisType.dMinY = ((vector.Y) | 0);
    var num3 = 1;
    if ((i | 0) > ((($T00().maxTilesX | 0) / 2) | 0)) {
      num3 = -1;
    }
    var num4 = (((vector.X - (num * 0.60000002384185791)) - +($thisType.genRand.Next(2, 5))) | 0);
    var num5 = (((vector.X + (num * 0.60000002384185791)) + +($thisType.genRand.Next(2, 5))) | 0);
    var num6 = (((vector.Y - (num2 * 0.60000002384185791)) - +($thisType.genRand.Next(2, 5))) | 0);
    var num7 = (((vector.Y + (num2 * 0.60000002384185791)) + +($thisType.genRand.Next(8, 16))) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var k = num4; k < num5; k = ((k + 1) | 0)) {

      for (var l = num6; l < num7; l = ((l + 1) | 0)) {
        $T00().tile.Get(k, l).liquid = 0;
        if (($T00().tile.Get(k, l).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(k, l).wall = 0;
          if (!((k <= ((num4 + 1) | 0)) || 
              (k >= ((num5 - 2) | 0)) || 
              (l <= ((num6 + 1) | 0)) || (l >= ((num7 - 2) | 0)))) {
            $thisType.PlaceWall(k, l, wallType, true);
          }
          $T00().tile.Get(k, l).active = true;
          $T00().tile.Get(k, l).type = (tileType & 0xFF);
        }
      }
    }
    var num8 = num4;
    var num9 = ((((num4 + 5) | 0) + ($thisType.genRand.Next(4) | 0)) | 0);
    var num10 = ((((num6 - 3) | 0) - ($thisType.genRand.Next(3) | 0)) | 0);
    var num11 = num6;

    for (var m = num8; m < num9; m = ((m + 1) | 0)) {

      for (var n = num10; n < num11; n = ((n + 1) | 0)) {
        if (($T00().tile.Get(m, n).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(m, n).active = true;
          $T00().tile.Get(m, n).type = (tileType & 0xFF);
        }
      }
    }
    num8 = ((((num5 - 5) | 0) - ($thisType.genRand.Next(4) | 0)) | 0);
    num9 = num5;
    num10 = ((((num6 - 3) | 0) - ($thisType.genRand.Next(3) | 0)) | 0);
    num11 = num6;

    for (var num12 = num8; num12 < num9; num12 = ((num12 + 1) | 0)) {

      for (var num13 = num10; num13 < num11; num13 = ((num13 + 1) | 0)) {
        if (($T00().tile.Get(num12, num13).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(num12, num13).active = true;
          $T00().tile.Get(num12, num13).type = (tileType & 0xFF);
        }
      }
    }
    var num14 = ((1 + ($thisType.genRand.Next(2) | 0)) | 0);
    var num15 = ((2 + ($thisType.genRand.Next(4) | 0)) | 0);
    var num16 = 0;

    for (var num17 = num4; num17 < num5; num17 = ((num17 + 1) | 0)) {

      for (var num18 = ((num6 - num14) | 0); num18 < num6; num18 = ((num18 + 1) | 0)) {
        if (($T00().tile.Get(num17, num18).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(num17, num18).active = true;
          $T00().tile.Get(num17, num18).type = (tileType & 0xFF);
        }
      }
      num16 = ((num16 + 1) | 0);
      if (num16 >= num15) {
        num17 = ((num17 + num15) | 0);
        num16 = 0;
      }
    }

    for (var num19 = num4; num19 < num5; num19 = ((num19 + 1) | 0)) {

      for (var num20 = num7; num20 < ((num7 + 100) | 0); num20 = ((num20 + 1) | 0)) {
        $thisType.PlaceWall(num19, num20, 2, true);
      }
    }
    num4 = ((vector.X - (num * 0.60000002384185791)) | 0);
    num5 = ((vector.X + (num * 0.60000002384185791)) | 0);
    num6 = ((vector.Y - (num2 * 0.60000002384185791)) | 0);
    num7 = ((vector.Y + (num2 * 0.60000002384185791)) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num21 = num4; num21 < num5; num21 = ((num21 + 1) | 0)) {

      for (var num22 = num6; num22 < num7; num22 = ((num22 + 1) | 0)) {
        $thisType.PlaceWall(num21, num22, wallType, true);
      }
    }
    num4 = (((vector.X - (num * 0.6)) - 1) | 0);
    num5 = (((vector.X + (num * 0.6)) + 1) | 0);
    num6 = (((vector.Y - (num2 * 0.6)) - 1) | 0);
    num7 = (((vector.Y + (num2 * 0.6)) + 1) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num23 = num4; num23 < num5; num23 = ((num23 + 1) | 0)) {

      for (var num24 = num6; num24 < num7; num24 = ((num24 + 1) | 0)) {
        $T00().tile.Get(num23, num24).wall = (wallType & 0xFF);
      }
    }
    num4 = ((vector.X - (num * 0.5)) | 0);
    num5 = ((vector.X + (num * 0.5)) | 0);
    num6 = ((vector.Y - (num2 * 0.5)) | 0);
    num7 = ((vector.Y + (num2 * 0.5)) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num25 = num4; num25 < num5; num25 = ((num25 + 1) | 0)) {

      for (var num26 = num6; num26 < num7; num26 = ((num26 + 1) | 0)) {
        $T00().tile.Get(num25, num26).active = false;
        $T00().tile.Get(num25, num26).wall = (wallType & 0xFF);
      }
    }
    $thisType.DPlatX[$thisType.numDPlats] = ((vector.X) | 0);
    $thisType.DPlatY[$thisType.numDPlats] = num7;
    $thisType.numDPlats = ((($thisType.numDPlats | 0) + 1) | 0);
    vector.X = +vector.X + ((Math.fround(num) * 0.6) * +num3);
    vector.Y = +vector.Y + (Math.fround(num2) * 0.5);
    num = +$thisType.dxStrength2;
    num2 = +$thisType.dyStrength2;
    vector.X = +vector.X + ((Math.fround(num) * 0.55) * +num3);
    vector.Y = +vector.Y - (Math.fround(num2) * 0.5);
    num4 = (((vector.X - (num * 0.60000002384185791)) - +($thisType.genRand.Next(1, 3))) | 0);
    num5 = (((vector.X + (num * 0.60000002384185791)) + +($thisType.genRand.Next(1, 3))) | 0);
    num6 = (((vector.Y - (num2 * 0.60000002384185791)) - +($thisType.genRand.Next(1, 3))) | 0);
    num7 = (((vector.Y + (num2 * 0.60000002384185791)) + +($thisType.genRand.Next(6, 16))) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num27 = num4; num27 < num5; num27 = ((num27 + 1) | 0)) {

      for (var num28 = num6; num28 < num7; num28 = ((num28 + 1) | 0)) {
        if (($T00().tile.Get(num27, num28).wall | 0) !== (wallType | 0)) {
          var flag = true;
          if (num3 < 0) {
            if (+num27 < (vector.X - (num * 0.5))) {
              flag = false;
            }
          } else if (+num27 > ((vector.X + (num * 0.5)) - 1)) {
            flag = false;
          }
          if (flag) {
            $T00().tile.Get(num27, num28).wall = 0;
            $T00().tile.Get(num27, num28).active = true;
            $T00().tile.Get(num27, num28).type = (tileType & 0xFF);
          }
        }
      }
    }

    for (var num29 = num4; num29 < num5; num29 = ((num29 + 1) | 0)) {

      for (var num30 = num7; num30 < ((num7 + 100) | 0); num30 = ((num30 + 1) | 0)) {
        $thisType.PlaceWall(num29, num30, 2, true);
      }
    }
    num4 = ((vector.X - (num * 0.5)) | 0);
    num5 = ((vector.X + (num * 0.5)) | 0);
    num8 = num4;
    if (num3 < 0) {
      num8 = ((num8 + 1) | 0);
    }
    num9 = ((((num8 + 5) | 0) + ($thisType.genRand.Next(4) | 0)) | 0);
    num10 = ((((num6 - 3) | 0) - ($thisType.genRand.Next(3) | 0)) | 0);
    num11 = num6;

    for (var num31 = num8; num31 < num9; num31 = ((num31 + 1) | 0)) {

      for (var num32 = num10; num32 < num11; num32 = ((num32 + 1) | 0)) {
        if (($T00().tile.Get(num31, num32).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(num31, num32).active = true;
          $T00().tile.Get(num31, num32).type = (tileType & 0xFF);
        }
      }
    }
    num8 = ((((num5 - 5) | 0) - ($thisType.genRand.Next(4) | 0)) | 0);
    num9 = num5;
    num10 = ((((num6 - 3) | 0) - ($thisType.genRand.Next(3) | 0)) | 0);
    num11 = num6;

    for (var num33 = num8; num33 < num9; num33 = ((num33 + 1) | 0)) {

      for (var num34 = num10; num34 < num11; num34 = ((num34 + 1) | 0)) {
        if (($T00().tile.Get(num33, num34).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(num33, num34).active = true;
          $T00().tile.Get(num33, num34).type = (tileType & 0xFF);
        }
      }
    }
    num14 = ((1 + ($thisType.genRand.Next(2) | 0)) | 0);
    num15 = ((2 + ($thisType.genRand.Next(4) | 0)) | 0);
    num16 = 0;
    if (num3 < 0) {
      num5 = ((num5 + 1) | 0);
    }

    for (var num35 = ((num4 + 1) | 0); num35 < ((num5 - 1) | 0); num35 = ((num35 + 1) | 0)) {

      for (var num36 = ((num6 - num14) | 0); num36 < num6; num36 = ((num36 + 1) | 0)) {
        if (($T00().tile.Get(num35, num36).wall | 0) !== (wallType | 0)) {
          $T00().tile.Get(num35, num36).active = true;
          $T00().tile.Get(num35, num36).type = (tileType & 0xFF);
        }
      }
      num16 = ((num16 + 1) | 0);
      if (num16 >= num15) {
        num35 = ((num35 + num15) | 0);
        num16 = 0;
      }
    }
    num4 = ((vector.X - (num * 0.6)) | 0);
    num5 = ((vector.X + (num * 0.6)) | 0);
    num6 = ((vector.Y - (num2 * 0.6)) | 0);
    num7 = ((vector.Y + (num2 * 0.6)) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num37 = num4; num37 < num5; num37 = ((num37 + 1) | 0)) {

      for (var num38 = num6; num38 < num7; num38 = ((num38 + 1) | 0)) {
        $T00().tile.Get(num37, num38).wall = 0;
      }
    }
    num4 = ((vector.X - (num * 0.5)) | 0);
    num5 = ((vector.X + (num * 0.5)) | 0);
    num6 = ((vector.Y - (num2 * 0.5)) | 0);
    num7 = ((vector.Y + (num2 * 0.5)) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num39 = num4; num39 < num5; num39 = ((num39 + 1) | 0)) {

      for (var num40 = num6; num40 < num7; num40 = ((num40 + 1) | 0)) {
        $T00().tile.Get(num39, num40).active = false;
        $T00().tile.Get(num39, num40).wall = 0;
      }
    }

    for (var num41 = num4; num41 < num5; num41 = ((num41 + 1) | 0)) {
      if (!$T00().tile.Get(num41, num7).active) {
        $T00().tile.Get(num41, num7).active = true;
        $T00().tile.Get(num41, num7).type = 19;
      }
    }
    $T00().dungeonX = ((vector.X) | 0);
    $T00().dungeonY = num7;
    var num42 = ($T12().NewNPC(((Math.imul($thisType.dungeonX, 16) + 8) | 0), Math.imul($thisType.dungeonY, 16), 37, 0) | 0);
    $T00().npc[num42].homeless = false;
    $T00().npc[num42].homeTileX = ($T00().dungeonX | 0);
    $T00().npc[num42].homeTileY = ($T00().dungeonY | 0);
    if (num3 === 1) {
      var num43 = 0;

      for (var num44 = num5; num44 < ((num5 + 25) | 0); num44 = ((num44 + 1) | 0)) {
        num43 = ((num43 + 1) | 0);

        for (var num45 = ((num7 + num43) | 0); num45 < ((num7 + 25) | 0); num45 = ((num45 + 1) | 0)) {
          $T00().tile.Get(num44, num45).active = true;
          $T00().tile.Get(num44, num45).type = (tileType & 0xFF);
        }
      }
    } else {
      var num46 = 0;

      for (var num47 = num4; num47 > ((num4 - 25) | 0); num47 = ((num47 - 1) | 0)) {
        num46 = ((num46 + 1) | 0);

        for (var num48 = ((num7 + num46) | 0); num48 < ((num7 + 25) | 0); num48 = ((num48 + 1) | 0)) {
          $T00().tile.Get(num47, num48).active = true;
          $T00().tile.Get(num47, num48).type = (tileType & 0xFF);
        }
      }
    }
    num14 = ((1 + ($thisType.genRand.Next(2) | 0)) | 0);
    num15 = ((2 + ($thisType.genRand.Next(4) | 0)) | 0);
    num16 = 0;
    num4 = ((vector.X - (num * 0.5)) | 0);
    num5 = ((vector.X + (num * 0.5)) | 0);
    num4 = ((num4 + 2) | 0);
    num5 = ((num5 - 2) | 0);

    for (var num49 = num4; num49 < num5; num49 = ((num49 + 1) | 0)) {

      for (var num50 = num6; num50 < num7; num50 = ((num50 + 1) | 0)) {
        $thisType.PlaceWall(num49, num50, wallType, true);
      }
      num16 = ((num16 + 1) | 0);
      if (num16 >= num15) {
        num49 = ((num49 + Math.imul(num15, 2)) | 0);
        num16 = 0;
      }
    }
    vector.X = +vector.X - ((Math.fround(num) * 0.6) * +num3);
    vector.Y = +vector.Y + (Math.fround(num2) * 0.5);
    num = 15;
    num2 = 3;
    vector.Y = +vector.Y - (Math.fround(num2) * 0.5);
    num4 = ((vector.X - (num * 0.5)) | 0);
    num5 = ((vector.X + (num * 0.5)) | 0);
    num6 = ((vector.Y - (num2 * 0.5)) | 0);
    num7 = ((vector.Y + (num2 * 0.5)) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var num51 = num4; num51 < num5; num51 = ((num51 + 1) | 0)) {

      for (var num52 = num6; num52 < num7; num52 = ((num52 + 1) | 0)) {
        $T00().tile.Get(num51, num52).active = false;
      }
    }
    if (num3 < 0) {
      vector.X = +vector.X - 1;
    }
    $thisType.PlaceTile(
      ((vector.X) | 0), 
      ((((vector.Y) | 0) + 1) | 0), 
      10, 
      false, 
      false, 
      -1
    );
  }; 

  function WorldGen_DungeonHalls (i, j, tileType, wallType, forceX) {
    var value3 = new ($T04())();
    var value = new ($T04())();
    var num = +($thisType.genRand.Next(4, 6));
    var vector = new ($T04())();
    var value2 = new ($T04())();
    value3.X = +i;
    value3.Y = +j;
    var k = ($thisType.genRand.Next(35, 80) | 0);
    if (forceX) {
      k = ((k + 20) | 0);
      $thisType.lastDungeonHall = new ($T04())();
    } else if (($thisType.genRand.Next(5) | 0) === 0) {
      num *= 2;
      k = ((k / 2) | 0);
    }

    for (var flag = false; !flag; ) {
      if (($thisType.genRand.Next(2) | 0) === 0) {
        var num2 = -1;
      } else {
        num2 = 1;
      }
      var flag2 = false;
      if (($thisType.genRand.Next(2) | 0) === 0) {
        flag2 = true;
      }
      if (forceX) {
        flag2 = true;
      }
      if (flag2) {
        vector.Y = 0;
        vector.X = +num2;
        value2.Y = 0;
        value2.X = +(-+num2);
        value.Y = 0;
        value.X = +num2;
        if (($thisType.genRand.Next(3) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.Y = -0.2;
          } else {
            value.Y = 0.2;
          }
        }
      } else {
        num += 1;
        value.Y = +num2;
        value.X = 0;
        vector.X = 0;
        vector.Y = +num2;
        value2.X = 0;
        value2.Y = +(-+num2);
        if (($thisType.genRand.Next(2) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.X = 0.3;
          } else {
            value.X = -0.3;
          }
        } else {
          k = ((k / 2) | 0);
        }
      }
      if ($T04().op_Inequality($thisType.lastDungeonHall.MemberwiseClone(), value2.MemberwiseClone())) {
        flag = true;
      }
    }
    if (!forceX) {
      if (+value3.X > +(($thisType.lastMaxTilesX | 0) - 200)) {
        num2 = -1;
        vector.Y = 0;
        vector.X = +num2;
        value.Y = 0;
        value.X = +num2;
        if (($thisType.genRand.Next(3) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.Y = -0.2;
          } else {
            value.Y = 0.2;
          }
        }
      } else if (+value3.X < 200) {
        num2 = 1;
        vector.Y = 0;
        vector.X = +num2;
        value.Y = 0;
        value.X = +num2;
        if (($thisType.genRand.Next(3) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.Y = -0.2;
          } else {
            value.Y = 0.2;
          }
        }
      } else if (+value3.Y > +(($thisType.lastMaxTilesY | 0) + 200)) {
        num2 = -1;
        num += 1;
        value.Y = +num2;
        value.X = 0;
        vector.X = 0;
        vector.Y = +num2;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.X = 0.3;
          } else {
            value.X = -0.3;
          }
        }
      } else if (value3.Y < +$T00().rockLayer) {
        num2 = 1;
        num += 1;
        value.Y = +num2;
        value.X = 0;
        vector.X = 0;
        vector.Y = +num2;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.X = 0.3;
          } else {
            value.X = -0.3;
          }
        }
      } else if (!((+value3.X >= +((($T00().maxTilesX | 0) / 2 | 0))) || (value3.X <= (+($T00().maxTilesX) * 0.25)))) {
        num2 = -1;
        vector.Y = 0;
        vector.X = +num2;
        value.Y = 0;
        value.X = +num2;
        if (($thisType.genRand.Next(3) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.Y = -0.2;
          } else {
            value.Y = 0.2;
          }
        }
      } else if (!((+value3.X <= +((($T00().maxTilesX | 0) / 2 | 0))) || (value3.X >= (+($T00().maxTilesX) * 0.75)))) {
        num2 = 1;
        vector.Y = 0;
        vector.X = +num2;
        value.Y = 0;
        value.X = +num2;
        if (($thisType.genRand.Next(3) | 0) === 0) {
          if (($thisType.genRand.Next(2) | 0) === 0) {
            value.Y = -0.2;
          } else {
            value.Y = 0.2;
          }
        }
      }
    }
    if (+vector.Y === 0) {
      $thisType.DDoorX[$thisType.numDDoors] = ((value3.X) | 0);
      $thisType.DDoorY[$thisType.numDDoors] = ((value3.Y) | 0);
      $thisType.DDoorPos[$thisType.numDDoors] = 0;
      $thisType.numDDoors = ((($thisType.numDDoors | 0) + 1) | 0);
    } else {
      $thisType.DPlatX[$thisType.numDPlats] = ((value3.X) | 0);
      $thisType.DPlatY[$thisType.numDPlats] = ((value3.Y) | 0);
      $thisType.numDPlats = ((($thisType.numDPlats | 0) + 1) | 0);
    }
    $thisType.lastDungeonHall = vector.MemberwiseClone();

    while (k > 0) {
      if (!((+vector.X <= 0) || (+value3.X <= +(($T00().maxTilesX | 0) - 100)))) {
        k = 0;
      } else if (!((+vector.X >= 0) || (+value3.X >= 100))) {
        k = 0;
      } else if (!((+vector.Y <= 0) || (+value3.Y <= +(($T00().maxTilesY | 0) - 100)))) {
        k = 0;
      } else if (!((+vector.Y >= 0) || (value3.Y >= (+$T00().rockLayer + 50)))) {
        k = 0;
      }
      k = ((k - 1) | 0);
      var num3 = ((((value3.X - num) - 4) - +($thisType.genRand.Next(6))) | 0);
      var num4 = ((((value3.X + num) + 4) + +($thisType.genRand.Next(6))) | 0);
      var num5 = ((((value3.Y - num) - 4) - +($thisType.genRand.Next(6))) | 0);
      var num6 = ((((value3.Y + num) + 4) + +($thisType.genRand.Next(6))) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }

      for (var l = num3; l < num4; l = ((l + 1) | 0)) {

        for (var m = num5; m < num6; m = ((m + 1) | 0)) {
          $T00().tile.Get(l, m).liquid = 0;
          if (($T00().tile.Get(l, m).wall | 0) === 0) {
            $T00().tile.Get(l, m).active = true;
            $T00().tile.Get(l, m).type = (tileType & 0xFF);
          }
        }
      }

      for (var n = ((num3 + 1) | 0); n < ((num4 - 1) | 0); n = ((n + 1) | 0)) {

        for (var num7 = ((num5 + 1) | 0); num7 < ((num6 - 1) | 0); num7 = ((num7 + 1) | 0)) {
          $thisType.PlaceWall(n, num7, wallType, true);
        }
      }
      var num8 = 0;
      if (!((+value.Y !== 0) || (($thisType.genRand.Next(((((num) | 0) + 1) | 0)) | 0) !== 0))) {
        num8 = ($thisType.genRand.Next(1, 3) | 0);
      } else if (!((+value.X !== 0) || (($thisType.genRand.Next(((((num) | 0) - 1) | 0)) | 0) !== 0))) {
        num8 = ($thisType.genRand.Next(1, 3) | 0);
      } else if (($thisType.genRand.Next(Math.imul(((num) | 0), 3)) | 0) === 0) {
        num8 = ($thisType.genRand.Next(1, 3) | 0);
      }
      num3 = (((value3.X - (num * 0.5)) - +num8) | 0);
      num4 = (((value3.X + (num * 0.5)) + +num8) | 0);
      num5 = (((value3.Y - (num * 0.5)) - +num8) | 0);
      num6 = (((value3.Y + (num * 0.5)) + +num8) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }

      for (var num9 = num3; num9 < num4; num9 = ((num9 + 1) | 0)) {

        for (var num10 = num5; num10 < num6; num10 = ((num10 + 1) | 0)) {
          $T00().tile.Get(num9, num10).active = false;
          $T00().tile.Get(num9, num10).wall = (wallType & 0xFF);
        }
      }
      value3 = $T04().op_Addition(value3.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
    }
    $thisType.dungeonX = ((value3.X) | 0);
    $thisType.dungeonY = ((value3.Y) | 0);
    if (+vector.Y === 0) {
      $thisType.DDoorX[$thisType.numDDoors] = ((value3.X) | 0);
      $thisType.DDoorY[$thisType.numDDoors] = ((value3.Y) | 0);
      $thisType.DDoorPos[$thisType.numDDoors] = 0;
      $thisType.numDDoors = ((($thisType.numDDoors | 0) + 1) | 0);
      return;
    }
    $thisType.DPlatX[$thisType.numDPlats] = ((value3.X) | 0);
    $thisType.DPlatY[$thisType.numDPlats] = ((value3.Y) | 0);
    $thisType.numDPlats = ((($thisType.numDPlats | 0) + 1) | 0);
  }; 

  function WorldGen_DungeonRoom (i, j, tileType, wallType) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(15, 30));
    value.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value.Y = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.X = +i;
    value2.Y = +j - +((Math.fround(num) / 2));
    var k = ($thisType.genRand.Next(10, 20) | 0);
    var num2 = value2.X;
    var num3 = value2.X;
    var num4 = value2.Y;
    var num5 = value2.Y;

    while (k > 0) {
      k = ((k - 1) | 0);
      var num6 = (((value2.X - (num * 0.800000011920929)) - 5) | 0);
      var num7 = (((value2.X + (num * 0.800000011920929)) + 5) | 0);
      var num8 = (((value2.Y - (num * 0.800000011920929)) - 5) | 0);
      var num9 = (((value2.Y + (num * 0.800000011920929)) + 5) | 0);
      if (num6 < 0) {
        num6 = 0;
      }
      if (num7 > ($T00().maxTilesX | 0)) {
        num7 = ($T00().maxTilesX | 0);
      }
      if (num8 < 0) {
        num8 = 0;
      }
      if (num9 > ($T00().maxTilesY | 0)) {
        num9 = ($T00().maxTilesY | 0);
      }

      for (var l = num6; l < num7; l = ((l + 1) | 0)) {

        for (var m = num8; m < num9; m = ((m + 1) | 0)) {
          $T00().tile.Get(l, m).liquid = 0;
          if (($T00().tile.Get(l, m).wall | 0) === 0) {
            $T00().tile.Get(l, m).active = true;
            $T00().tile.Get(l, m).type = (tileType & 0xFF);
          }
        }
      }

      for (var n = ((num6 + 1) | 0); n < ((num7 - 1) | 0); n = ((n + 1) | 0)) {

        for (var num10 = ((num8 + 1) | 0); num10 < ((num9 - 1) | 0); num10 = ((num10 + 1) | 0)) {
          $thisType.PlaceWall(n, num10, wallType, true);
        }
      }
      num6 = ((value2.X - (num * 0.5)) | 0);
      num7 = ((value2.X + (num * 0.5)) | 0);
      num8 = ((value2.Y - (num * 0.5)) | 0);
      num9 = ((value2.Y + (num * 0.5)) | 0);
      if (num6 < 0) {
        num6 = 0;
      }
      if (num7 > ($T00().maxTilesX | 0)) {
        num7 = ($T00().maxTilesX | 0);
      }
      if (num8 < 0) {
        num8 = 0;
      }
      if (num9 > ($T00().maxTilesY | 0)) {
        num9 = ($T00().maxTilesY | 0);
      }
      if (+num6 < num2) {
        num2 = +num6;
      }
      if (+num7 > num3) {
        num3 = +num7;
      }
      if (+num8 < num4) {
        num4 = +num8;
      }
      if (+num9 > num5) {
        num5 = +num9;
      }

      for (var num11 = num6; num11 < num7; num11 = ((num11 + 1) | 0)) {

        for (var num12 = num8; num12 < num9; num12 = ((num12 + 1) | 0)) {
          $T00().tile.Get(num11, num12).active = false;
          $T00().tile.Get(num11, num12).wall = (wallType & 0xFF);
        }
      }
      value2 = $T04().op_Addition(value2.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
      value.X = +value.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value.Y = +value.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value.X > 1) {
        value.X = 1;
      }
      if (+value.X < -1) {
        value.X = -1;
      }
      if (+value.Y > 1) {
        value.Y = 1;
      }
      if (+value.Y < -1) {
        value.Y = -1;
      }
    }
    $thisType.dRoomX[$thisType.numDRooms] = ((value2.X) | 0);
    $thisType.dRoomY[$thisType.numDRooms] = ((value2.Y) | 0);
    $thisType.dRoomSize[$thisType.numDRooms] = ((num) | 0);
    $thisType.dRoomL[$thisType.numDRooms] = ((num2) | 0);
    $thisType.dRoomR[$thisType.numDRooms] = ((num3) | 0);
    $thisType.dRoomT[$thisType.numDRooms] = ((num4) | 0);
    $thisType.dRoomB[$thisType.numDRooms] = ((num5) | 0);
    $thisType.dRoomTreasure[$thisType.numDRooms] = false;
    $thisType.numDRooms = ((($thisType.numDRooms | 0) + 1) | 0);
  }; 

  function WorldGen_DungeonStairs (i, j, tileType, wallType) {
    var value2 = new ($T04())();
    var value = new ($T04())();
    var num = +($thisType.genRand.Next(5, 9));
    value2.X = +i;
    value2.Y = +j;
    var k = ($thisType.genRand.Next(10, 30) | 0);
    if ((i | 0) > ($thisType.dEnteranceX | 0)) {
      var num2 = -1;
    } else {
      num2 = 1;
    }
    value.Y = -1;
    value.X = +num2;
    if (($thisType.genRand.Next(3) | 0) === 0) {
      value.X = +value.X * 0.5;
    } else if (($thisType.genRand.Next(3) | 0) === 0) {
      value.Y = +value.Y * 2;
    }

    while (k > 0) {
      k = ((k - 1) | 0);
      var num3 = ((((value2.X - num) - 4) - +($thisType.genRand.Next(6))) | 0);
      var num4 = ((((value2.X + num) + 4) + +($thisType.genRand.Next(6))) | 0);
      var num5 = (((value2.Y - num) - 4) | 0);
      var num6 = ((((value2.Y + num) + 4) + +($thisType.genRand.Next(6))) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      var num7 = 1;
      if (+value2.X > +((($T00().maxTilesX | 0) / 2 | 0))) {
        num7 = -1;
      }
      var num8 = (((+value2.X + ((Math.fround($thisType.dxStrength1) * 0.6) * +num7)) + (Math.fround($thisType.dxStrength2) * +num7)) | 0);
      var num9 = ((+$thisType.dyStrength2 * 0.5) | 0);
      if (!((value2.Y >= (+$T00().worldSurface - 5)) || 
          (($T00().tile.Get(num8, ((((value2.Y - num) - 6) + +num9) | 0)).wall | 0) !== 0) || 
          (($T00().tile.Get(num8, ((((value2.Y - num) - 7) + +num9) | 0)).wall | 0) !== 0) || (($T00().tile.Get(num8, ((((value2.Y - num) - 8) + +num9) | 0)).wall | 0) !== 0))) {
        $thisType.dSurface = true;
        $thisType.TileRunner(
          num8, 
          ((((value2.Y - num) - 6) + +num9) | 0), 
          +($thisType.genRand.Next(25, 35)), 
          $thisType.genRand.Next(10, 20), 
          -1, 
          false, 
          0, 
          -1, 
          false, 
          true
        );
      }

      for (var l = num3; l < num4; l = ((l + 1) | 0)) {

        for (var m = num5; m < num6; m = ((m + 1) | 0)) {
          $T00().tile.Get(l, m).liquid = 0;
          if (($T00().tile.Get(l, m).wall | 0) !== (wallType | 0)) {
            $T00().tile.Get(l, m).wall = 0;
            $T00().tile.Get(l, m).active = true;
            $T00().tile.Get(l, m).type = (tileType & 0xFF);
          }
        }
      }

      for (var n = ((num3 + 1) | 0); n < ((num4 - 1) | 0); n = ((n + 1) | 0)) {

        for (var num10 = ((num5 + 1) | 0); num10 < ((num6 - 1) | 0); num10 = ((num10 + 1) | 0)) {
          $thisType.PlaceWall(n, num10, wallType, true);
        }
      }
      var num11 = 0;
      if (($thisType.genRand.Next(((num) | 0)) | 0) === 0) {
        num11 = ($thisType.genRand.Next(1, 3) | 0);
      }
      num3 = (((value2.X - (num * 0.5)) - +num11) | 0);
      num4 = (((value2.X + (num * 0.5)) + +num11) | 0);
      num5 = (((value2.Y - (num * 0.5)) - +num11) | 0);
      num6 = (((value2.Y + (num * 0.5)) + +num11) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }

      for (var num12 = num3; num12 < num4; num12 = ((num12 + 1) | 0)) {

        for (var num13 = num5; num13 < num6; num13 = ((num13 + 1) | 0)) {
          $T00().tile.Get(num12, num13).active = false;
          $thisType.PlaceWall(num12, num13, wallType, true);
        }
      }
      if ($thisType.dSurface) {
        k = 0;
      }
      value2 = $T04().op_Addition(value2.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
    }
    $thisType.dungeonX = ((value2.X) | 0);
    $thisType.dungeonY = ((value2.Y) | 0);
  }; 

  function WorldGen_EmptyTileCheck (startX, endX, startY, endY, ignoreStyle) {
    if ((startX | 0) < 0) {
      return false;
    }
    if ((endX | 0) >= ($T00().maxTilesX | 0)) {
      return false;
    }
    if ((startY | 0) < 0) {
      return false;
    }
    if ((endY | 0) >= ($T00().maxTilesY | 0)) {
      return false;
    }

    for (var i = (startX | 0); i < (((endX | 0) + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = (startY | 0); j < (((endY | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j).active) {
          if ((ignoreStyle | 0) === -1) {
            return false;
          }
          if (!(((ignoreStyle | 0) !== 11) || (($T00().tile.Get(i, j).type | 0) === 11))) {
            return false;
          }
          if (!(((ignoreStyle | 0) !== 20) || 
              (($T00().tile.Get(i, j).type | 0) === 20) || (($T00().tile.Get(i, j).type | 0) === 3))) {
            return false;
          }
          if (!(((ignoreStyle | 0) !== 71) || (($T00().tile.Get(i, j).type | 0) === 71))) {
            return false;
          }
        }
      }
    }
    return true;
  }; 

  function WorldGen_EveryTileFrame () {
    $thisType.noLiquidCheck = true;

    for (var i = 0; i < ($T00().maxTilesX | 0); i = ((i + 1) | 0)) {
      var num = +((+i / +($T00().maxTilesX)));
      $T00().statusText = (JSIL.ConcatString("Finding tile frames: ", $T02().$Box((((num * 100) + 1) | 0)), "%"));

      for (var j = 0; j < ($T00().maxTilesY | 0); j = ((j + 1) | 0)) {
        $thisType.TileFrame(i, j, true, false);
        $thisType.WallFrame(i, j, true);
      }
    }
    $thisType.noLiquidCheck = false;
  }; 

  function WorldGen_FloatingIsland (i, j) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(80, 120));
    var num2 = +($thisType.genRand.Next(20, 25));
    value.X = +i;
    value.Y = +j;
    value2.X = +($thisType.genRand.Next(-20, 21)) * 0.2;

    while ((+value2.X > -2) && (+value2.X < 2)) {
      value2.X = +($thisType.genRand.Next(-20, 21)) * 0.2;
    }
    value2.Y = +($thisType.genRand.Next(-20, -10)) * 0.02;

    while ((num > 0) && (num2 > 0)) {
      num -= +($thisType.genRand.Next(4));
      num2 -= 1;
      var num3 = ((value.X - (num * 0.5)) | 0);
      var num4 = ((value.X + (num * 0.5)) | 0);
      var num5 = ((value.Y - (num * 0.5)) | 0);
      var num6 = ((value.Y + (num * 0.5)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      var num7 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;
      var num8 = +value.Y + 1;

      for (var k = num3; k < num4; k = ((k + 1) | 0)) {
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num8 += +($thisType.genRand.Next(-1, 2));
        }
        if (num8 < +value.Y) {
          num8 = +value.Y;
        }
        if (num8 > (+value.Y + 2)) {
          num8 = +value.Y + 2;
        }

        for (var l = num5; l < num6; l = ((l + 1) | 0)) {
          if (+l > num8) {
            var num9 = (Math.abs((+k - +value.X)));
            var num10 = (Math.abs((+l - +value.Y))) * 2;
            var num11 = (Math.sqrt((num9 * num9) + (num10 * num10)));
            if (num11 < (num7 * 0.4)) {
              $T00().tile.Get(k, l).active = true;
            }
          }
        }
      }
      $thisType.TileRunner(
        $thisType.genRand.Next(((num3 + 10) | 0), ((num4 - 10) | 0)), 
        (((value.Y + (num7 * 0.1)) + 5) | 0), 
        +($thisType.genRand.Next(5, 10)), 
        $thisType.genRand.Next(10, 15), 
        0, 
        true, 
        0, 
        2, 
        true, 
        true
      );
      num3 = ((value.X - (num * 0.4)) | 0);
      num4 = ((value.X + (num * 0.4)) | 0);
      num5 = ((value.Y - (num * 0.4)) | 0);
      num6 = ((value.Y + (num * 0.4)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      num7 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var m = num3; m < num4; m = ((m + 1) | 0)) {

        for (var n = num5; n < num6; n = ((n + 1) | 0)) {
          if (+n > (+value.Y + 2)) {
            var num12 = (Math.abs((+m - +value.X)));
            var num13 = (Math.abs((+n - +value.Y))) * 2;
            var num14 = (Math.sqrt((num12 * num12) + (num13 * num13)));
            if (num14 < (num7 * 0.4)) {
              $T00().tile.Get(m, n).wall = 2;
            }
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value2.X > 1) {
        value2.X = 1;
      }
      if (+value2.X < -1) {
        value2.X = -1;
      }
      if (value2.Y > 0.2) {
        value2.Y = -0.2;
      }
      if (value2.Y < -0.2) {
        value2.Y = -0.2;
      }
    }
  }; 

  function WorldGen_generateWorld (seed) {
    $thisType.gen = true;
    if ((seed | 0) > 0) {
      $thisType.genRand = $S01().Construct(seed);
    } else {
      $thisType.genRand = $S01().Construct($T06().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    $T00().worldID = ($thisType.genRand.Next(2147483647) | 0);
    var num = 0;
    var num2 = 0;
    var num3 = +($T00().maxTilesY) * 0.3;
    num3 *= +($thisType.genRand.Next(90, 110)) * 0.005;
    var num4 = num3 + (+($T00().maxTilesY) * 0.2);
    num4 *= +($thisType.genRand.Next(90, 110)) * 0.01;
    var num5 = num3;
    var num6 = num3;
    var num7 = num4;
    var num8 = num4;
    if (($thisType.genRand.Next(2) | 0) === 0) {
      var num9 = -1;
    } else {
      num9 = 1;
    }

    for (var i = 0; i < ($T00().maxTilesX | 0); i = ((i + 1) | 0)) {
      var num10 = +((+i / +($T00().maxTilesX)));
      $T00().statusText = (JSIL.ConcatString("Generating world terrain: ", $T02().$Box((((num10 * 100) + 1) | 0)), "%"));
      if (num3 < num5) {
        num5 = num3;
      }
      if (num3 > num6) {
        num6 = num3;
      }
      if (num4 < num7) {
        num7 = num4;
      }
      if (num4 > num8) {
        num8 = num4;
      }
      if (num2 <= 0) {
        num = ($thisType.genRand.Next(0, 5) | 0);
        num2 = ($thisType.genRand.Next(5, 40) | 0);
        if (num === 0) {
          num2 = Math.imul(num2, ((+($thisType.genRand.Next(5, 30)) * 0.2) | 0));
        }
      }
      num2 = ((num2 - 1) | 0);
      if (num === 0) {

        while (($thisType.genRand.Next(0, 7) | 0) === 0) {
          num3 += +($thisType.genRand.Next(-1, 2));
        }
      } else if (num === 1) {

        while (($thisType.genRand.Next(0, 4) | 0) === 0) {
          num3 -= 1;
        }

        while (($thisType.genRand.Next(0, 10) | 0) === 0) {
          num3 += 1;
        }
      } else if (num === 2) {

        while (($thisType.genRand.Next(0, 4) | 0) === 0) {
          num3 += 1;
        }

        while (($thisType.genRand.Next(0, 10) | 0) === 0) {
          num3 -= 1;
        }
      } else if (num === 3) {

        while (($thisType.genRand.Next(0, 2) | 0) === 0) {
          num3 -= 1;
        }

        while (($thisType.genRand.Next(0, 6) | 0) === 0) {
          num3 += 1;
        }
      } else if (num === 4) {

        while (($thisType.genRand.Next(0, 2) | 0) === 0) {
          num3 += 1;
        }

        while (($thisType.genRand.Next(0, 5) | 0) === 0) {
          num3 -= 1;
        }
      }
      if (num3 < (+($T00().maxTilesY) * 0.15)) {
        num3 = +($T00().maxTilesY) * 0.15;
        num2 = 0;
      } else if (num3 > (+($T00().maxTilesY) * 0.3)) {
        num3 = +($T00().maxTilesY) * 0.3;
        num2 = 0;
      }

      while (($thisType.genRand.Next(0, 3) | 0) === 0) {
        num4 += +($thisType.genRand.Next(-2, 3));
      }
      if (num4 < (num3 + (+($T00().maxTilesY) * 0.05))) {
        num4 += 1;
      }
      if (num4 > (num3 + (+($T00().maxTilesY) * 0.35))) {
        num4 -= 1;
      }

      for (var num11 = 0; +num11 < num3; num11 = ((num11 + 1) | 0)) {
        $T00().tile.Get(i, num11).active = false;
        $T00().tile.Get(i, num11).lighted = true;
        $T00().tile.Get(i, num11).frameX = -1;
        $T00().tile.Get(i, num11).frameY = -1;
      }

      for (var j = ((num3) | 0); j < ($T00().maxTilesY | 0); j = ((j + 1) | 0)) {
        if (+j < num4) {
          $T00().tile.Get(i, j).active = true;
          $T00().tile.Get(i, j).type = 0;
          $T00().tile.Get(i, j).frameX = -1;
          $T00().tile.Get(i, j).frameY = -1;
        } else {
          $T00().tile.Get(i, j).active = true;
          $T00().tile.Get(i, j).type = 1;
          $T00().tile.Get(i, j).frameX = -1;
          $T00().tile.Get(i, j).frameY = -1;
        }
      }
    }
    $T00().worldSurface = num6 + 5;
    $T00().rockLayer = num8;
    var num12 = +(((+((+$T00().rockLayer - +$T00().worldSurface) / 6)) | 0) * 6);
    $T00().rockLayer = +$T00().worldSurface + num12;
    $thisType.waterLine = ((((+$T00().rockLayer + +($T00().maxTilesY)) | 0) / 2) | 0);
    $thisType.waterLine = ((($thisType.waterLine | 0) + ($thisType.genRand.Next(-100, 20) | 0)) | 0);
    $thisType.lavaLine = ((($thisType.waterLine | 0) + ($thisType.genRand.Next(50, 80) | 0)) | 0);
    var num13 = 0;
    $T00().statusText = "Adding sand...";
    var num14 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.0007) | 0), ((+($T00().maxTilesX) * 0.002) | 0)) | 0);
    num14 = ((num14 + 2) | 0);

    for (var k = 0; k < num14; k = ((k + 1) | 0)) {
      var num15 = ($thisType.genRand.Next($T00().maxTilesX) | 0);
      var num16 = ($thisType.genRand.Next(15, 90) | 0);
      if (($thisType.genRand.Next(3) | 0) === 0) {
        num16 = Math.imul(num16, 2);
      }
      var num17 = ((num15 - num16) | 0);
      num16 = ($thisType.genRand.Next(15, 90) | 0);
      if (($thisType.genRand.Next(3) | 0) === 0) {
        num16 = Math.imul(num16, 2);
      }
      var num18 = ((num15 + num16) | 0);
      if (num17 < 0) {
        num17 = 0;
      }
      if (num18 > ($T00().maxTilesX | 0)) {
        num18 = ($T00().maxTilesX | 0);
      }
      if (k === 0) {
        num17 = 0;
        num18 = ($thisType.genRand.Next(250, 300) | 0);
      } else if (k === 2) {
        num17 = ((($T00().maxTilesX | 0) - ($thisType.genRand.Next(250, 300) | 0)) | 0);
        num18 = ($T00().maxTilesX | 0);
      }
      var num19 = ($thisType.genRand.Next(50, 100) | 0);

      for (var l = num17; l < num18; l = ((l + 1) | 0)) {
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num19 = ((num19 + ($thisType.genRand.Next(-1, 2) | 0)) | 0);
          if (num19 < 50) {
            num19 = 50;
          }
          if (num19 > 100) {
            num19 = 100;
          }
        }

      $loop15: 
        for (var num20 = 0; +num20 < +$T00().worldSurface; num20 = ((num20 + 1) | 0)) {
          if ($T00().tile.Get(l, num20).active) {
            var num21 = num19;
            if (((l - num17) | 0) < num21) {
              num21 = ((l - num17) | 0);
            }
            if (((num18 - l) | 0) < num21) {
              num21 = ((num18 - l) | 0);
            }
            num21 = ((num21 + ($thisType.genRand.Next(5) | 0)) | 0);

            for (var m = num20; m < ((num20 + num21) | 0); m = ((m + 1) | 0)) {
              if (!((l <= ((num17 + ($thisType.genRand.Next(5) | 0)) | 0)) || (l >= ((num18 - ($thisType.genRand.Next(5) | 0)) | 0)))) {
                $T00().tile.Get(l, m).type = 53;
              }
            }
            break $loop15;
          }
        }
      }
    }

    for (var n = 0; n < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 8E-06) | 0); n = ((n + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next((($T00().worldSurface) | 0), (($T00().rockLayer) | 0)), 
        +($thisType.genRand.Next(15, 70)), 
        $thisType.genRand.Next(20, 130), 
        53, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $thisType.numMCaves = 0;
    $T00().statusText = "Generating hills...";

    for (var num22 = 0; num22 < ((+($T00().maxTilesX) * 0.0008) | 0); num22 = ((num22 + 1) | 0)) {
      var num23 = 0;
      var flag = false;
      var flag2 = false;
      var num24 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.25) | 0), ((+($T00().maxTilesX) * 0.75) | 0)) | 0);

    $loop19: 
      while (!flag2) {
        flag2 = true;

        while ((num24 > ((((($T00().maxTilesX | 0) / 2) | 0) - 100) | 0)) && (num24 < ((((($T00().maxTilesX | 0) / 2) | 0) + 100) | 0))) {
          num24 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.25) | 0), ((+($T00().maxTilesX) * 0.75) | 0)) | 0);
        }

      $loop21: 
        for (var num25 = 0; num25 < ($thisType.numMCaves | 0); num25 = ((num25 + 1) | 0)) {
          if (!((num24 <= ((($thisType.mCaveX[num25] | 0) - 50) | 0)) || (num24 >= ((($thisType.mCaveX[num25] | 0) + 50) | 0)))) {
            num23 = ((num23 + 1) | 0);
            flag2 = false;
            break $loop21;
          }
        }
        if (num23 >= 200) {
          flag = true;
          break $loop19;
        }
      }
      if (!flag) {

      $loop22: 
        for (var num26 = 0; +num26 < +$T00().worldSurface; num26 = ((num26 + 1) | 0)) {
          if ($T00().tile.Get(num24, num26).active) {
            $thisType.Mountinater(num24, num26);
            $thisType.mCaveX[$thisType.numMCaves] = num24;
            $thisType.mCaveY[$thisType.numMCaves] = num26;
            $thisType.numMCaves = ((($thisType.numMCaves | 0) + 1) | 0);
            break $loop22;
          }
        }
      }
    }

    for (var num27 = 1; num27 < ((($T00().maxTilesX | 0) - 1) | 0); num27 = ((num27 + 1) | 0)) {
      var num28 = +((+num27 / +($T00().maxTilesX)));
      $T00().statusText = (JSIL.ConcatString("Puttin dirt behind dirt: ", $T02().$Box((((num28 * 100) + 1) | 0)), "%"));
      var flag3 = false;
      num13 = ((num13 + ($thisType.genRand.Next(-1, 2) | 0)) | 0);
      if (num13 < 0) {
        num13 = 0;
      }
      if (num13 > 10) {
        num13 = 10;
      }

      for (var num29 = 0; !((+num29 >= (+$T00().worldSurface + 10)) || (+num29 > (+$T00().worldSurface + +num13))); num29 = ((num29 + 1) | 0)) {
        if (flag3) {
          $T00().tile.Get(num27, num29).wall = 2;
        }
        if (!(!$T00().tile.Get(num27, num29).active || 
            !$T00().tile.Get(((num27 - 1) | 0), num29).active || 
            !$T00().tile.Get(((num27 + 1) | 0), num29).active || 
            !$T00().tile.Get(num27, ((num29 + 1) | 0)).active || 
            !$T00().tile.Get(((num27 - 1) | 0), ((num29 + 1) | 0)).active || !$T00().tile.Get(((num27 + 1) | 0), ((num29 + 1) | 0)).active)) {
          flag3 = true;
        }
      }
    }
    $thisType.numIslandHouses = 0;
    $thisType.houseCount = 0;
    $T00().statusText = "Generating floating islands...";

    for (var num30 = 0; num30 < ((+($T00().maxTilesX) * 0.0008) | 0); num30 = ((num30 + 1) | 0)) {
      var num31 = 0;
      var flag4 = false;
      var num32 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.1) | 0), ((+($T00().maxTilesX) * 0.9) | 0)) | 0);

    $loop26: 
      for (var flag5 = false; !flag5; ) {
        flag5 = true;

        while ((num32 > ((((($T00().maxTilesX | 0) / 2) | 0) - 80) | 0)) && (num32 < ((((($T00().maxTilesX | 0) / 2) | 0) + 80) | 0))) {
          num32 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.1) | 0), ((+($T00().maxTilesX) * 0.9) | 0)) | 0);
        }

      $loop28: 
        for (var num33 = 0; num33 < ($thisType.numIslandHouses | 0); num33 = ((num33 + 1) | 0)) {
          if (!((num32 <= ((($thisType.fihX[num33] | 0) - 80) | 0)) || (num32 >= ((($thisType.fihX[num33] | 0) + 80) | 0)))) {
            num31 = ((num31 + 1) | 0);
            flag5 = false;
            break $loop28;
          }
        }
        if (num31 >= 200) {
          flag4 = true;
          break $loop26;
        }
      }
      if (!flag4) {

      $loop29: 
        for (var num34 = 200; +num34 < +$T00().worldSurface; num34 = ((num34 + 1) | 0)) {
          if ($T00().tile.Get(num32, num34).active) {
            var num35 = num32;
            $thisType.FloatingIsland(num35, num36);
            $thisType.fihX[$thisType.numIslandHouses] = num35;
            $thisType.fihY[$thisType.numIslandHouses] = num36;
            $thisType.numIslandHouses = ((($thisType.numIslandHouses | 0) + 1) | 0);
            break $loop29;
          }
        }
      }
    }
    $T00().statusText = "Placing rocks in the dirt...";

    for (var num37 = 0; num37 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0002) | 0); num37 = ((num37 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(0, ((((num5) | 0) + 1) | 0)), 
        +($thisType.genRand.Next(4, 15)), 
        $thisType.genRand.Next(5, 40), 
        1, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num38 = 0; num38 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0002) | 0); num38 = ((num38 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num5) | 0), ((((num6) | 0) + 1) | 0)), 
        +($thisType.genRand.Next(4, 10)), 
        $thisType.genRand.Next(5, 30), 
        1, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num39 = 0; num39 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0045) | 0); num39 = ((num39 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), ((((num8) | 0) + 1) | 0)), 
        +($thisType.genRand.Next(2, 7)), 
        $thisType.genRand.Next(2, 23), 
        1, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $T00().statusText = "Placing dirt in the rocks...";

    for (var num40 = 0; num40 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.005) | 0); num40 = ((num40 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(2, 6)), 
        $thisType.genRand.Next(2, 40), 
        0, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $T00().statusText = "Adding clay...";

    for (var num41 = 0; num41 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2E-05) | 0); num41 = ((num41 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(0, ((num5) | 0)), 
        +($thisType.genRand.Next(4, 14)), 
        $thisType.genRand.Next(10, 50), 
        40, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num42 = 0; num42 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 5E-05) | 0); num42 = ((num42 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num5) | 0), ((((num6) | 0) + 1) | 0)), 
        +($thisType.genRand.Next(8, 14)), 
        $thisType.genRand.Next(15, 45), 
        40, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num43 = 0; num43 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2E-05) | 0); num43 = ((num43 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), ((((num8) | 0) + 1) | 0)), 
        +($thisType.genRand.Next(8, 15)), 
        $thisType.genRand.Next(5, 50), 
        40, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num44 = 5; num44 < ((($T00().maxTilesX | 0) - 5) | 0); num44 = ((num44 + 1) | 0)) {

    $loop39: 
      for (var num45 = 1; +num45 < (+$T00().worldSurface - 1); num45 = ((num45 + 1) | 0)) {
        if ($T00().tile.Get(num44, num45).active) {

          for (var num46 = num45; num46 < ((num45 + 5) | 0); num46 = ((num46 + 1) | 0)) {
            if (($T00().tile.Get(num44, num46).type | 0) === 40) {
              $T00().tile.Get(num44, num46).type = 0;
            }
          }
          break $loop39;
        }
      }
    }

    for (var num47 = 0; num47 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0015) | 0); num47 = ((num47 + 1) | 0)) {
      var num48 = Math.fround(+(+num47 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0015)));
      $T00().statusText = (JSIL.ConcatString("Making random holes: ", $T02().$Box((((num48 * 100) + 1) | 0)), "%"));
      var type = -1;
      if (($thisType.genRand.Next(5) | 0) === 0) {
        type = -2;
      }
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(2, 5)), 
        $thisType.genRand.Next(2, 20), 
        type, 
        false, 
        0, 
        0, 
        false, 
        true
      );
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(8, 15)), 
        $thisType.genRand.Next(7, 30), 
        type, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num49 = 0; num49 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 3E-05) | 0); num49 = ((num49 + 1) | 0)) {
      var num50 = Math.fround(+(+num49 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 3E-05)));
      $T00().statusText = (JSIL.ConcatString("Generating small caves: ", $T02().$Box((((num50 * 100) + 1) | 0)), "%"));
      if (num8 <= +($T00().maxTilesY)) {
        var type2 = -1;
        if (($thisType.genRand.Next(6) | 0) === 0) {
          type2 = -2;
        }
        $thisType.TileRunner(
          $thisType.genRand.Next(0, $T00().maxTilesX), 
          $thisType.genRand.Next(((num5) | 0), ((((num8) | 0) + 1) | 0)), 
          +($thisType.genRand.Next(5, 15)), 
          $thisType.genRand.Next(30, 200), 
          type2, 
          false, 
          0, 
          0, 
          false, 
          true
        );
      }
    }

    for (var num51 = 0; num51 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00015) | 0); num51 = ((num51 + 1) | 0)) {
      var num52 = Math.fround(+(+num51 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00015)));
      $T00().statusText = (JSIL.ConcatString("Generating large caves: ", $T02().$Box((((num52 * 100) + 1) | 0)), "%"));
      if (num8 <= +($T00().maxTilesY)) {
        var type3 = -1;
        if (($thisType.genRand.Next(10) | 0) === 0) {
          type3 = -2;
        }
        $thisType.TileRunner(
          $thisType.genRand.Next(0, $T00().maxTilesX), 
          $thisType.genRand.Next(((num8) | 0), $T00().maxTilesY), 
          +($thisType.genRand.Next(6, 20)), 
          $thisType.genRand.Next(50, 300), 
          type3, 
          false, 
          0, 
          0, 
          false, 
          true
        );
      }
    }
    $T00().statusText = "Generating surface caves...";

    for (var num53 = 0; num53 < ((+($T00().maxTilesX) * 0.0025) | 0); num53 = ((num53 + 1) | 0)) {
      var num54 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);

    $loop45: 
      for (var num55 = 0; +num55 < num6; num55 = ((num55 + 1) | 0)) {
        if ($T00().tile.Get(num54, num55).active) {
          $thisType.TileRunner(
            num54, 
            num55, 
            +($thisType.genRand.Next(3, 6)), 
            $thisType.genRand.Next(5, 50), 
            -1, 
            false, 
            +($thisType.genRand.Next(-10, 11)) * 0.1, 
            1, 
            false, 
            true
          );
          break $loop45;
        }
      }
    }

    for (var num56 = 0; num56 < ((+($T00().maxTilesX) * 0.0007) | 0); num56 = ((num56 + 1) | 0)) {
      num54 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);

    $loop47: 
      for (var num57 = 0; +num57 < num6; num57 = ((num57 + 1) | 0)) {
        if ($T00().tile.Get(num54, num57).active) {
          $thisType.TileRunner(
            num54, 
            num57, 
            +($thisType.genRand.Next(10, 15)), 
            $thisType.genRand.Next(50, 130), 
            -1, 
            false, 
            +($thisType.genRand.Next(-10, 11)) * 0.1, 
            2, 
            false, 
            true
          );
          break $loop47;
        }
      }
    }

    for (var num58 = 0; num58 < ((+($T00().maxTilesX) * 0.0003) | 0); num58 = ((num58 + 1) | 0)) {
      num54 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);

    $loop49: 
      for (var num59 = 0; +num59 < num6; num59 = ((num59 + 1) | 0)) {
        if ($T00().tile.Get(num54, num59).active) {
          $thisType.TileRunner(
            num54, 
            num59, 
            +($thisType.genRand.Next(12, 25)), 
            $thisType.genRand.Next(150, 500), 
            -1, 
            false, 
            +($thisType.genRand.Next(-10, 11)) * 0.1, 
            4, 
            false, 
            true
          );
          $thisType.TileRunner(
            num54, 
            num59, 
            +($thisType.genRand.Next(8, 17)), 
            $thisType.genRand.Next(60, 200), 
            -1, 
            false, 
            +($thisType.genRand.Next(-10, 11)) * 0.1, 
            2, 
            false, 
            true
          );
          $thisType.TileRunner(
            num54, 
            num59, 
            +($thisType.genRand.Next(5, 13)), 
            $thisType.genRand.Next(40, 170), 
            -1, 
            false, 
            +($thisType.genRand.Next(-10, 11)) * 0.1, 
            2, 
            false, 
            true
          );
          break $loop49;
        }
      }
    }

    for (var num60 = 0; num60 < ((+($T00().maxTilesX) * 0.0004) | 0); num60 = ((num60 + 1) | 0)) {
      num54 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);

    $loop51: 
      for (var num61 = 0; +num61 < num6; num61 = ((num61 + 1) | 0)) {
        if ($T00().tile.Get(num54, num61).active) {
          $thisType.TileRunner(
            num54, 
            num61, 
            +($thisType.genRand.Next(7, 12)), 
            $thisType.genRand.Next(150, 250), 
            -1, 
            false, 
            0, 
            1, 
            true, 
            true
          );
          break $loop51;
        }
      }
    }

    for (var num62 = 0; num62 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.002) | 0); num62 = ((num62 + 1) | 0)) {
      var num63 = ($thisType.genRand.Next(1, ((($T00().maxTilesX | 0) - 1) | 0)) | 0);
      var num64 = ($thisType.genRand.Next(((num5) | 0), ((num6) | 0)) | 0);
      if (num64 >= ($T00().maxTilesY | 0)) {
        num64 = ((($T00().maxTilesY | 0) - 2) | 0);
      }
      if (!(!$T00().tile.Get(((num63 - 1) | 0), num64).active || 
          (($T00().tile.Get(((num63 - 1) | 0), num64).type | 0) !== 0) || 
          !$T00().tile.Get(((num63 + 1) | 0), num64).active || 
          (($T00().tile.Get(((num63 + 1) | 0), num64).type | 0) !== 0) || 
          !$T00().tile.Get(num63, ((num64 - 1) | 0)).active || 
          (($T00().tile.Get(num63, ((num64 - 1) | 0)).type | 0) !== 0) || 
          !$T00().tile.Get(num63, ((num64 + 1) | 0)).active || (($T00().tile.Get(num63, ((num64 + 1) | 0)).type | 0) !== 0))) {
        $T00().tile.Get(num63, num64).active = true;
        $T00().tile.Get(num63, num64).type = 2;
      }
      num63 = ($thisType.genRand.Next(1, ((($T00().maxTilesX | 0) - 1) | 0)) | 0);
      num64 = ($thisType.genRand.Next(0, ((num5) | 0)) | 0);
      if (num64 >= ($T00().maxTilesY | 0)) {
        num64 = ((($T00().maxTilesY | 0) - 2) | 0);
      }
      if (!(!$T00().tile.Get(((num63 - 1) | 0), num64).active || 
          (($T00().tile.Get(((num63 - 1) | 0), num64).type | 0) !== 0) || 
          !$T00().tile.Get(((num63 + 1) | 0), num64).active || 
          (($T00().tile.Get(((num63 + 1) | 0), num64).type | 0) !== 0) || 
          !$T00().tile.Get(num63, ((num64 - 1) | 0)).active || 
          (($T00().tile.Get(num63, ((num64 - 1) | 0)).type | 0) !== 0) || 
          !$T00().tile.Get(num63, ((num64 + 1) | 0)).active || (($T00().tile.Get(num63, ((num64 + 1) | 0)).type | 0) !== 0))) {
        $T00().tile.Get(num63, num64).active = true;
        $T00().tile.Get(num63, num64).type = 2;
      }
    }
    $T00().statusText = "Generating underground jungle: 0%";
    var num65 = +((($T00().maxTilesX | 0) / 4200 | 0));
    num65 *= 1.5;
    if (num9 === -1) {
      var num66 = ((+($T00().maxTilesX) * 0.8) | 0);
    } else {
      num66 = ((+($T00().maxTilesX) * 0.2) | 0);
    }
    var num67 = ((((+($T00().maxTilesY) + +$T00().rockLayer) | 0) / 2) | 0);
    num66 = ((num66 + ($thisType.genRand.Next(((-100 * num65) | 0), ((101 * num65) | 0)) | 0)) | 0);
    num67 = ((num67 + ($thisType.genRand.Next(((-100 * num65) | 0), ((101 * num65) | 0)) | 0)) | 0);
    $thisType.TileRunner(
      num66, 
      num67, 
      +($thisType.genRand.Next(((250 * num65) | 0), ((500 * num65) | 0))), 
      $thisType.genRand.Next(50, 150), 
      59, 
      false, 
      +(num9 * 3), 
      0, 
      false, 
      true
    );
    $T00().statusText = "Generating underground jungle: 20%";
    num66 = ((num66 + ($thisType.genRand.Next(((-250 * num65) | 0), ((251 * num65) | 0)) | 0)) | 0);
    num67 = ((num67 + ($thisType.genRand.Next(((-150 * num65) | 0), ((151 * num65) | 0)) | 0)) | 0);
    var num68 = num66;
    var num69 = num67;
    $thisType.TileRunner(
      num66, 
      num67, 
      +($thisType.genRand.Next(((250 * num65) | 0), ((500 * num65) | 0))), 
      $thisType.genRand.Next(50, 150), 
      59, 
      false, 
      0, 
      0, 
      false, 
      true
    );
    $T00().statusText = "Generating underground jungle: 40%";
    num66 = ((num66 + ($thisType.genRand.Next(((-400 * num65) | 0), ((401 * num65) | 0)) | 0)) | 0);
    num67 = ((num67 + ($thisType.genRand.Next(((-150 * num65) | 0), ((151 * num65) | 0)) | 0)) | 0);
    $thisType.TileRunner(
      num66, 
      num67, 
      +($thisType.genRand.Next(((250 * num65) | 0), ((500 * num65) | 0))), 
      $thisType.genRand.Next(50, 150), 
      59, 
      false, 
      +(num9 * -3), 
      0, 
      false, 
      true
    );
    $T00().statusText = "Generating underground jungle: 60%";
    num66 = num68;
    num67 = num69;

    for (var num70 = 0; +num70 <= (20 * num65); num70 = ((num70 + 1) | 0)) {
      $T00().statusText = (JSIL.ConcatString("Generating underground jungle: ", $T02().$Box(((60 + +((+num70 / num65))) | 0)), "%"));
      num66 = ((num66 + ($thisType.genRand.Next(((-5 * num65) | 0), ((6 * num65) | 0)) | 0)) | 0);
      num67 = ((num67 + ($thisType.genRand.Next(((-5 * num65) | 0), ((6 * num65) | 0)) | 0)) | 0);
      $thisType.TileRunner(
        num66, 
        num67, 
        +($thisType.genRand.Next(40, 100)), 
        $thisType.genRand.Next(300, 500), 
        59, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num71 = 0; +num71 <= (10 * num65); num71 = ((num71 + 1) | 0)) {
      $T00().statusText = (JSIL.ConcatString("Generating underground jungle: ", $T02().$Box(((80 + (+((+num71 / num65)) * 2)) | 0)), "%"));
      num66 = ((num68 + ($thisType.genRand.Next(((-600 * num65) | 0), ((600 * num65) | 0)) | 0)) | 0);

      for (num67 = ((num69 + ($thisType.genRand.Next(((-200 * num65) | 0), ((200 * num65) | 0)) | 0)) | 0); (num66 < 1) || 
        (num66 >= ((($T00().maxTilesX | 0) - 1) | 0)) || 
        (num67 < 1) || 
        (num67 >= ((($T00().maxTilesY | 0) - 1) | 0)) || (($T00().tile.Get(num66, num67).type | 0) !== 59); ) {
        num66 = ((num68 + ($thisType.genRand.Next(((-600 * num65) | 0), ((600 * num65) | 0)) | 0)) | 0);
        num67 = ((num69 + ($thisType.genRand.Next(((-200 * num65) | 0), ((200 * num65) | 0)) | 0)) | 0);
      }

      for (var num72 = 0; +num72 < (8 * num65); num72 = ((num72 + 1) | 0)) {
        num66 = ((num66 + ($thisType.genRand.Next(-30, 31) | 0)) | 0);
        num67 = ((num67 + ($thisType.genRand.Next(-30, 31) | 0)) | 0);
        var type4 = -1;
        if (($thisType.genRand.Next(7) | 0) === 0) {
          type4 = -2;
        }
        $thisType.TileRunner(
          num66, 
          num67, 
          +($thisType.genRand.Next(10, 20)), 
          $thisType.genRand.Next(30, 70), 
          type4, 
          false, 
          0, 
          0, 
          false, 
          true
        );
      }
    }

    for (var num73 = 0; +num73 <= (300 * num65); num73 = ((num73 + 1) | 0)) {
      num66 = ((num68 + ($thisType.genRand.Next(((-600 * num65) | 0), ((600 * num65) | 0)) | 0)) | 0);

      for (num67 = ((num69 + ($thisType.genRand.Next(((-200 * num65) | 0), ((200 * num65) | 0)) | 0)) | 0); (num66 < 1) || 
        (num66 >= ((($T00().maxTilesX | 0) - 1) | 0)) || 
        (num67 < 1) || 
        (num67 >= ((($T00().maxTilesY | 0) - 1) | 0)) || (($T00().tile.Get(num66, num67).type | 0) !== 59); ) {
        num66 = ((num68 + ($thisType.genRand.Next(((-600 * num65) | 0), ((600 * num65) | 0)) | 0)) | 0);
        num67 = ((num69 + ($thisType.genRand.Next(((-200 * num65) | 0), ((200 * num65) | 0)) | 0)) | 0);
      }
      $thisType.TileRunner(
        num66, 
        num67, 
        +($thisType.genRand.Next(4, 10)), 
        $thisType.genRand.Next(5, 30), 
        1, 
        false, 
        0, 
        0, 
        false, 
        true
      );
      if (($thisType.genRand.Next(4) | 0) === 0) {
        var type5 = ($thisType.genRand.Next(63, 69) | 0);
        $thisType.TileRunner(
          ((num66 + ($thisType.genRand.Next(-1, 2) | 0)) | 0), 
          ((num67 + ($thisType.genRand.Next(-1, 2) | 0)) | 0), 
          +($thisType.genRand.Next(3, 7)), 
          $thisType.genRand.Next(4, 8), 
          type5, 
          false, 
          0, 
          0, 
          false, 
          true
        );
      }
    }
    var num74 = +($thisType.genRand.Next(6, 10));
    num74 *= +((($T00().maxTilesX | 0) / 4200 | 0));

    for (var num76 = 0; +num76 < num74; num76 = ((num76 + 1) | 0)) {

      for (var flag6 = true; flag6; ) {
        num66 = ($thisType.genRand.Next(20, ((($T00().maxTilesX | 0) - 20) | 0)) | 0);
        num67 = ($thisType.genRand.Next(20, ((($T00().maxTilesY | 0) - 300) | 0)) | 0);
        if (($T00().tile.Get(num66, num67).type | 0) === 59) {
          flag6 = false;
          var num77 = ($thisType.genRand.Next(2, 4) | 0);
          var num78 = ($thisType.genRand.Next(2, 4) | 0);

          for (var num79 = ((((num66 - num77) | 0) - 1) | 0); num79 <= ((((num66 + num77) | 0) + 1) | 0); num79 = ((num79 + 1) | 0)) {

            for (var num80 = ((((num67 - num78) | 0) - 1) | 0); num80 <= ((((num67 + num78) | 0) + 1) | 0); num80 = ((num80 + 1) | 0)) {
              $T00().tile.Get(num79, num80).active = true;
              $T00().tile.Get(num79, num80).type = 45;
              $T00().tile.Get(num79, num80).liquid = 0;
              $T00().tile.Get(num79, num80).lava = false;
            }
          }

          for (var num81 = ((num66 - num77) | 0); num81 <= ((num66 + num77) | 0); num81 = ((num81 + 1) | 0)) {

            for (var num82 = ((num67 - num78) | 0); num82 <= ((num67 + num78) | 0); num82 = ((num82 + 1) | 0)) {
              $T00().tile.Get(num81, num82).active = false;
              $T00().tile.Get(num81, num82).wall = 10;
            }
          }
          var flag7 = false;

          for (var num83 = 0; !flag7 && (num83 < 100); ) {
            num83 = ((num83 + 1) | 0);
            var num84 = ($thisType.genRand.Next(((num66 - num77) | 0), ((((num66 + num77) | 0) + 1) | 0)) | 0);
            var num85 = ($thisType.genRand.Next(((num67 - num78) | 0), ((((num67 + num78) | 0) - 2) | 0)) | 0);
            $thisType.PlaceTile(
              num84, 
              num85, 
              4, 
              true, 
              false, 
              -1
            );
            if (($T00().tile.Get(num84, num85).type | 0) === 4) {
              flag7 = true;
            }
          }

          for (var num86 = ((((num66 - num77) | 0) - 1) | 0); num86 <= ((((num66 + num77) | 0) + 1) | 0); num86 = ((num86 + 1) | 0)) {

            for (var num87 = ((((num67 + num78) | 0) - 2) | 0); num87 <= ((num67 + num78) | 0); num87 = ((num87 + 1) | 0)) {
              $T00().tile.Get(num86, num87).active = false;
            }
          }

          for (var num88 = ((((num66 - num77) | 0) - 1) | 0); num88 <= ((((num66 + num77) | 0) + 1) | 0); num88 = ((num88 + 1) | 0)) {

            for (var num89 = ((((num67 + num78) | 0) - 2) | 0); num89 <= ((((num67 + num78) | 0) - 1) | 0); num89 = ((num89 + 1) | 0)) {
              $T00().tile.Get(num88, num89).active = false;
            }
          }

          for (var num90 = ((((num66 - num77) | 0) - 1) | 0); num90 <= ((((num66 + num77) | 0) + 1) | 0); num90 = ((num90 + 1) | 0)) {
            var num91 = 4;
            var num92 = ((((num67 + num78) | 0) + 2) | 0);

            while (!$T00().tile.Get(num90, num92).active && 
              (num92 < ($T00().maxTilesY | 0)) && (num91 > 0)) {
              $T00().tile.Get(num90, num92).active = true;
              $T00().tile.Get(num90, num92).type = 59;
              num92 = ((num92 + 1) | 0);
              num91 = ((num91 - 1) | 0);
            }
          }
          num77 = ((num77 - ($thisType.genRand.Next(1, 3) | 0)) | 0);
          var num93 = ((((num67 - num78) | 0) - 2) | 0);

          while (num77 > -1) {

            for (var num94 = ((((num66 - num77) | 0) - 1) | 0); num94 <= ((((num66 + num77) | 0) + 1) | 0); num94 = ((num94 + 1) | 0)) {
              $T00().tile.Get(num94, num93).active = true;
              $T00().tile.Get(num94, num93).type = 45;
            }
            num77 = ((num77 - ($thisType.genRand.Next(1, 3) | 0)) | 0);
            num93 = ((num93 - 1) | 0);
          }
          $thisType.JChestX[$thisType.numJChests] = num66;
          $thisType.JChestY[$thisType.numJChests] = num67;
          $thisType.numJChests = ((($thisType.numJChests | 0) + 1) | 0);
        }
      }
    }

    for (var num95 = 0; num95 < ($T00().maxTilesX | 0); num95 = ((num95 + 1) | 0)) {

      for (var num96 = (($T00().worldSurface) | 0); num96 < ($T00().maxTilesY | 0); num96 = ((num96 + 1) | 0)) {
        if ($T00().tile.Get(num95, num96).active) {
          $thisType.SpreadGrass(
            num95, 
            num96, 
            59, 
            60, 
            false
          );
        }
      }
    }
    $T00().statusText = "Adding mushroom patches...";

    for (var num97 = 0; num97 < ((($T00().maxTilesX | 0) / 300) | 0); num97 = ((num97 + 1) | 0)) {
      var i2 = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.3) | 0), ((+($T00().maxTilesX) * 0.7) | 0)) | 0);
      var j2 = ($thisType.genRand.Next((($T00().rockLayer) | 0), ((($T00().maxTilesY | 0) - 300) | 0)) | 0);
      $thisType.ShroomPatch(i2, j2);
    }

    for (var num98 = 0; num98 < ($T00().maxTilesX | 0); num98 = ((num98 + 1) | 0)) {

      for (var num99 = (($T00().worldSurface) | 0); num99 < ($T00().maxTilesY | 0); num99 = ((num99 + 1) | 0)) {
        if ($T00().tile.Get(num98, num99).active) {
          $thisType.SpreadGrass(
            num98, 
            num99, 
            59, 
            70, 
            false
          );
        }
      }
    }
    $T00().statusText = "Placing mud in the dirt...";

    for (var num100 = 0; num100 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.001) | 0); num100 = ((num100 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(2, 6)), 
        $thisType.genRand.Next(2, 40), 
        59, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $T00().statusText = "Adding shinies...";

    for (var num101 = 0; num101 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 6E-05) | 0); num101 = ((num101 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num5) | 0), ((num6) | 0)), 
        +($thisType.genRand.Next(3, 6)), 
        $thisType.genRand.Next(2, 6), 
        7, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num102 = 0; num102 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 8E-05) | 0); num102 = ((num102 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), ((num8) | 0)), 
        +($thisType.genRand.Next(3, 7)), 
        $thisType.genRand.Next(3, 7), 
        7, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num103 = 0; num103 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0002) | 0); num103 = ((num103 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(4, 9)), 
        $thisType.genRand.Next(4, 8), 
        7, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num104 = 0; num104 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 3E-05) | 0); num104 = ((num104 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num5) | 0), ((num6) | 0)), 
        +($thisType.genRand.Next(3, 7)), 
        $thisType.genRand.Next(2, 5), 
        6, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num105 = 0; num105 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 8E-05) | 0); num105 = ((num105 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), ((num8) | 0)), 
        +($thisType.genRand.Next(3, 6)), 
        $thisType.genRand.Next(3, 6), 
        6, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num106 = 0; num106 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0002) | 0); num106 = ((num106 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(4, 9)), 
        $thisType.genRand.Next(4, 8), 
        6, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num107 = 0; num107 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 3E-05) | 0); num107 = ((num107 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num6) | 0), ((num8) | 0)), 
        +($thisType.genRand.Next(3, 6)), 
        $thisType.genRand.Next(3, 6), 
        9, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num108 = 0; num108 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00017) | 0); num108 = ((num108 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(4, 9)), 
        $thisType.genRand.Next(4, 8), 
        9, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num109 = 0; num109 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00017) | 0); num109 = ((num109 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(0, ((num5) | 0)), 
        +($thisType.genRand.Next(4, 9)), 
        $thisType.genRand.Next(4, 8), 
        9, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num110 = 0; num110 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00012) | 0); num110 = ((num110 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((num7) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(4, 8)), 
        $thisType.genRand.Next(4, 8), 
        8, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }

    for (var num111 = 0; num111 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.00012) | 0); num111 = ((num111 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(0, ((((num5) | 0) - 20) | 0)), 
        +($thisType.genRand.Next(4, 8)), 
        $thisType.genRand.Next(4, 8), 
        8, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $T00().statusText = "Adding webs...";

  $loop91: 
    for (var num112 = 0; num112 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.001) | 0); num112 = ((num112 + 1) | 0)) {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            var num113 = ($thisType.genRand.Next(20, ((($T00().maxTilesX | 0) - 20) | 0)) | 0);
            var num114 = ($thisType.genRand.Next(((num5) | 0), ((($T00().maxTilesY | 0) - 20) | 0)) | 0);
            if (num112 < ($thisType.numMCaves | 0)) {
              num113 = ($thisType.mCaveX[num112] | 0);
              num114 = ($thisType.mCaveY[num112] | 0);
            }
            if (!$T00().tile.Get(num113, num114).active) {
              if (+num114 <= +$T00().worldSurface) {
                if (($T00().tile.Get(num113, num114).wall | 0) <= 0) {
                  break $labelgroup0;
                }
              }
              num114 = ((num114 + 1) | 0);
              var num115 = 1;
              if (($thisType.genRand.Next(2) | 0) === 0) {
                num115 = -1;
              }
              num113 = ((num113 - num115) | 0);
              if (!((+num114 <= +$T00().worldSurface) && (($T00().tile.Get(num113, num114).wall | 0) <= 0))) {
                $thisType.TileRunner(
                  num113, 
                  num114, 
                  +($thisType.genRand.Next(4, 13)), 
                  $thisType.genRand.Next(2, 5), 
                  51, 
                  true, 
                  +num115, 
                  -1, 
                  false, 
                  false
                );
              }
            }
            break $labelgroup0;

        }
      }
      /* Original label IL_2A1E */ 
    }
    $T00().statusText = "Creating underworld: 0%";
    var num116 = ((($T00().maxTilesY | 0) - ($thisType.genRand.Next(150, 190) | 0)) | 0);

    for (var num117 = 0; num117 < ($T00().maxTilesX | 0); num117 = ((num117 + 1) | 0)) {
      num116 = ((num116 + ($thisType.genRand.Next(-3, 4) | 0)) | 0);
      if (num116 < ((($T00().maxTilesY | 0) - 190) | 0)) {
        num116 = ((($T00().maxTilesY | 0) - 190) | 0);
      }
      if (num116 > ((($T00().maxTilesY | 0) - 160) | 0)) {
        num116 = ((($T00().maxTilesY | 0) - 160) | 0);
      }

      for (var num118 = ((((num116 - 20) | 0) - ($thisType.genRand.Next(3) | 0)) | 0); num118 < ($T00().maxTilesY | 0); num118 = ((num118 + 1) | 0)) {
        if (num118 >= num116) {
          $T00().tile.Get(num117, num118).active = false;
          $T00().tile.Get(num117, num118).lava = false;
          $T00().tile.Get(num117, num118).liquid = 0;
        } else {
          $T00().tile.Get(num117, num118).type = 57;
        }
      }
    }
    var num119 = ((($T00().maxTilesY | 0) - ($thisType.genRand.Next(40, 70) | 0)) | 0);

    for (var num120 = 10; num120 < ((($T00().maxTilesX | 0) - 10) | 0); num120 = ((num120 + 1) | 0)) {
      num119 = ((num119 + ($thisType.genRand.Next(-10, 11) | 0)) | 0);
      if (num119 > ((($T00().maxTilesY | 0) - 60) | 0)) {
        num119 = ((($T00().maxTilesY | 0) - 60) | 0);
      }
      if (num119 < ((($T00().maxTilesY | 0) - 100) | 0)) {
        num119 = ((($T00().maxTilesY | 0) - 120) | 0);
      }

      for (var num121 = num119; num121 < ((($T00().maxTilesY | 0) - 10) | 0); num121 = ((num121 + 1) | 0)) {
        if (!$T00().tile.Get(num120, num121).active) {
          $T00().tile.Get(num120, num121).lava = true;
          $T00().tile.Get(num120, num121).liquid = 255;
        }
      }
    }

    for (var num122 = 0; num122 < ($T00().maxTilesX | 0); num122 = ((num122 + 1) | 0)) {
      if (($thisType.genRand.Next(50) | 0) === 0) {
        $thisType.TileRunner(
          $thisType.genRand.Next(0, $T00().maxTilesX), 
          ((num123 + ($thisType.genRand.Next(20, 50) | 0)) | 0), 
          +($thisType.genRand.Next(15, 20)), 
          1000, 
          57, 
          true, 
          0, 
          +($thisType.genRand.Next(1, 3)), 
          true, 
          true
        );
      }
    }
    $T13().QuickWater(-2, -1, -1);

    for (var num124 = 0; num124 < ($T00().maxTilesX | 0); num124 = ((num124 + 1) | 0)) {
      var num125 = +((+num124 / +(($T00().maxTilesX | 0) - 1)));
      $T00().statusText = (JSIL.ConcatString("Creating underworld: ", $T02().$Box(((+(((num125 * 100) / 2)) + 50) | 0)), "%"));
      if (($thisType.genRand.Next(13) | 0) === 0) {
        $thisType.TileRunner(
          num124, 
          ((num126 - ($thisType.genRand.Next(2, 5) | 0)) | 0), 
          +($thisType.genRand.Next(5, 30)), 
          1000, 
          57, 
          true, 
          0, 
          +($thisType.genRand.Next(1, 3)), 
          true, 
          true
        );
        var num127 = +($thisType.genRand.Next(1, 3));
        if (($thisType.genRand.Next(3) | 0) === 0) {
          num127 *= 0.5;
        }
        if (($thisType.genRand.Next(2) | 0) === 0) {
          $thisType.TileRunner(
            num124, 
            ((num126 - ($thisType.genRand.Next(2, 5) | 0)) | 0), 
            +(((+($thisType.genRand.Next(5, 15)) * num127) | 0)), 
            ((+($thisType.genRand.Next(10, 15)) * num127) | 0), 
            57, 
            true, 
            1, 
            0.3, 
            false, 
            true
          );
        }
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num127 = +($thisType.genRand.Next(1, 3));
          $thisType.TileRunner(
            num124, 
            ((num126 - ($thisType.genRand.Next(2, 5) | 0)) | 0), 
            +(((+($thisType.genRand.Next(5, 15)) * num127) | 0)), 
            ((+($thisType.genRand.Next(10, 15)) * num127) | 0), 
            57, 
            true, 
            -1, 
            0.3, 
            false, 
            true
          );
        }
        $thisType.TileRunner(
          ((num124 + ($thisType.genRand.Next(-10, 10) | 0)) | 0), 
          ((num126 + ($thisType.genRand.Next(-10, 10) | 0)) | 0), 
          +($thisType.genRand.Next(5, 15)), 
          $thisType.genRand.Next(5, 10), 
          -2, 
          false, 
          +($thisType.genRand.Next(-1, 3)), 
          +($thisType.genRand.Next(-1, 3)), 
          false, 
          true
        );
        if (($thisType.genRand.Next(3) | 0) === 0) {
          $thisType.TileRunner(
            ((num124 + ($thisType.genRand.Next(-10, 10) | 0)) | 0), 
            ((num126 + ($thisType.genRand.Next(-10, 10) | 0)) | 0), 
            +($thisType.genRand.Next(10, 30)), 
            $thisType.genRand.Next(10, 20), 
            -2, 
            false, 
            +($thisType.genRand.Next(-1, 3)), 
            +($thisType.genRand.Next(-1, 3)), 
            false, 
            true
          );
        }
        if (($thisType.genRand.Next(5) | 0) === 0) {
          $thisType.TileRunner(
            ((num124 + ($thisType.genRand.Next(-15, 15) | 0)) | 0), 
            ((num126 + ($thisType.genRand.Next(-15, 10) | 0)) | 0), 
            +($thisType.genRand.Next(15, 30)), 
            $thisType.genRand.Next(5, 20), 
            -2, 
            false, 
            +($thisType.genRand.Next(-1, 3)), 
            +($thisType.genRand.Next(-1, 3)), 
            false, 
            true
          );
        }
      }
    }

    for (var num128 = 0; num128 < ($T00().maxTilesX | 0); num128 = ((num128 + 1) | 0)) {
      if (!$T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 145) | 0)).active) {
        $T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 145) | 0)).liquid = 255;
        $T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 145) | 0)).lava = true;
      }
      if (!$T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 144) | 0)).active) {
        $T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 144) | 0)).liquid = 255;
        $T00().tile.Get(num128, ((($T00().maxTilesY | 0) - 144) | 0)).lava = true;
      }
    }

    for (var num129 = 0; num129 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.002) | 0); num129 = ((num129 + 1) | 0)) {
      $thisType.TileRunner(
        $thisType.genRand.Next(0, $T00().maxTilesX), 
        $thisType.genRand.Next(((($T00().maxTilesY | 0) - 140) | 0), $T00().maxTilesY), 
        +($thisType.genRand.Next(3, 8)), 
        $thisType.genRand.Next(3, 8), 
        58, 
        false, 
        0, 
        0, 
        false, 
        true
      );
    }
    $thisType.AddHellHouses();
    var num130 = ($thisType.genRand.Next(2, ((+($T00().maxTilesX) * 0.005) | 0)) | 0);

    for (var num131 = 0; num131 < num130; num131 = ((num131 + 1) | 0)) {
      var num132 = +((+num131 / +num130));
      $T00().statusText = (JSIL.ConcatString("Adding water bodies: ", $T02().$Box(((num132 * 100) | 0)), "%"));

      for (var num133 = ($thisType.genRand.Next(300, ((($T00().maxTilesX | 0) - 300) | 0)) | 0); (num133 > ((((($T00().maxTilesX | 0) / 2) | 0) - 50) | 0)) && (num133 < ((((($T00().maxTilesX | 0) / 2) | 0) + 50) | 0)); ) {
        num133 = ($thisType.genRand.Next(300, ((($T00().maxTilesX | 0) - 300) | 0)) | 0);
      }
      $thisType.Lakinater(num133, num134);
    }
    if (num9 === -1) {
      var x = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.05) | 0), ((+($T00().maxTilesX) * 0.2) | 0)) | 0);
    } else {
      x = ($thisType.genRand.Next(((+($T00().maxTilesX) * 0.8) | 0), ((+($T00().maxTilesX) * 0.95) | 0)) | 0);
    }
    var y = ((((+((+$T00().rockLayer + +($T00().maxTilesY)) / 2)) | 0) + ($thisType.genRand.Next(-200, 200) | 0)) | 0);
    $thisType.MakeDungeon(x, y, 41, 7);

    for (var num135 = 0; +num135 < (+($T00().maxTilesX) * 0.0004); num135 = ((num135 + 1) | 0)) {
      var num136 = Math.fround(+(+num135 / (+($T00().maxTilesX) * 0.0004)));
      $T00().statusText = (JSIL.ConcatString("Making the world evil: ", $T02().$Box(((num136 * 100) | 0)), "%"));
      var flag8 = false;
      var num137 = 0;
      var num138 = 0;
      var num139 = 0;

      while (!flag8) {
        flag8 = true;
        var num140 = ((($T00().maxTilesX | 0) / 2) | 0);
        num137 = ($thisType.genRand.Next($T00().maxTilesX) | 0);
        num138 = ((((num137 - ($thisType.genRand.Next(150) | 0)) | 0) - 175) | 0);
        num139 = ((((num137 + ($thisType.genRand.Next(150) | 0)) | 0) + 175) | 0);
        if (num138 < 0) {
          num138 = 0;
        }
        if (num139 > ($T00().maxTilesX | 0)) {
          num139 = ($T00().maxTilesX | 0);
        }
        if (!((num137 <= ((num140 - 200) | 0)) || (num137 >= ((num140 + 200) | 0)))) {
          flag8 = false;
        }
        if (!((num138 <= ((num140 - 200) | 0)) || (num138 >= ((num140 + 200) | 0)))) {
          flag8 = false;
        }
        if (!((num139 <= ((num140 - 200) | 0)) || (num139 >= ((num140 + 200) | 0)))) {
          flag8 = false;
        }

        for (var num142 = num138; num142 < num139; num142 = ((num142 + 1) | 0)) {

        $loop110: 
          for (var num143 = 0; num143 < (($T00().worldSurface) | 0); num143 = ((num143 + 5) | 0)) {
            if (!(!$T00().tile.Get(num142, num143).active || !$T00().tileDungeon[$T00().tile.Get(num142, num143).type])) {
              flag8 = false;
              break $loop110;
            }
            if (!flag8) {
              break $loop110;
            }
          }
        }
      }
      var num144 = 0;

      for (var num145 = num138; num145 < num139; num145 = ((num145 + 1) | 0)) {
        if (num144 > 0) {
          num144 = ((num144 - 1) | 0);
        }
        if (!((num145 !== num137) && (num144 !== 0))) {

        $loop112: 
          for (var num146 = ((num5) | 0); +num146 < (+$T00().worldSurface - 1); ) {
            if (!(!$T00().tile.Get(num145, num146).active && (($T00().tile.Get(num145, num146).wall | 0) <= 0))) {
              if (num145 === num137) {
                num144 = 20;
                $thisType.ChasmRunner(num145, num146, ((($thisType.genRand.Next(150) | 0) + 150) | 0), true);
                break $loop112;
              }
              if (!((($thisType.genRand.Next(30) | 0) !== 0) || (num144 !== 0))) {
                num144 = 20;
                var makeOrb = false;
                if (($thisType.genRand.Next(2) | 0) === 0) {
                  makeOrb = true;
                }
                $thisType.ChasmRunner(num145, num146, ((($thisType.genRand.Next(50) | 0) + 50) | 0), makeOrb);
                break $loop112;
              }
              break $loop112;
            } else {
              num146 = ((num146 + 1) | 0);
            }
          }
        }
      }
      var num147 = +$T00().worldSurface + 40;

      for (var num148 = num138; num148 < num139; num148 = ((num148 + 1) | 0)) {
        num147 += +($thisType.genRand.Next(-2, 3));
        if (num147 < (+$T00().worldSurface + 30)) {
          num147 = +$T00().worldSurface + 30;
        }
        if (num147 > (+$T00().worldSurface + 50)) {
          num147 = +$T00().worldSurface + 50;
        }
        num54 = num148;
        var flag9 = false;

        for (var num149 = ((num5) | 0); +num149 < num147; num149 = ((num149 + 1) | 0)) {
          if ($T00().tile.Get(num54, num149).active) {
            if (!((($T00().tile.Get(num54, num149).type | 0) !== 0) || 
                (+num149 >= (+$T00().worldSurface - 1)) || flag9)) {
              $thisType.SpreadGrass(
                num54, 
                num149, 
                0, 
                23, 
                true
              );
            }
            flag9 = true;
            if (!((($T00().tile.Get(num54, num149).type | 0) !== 1) || 
                (num54 < ((num138 + ($thisType.genRand.Next(5) | 0)) | 0)) || (num54 > ((num139 - ($thisType.genRand.Next(5) | 0)) | 0)))) {
              $T00().tile.Get(num54, num149).type = 25;
            }
            if (($T00().tile.Get(num54, num149).type | 0) === 2) {
              $T00().tile.Get(num54, num149).type = 23;
            }
          }
        }
      }

      for (var num150 = num138; num150 < num139; num150 = ((num150 + 1) | 0)) {

        for (var num151 = 0; num151 < ((($T00().maxTilesY | 0) - 50) | 0); num151 = ((num151 + 1) | 0)) {
          if (!(!$T00().tile.Get(num150, num151).active || (($T00().tile.Get(num150, num151).type | 0) !== 31))) {
            var num152 = ((num150 - 13) | 0);
            var num153 = ((num150 + 13) | 0);
            var num154 = ((num151 - 13) | 0);
            var num155 = ((num151 + 13) | 0);

            for (var num156 = num152; num156 < num153; num156 = ((num156 + 1) | 0)) {
              if (!((num156 <= 10) || (num156 >= ((($T00().maxTilesX | 0) - 10) | 0)))) {

                for (var num157 = num154; num157 < num155; num157 = ((num157 + 1) | 0)) {
                  if (!(((((Math.abs(((num156 - num150) | 0))) + (Math.abs(((num157 - num151) | 0)))) | 0) >= ((9 + ($thisType.genRand.Next(11) | 0)) | 0)) || 
                      (($thisType.genRand.Next(3) | 0) === 0) || (($T00().tile.Get(num156, num157).type | 0) === 31))) {
                    $T00().tile.Get(num156, num157).active = true;
                    $T00().tile.Get(num156, num157).type = 25;
                    if (!(((Math.abs(((num156 - num150) | 0))) > 1) || ((Math.abs(((num157 - num151) | 0))) > 1))) {
                      $T00().tile.Get(num156, num157).active = false;
                    }
                  }
                  if (!((($T00().tile.Get(num156, num157).type | 0) === 31) || 
                      ((Math.abs(((num156 - num150) | 0))) > ((2 + ($thisType.genRand.Next(3) | 0)) | 0)) || ((Math.abs(((num157 - num151) | 0))) > ((2 + ($thisType.genRand.Next(3) | 0)) | 0)))) {
                    $T00().tile.Get(num156, num157).active = false;
                  }
                }
              }
            }
          }
        }
      }
    }
    $T00().statusText = "Generating mountain caves...";

    for (var num158 = 0; num158 < ($thisType.numMCaves | 0); num158 = ((num158 + 1) | 0)) {
      var i3 = ($thisType.mCaveX[num158] | 0);
      var j3 = ($thisType.mCaveY[num158] | 0);
      $thisType.CaveOpenater(i3, j3);
      $thisType.Cavinator(i3, j3, $thisType.genRand.Next(40, 50));
    }
    $T00().statusText = "Creating beaches...";

    for (var num159 = 0; num159 < 2; num159 = ((num159 + 1) | 0)) {
      if (num159 === 0) {
        var num160 = 0;
        var num161 = ($thisType.genRand.Next(125, 200) | 0);
        var num162 = 1;

        for (var num164 = ((num161 - 1) | 0); num164 >= num160; num164 = ((num164 - 1) | 0)) {
          num162 += +($thisType.genRand.Next(10, 20)) * 0.05;

          for (var num165 = 0; +num165 < (+num163 + num162); num165 = ((num165 + 1) | 0)) {
            if (+num165 < ((+num163 + (num162 * 0.75)) - 3)) {
              $T00().tile.Get(num164, num165).active = false;
              if (num165 > num163) {
                $T00().tile.Get(num164, num165).liquid = 255;
              } else if (num165 === num163) {
                $T00().tile.Get(num164, num165).liquid = 127;
              }
            } else if (num165 > num163) {
              $T00().tile.Get(num164, num165).type = 53;
              $T00().tile.Get(num164, num165).active = true;
            }
            $T00().tile.Get(num164, num165).wall = 0;
          }
        }
      } else {
        num160 = ((($T00().maxTilesX | 0) - ($thisType.genRand.Next(125, 200) | 0)) | 0);
        num161 = ($T00().maxTilesX | 0);
        var num166 = 1;

        for (var num168 = num160; num168 < num161; num168 = ((num168 + 1) | 0)) {
          num166 += +($thisType.genRand.Next(10, 20)) * 0.05;

          for (var num169 = 0; +num169 < (+num167 + num166); num169 = ((num169 + 1) | 0)) {
            if (+num169 < ((+num167 + (num166 * 0.75)) - 3)) {
              $T00().tile.Get(num168, num169).active = false;
              if (num169 > num167) {
                $T00().tile.Get(num168, num169).liquid = 255;
              } else if (num169 === num167) {
                $T00().tile.Get(num168, num169).liquid = 127;
              }
            } else if (num169 > num167) {
              $T00().tile.Get(num168, num169).type = 53;
              $T00().tile.Get(num168, num169).active = true;
            }
            $T00().tile.Get(num168, num169).wall = 0;
          }
        }
      }
    }
    $T00().statusText = "Adding gems...";

    for (var num170 = 63; num170 <= 68; num170 = ((num170 + 1) | 0)) {
      var num171 = 0;
      if (num170 === 67) {
        num171 = +($T00().maxTilesX) * 0.5;
      } else if (num170 === 66) {
        num171 = +($T00().maxTilesX) * 0.45;
      } else if (num170 === 63) {
        num171 = +($T00().maxTilesX) * 0.3;
      } else if (num170 === 65) {
        num171 = +($T00().maxTilesX) * 0.25;
      } else if (num170 === 64) {
        num171 = +($T00().maxTilesX) * 0.1;
      } else if (num170 === 68) {
        num171 = +($T00().maxTilesX) * 0.05;
      }
      num171 *= 0.2;

      for (var num172 = 0; +num172 < num171; num172 = ((num172 + 1) | 0)) {
        var num173 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);

        for (var num174 = ($thisType.genRand.Next((($T00().worldSurface) | 0), $T00().maxTilesY) | 0); ($T00().tile.Get(num173, num174).type | 0) !== 1; ) {
          num173 = ($thisType.genRand.Next(0, $T00().maxTilesX) | 0);
          num174 = ($thisType.genRand.Next((($T00().worldSurface) | 0), $T00().maxTilesY) | 0);
        }
        $thisType.TileRunner(
          num173, 
          num174, 
          +($thisType.genRand.Next(2, 6)), 
          $thisType.genRand.Next(3, 7), 
          num170, 
          false, 
          0, 
          0, 
          false, 
          true
        );
      }
    }

    for (var num175 = 0; num175 < ($T00().maxTilesX | 0); num175 = ((num175 + 1) | 0)) {
      var num176 = +((+num175 / +(($T00().maxTilesX | 0) - 1)));
      $T00().statusText = (JSIL.ConcatString("Gravitating sand: ", $T02().$Box(((num176 * 100) | 0)), "%"));

      for (var num177 = ((($T00().maxTilesY | 0) - 5) | 0); num177 > 0; num177 = ((num177 - 1) | 0)) {
        if (!(!$T00().tile.Get(num175, num177).active || (($T00().tile.Get(num175, num177).type | 0) !== 53))) {

          for (var num178 = num177; !$T00().tile.Get(num175, ((num178 + 1) | 0)).active && (num178 < ((($T00().maxTilesY | 0) - 5) | 0)); num178 = ((num178 + 1) | 0)) {
            $T00().tile.Get(num175, ((num178 + 1) | 0)).active = true;
            $T00().tile.Get(num175, ((num178 + 1) | 0)).type = 53;
          }
        }
      }
    }

    for (var num179 = 3; num179 < ((($T00().maxTilesX | 0) - 3) | 0); num179 = ((num179 + 1) | 0)) {
      var num180 = +((+num179 / +($T00().maxTilesX)));
      $T00().statusText = (JSIL.ConcatString("Cleaning up dirt backgrounds: ", $T02().$Box((((num180 * 100) + 1) | 0)), "%"));

    $loop134: 
      for (var num181 = 0; +num181 < +$T00().worldSurface; num181 = ((num181 + 1) | 0)) {
        if (($T00().tile.Get(num179, num181).wall | 0) === 2) {
          $T00().tile.Get(num179, num181).wall = 0;
        }
        if (($T00().tile.Get(num179, num181).type | 0) !== 53) {
          if (($T00().tile.Get(((num179 - 1) | 0), num181).wall | 0) === 2) {
            $T00().tile.Get(((num179 - 1) | 0), num181).wall = 0;
          }
          if (!((($T00().tile.Get(((num179 - 2) | 0), num181).wall | 0) !== 2) || (($thisType.genRand.Next(2) | 0) !== 0))) {
            $T00().tile.Get(((num179 - 2) | 0), num181).wall = 0;
          }
          if (!((($T00().tile.Get(((num179 - 3) | 0), num181).wall | 0) !== 2) || (($thisType.genRand.Next(2) | 0) !== 0))) {
            $T00().tile.Get(((num179 - 3) | 0), num181).wall = 0;
          }
          if (($T00().tile.Get(((num179 + 1) | 0), num181).wall | 0) === 2) {
            $T00().tile.Get(((num179 + 1) | 0), num181).wall = 0;
          }
          if (!((($T00().tile.Get(((num179 + 2) | 0), num181).wall | 0) !== 2) || (($thisType.genRand.Next(2) | 0) !== 0))) {
            $T00().tile.Get(((num179 + 2) | 0), num181).wall = 0;
          }
          if (!((($T00().tile.Get(((num179 + 3) | 0), num181).wall | 0) !== 2) || (($thisType.genRand.Next(2) | 0) !== 0))) {
            $T00().tile.Get(((num179 + 3) | 0), num181).wall = 0;
          }
          if ($T00().tile.Get(num179, num181).active) {
            break $loop134;
          }
        }
      }
    }

    for (var num182 = 0; num182 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2E-05) | 0); num182 = ((num182 + 1) | 0)) {
      var num183 = Math.fround(+(+num182 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2E-05)));
      $T00().statusText = (JSIL.ConcatString("Placing alters: ", $T02().$Box((((num183 * 100) + 1) | 0)), "%"));
      var flag10 = false;
      var num184 = 0;

      while (!flag10) {
        var num185 = ($thisType.genRand.Next(1, $T00().maxTilesX) | 0);
        var num186 = ((num6 + 20) | 0);
        $thisType.Place3x2(num185, num186, 26);
        if (($T00().tile.Get(num185, num186).type | 0) === 26) {
          flag10 = true;
        } else {
          num184 = ((num184 + 1) | 0);
          if (num184 >= 10000) {
            flag10 = true;
          }
        }
      }
    }
    $T13().QuickWater(3, -1, -1);
    $thisType.WaterCheck();
    var num187 = 0;
    $T13().quickSettle = true;

    while (num187 < 10) {
      var num188 = ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0);
      num187 = ((num187 + 1) | 0);
      var num189 = 0;

      while (($T13().numLiquid | 0) > 0) {
        var num190 = +((+(num188 - ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0)) / +num188));
        if (((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0) > num188) {
          num188 = ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0);
        }
        if (num190 > num189) {
          num189 = num190;
        } else {
          num190 = num189;
        }
        if (num187 === 1) {
          $T00().statusText = (JSIL.ConcatString("Settling liquids: ", $T02().$Box(((+(((num190 * 100) / 3)) + 33) | 0)), "%"));
        }
        if (num187 > 10) {
        }
        $T13().UpdateLiquid();
      }
      $thisType.WaterCheck();
      $T00().statusText = (JSIL.ConcatString("Settling liquids: ", $T02().$Box(((+(((+num187 * 10) / 3)) + 66) | 0)), "%"));
    }
    $T13().quickSettle = false;

    for (var num192 = 0; num192 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2.5E-05) | 0); num192 = ((num192 + 1) | 0)) {
      var num193 = Math.fround(+(+num192 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 2.5E-05)));
      $T00().statusText = (JSIL.ConcatString("Placing life crystals: ", $T02().$Box((((num193 * 100) + 1) | 0)), "%"));
      var flag11 = false;
      var num194 = 0;

      while (!flag11) {
        if ($thisType.AddLifeCrystal(
            $thisType.genRand.Next(1, $T00().maxTilesX), 
            $thisType.genRand.Next(((num6 + 20) | 0), $T00().maxTilesY)
          )) {
          flag11 = true;
        } else {
          num194 = ((num194 + 1) | 0);
          if (num194 >= 10000) {
            flag11 = true;
          }
        }
      }
    }

    for (var num195 = 0; num195 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 1.8E-05) | 0); num195 = ((num195 + 1) | 0)) {
      var num196 = Math.fround(+(+num195 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 1.8E-05)));
      $T00().statusText = (JSIL.ConcatString("Hiding treasure: ", $T02().$Box((((num196 * 100) + 1) | 0)), "%"));
      var flag12 = false;
      var num197 = 0;

      while (!flag12) {
        if ($thisType.AddBuriedChest(
            $thisType.genRand.Next(1, $T00().maxTilesX), 
            $thisType.genRand.Next(((num6 + 20) | 0), $T00().maxTilesY), 
            0
          )) {
          flag12 = true;
        } else {
          num197 = ((num197 + 1) | 0);
          if (num197 >= 10000) {
            flag12 = true;
          }
        }
      }
    }
    var num198 = 0;

    for (var num199 = 0; num199 < ($thisType.numJChests | 0); num199 = ((num199 + 1) | 0)) {
      num198 = ((num198 + 1) | 0);
      var contain = 211;
      if (num198 === 1) {
        contain = 211;
      } else if (num198 === 2) {
        contain = 212;
      } else if (num198 === 3) {
        contain = 213;
      }
      if (num198 > 3) {
        num198 = 0;
      }
      if (!$thisType.AddBuriedChest(((($thisType.JChestX[num199] | 0) + ($thisType.genRand.Next(2) | 0)) | 0), $thisType.JChestY[num199], contain)) {

        for (var num200 = ($thisType.JChestX[num199] | 0); num200 <= ((($thisType.JChestX[num199] | 0) + 1) | 0); num200 = ((num200 + 1) | 0)) {

          for (var num201 = ($thisType.JChestY[num199] | 0); num201 <= ((($thisType.JChestY[num199] | 0) + 1) | 0); num201 = ((num201 + 1) | 0)) {
            $thisType.KillTile(
              num200, 
              num201, 
              false, 
              false, 
              false
            );
          }
        }
        $thisType.AddBuriedChest($thisType.JChestX[num199], $thisType.JChestY[num199], contain);
      }
    }
    var num202 = +((($T00().maxTilesX | 0) / 4200 | 0));
    var num203 = 0;

    for (var num204 = 0; +num204 < (10 * num202); num204 = ((num204 + 1) | 0)) {
      num203 = ((num203 + 1) | 0);
      if (num203 === 1) {
        var contain2 = 186;
      } else {
        contain2 = 187;
        num203 = 0;
      }

      for (var flag13 = false; !flag13; ) {
        var num205 = ($thisType.genRand.Next(1, $T00().maxTilesX) | 0);

        for (var num206 = ($thisType.genRand.Next(1, ((($T00().maxTilesY | 0) - 200) | 0)) | 0); (($T00().tile.Get(num205, num206).liquid | 0) < 200) || $T00().tile.Get(num205, num206).lava; ) {
          num205 = ($thisType.genRand.Next(1, $T00().maxTilesX) | 0);
          num206 = ($thisType.genRand.Next(1, ((($T00().maxTilesY | 0) - 200) | 0)) | 0);
        }
        flag13 = $thisType.AddBuriedChest(num205, num206, contain2);
      }
    }

    for (var num207 = 0; num207 < ($thisType.numIslandHouses | 0); num207 = ((num207 + 1) | 0)) {
      $thisType.IslandHouse($thisType.fihX[num207], $thisType.fihY[num207]);
    }

    for (var num208 = 0; num208 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0008) | 0); num208 = ((num208 + 1) | 0)) {
      var num209 = Math.fround(+(+num208 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 0.0008)));
      $T00().statusText = (JSIL.ConcatString("Placing breakables: ", $T02().$Box((((num209 * 100) + 1) | 0)), "%"));
      var flag14 = false;
      var num210 = 0;

      while (!flag14) {
        var num211 = ($thisType.genRand.Next(((num6) | 0), ((($T00().maxTilesY | 0) - 10) | 0)) | 0);
        if (num209 > 0.93) {
          num211 = ((($T00().maxTilesY | 0) - 150) | 0);
        } else if (num209 > 0.75) {
          num211 = ((num5) | 0);
        }
        var num212 = ($thisType.genRand.Next(1, $T00().maxTilesX) | 0);
        var flag15 = false;

      $loop152: 
        for (var num213 = num211; num213 < ($T00().maxTilesY | 0); num213 = ((num213 + 1) | 0)) {
          if (!flag15) {
            if (!(!$T00().tile.Get(num212, num213).active || 
                !$T00().tileSolid[$T00().tile.Get(num212, num213).type] || $T00().tile.Get(num212, ((num213 - 1) | 0)).lava)) {
              flag15 = true;
            }
          } else {
            if ($thisType.PlacePot(num212, num213, 28)) {
              flag14 = true;
              break $loop152;
            }
            num210 = ((num210 + 1) | 0);
            if (num210 >= 10000) {
              flag14 = true;
              break $loop152;
            }
          }
        }
      }
    }

    for (var num214 = 0; num214 < ((+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 1E-05) | 0); num214 = ((num214 + 1) | 0)) {
      var num215 = Math.fround(+(+num214 / (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * 1E-05)));
      $T00().statusText = (JSIL.ConcatString("Placing hellforges: ", $T02().$Box((((num215 * 100) + 1) | 0)), "%"));
      var flag16 = false;
      var num216 = 0;

      while (!flag16) {
        var num217 = ($thisType.genRand.Next(1, $T00().maxTilesX) | 0);
        var num218 = ($thisType.genRand.Next(((($T00().maxTilesY | 0) - 250) | 0), ((($T00().maxTilesY | 0) - 5) | 0)) | 0);
        if (($T00().tile.Get(num217, num218).wall | 0) === 13) {
          num218 = ((num218 - 1) | 0);
          $thisType.PlaceTile(
            num217, 
            num218, 
            77, 
            false, 
            false, 
            -1
          );
          if (($T00().tile.Get(num217, num218).type | 0) === 77) {
            flag16 = true;
          } else {
            num216 = ((num216 + 1) | 0);
            if (num216 >= 10000) {
              flag16 = true;
            }
          }
        }
      }
    }
    $T00().statusText = "Spreading grass...";

    for (var num219 = 0; num219 < ($T00().maxTilesX | 0); num219 = ((num219 + 1) | 0)) {
      num54 = num219;
      var flag17 = true;

    $loop157: 
      for (var num220 = 0; +num220 < (+$T00().worldSurface - 1); num220 = ((num220 + 1) | 0)) {
        if ($T00().tile.Get(num54, num220).active) {
          if (!(!flag17 || (($T00().tile.Get(num54, num220).type | 0) !== 0))) {
            $thisType.SpreadGrass(
              num54, 
              num220, 
              0, 
              2, 
              true
            );
          }
          if (+num220 > num6) {
            break $loop157;
          }
          flag17 = false;
        } else if (($T00().tile.Get(num54, num220).wall | 0) === 0) {
          flag17 = true;
        }
      }
    }

  $loop158: 
    for (var num221 = 0; num221 < ($T00().maxTilesY | 0); num221 = ((num221 + 1) | 0)) {
      var num222 = ((($T00().maxTilesX | 0) / 2) | 0);
      if ($T00().tile.Get(num222, num221).active) {
        $T00().spawnTileX = num222;
        $T00().spawnTileY = num221;
        $T00().tile.Get(num222, ((num221 - 1) | 0)).lighted = true;
        break $loop158;
      }
    }
    var num223 = 10;

    while (+($T00().spawnTileY) > +$T00().worldSurface) {
      var num224 = ($thisType.genRand.Next(((((($T00().maxTilesX | 0) / 2) | 0) - num223) | 0), ((((($T00().maxTilesX | 0) / 2) | 0) + num223) | 0)) | 0);

    $loop160: 
      for (var num225 = 0; num225 < ($T00().maxTilesY | 0); num225 = ((num225 + 1) | 0)) {
        if ($T00().tile.Get(num224, num225).active) {
          $T00().spawnTileX = num224;
          $T00().spawnTileY = num225;
          $T00().tile.Get(num224, ((num225 - 1) | 0)).lighted = true;
          break $loop160;
        }
      }
      num223 = ((num223 + 1) | 0);
    }
    var num226 = ($T12().NewNPC(Math.imul($T00().spawnTileX, 16), Math.imul($T00().spawnTileY, 16), 22, 0) | 0);
    $T00().npc[num226].homeTileX = ($T00().spawnTileX | 0);
    $T00().npc[num226].homeTileY = ($T00().spawnTileY | 0);
    $T00().npc[num226].direction = 1;
    $T00().npc[num226].homeless = true;
    $T00().statusText = "Planting sunflowers...";

    for (var num227 = 0; +num227 < (+($T00().maxTilesX) * 0.002); num227 = ((num227 + 1) | 0)) {
      var num228 = ($thisType.genRand.Next($T00().maxTilesX) | 0);
      var num229 = ((((num228 - ($thisType.genRand.Next(10) | 0)) | 0) - 7) | 0);
      var num230 = ((((num228 + ($thisType.genRand.Next(10) | 0)) | 0) + 7) | 0);
      if (num229 < 0) {
        num229 = 0;
      }
      if (num230 > ((($T00().maxTilesX | 0) - 1) | 0)) {
        num230 = ((($T00().maxTilesX | 0) - 1) | 0);
      }

      for (var num231 = num229; num231 < num230; num231 = ((num231 + 1) | 0)) {

      $loop163: 
        for (var num232 = 1; +num232 < (+$T00().worldSurface - 1); num232 = ((num232 + 1) | 0)) {
          if (!((($T00().tile.Get(num231, num232).type | 0) !== 1) || !$T00().tile.Get(num231, num232).active)) {
            $T00().tile.Get(num231, num232).type = 2;
          }
          if (!((($T00().tile.Get(((num231 + 1) | 0), num232).type | 0) !== 1) || !$T00().tile.Get(((num231 + 1) | 0), num232).active)) {
            $T00().tile.Get(((num231 + 1) | 0), num232).type = 2;
          }
          if (!((($T00().tile.Get(num231, num232).type | 0) !== 2) || 
              !$T00().tile.Get(num231, num232).active || $T00().tile.Get(num231, ((num232 - 1) | 0)).active)) {
            $thisType.PlaceTile(
              num231, 
              ((num232 - 1) | 0), 
              27, 
              true, 
              false, 
              -1
            );
          }
          if ($T00().tile.Get(num231, num232).active) {
            break $loop163;
          }
        }
      }
    }
    $T00().statusText = "Planting trees...";

    for (var num233 = 0; +num233 < (+($T00().maxTilesX) * 0.003); num233 = ((num233 + 1) | 0)) {
      var num234 = ($thisType.genRand.Next(50, ((($T00().maxTilesX | 0) - 50) | 0)) | 0);
      var num235 = ($thisType.genRand.Next(25, 50) | 0);

      for (var num236 = ((num234 - num235) | 0); num236 < ((num234 + num235) | 0); num236 = ((num236 + 1) | 0)) {

      $loop166: 
        for (var num237 = 20; +num237 < +$T00().worldSurface; ) {
          if ($T00().tile.Get(num236, num237).active) {
            if (($T00().tile.Get(num236, num237).type | 0) === 1) {
              $T00().tile.Get(num236, num237).type = 2;
            }
            if (($T00().tile.Get(num236, ((num237 + 1) | 0)).type | 0) === 1) {
              $T00().tile.Get(num236, ((num237 + 1) | 0)).type = 2;
              break $loop166;
            }
            break $loop166;
          } else {
            num237 = ((num237 + 1) | 0);
          }
        }
      }

      for (var num238 = ((num234 - num235) | 0); num238 < ((num234 + num235) | 0); num238 = ((num238 + 1) | 0)) {

        for (var num239 = 20; +num239 < +$T00().worldSurface; num239 = ((num239 + 1) | 0)) {
          $thisType.GrowEpicTree(num238, num239);
        }
      }
    }
    $thisType.AddTrees();
    $T00().statusText = "Planting weeds...";
    $thisType.AddPlants();

    for (var num240 = 0; num240 < ($T00().maxTilesX | 0); num240 = ((num240 + 1) | 0)) {

      for (var num241 = (($T00().worldSurface) | 0); num241 < ($T00().maxTilesY | 0); num241 = ((num241 + 1) | 0)) {
        if ($T00().tile.Get(num240, num241).active) {
          if (!((($T00().tile.Get(num240, num241).type | 0) !== 70) || $T00().tile.Get(num240, ((num241 - 1) | 0)).active)) {
            $thisType.GrowShroom(num240, num241);
            if (!$T00().tile.Get(num240, ((num241 - 1) | 0)).active) {
              $thisType.PlaceTile(
                num240, 
                ((num241 - 1) | 0), 
                71, 
                true, 
                false, 
                -1
              );
            }
          }
          if (!((($T00().tile.Get(num240, num241).type | 0) !== 60) || $T00().tile.Get(num240, ((num241 - 1) | 0)).active)) {
            $thisType.PlaceTile(
              num240, 
              ((num241 - 1) | 0), 
              61, 
              true, 
              false, 
              -1
            );
          }
        }
      }
    }
    $T00().statusText = "Growing vines...";

    for (var num242 = 0; num242 < ($T00().maxTilesX | 0); num242 = ((num242 + 1) | 0)) {
      var num243 = 0;

      for (var num244 = 0; +num244 < +$T00().worldSurface; num244 = ((num244 + 1) | 0)) {
        if (!((num243 <= 0) || $T00().tile.Get(num242, num244).active)) {
          $T00().tile.Get(num242, num244).active = true;
          $T00().tile.Get(num242, num244).type = 52;
          num243 = ((num243 - 1) | 0);
        } else {
          num243 = 0;
        }
        if (!(!$T00().tile.Get(num242, num244).active || 
            (($T00().tile.Get(num242, num244).type | 0) !== 2) || (($thisType.genRand.Next(5) | 0) >= 3))) {
          num243 = ($thisType.genRand.Next(1, 10) | 0);
        }
      }
      num243 = 0;

      for (var num245 = (($T00().worldSurface) | 0); num245 < ($T00().maxTilesY | 0); num245 = ((num245 + 1) | 0)) {
        if (!((num243 <= 0) || $T00().tile.Get(num242, num245).active)) {
          $T00().tile.Get(num242, num245).active = true;
          $T00().tile.Get(num242, num245).type = 62;
          num243 = ((num243 - 1) | 0);
        } else {
          num243 = 0;
        }
        if (!(!$T00().tile.Get(num242, num245).active || 
            (($T00().tile.Get(num242, num245).type | 0) !== 60) || (($thisType.genRand.Next(5) | 0) >= 3))) {
          num243 = ($thisType.genRand.Next(1, 10) | 0);
        }
      }
    }
    $T00().statusText = "Planting flowers...";

    for (var num246 = 0; +num246 < (+($T00().maxTilesX) * 0.005); num246 = ((num246 + 1) | 0)) {
      var num247 = ($thisType.genRand.Next(20, ((($T00().maxTilesX | 0) - 20) | 0)) | 0);
      var num248 = ($thisType.genRand.Next(5, 15) | 0);
      var num249 = ($thisType.genRand.Next(15, 30) | 0);

    $loop175: 
      for (var num250 = 1; +num250 < (+$T00().worldSurface - 1); num250 = ((num250 + 1) | 0)) {
        if ($T00().tile.Get(num247, num250).active) {

          for (var num251 = ((num247 - num248) | 0); num251 < ((num247 + num248) | 0); num251 = ((num251 + 1) | 0)) {

            for (var num252 = ((num250 - num249) | 0); num252 < ((num250 + num249) | 0); num252 = ((num252 + 1) | 0)) {
              if (!((($T00().tile.Get(num251, num252).type | 0) !== 3) && (($T00().tile.Get(num251, num252).type | 0) !== 24))) {
                $T00().tile.Get(num251, num252).frameX = ((Math.imul($thisType.genRand.Next(6, 8), 18) + 0x8000 & 0xFFFF) - 0x8000);
              }
            }
          }
          break $loop175;
        }
      }
    }
    $T00().statusText = "Planting mushrooms...";

    for (var num253 = 0; +num253 < (+($T00().maxTilesX) * 0.002); num253 = ((num253 + 1) | 0)) {
      var num254 = ($thisType.genRand.Next(20, ((($T00().maxTilesX | 0) - 20) | 0)) | 0);
      var num255 = ($thisType.genRand.Next(4, 10) | 0);
      var num256 = ($thisType.genRand.Next(15, 30) | 0);

    $loop179: 
      for (var num257 = 1; +num257 < (+$T00().worldSurface - 1); num257 = ((num257 + 1) | 0)) {
        if ($T00().tile.Get(num254, num257).active) {

          for (var num258 = ((num254 - num255) | 0); num258 < ((num254 + num255) | 0); num258 = ((num258 + 1) | 0)) {

            for (var num259 = ((num257 - num256) | 0); num259 < ((num257 + num256) | 0); num259 = ((num259 + 1) | 0)) {
              if (!((($T00().tile.Get(num258, num259).type | 0) !== 3) && (($T00().tile.Get(num258, num259).type | 0) !== 24))) {
                $T00().tile.Get(num258, num259).frameX = 144;
              }
            }
          }
          break $loop179;
        }
      }
    }
    $thisType.gen = false;
  }; 

  function WorldGen_GrowEpicTree (i, y) {

    for (var num = (y | 0); ($T00().tile.Get(i, num).type | 0) === 20; num = ((num + 1) | 0)) {
    }
    if (!(!$T00().tile.Get(i, num).active || 
        (($T00().tile.Get(i, num).type | 0) !== 2) || 
        (($T00().tile.Get(i, ((num - 1) | 0)).wall | 0) !== 0) || 
        (($T00().tile.Get(i, ((num - 1) | 0)).liquid | 0) !== 0) || 
        !$T00().tile.Get((((i | 0) - 1) | 0), num).active || 
        (($T00().tile.Get((((i | 0) - 1) | 0), num).type | 0) !== 2) || 
        !$T00().tile.Get((((i | 0) + 1) | 0), num).active || 
        (($T00().tile.Get((((i | 0) + 1) | 0), num).type | 0) !== 2) || !$thisType.EmptyTileCheck(
          (((i | 0) - 2) | 0), 
          (((i | 0) + 2) | 0), 
          ((num - 55) | 0), 
          ((num - 1) | 0), 
          20
        ))) {
      var flag = false;
      var flag2 = false;
      var num2 = ($thisType.genRand.Next(20, 30) | 0);

      for (var j = ((num - num2) | 0); j < num; j = ((j + 1) | 0)) {
        $T00().tile.Get(i, j).frameNumber = ($thisType.genRand.Next(3) & 0xFF);
        $T00().tile.Get(i, j).active = true;
        $T00().tile.Get(i, j).type = 5;
        var num3 = ($thisType.genRand.Next(3) | 0);
        var num4 = ($thisType.genRand.Next(10) | 0);
        if (!((j !== ((num - 1) | 0)) && (j !== ((num - num2) | 0)))) {
          num4 = 0;
        }

        while ((!((num4 !== 5) && 
              (num4 !== 7)) && 
            flag) || (!((num4 !== 6) && 
              (num4 !== 7)) && 
            flag2)) {
          num4 = ($thisType.genRand.Next(10) | 0);
        }
        flag = false;
        flag2 = false;
        if (!((num4 !== 5) && (num4 !== 7))) {
          flag = true;
        }
        if (!((num4 !== 6) && (num4 !== 7))) {
          flag2 = true;
        }
        if (num4 === 1) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 2) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 44;
          }
        } else if (num4 === 3) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 4) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 5) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 44;
          }
        } else if (num4 === 6) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 7) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 44;
          }
        }
        if (!((num4 !== 5) && (num4 !== 7))) {
          $T00().tile.Get((((i | 0) - 1) | 0), j).active = true;
          $T00().tile.Get((((i | 0) - 1) | 0), j).type = 5;
          num3 = ($thisType.genRand.Next(3) | 0);
          if (($thisType.genRand.Next(3) | 0) < 2) {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 198;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 220;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 242;
            }
          } else {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 0;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 22;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 44;
            }
          }
        }
        if (!((num4 !== 6) && (num4 !== 7))) {
          $T00().tile.Get((((i | 0) + 1) | 0), j).active = true;
          $T00().tile.Get((((i | 0) + 1) | 0), j).type = 5;
          num3 = ($thisType.genRand.Next(3) | 0);
          if (($thisType.genRand.Next(3) | 0) < 2) {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 198;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 220;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 242;
            }
          } else {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 66;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 88;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 110;
            }
          }
        }
      }
      var num5 = ($thisType.genRand.Next(3) | 0);
      if (!((num5 !== 0) && (num5 !== 1))) {
        $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).active = true;
        $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).type = 5;
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 176;
        }
      }
      if (!((num5 !== 0) && (num5 !== 2))) {
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).active = true;
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).type = 5;
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 176;
        }
      }
      num3 = ($thisType.genRand.Next(3) | 0);
      if (num5 === 0) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      } else if (num5 === 1) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      } else if (num5 === 2) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      }
      if (($thisType.genRand.Next(3) | 0) < 2) {
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 198;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 220;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 242;
        }
      } else {
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 198;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 220;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 242;
        }
      }
      $thisType.RangeFrame((((i | 0) - 2) | 0), ((((num - num2) | 0) - 1) | 0), (((i | 0) + 2) | 0), ((num + 1) | 0));
      if (($T00().netMode | 0) === 2) {
        $T1B().SendTileSquare(-1, i, ((+num - (+num2 * 0.5)) | 0), ((num2 + 1) | 0));
      }
    }
  }; 

  function WorldGen_GrowShroom (i, y) {
    if (!(!$T00().tile.Get((((i | 0) - 1) | 0), (((y | 0) - 1) | 0)).lava && 
        !$T00().tile.Get((((i | 0) - 1) | 0), (((y | 0) - 1) | 0)).lava && !$T00().tile.Get((((i | 0) + 1) | 0), (((y | 0) - 1) | 0)).lava)) {
      return;
    }
    if (!(!$T00().tile.Get(i, y).active || 
        (($T00().tile.Get(i, y).type | 0) !== 70) || 
        (($T00().tile.Get(i, (((y | 0) - 1) | 0)).wall | 0) !== 0) || 
        !$T00().tile.Get((((i | 0) - 1) | 0), y).active || 
        (($T00().tile.Get((((i | 0) - 1) | 0), y).type | 0) !== 70) || 
        !$T00().tile.Get((((i | 0) + 1) | 0), y).active || 
        (($T00().tile.Get((((i | 0) + 1) | 0), y).type | 0) !== 70) || !$thisType.EmptyTileCheck(
          (((i | 0) - 2) | 0), 
          (((i | 0) + 2) | 0), 
          (((y | 0) - 13) | 0), 
          (((y | 0) - 1) | 0), 
          71
        ))) {
      var num = ($thisType.genRand.Next(4, 11) | 0);

      for (var j = (((y | 0) - num) | 0); j < (y | 0); j = ((j + 1) | 0)) {
        $T00().tile.Get(i, j).frameNumber = ($thisType.genRand.Next(3) & 0xFF);
        $T00().tile.Get(i, j).active = true;
        $T00().tile.Get(i, j).type = 72;
        var num2 = ($thisType.genRand.Next(3) | 0);
        if (num2 === 0) {
          $T00().tile.Get(i, j).frameX = 0;
          $T00().tile.Get(i, j).frameY = 0;
        }
        if (num2 === 1) {
          $T00().tile.Get(i, j).frameX = 0;
          $T00().tile.Get(i, j).frameY = 18;
        }
        if (num2 === 2) {
          $T00().tile.Get(i, j).frameX = 0;
          $T00().tile.Get(i, j).frameY = 36;
        }
      }
      num2 = ($thisType.genRand.Next(3) | 0);
      if (num2 === 0) {
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameX = 36;
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameY = 0;
      }
      if (num2 === 1) {
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameX = 36;
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameY = 18;
      }
      if (num2 === 2) {
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameX = 36;
        $T00().tile.Get(i, (((y | 0) - num) | 0)).frameY = 36;
      }
      $thisType.RangeFrame((((i | 0) - 2) | 0), (((((y | 0) - num) | 0) - 1) | 0), (((i | 0) + 2) | 0), (((y | 0) + 1) | 0));
      if (($T00().netMode | 0) === 2) {
        $T1B().SendTileSquare(-1, i, ((+y - (+num * 0.5)) | 0), ((num + 1) | 0));
      }
    }
  }; 

  function WorldGen_GrowTree (i, y) {

    for (var num = (y | 0); ($T00().tile.Get(i, num).type | 0) === 20; num = ((num + 1) | 0)) {
    }
    if (!((($T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).liquid | 0) === 0) && 
        (($T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).liquid | 0) === 0) && (($T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).liquid | 0) === 0))) {
      return;
    }
    if (!(!$T00().tile.Get(i, num).active || 
        (($T00().tile.Get(i, num).type | 0) !== 2) || 
        (($T00().tile.Get(i, ((num - 1) | 0)).wall | 0) !== 0) || 
        !$T00().tile.Get((((i | 0) - 1) | 0), num).active || 
        (($T00().tile.Get((((i | 0) - 1) | 0), num).type | 0) !== 2) || 
        !$T00().tile.Get((((i | 0) + 1) | 0), num).active || 
        (($T00().tile.Get((((i | 0) + 1) | 0), num).type | 0) !== 2) || !$thisType.EmptyTileCheck(
          (((i | 0) - 2) | 0), 
          (((i | 0) + 2) | 0), 
          ((num - 14) | 0), 
          ((num - 1) | 0), 
          20
        ))) {
      var flag = false;
      var flag2 = false;
      var num2 = ($thisType.genRand.Next(5, 15) | 0);

      for (var j = ((num - num2) | 0); j < num; j = ((j + 1) | 0)) {
        $T00().tile.Get(i, j).frameNumber = ($thisType.genRand.Next(3) & 0xFF);
        $T00().tile.Get(i, j).active = true;
        $T00().tile.Get(i, j).type = 5;
        var num3 = ($thisType.genRand.Next(3) | 0);
        var num4 = ($thisType.genRand.Next(10) | 0);
        if (!((j !== ((num - 1) | 0)) && (j !== ((num - num2) | 0)))) {
          num4 = 0;
        }

        while ((!((num4 !== 5) && 
              (num4 !== 7)) && 
            flag) || (!((num4 !== 6) && 
              (num4 !== 7)) && 
            flag2)) {
          num4 = ($thisType.genRand.Next(10) | 0);
        }
        flag = false;
        flag2 = false;
        if (!((num4 !== 5) && (num4 !== 7))) {
          flag = true;
        }
        if (!((num4 !== 6) && (num4 !== 7))) {
          flag2 = true;
        }
        if (num4 === 1) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 2) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 44;
          }
        } else if (num4 === 3) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 44;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 4) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 22;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 5) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 88;
            $T00().tile.Get(i, j).frameY = 44;
          }
        } else if (num4 === 6) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 66;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else if (num4 === 7) {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 66;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 88;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 110;
            $T00().tile.Get(i, j).frameY = 110;
          }
        } else {
          if (num3 === 0) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 0;
          }
          if (num3 === 1) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 22;
          }
          if (num3 === 2) {
            $T00().tile.Get(i, j).frameX = 0;
            $T00().tile.Get(i, j).frameY = 44;
          }
        }
        if (!((num4 !== 5) && (num4 !== 7))) {
          $T00().tile.Get((((i | 0) - 1) | 0), j).active = true;
          $T00().tile.Get((((i | 0) - 1) | 0), j).type = 5;
          num3 = ($thisType.genRand.Next(3) | 0);
          if (($thisType.genRand.Next(3) | 0) < 2) {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 198;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 220;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 44;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 242;
            }
          } else {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 0;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 22;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) - 1) | 0), j).frameY = 44;
            }
          }
        }
        if (!((num4 !== 6) && (num4 !== 7))) {
          $T00().tile.Get((((i | 0) + 1) | 0), j).active = true;
          $T00().tile.Get((((i | 0) + 1) | 0), j).type = 5;
          num3 = ($thisType.genRand.Next(3) | 0);
          if (($thisType.genRand.Next(3) | 0) < 2) {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 198;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 220;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 66;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 242;
            }
          } else {
            if (num3 === 0) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 66;
            }
            if (num3 === 1) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 88;
            }
            if (num3 === 2) {
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameX = 88;
              $T00().tile.Get((((i | 0) + 1) | 0), j).frameY = 110;
            }
          }
        }
      }
      var num5 = ($thisType.genRand.Next(3) | 0);
      if (!((num5 !== 0) && (num5 !== 1))) {
        $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).active = true;
        $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).type = 5;
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameX = 22;
          $T00().tile.Get((((i | 0) + 1) | 0), ((num - 1) | 0)).frameY = 176;
        }
      }
      if (!((num5 !== 0) && (num5 !== 2))) {
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).active = true;
        $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).type = 5;
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameX = 44;
          $T00().tile.Get((((i | 0) - 1) | 0), ((num - 1) | 0)).frameY = 176;
        }
      }
      num3 = ($thisType.genRand.Next(3) | 0);
      if (num5 === 0) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 88;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      } else if (num5 === 1) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      } else if (num5 === 2) {
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 132;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 154;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - 1) | 0)).frameX = 66;
          $T00().tile.Get(i, ((num - 1) | 0)).frameY = 176;
        }
      }
      if (($thisType.genRand.Next(3) | 0) < 2) {
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 198;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 220;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 22;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 242;
        }
      } else {
        num3 = ($thisType.genRand.Next(3) | 0);
        if (num3 === 0) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 198;
        }
        if (num3 === 1) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 220;
        }
        if (num3 === 2) {
          $T00().tile.Get(i, ((num - num2) | 0)).frameX = 0;
          $T00().tile.Get(i, ((num - num2) | 0)).frameY = 242;
        }
      }
      $thisType.RangeFrame((((i | 0) - 2) | 0), ((((num - num2) | 0) - 1) | 0), (((i | 0) + 2) | 0), ((num + 1) | 0));
      if (($T00().netMode | 0) === 2) {
        $T1B().SendTileSquare(-1, i, ((+num - (+num2 * 0.5)) | 0), ((num2 + 1) | 0));
      }
    }
  }; 

  function WorldGen_HellHouse (i, j) {
    var num = ($thisType.genRand.Next(8, 20) | 0);
    var num2 = ($thisType.genRand.Next(3) | 0);
    var num3 = ($thisType.genRand.Next(7) | 0);
    var num4 = (j | 0);

    for (var k = 0; k < num2; k = ((k + 1) | 0)) {
      var num5 = ($thisType.genRand.Next(5, 9) | 0);
      $thisType.HellRoom(i, num4, num, num5);
      num4 = ((num4 - num5) | 0);
    }
    num4 = (j | 0);

    for (var l = 0; l < num3; l = ((l + 1) | 0)) {
      var num6 = ($thisType.genRand.Next(5, 9) | 0);
      num4 = ((num4 + num6) | 0);
      $thisType.HellRoom(i, num4, num, num6);
    }

    for (var m = (((i | 0) - ((num / 2) | 0)) | 0); m <= (((i | 0) + ((num / 2) | 0)) | 0); m = ((m + 1) | 0)) {

      for (num4 = (j | 0); (num4 < ($T00().maxTilesY | 0)) && (($T00().tile.Get(m, num4).active && 
            (($T00().tile.Get(m, num4).type | 0) === 76)) || 
          (($T00().tile.Get(m, num4).wall | 0) === 13)); num4 = ((num4 + 1) | 0)) {
      }
      var num7 = ((6 + ($thisType.genRand.Next(3) | 0)) | 0);

    $loop4: 
      while ((num4 < ($T00().maxTilesY | 0)) && !$T00().tile.Get(m, num4).active) {
        num7 = ((num7 - 1) | 0);
        $T00().tile.Get(m, num4).active = true;
        $T00().tile.Get(m, num4).type = 57;
        num4 = ((num4 + 1) | 0);
        if (num7 <= 0) {
          break $loop4;
        }
      }
    }

    for (num4 = (j | 0); (num4 < ($T00().maxTilesY | 0)) && (($T00().tile.Get(i, num4).active && 
          (($T00().tile.Get(i, num4).type | 0) === 76)) || 
        (($T00().tile.Get(i, num4).wall | 0) === 13)); num4 = ((num4 + 1) | 0)) {
    }
    num4 = ((num4 - 1) | 0);
    var num8 = num4;

    while (($T00().tile.Get(i, num4).active && 
        (($T00().tile.Get(i, num4).type | 0) === 76)) || (($T00().tile.Get(i, num4).wall | 0) === 13)) {
      num4 = ((num4 - 1) | 0);
      if (!(!$T00().tile.Get(i, num4).active || (($T00().tile.Get(i, num4).type | 0) !== 76))) {
        var num9 = ($thisType.genRand.Next((((((i | 0) - ((num / 2) | 0)) | 0) + 1) | 0), (((((i | 0) + ((num / 2) | 0)) | 0) - 1) | 0)) | 0);
        var num10 = ($thisType.genRand.Next((((((i | 0) - ((num / 2) | 0)) | 0) + 1) | 0), (((((i | 0) + ((num / 2) | 0)) | 0) - 1) | 0)) | 0);
        if (num9 > num10) {
          var num11 = num9;
          num9 = num10;
          num10 = num11;
        }
        if (num9 === num10) {
          if (num9 < (i | 0)) {
            num10 = ((num10 + 1) | 0);
          } else {
            num9 = ((num9 - 1) | 0);
          }
        }

        for (var n = num9; n <= num10; n = ((n + 1) | 0)) {
          if (($T00().tile.Get(n, ((num4 - 1) | 0)).wall | 0) === 13) {
            $T00().tile.Get(n, num4).wall = 13;
          }
          $T00().tile.Get(n, num4).type = 19;
          $T00().tile.Get(n, num4).active = true;
        }
        num4 = ((num4 - 1) | 0);
      }
    }
    var num12 = num4;
    var num13 = +(((num8 - num12) | 0) * num);
    var num14 = num13 * 0.02;

    for (var num15 = 0; +num15 < num14; num15 = ((num15 + 1) | 0)) {
      var num16 = ($thisType.genRand.Next((((i | 0) - ((num / 2) | 0)) | 0), (((((i | 0) + ((num / 2) | 0)) | 0) + 1) | 0)) | 0);
      var num17 = ($thisType.genRand.Next(num12, num8) | 0);
      var num18 = ($thisType.genRand.Next(3, 8) | 0);

      for (var num19 = ((num16 - num18) | 0); num19 <= ((num16 + num18) | 0); num19 = ((num19 + 1) | 0)) {

        for (var num20 = ((num17 - num18) | 0); num20 <= ((num17 + num18) | 0); num20 = ((num20 + 1) | 0)) {
          var num21 = +Math.abs(((num19 - num16) | 0));
          var num22 = +Math.abs(((num20 - num17) | 0));
          var num23 = (Math.sqrt((num21 * num21) + (num22 * num22)));
          if (num23 < (+num18 * 0.4)) {
            if (!((($T00().tile.Get(num19, num20).type | 0) !== 76) && (($T00().tile.Get(num19, num20).type | 0) !== 19))) {
              $T00().tile.Get(num19, num20).active = false;
            }
            $T00().tile.Get(num19, num20).wall = 0;
          }
        }
      }
    }
  }; 

  function WorldGen_HellRoom (i, j, width, height) {

    for (var k = (((i | 0) - (((width | 0) / 2) | 0)) | 0); k <= (((i | 0) + (((width | 0) / 2) | 0)) | 0); k = ((k + 1) | 0)) {

      for (var l = (((j | 0) - (height | 0)) | 0); l <= (j | 0); l = ((l + 1) | 0)) {
        $T00().tile.Get(k, l).active = true;
        $T00().tile.Get(k, l).type = 76;
        $T00().tile.Get(k, l).liquid = 0;
        $T00().tile.Get(k, l).lava = false;
      }
    }

    for (var m = (((((i | 0) - (((width | 0) / 2) | 0)) | 0) + 1) | 0); m <= (((((i | 0) + (((width | 0) / 2) | 0)) | 0) - 1) | 0); m = ((m + 1) | 0)) {

      for (var n = (((((j | 0) - (height | 0)) | 0) + 1) | 0); n <= (((j | 0) - 1) | 0); n = ((n + 1) | 0)) {
        $T00().tile.Get(m, n).active = false;
        $T00().tile.Get(m, n).wall = 13;
        $T00().tile.Get(m, n).liquid = 0;
        $T00().tile.Get(m, n).lava = false;
      }
    }
  }; 

  function WorldGen_IslandHouse (i, j) {
    var type = ($thisType.genRand.Next(45, 48) & 0xFF);
    var wall = ($thisType.genRand.Next(10, 13) & 0xFF);
    var vector = $S03().Construct(+i, +j);
    var num = 1;
    if (($thisType.genRand.Next(2) | 0) === 0) {
      num = -1;
    }
    var num2 = ($thisType.genRand.Next(7, 12) | 0);
    var num3 = ($thisType.genRand.Next(5, 7) | 0);
    vector.X = +((i | 0) + Math.imul(((num2 + 2) | 0), num));

  $loop0: 
    for (var k = (((j | 0) - 15) | 0); k < (((j | 0) + 30) | 0); k = ((k + 1) | 0)) {
      if ($T00().tile.Get(((vector.X) | 0), k).active) {
        vector.Y = +(k - 1);
        break $loop0;
      }
    }
    vector.X = +i;
    var num4 = (((+vector.X - +num2) - 2) | 0);
    var num5 = (((+vector.X + +num2) + 2) | 0);
    var num6 = (((+vector.Y - +num3) - 2) | 0);
    var num7 = (((+vector.Y + 2) + +($thisType.genRand.Next(3, 5))) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var l = num4; l <= num5; l = ((l + 1) | 0)) {

      for (var m = num6; m < num7; m = ((m + 1) | 0)) {
        $T00().tile.Get(l, m).active = true;
        $T00().tile.Get(l, m).type = type;
        $T00().tile.Get(l, m).wall = 0;
      }
    }
    num4 = ((+vector.X - +num2) | 0);
    num5 = ((+vector.X + +num2) | 0);
    num6 = ((+vector.Y - +num3) | 0);
    num7 = ((+vector.Y + 1) | 0);
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }
    if (num6 < 0) {
      num6 = 0;
    }
    if (num7 > ($T00().maxTilesY | 0)) {
      num7 = ($T00().maxTilesY | 0);
    }

    for (var n = num4; n <= num5; n = ((n + 1) | 0)) {

      for (var num8 = num6; num8 < num7; num8 = ((num8 + 1) | 0)) {
        if (($T00().tile.Get(n, num8).wall | 0) === 0) {
          $T00().tile.Get(n, num8).active = false;
          $T00().tile.Get(n, num8).wall = wall;
        }
      }
    }
    var num9 = (((i | 0) + Math.imul(((num2 + 1) | 0), num)) | 0);
    var num10 = ((vector.Y) | 0);

    for (var num11 = ((num9 - 2) | 0); num11 <= ((num9 + 2) | 0); num11 = ((num11 + 1) | 0)) {
      $T00().tile.Get(num11, num10).active = false;
      $T00().tile.Get(num11, ((num10 - 1) | 0)).active = false;
      $T00().tile.Get(num11, ((num10 - 2) | 0)).active = false;
    }
    $thisType.PlaceTile(
      num9, 
      num10, 
      10, 
      true, 
      false, 
      -1
    );
    var contain = 0;
    var num12 = ($thisType.houseCount | 0);
    if (num12 > 2) {
      num12 = ($thisType.genRand.Next(3) | 0);
    }
    if (num12 === 0) {
      contain = 159;
    } else if (num12 === 1) {
      contain = 65;
    } else if (num12 === 2) {
      contain = 158;
    }
    $thisType.AddBuriedChest(i, ((num10 - 3) | 0), contain);
    $thisType.houseCount = ((($thisType.houseCount | 0) + 1) | 0);
  }; 

  function WorldGen_KillTile (i, j, fail, effectOnly, noItem) {
    var $hoisted00 = new ($T04())();
    if (!(((i | 0) < 0) || 
        ((j | 0) < 0) || 
        ((i | 0) >= ($T00().maxTilesX | 0)) || ((j | 0) >= ($T00().maxTilesY | 0)))) {
      if ($T00().tile.Get(i, j) === null) {
        $T00().tile.Set(i, j, new ($T0D())());
      }
      if ($T00().tile.Get(i, j).active) {
        if (!(((j | 0) < 1) || ($T00().tile.Get(i, (((j | 0) - 1) | 0)) !== null))) {
          $T00().tile.Set(i, (((j | 0) - 1) | 0), new ($T0D())());
        }
        if (!(((j | 0) < 1) || 
            !$T00().tile.Get(i, (((j | 0) - 1) | 0)).active || 
            (!((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) === 5) && 
                (($T00().tile.Get(i, j).type | 0) !== 5)) && 
              !((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) === 21) && 
                (($T00().tile.Get(i, j).type | 0) !== 21)) && 
              !((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) === 26) && 
                (($T00().tile.Get(i, j).type | 0) !== 26)) && 
              !((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) === 72) && 
                (($T00().tile.Get(i, j).type | 0) !== 72)) && 
              ((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) !== 12) || 
                (($T00().tile.Get(i, j).type | 0) === 12))) || ((($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) === 5) && 
              (((($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameX | 0) === 66) && 
                  (($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) >= 0) && 
                  (($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) <= 44)) || 
                ((($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameX | 0) === 88) && 
                  (($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) >= 66) && 
                  (($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) <= 110)) || 
                (($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) >= 198))))) {
          return;
        }
        if (!(effectOnly || $thisType.stopDrops)) {
          if (($T00().tile.Get(i, j).type | 0) === 3) {
            $T00().PlaySound(6, Math.imul(i, 16), Math.imul(j, 16), 1);
            if (($T00().tile.Get(i, j).frameX | 0) === 144) {
              $T08().NewItem(
                Math.imul(i, 16), 
                Math.imul(j, 16), 
                16, 
                16, 
                5, 
                1, 
                false
              );
            }
          } else if (($T00().tile.Get(i, j).type | 0) === 24) {
            $T00().PlaySound(6, Math.imul(i, 16), Math.imul(j, 16), 1);
            if (($T00().tile.Get(i, j).frameX | 0) === 144) {
              $T08().NewItem(
                Math.imul(i, 16), 
                Math.imul(j, 16), 
                16, 
                16, 
                60, 
                1, 
                false
              );
            }
          } else if (!((($T00().tile.Get(i, j).type | 0) !== 32) && 
              (($T00().tile.Get(i, j).type | 0) !== 51) && 
              (($T00().tile.Get(i, j).type | 0) !== 52) && 
              (($T00().tile.Get(i, j).type | 0) !== 61) && 
              (($T00().tile.Get(i, j).type | 0) !== 62) && 
              (($T00().tile.Get(i, j).type | 0) !== 69) && 
              (($T00().tile.Get(i, j).type | 0) !== 71) && 
              (($T00().tile.Get(i, j).type | 0) !== 73) && (($T00().tile.Get(i, j).type | 0) !== 74))) {
            $T00().PlaySound(6, Math.imul(i, 16), Math.imul(j, 16), 1);
          } else {
            $T00().PlaySound(0, Math.imul(i, 16), Math.imul(j, 16), 1);
          }
        }
        var num = 10;
        if (fail) {
          num = 3;
        }

        for (var k = 0; k < num; k = ((k + 1) | 0)) {
          var num2 = 0;
          if (($T00().tile.Get(i, j).type | 0) === 0) {
            num2 = 0;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 1) && 
              (($T00().tile.Get(i, j).type | 0) !== 16) && 
              (($T00().tile.Get(i, j).type | 0) !== 17) && 
              (($T00().tile.Get(i, j).type | 0) !== 38) && 
              (($T00().tile.Get(i, j).type | 0) !== 39) && 
              (($T00().tile.Get(i, j).type | 0) !== 41) && 
              (($T00().tile.Get(i, j).type | 0) !== 43) && 
              (($T00().tile.Get(i, j).type | 0) !== 44) && 
              (($T00().tile.Get(i, j).type | 0) !== 48) && !$T00().tileStone[$T00().tile.Get(i, j).type])) {
            num2 = 1;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 4) && (($T00().tile.Get(i, j).type | 0) !== 33))) {
            num2 = 6;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 5) && 
              (($T00().tile.Get(i, j).type | 0) !== 10) && 
              (($T00().tile.Get(i, j).type | 0) !== 11) && 
              (($T00().tile.Get(i, j).type | 0) !== 14) && 
              (($T00().tile.Get(i, j).type | 0) !== 15) && 
              (($T00().tile.Get(i, j).type | 0) !== 19) && 
              (($T00().tile.Get(i, j).type | 0) !== 21) && (($T00().tile.Get(i, j).type | 0) !== 30))) {
            num2 = 7;
          }
          if (($T00().tile.Get(i, j).type | 0) === 2) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 0;
            } else {
              num2 = 2;
            }
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 6) && (($T00().tile.Get(i, j).type | 0) !== 26))) {
            num2 = 8;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 7) && 
              (($T00().tile.Get(i, j).type | 0) !== 34) && (($T00().tile.Get(i, j).type | 0) !== 47))) {
            num2 = 9;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 8) && 
              (($T00().tile.Get(i, j).type | 0) !== 36) && (($T00().tile.Get(i, j).type | 0) !== 45))) {
            num2 = 10;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 9) && 
              (($T00().tile.Get(i, j).type | 0) !== 35) && 
              (($T00().tile.Get(i, j).type | 0) !== 42) && (($T00().tile.Get(i, j).type | 0) !== 46))) {
            num2 = 11;
          }
          if (($T00().tile.Get(i, j).type | 0) === 12) {
            num2 = 12;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 3) && (($T00().tile.Get(i, j).type | 0) !== 73))) {
            num2 = 3;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 13) && (($T00().tile.Get(i, j).type | 0) !== 54))) {
            num2 = 13;
          }
          if (($T00().tile.Get(i, j).type | 0) === 22) {
            num2 = 14;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 28) && (($T00().tile.Get(i, j).type | 0) !== 78))) {
            num2 = 22;
          }
          if (($T00().tile.Get(i, j).type | 0) === 29) {
            num2 = 23;
          }
          if (($T00().tile.Get(i, j).type | 0) === 40) {
            num2 = 28;
          }
          if (($T00().tile.Get(i, j).type | 0) === 49) {
            num2 = 29;
          }
          if (($T00().tile.Get(i, j).type | 0) === 50) {
            num2 = 22;
          }
          if (($T00().tile.Get(i, j).type | 0) === 51) {
            num2 = 30;
          }
          if (($T00().tile.Get(i, j).type | 0) === 52) {
            num2 = 3;
          }
          if (($T00().tile.Get(i, j).type | 0) === 53) {
            num2 = 32;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 56) && (($T00().tile.Get(i, j).type | 0) !== 75))) {
            num2 = 37;
          }
          if (($T00().tile.Get(i, j).type | 0) === 57) {
            num2 = 36;
          }
          if (($T00().tile.Get(i, j).type | 0) === 59) {
            num2 = 38;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 61) && 
              (($T00().tile.Get(i, j).type | 0) !== 62) && (($T00().tile.Get(i, j).type | 0) !== 74))) {
            num2 = 40;
          }
          if (($T00().tile.Get(i, j).type | 0) === 69) {
            num2 = 7;
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 71) && (($T00().tile.Get(i, j).type | 0) !== 72))) {
            num2 = 26;
          }
          if (($T00().tile.Get(i, j).type | 0) === 70) {
            num2 = 17;
          }
          if (($T00().tile.Get(i, j).type | 0) === 2) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 38;
            } else {
              num2 = 39;
            }
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 58) && 
              (($T00().tile.Get(i, j).type | 0) !== 76) && (($T00().tile.Get(i, j).type | 0) !== 77))) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 6;
            } else {
              num2 = 25;
            }
          }
          if (($T00().tile.Get(i, j).type | 0) === 37) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 6;
            } else {
              num2 = 23;
            }
          }
          if (($T00().tile.Get(i, j).type | 0) === 32) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 14;
            } else {
              num2 = 24;
            }
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 23) && (($T00().tile.Get(i, j).type | 0) !== 24))) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 14;
            } else {
              num2 = 17;
            }
          }
          if (!((($T00().tile.Get(i, j).type | 0) !== 25) && (($T00().tile.Get(i, j).type | 0) !== 31))) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 14;
            } else {
              num2 = 1;
            }
          }
          if (($T00().tile.Get(i, j).type | 0) === 20) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 7;
            } else {
              num2 = 2;
            }
          }
          if (($T00().tile.Get(i, j).type | 0) === 27) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              num2 = 3;
            } else {
              num2 = 19;
            }
          }
          if (!(((($T00().tile.Get(i, j).type | 0) !== 34) && 
                (($T00().tile.Get(i, j).type | 0) !== 35) && 
                (($T00().tile.Get(i, j).type | 0) !== 36) && 
                (($T00().tile.Get(i, j).type | 0) !== 42)) || (($T00().rand.Next(2) | 0) !== 0))) {
            num2 = 6;
          }
          if (num2 >= 0) {
            $T16().NewDust(
              ($hoisted00._ctor(+((i | 0) * 16), +((j | 0) * 16)), 
                $hoisted00), 
              16, 
              16, 
              num2, 
              0, 
              0, 
              0, 
              new ($T1C())(), 
              1
            );
          }
        }
        if (effectOnly) {
          return;
        }
        if (fail) {
          if (!((($T00().tile.Get(i, j).type | 0) !== 2) && (($T00().tile.Get(i, j).type | 0) !== 23))) {
            $T00().tile.Get(i, j).type = 0;
          }
          if (($T00().tile.Get(i, j).type | 0) === 60) {
            $T00().tile.Get(i, j).type = 59;
          }
          $thisType.SquareTileFrame(i, j, true);
          return;
        }
        if (!((($T00().tile.Get(i, j).type | 0) !== 21) || (($T00().netMode | 0) === 1))) {
          var x = (((i | 0) - (((($T00().tile.Get(i, j).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
          var y = (((j | 0) - (((($T00().tile.Get(i, j).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
          if (!$T1D().DestroyChest(x, y)) {
            return;
          }
        }
        if (!(noItem || $thisType.stopDrops)) {
          var num3 = 0;
          if (!((($T00().tile.Get(i, j).type | 0) !== 0) && (($T00().tile.Get(i, j).type | 0) !== 2))) {
            num3 = 2;
          } else if (($T00().tile.Get(i, j).type | 0) === 1) {
            num3 = 3;
          } else if (($T00().tile.Get(i, j).type | 0) === 4) {
            num3 = 8;
          } else if (($T00().tile.Get(i, j).type | 0) === 5) {
            if (!((($T00().tile.Get(i, j).frameX | 0) < 22) || (($T00().tile.Get(i, j).frameY | 0) < 198))) {
              if (($thisType.genRand.Next(2) | 0) === 0) {
                num3 = 27;
              } else {
                num3 = 9;
              }
            } else {
              num3 = 9;
            }
          } else if (($T00().tile.Get(i, j).type | 0) === 6) {
            num3 = 11;
          } else if (($T00().tile.Get(i, j).type | 0) === 7) {
            num3 = 12;
          } else if (($T00().tile.Get(i, j).type | 0) === 8) {
            num3 = 13;
          } else if (($T00().tile.Get(i, j).type | 0) === 9) {
            num3 = 14;
          } else if (($T00().tile.Get(i, j).type | 0) === 13) {
            $T00().PlaySound(13, Math.imul(i, 16), Math.imul(j, 16), 1);
            if (($T00().tile.Get(i, j).frameX | 0) === 18) {
              num3 = 28;
            } else if (($T00().tile.Get(i, j).frameX | 0) === 36) {
              num3 = 110;
            } else {
              num3 = 31;
            }
          } else if (($T00().tile.Get(i, j).type | 0) === 19) {
            num3 = 94;
          } else if (($T00().tile.Get(i, j).type | 0) === 22) {
            num3 = 56;
          } else if (($T00().tile.Get(i, j).type | 0) === 23) {
            num3 = 2;
          } else if (($T00().tile.Get(i, j).type | 0) === 25) {
            num3 = 61;
          } else if (($T00().tile.Get(i, j).type | 0) === 30) {
            num3 = 9;
          } else if (($T00().tile.Get(i, j).type | 0) === 33) {
            num3 = 105;
          } else if (($T00().tile.Get(i, j).type | 0) === 37) {
            num3 = 116;
          } else if (($T00().tile.Get(i, j).type | 0) === 38) {
            num3 = 129;
          } else if (($T00().tile.Get(i, j).type | 0) === 39) {
            num3 = 131;
          } else if (($T00().tile.Get(i, j).type | 0) === 40) {
            num3 = 133;
          } else if (($T00().tile.Get(i, j).type | 0) === 41) {
            num3 = 134;
          } else if (($T00().tile.Get(i, j).type | 0) === 43) {
            num3 = 137;
          } else if (($T00().tile.Get(i, j).type | 0) === 44) {
            num3 = 139;
          } else if (($T00().tile.Get(i, j).type | 0) === 45) {
            num3 = 141;
          } else if (($T00().tile.Get(i, j).type | 0) === 46) {
            num3 = 143;
          } else if (($T00().tile.Get(i, j).type | 0) === 47) {
            num3 = 145;
          } else if (($T00().tile.Get(i, j).type | 0) === 48) {
            num3 = 147;
          } else if (($T00().tile.Get(i, j).type | 0) === 49) {
            num3 = 148;
          } else if (($T00().tile.Get(i, j).type | 0) === 51) {
            num3 = 150;
          } else if (($T00().tile.Get(i, j).type | 0) === 53) {
            num3 = 169;
          } else if (($T00().tile.Get(i, j).type | 0) === 54) {
            $T00().PlaySound(13, Math.imul(i, 16), Math.imul(j, 16), 1);
          } else if (($T00().tile.Get(i, j).type | 0) === 56) {
            num3 = 173;
          } else if (($T00().tile.Get(i, j).type | 0) === 57) {
            num3 = 172;
          } else if (($T00().tile.Get(i, j).type | 0) === 58) {
            num3 = 174;
          } else if (($T00().tile.Get(i, j).type | 0) === 60) {
            num3 = 176;
          } else if (($T00().tile.Get(i, j).type | 0) === 70) {
            num3 = 176;
          } else if (($T00().tile.Get(i, j).type | 0) === 75) {
            num3 = 192;
          } else if (($T00().tile.Get(i, j).type | 0) === 76) {
            num3 = 214;
          } else if (($T00().tile.Get(i, j).type | 0) === 78) {
            num3 = 222;
          } else if (!((($T00().tile.Get(i, j).type | 0) !== 61) && (($T00().tile.Get(i, j).type | 0) !== 74))) {
            if (($T00().tile.Get(i, j).frameX | 0) === 162) {
              num3 = 223;
            } else if (!((($T00().tile.Get(i, j).frameX | 0) < 108) || 
                (($T00().tile.Get(i, j).frameX | 0) > 126) || (($thisType.genRand.Next(2) | 0) !== 0))) {
              num3 = 208;
            }
          } else if (!((($T00().tile.Get(i, j).type | 0) !== 59) && (($T00().tile.Get(i, j).type | 0) !== 60))) {
            num3 = 176;
          } else if (!((($T00().tile.Get(i, j).type | 0) !== 71) && (($T00().tile.Get(i, j).type | 0) !== 72))) {
            if (($thisType.genRand.Next(50) | 0) === 0) {
              num3 = 194;
            } else {
              num3 = 183;
            }
          } else if (!((($T00().tile.Get(i, j).type | 0) !== 74) || (($thisType.genRand.Next(100) | 0) !== 0))) {
            num3 = 195;
          } else if (!((($T00().tile.Get(i, j).type | 0) < 63) || (($T00().tile.Get(i, j).type | 0) > 68))) {
            num3 = ((((($T00().tile.Get(i, j).type | 0) - 63) | 0) + 177) & 0xFF);
          } else if (($T00().tile.Get(i, j).type | 0) === 50) {
            if (($T00().tile.Get(i, j).frameX | 0) === 90) {
              num3 = 165;
            } else {
              num3 = 149;
            }
          }
          if (num3 > 0) {
            $T08().NewItem(
              Math.imul(i, 16), 
              Math.imul(j, 16), 
              16, 
              16, 
              num3, 
              1, 
              false
            );
          }
        }
        $T00().tile.Get(i, j).active = false;
        if ($T00().tileSolid[$T00().tile.Get(i, j).type]) {
          $T00().tile.Get(i, j).lighted = false;
        }
        $T00().tile.Get(i, j).frameX = -1;
        $T00().tile.Get(i, j).frameY = -1;
        $T00().tile.Get(i, j).frameNumber = 0;
        $T00().tile.Get(i, j).type = 0;
        $thisType.SquareTileFrame(i, j, true);
      }
    }
  }; 

  function WorldGen_KillWall (i, j, fail) {
    var $hoisted00 = new ($T04())();
    if (!(((i | 0) < 0) || 
        ((j | 0) < 0) || 
        ((i | 0) >= ($T00().maxTilesX | 0)) || ((j | 0) >= ($T00().maxTilesY | 0)))) {
      if ($T00().tile.Get(i, j) === null) {
        $T00().tile.Set(i, j, new ($T0D())());
      }
      if (($T00().tile.Get(i, j).wall | 0) > 0) {
        $thisType.genRand.Next(3);
        $T00().PlaySound(0, Math.imul(i, 16), Math.imul(j, 16), 1);
        var num = 10;
        if (fail) {
          num = 3;
        }

        for (var k = 0; k < num; k = ((k + 1) | 0)) {
          var type = 0;
          if (!((($T00().tile.Get(i, j).wall | 0) !== 1) && 
              (($T00().tile.Get(i, j).wall | 0) !== 5) && 
              (($T00().tile.Get(i, j).wall | 0) !== 6) && 
              (($T00().tile.Get(i, j).wall | 0) !== 7) && 
              (($T00().tile.Get(i, j).wall | 0) !== 8) && (($T00().tile.Get(i, j).wall | 0) !== 9))) {
            type = 1;
          }
          if (($T00().tile.Get(i, j).wall | 0) === 3) {
            if (($thisType.genRand.Next(2) | 0) === 0) {
              type = 14;
            } else {
              type = 1;
            }
          }
          if (($T00().tile.Get(i, j).wall | 0) === 4) {
            type = 7;
          }
          if (($T00().tile.Get(i, j).wall | 0) === 12) {
            type = 9;
          }
          if (($T00().tile.Get(i, j).wall | 0) === 10) {
            type = 10;
          }
          if (($T00().tile.Get(i, j).wall | 0) === 11) {
            type = 11;
          }
          $T16().NewDust(
            ($hoisted00._ctor(+((i | 0) * 16), +((j | 0) * 16)), 
              $hoisted00), 
            16, 
            16, 
            type, 
            0, 
            0, 
            0, 
            new ($T1C())(), 
            1
          );
        }
        if (fail) {
          $thisType.SquareWallFrame(i, j, true);
          return;
        }
        var num2 = 0;
        if (($T00().tile.Get(i, j).wall | 0) === 1) {
          num2 = 26;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 4) {
          num2 = 93;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 5) {
          num2 = 130;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 6) {
          num2 = 132;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 7) {
          num2 = 135;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 8) {
          num2 = 138;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 9) {
          num2 = 140;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 10) {
          num2 = 142;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 11) {
          num2 = 144;
        }
        if (($T00().tile.Get(i, j).wall | 0) === 12) {
          num2 = 146;
        }
        if (num2 > 0) {
          $T08().NewItem(
            Math.imul(i, 16), 
            Math.imul(j, 16), 
            16, 
            16, 
            num2, 
            1, 
            false
          );
        }
        $T00().tile.Get(i, j).wall = 0;
        $thisType.SquareWallFrame(i, j, true);
      }
    }
  }; 

  function WorldGen_Lakinater (i, j) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(25, 50));
    var num2 = num;
    var num3 = +($thisType.genRand.Next(30, 80));
    if (($thisType.genRand.Next(5) | 0) === 0) {
      num *= 1.5;
      num2 *= 1.5;
      num3 *= 1.2;
    }
    value.X = +i;
    value.Y = +j - (num3 * 0.3);
    value2.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.Y = +($thisType.genRand.Next(-20, -10)) * 0.1;

    while ((num > 0) && (num3 > 0)) {
      if ((value.Y + (num2 * 0.5)) > +$T00().worldSurface) {
        num3 = 0;
      }
      num -= +($thisType.genRand.Next(3));
      num3 -= 1;
      var num4 = ((value.X - (num * 0.5)) | 0);
      var num5 = ((value.X + (num * 0.5)) | 0);
      var num6 = ((value.Y - (num * 0.5)) | 0);
      var num7 = ((value.Y + (num * 0.5)) | 0);
      if (num4 < 0) {
        num4 = 0;
      }
      if (num5 > ($T00().maxTilesX | 0)) {
        num5 = ($T00().maxTilesX | 0);
      }
      if (num6 < 0) {
        num6 = 0;
      }
      if (num7 > ($T00().maxTilesY | 0)) {
        num7 = ($T00().maxTilesY | 0);
      }
      num2 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var k = num4; k < num5; k = ((k + 1) | 0)) {

        for (var l = num6; l < num7; l = ((l + 1) | 0)) {
          var num8 = (Math.abs((+k - +value.X)));
          var num9 = (Math.abs((+l - +value.Y)));
          var num10 = (Math.sqrt((num8 * num8) + (num9 * num9)));
          if (num10 < (num2 * 0.4)) {
            if ($T00().tile.Get(k, l).active) {
              $T00().tile.Get(k, l).liquid = 255;
            }
            $T00().tile.Get(k, l).active = false;
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (value2.X > 0.5) {
        value2.X = 0.5;
      }
      if (value2.X < -0.5) {
        value2.X = -0.5;
      }
      if (value2.Y > 1.5) {
        value2.Y = 1.5;
      }
      if (value2.Y < 0.5) {
        value2.Y = 0.5;
      }
    }
  }; 

  function WorldGen_loadWorld ($exception) {
    if ($thisType.genRand === null) {
      $thisType.genRand = $S01().Construct($T06().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    var fileStream = $S05().Construct($T00().worldPathName, $T20().Open);
    try {
      var binaryReader = $S06().Construct(fileStream);
      try {
        try {
          var num = (binaryReader.ReadInt32() | 0);
          if (num > ($T00().curRelease | 0)) {
            $T00().menuMode = 15;
            $T00().statusText = "Incompatible world file!";
            $thisType.loadFailed = true;
            binaryReader.Close();
            return;
          }
          $T00().worldName = binaryReader.ReadString();
          $T00().worldID = (binaryReader.ReadInt32() | 0);
          $T00().leftWorld = +(binaryReader.ReadInt32());
          $T00().rightWorld = +(binaryReader.ReadInt32());
          $T00().topWorld = +(binaryReader.ReadInt32());
          $T00().bottomWorld = +(binaryReader.ReadInt32());
          $T00().maxTilesY = (binaryReader.ReadInt32() | 0);
          $T00().maxTilesX = (binaryReader.ReadInt32() | 0);
          $thisType.clearWorld();
          $T00().spawnTileX = (binaryReader.ReadInt32() | 0);
          $T00().spawnTileY = (binaryReader.ReadInt32() | 0);
          $T00().worldSurface = +binaryReader.ReadDouble();
          $T00().rockLayer = +binaryReader.ReadDouble();
          $thisType.tempTime = +binaryReader.ReadDouble();
          $thisType.tempDayTime = binaryReader.ReadBoolean();
          $thisType.tempMoonPhase = (binaryReader.ReadInt32() | 0);
          $thisType.tempBloodMoon = binaryReader.ReadBoolean();
          $T00().dungeonX = (binaryReader.ReadInt32() | 0);
          $T00().dungeonY = (binaryReader.ReadInt32() | 0);
          $T12().downedBoss1 = binaryReader.ReadBoolean();
          $T12().downedBoss2 = binaryReader.ReadBoolean();
          $T12().downedBoss3 = binaryReader.ReadBoolean();
          $thisType.shadowOrbSmashed = binaryReader.ReadBoolean();
          $thisType.spawnMeteor = binaryReader.ReadBoolean();
          $thisType.shadowOrbCount = (binaryReader.ReadByte() | 0);
          $T00().invasionDelay = (binaryReader.ReadInt32() | 0);
          $T00().invasionSize = (binaryReader.ReadInt32() | 0);
          $T00().invasionType = (binaryReader.ReadInt32() | 0);
          $T00().invasionX = +binaryReader.ReadDouble();

          for (var i = 0; i < ($T00().maxTilesX | 0); i = ((i + 1) | 0)) {
            var num2 = +((+i / +($T00().maxTilesX)));
            $T00().statusText = (JSIL.ConcatString("Loading world data: ", $T02().$Box((((num2 * 100) + 1) | 0)), "%"));

            for (var j = 0; j < ($T00().maxTilesY | 0); j = ((j + 1) | 0)) {
              $T00().tile.Get(i, j).active = binaryReader.ReadBoolean();
              if ($T00().tile.Get(i, j).active) {
                $T00().tile.Get(i, j).type = (binaryReader.ReadByte() | 0);
                if ($T00().tileFrameImportant[$T00().tile.Get(i, j).type]) {
                  $T00().tile.Get(i, j).frameX = (binaryReader.ReadInt16() | 0);
                  $T00().tile.Get(i, j).frameY = (binaryReader.ReadInt16() | 0);
                } else {
                  $T00().tile.Get(i, j).frameX = -1;
                  $T00().tile.Get(i, j).frameY = -1;
                }
              }
              $T00().tile.Get(i, j).lighted = binaryReader.ReadBoolean();
              if (binaryReader.ReadBoolean()) {
                $T00().tile.Get(i, j).wall = (binaryReader.ReadByte() | 0);
              }
              if (binaryReader.ReadBoolean()) {
                $T00().tile.Get(i, j).liquid = (binaryReader.ReadByte() | 0);
                $T00().tile.Get(i, j).lava = binaryReader.ReadBoolean();
              }
            }
          }

          for (var k = 0; k < 1000; k = ((k + 1) | 0)) {
            if (binaryReader.ReadBoolean()) {
              $T00().chest[k] = new ($T1D())();
              $T00().chest[k].x = (binaryReader.ReadInt32() | 0);
              $T00().chest[k].y = (binaryReader.ReadInt32() | 0);

              for (var l = 0; l < ($T1D().maxItems | 0); l = ((l + 1) | 0)) {
                $T00().chest[k].item[l] = new ($T08())();
                var b = (binaryReader.ReadByte() | 0);
                if (b > 0) {
                  var defaults = binaryReader.ReadString();
                  $S07().CallVirtual("SetDefaults", null, $T00().chest[k].item[l], defaults);
                  $T00().chest[k].item[l].stack = b;
                }
              }
            }
          }

          for (var m = 0; m < 1000; m = ((m + 1) | 0)) {
            if (binaryReader.ReadBoolean()) {
              var text = binaryReader.ReadString();
              var num3 = (binaryReader.ReadInt32() | 0);
              var num4 = (binaryReader.ReadInt32() | 0);
              if (!(!$T00().tile.Get(num3, num4).active || (($T00().tile.Get(num3, num4).type | 0) !== 55))) {
                $T00().sign[m] = new ($T11())();
                $T00().sign[m].x = num3;
                $T00().sign[m].y = num4;
                $T00().sign[m].text = text;
              }
            }
          }
          var flag = binaryReader.ReadBoolean();
          var num5 = 0;

          while (flag) {
            $S08().CallVirtual("SetDefaults", null, $T00().npc[num5], binaryReader.ReadString());
            $T00().npc[num5].position.X = +binaryReader.ReadSingle();
            $T00().npc[num5].position.Y = +binaryReader.ReadSingle();
            $T00().npc[num5].homeless = binaryReader.ReadBoolean();
            $T00().npc[num5].homeTileX = (binaryReader.ReadInt32() | 0);
            $T00().npc[num5].homeTileY = (binaryReader.ReadInt32() | 0);
            flag = binaryReader.ReadBoolean();
            num5 = ((num5 + 1) | 0);
          }
          binaryReader.Close();
          $thisType.gen = true;
          $thisType.waterLine = ($T00().maxTilesY | 0);
          $T13().QuickWater(2, -1, -1);
          $thisType.WaterCheck();
          var num6 = 0;
          $T13().quickSettle = true;
          var num7 = ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0);
          var num8 = 0;

          while ((($T13().numLiquid | 0) > 0) && (num6 < 100000)) {
            num6 = ((num6 + 1) | 0);
            var num9 = +((+(num7 - ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0)) / +num7));
            if (((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0) > num7) {
              num7 = ((($T13().numLiquid | 0) + ($T14().numLiquidBuffer | 0)) | 0);
            }
            if (num9 > num8) {
              num8 = num9;
            } else {
              num9 = num8;
            }
            $T00().statusText = (JSIL.ConcatString("Settling liquids: ", $T02().$Box(((+(((num9 * 100) / 2)) + 50) | 0)), "%"));
            $T13().UpdateLiquid();
          }
          $T13().quickSettle = false;
          $thisType.WaterCheck();
          $thisType.gen = false;
        } catch ($exception) {
          $T00().menuMode = 15;
          $T00().statusText = $exception.toString();
          $thisType.loadFailed = true;
          try {
            binaryReader.Close();
          } catch ($exception) {
          }
          return;
        }
        $thisType.loadFailed = false;
      } finally {
        if (binaryReader !== null) {
          $IM00().Call(binaryReader, null);
        }
      }
    } finally {
      if (fileStream !== null) {
        $IM00().Call(fileStream, null);
      }
    }
  }; 

  function WorldGen_MakeDungeon (x, y, tileType, wallType) {
    var num = ($thisType.genRand.Next(3) | 0);
    var num2 = ($thisType.genRand.Next(3) | 0);
    if (num === 1) {
      tileType = 43;
    } else if (num === 2) {
      tileType = 44;
    }
    if (num2 === 1) {
      wallType = 8;
    } else if (num2 === 2) {
      wallType = 9;
    }
    $thisType.numDDoors = 0;
    $thisType.numDPlats = 0;
    $thisType.numDRooms = 0;
    $thisType.dungeonX = (x | 0);
    $thisType.dungeonY = (y | 0);
    $thisType.dMinX = (x | 0);
    $thisType.dMaxX = (x | 0);
    $thisType.dMinY = (y | 0);
    $thisType.dMaxY = (y | 0);
    $thisType.dxStrength1 = +($thisType.genRand.Next(25, 30));
    $thisType.dyStrength1 = +($thisType.genRand.Next(20, 25));
    $thisType.dxStrength2 = +($thisType.genRand.Next(35, 50));
    $thisType.dyStrength2 = +($thisType.genRand.Next(10, 15));
    var num3 = +((($T00().maxTilesX | 0) / 60 | 0));
    num3 += +($thisType.genRand.Next(0, ((+(num3 / 3)) | 0)));
    var num4 = num3;
    var num5 = 5;
    $thisType.DungeonRoom($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);

    while (num3 > 0) {
      if (($thisType.dungeonX | 0) < ($thisType.dMinX | 0)) {
        $thisType.dMinX = ($thisType.dungeonX | 0);
      }
      if (($thisType.dungeonX | 0) > ($thisType.dMaxX | 0)) {
        $thisType.dMaxX = ($thisType.dungeonX | 0);
      }
      if (($thisType.dungeonY | 0) > ($thisType.dMaxY | 0)) {
        $thisType.dMaxY = ($thisType.dungeonY | 0);
      }
      num3 -= 1;
      $T00().statusText = (JSIL.ConcatString("Creating dungeon: ", $T02().$Box(((+(((num4 - num3) / num4)) * 60) | 0)), "%"));
      if (num5 > 0) {
        num5 = ((num5 - 1) | 0);
      }
      if ((num5 === 0) & (($thisType.genRand.Next(3) | 0) === 0)) {
        num5 = 5;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          var num6 = ($thisType.dungeonX | 0);
          var num7 = ($thisType.dungeonY | 0);
          $thisType.DungeonHalls(
            $thisType.dungeonX, 
            $thisType.dungeonY, 
            tileType, 
            wallType, 
            false
          );
          if (($thisType.genRand.Next(2) | 0) === 0) {
            $thisType.DungeonHalls(
              $thisType.dungeonX, 
              $thisType.dungeonY, 
              tileType, 
              wallType, 
              false
            );
          }
          $thisType.DungeonRoom($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
          $thisType.dungeonX = num6;
          $thisType.dungeonY = num7;
        } else {
          $thisType.DungeonRoom($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
        }
      } else {
        $thisType.DungeonHalls(
          $thisType.dungeonX, 
          $thisType.dungeonY, 
          tileType, 
          wallType, 
          false
        );
      }
    }
    $thisType.DungeonRoom($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
    var num8 = ($thisType.dRoomX[0] | 0);
    var num9 = ($thisType.dRoomY[0] | 0);

    for (var i = 0; i < ($thisType.numDRooms | 0); i = ((i + 1) | 0)) {
      if (($thisType.dRoomY[i] | 0) < num9) {
        num8 = ($thisType.dRoomX[i] | 0);
        num9 = ($thisType.dRoomY[i] | 0);
      }
    }
    $thisType.dungeonX = num8;
    $thisType.dungeonY = num9;
    $thisType.dEnteranceX = num8;
    $thisType.dSurface = false;
    num5 = 5;

    while (!$thisType.dSurface) {
      if (num5 > 0) {
        num5 = ((num5 - 1) | 0);
      }
      if (!(!((num5 === 0) & (($thisType.genRand.Next(5) | 0) === 0)) || (+($thisType.dungeonY) <= (+$T00().worldSurface + 50)))) {
        num5 = 10;
        var num10 = ($thisType.dungeonX | 0);
        var num11 = ($thisType.dungeonY | 0);
        $thisType.DungeonHalls(
          $thisType.dungeonX, 
          $thisType.dungeonY, 
          tileType, 
          wallType, 
          true
        );
        $thisType.DungeonRoom($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
        $thisType.dungeonX = num10;
        $thisType.dungeonY = num11;
      }
      $thisType.DungeonStairs($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
    }
    $thisType.DungeonEnt($thisType.dungeonX, $thisType.dungeonY, tileType, wallType);
    $T00().statusText = "Creating dungeon: 65%";

    for (var j = 0; j < ($thisType.numDRooms | 0); j = ((j + 1) | 0)) {

    $loop4: 
      for (var k = ($thisType.dRoomL[j] | 0); k <= ($thisType.dRoomR[j] | 0); k = ((k + 1) | 0)) {
        if (!$T00().tile.Get(k, ((($thisType.dRoomT[j] | 0) - 1) | 0)).active) {
          $thisType.DPlatX[$thisType.numDPlats] = k;
          $thisType.DPlatY[$thisType.numDPlats] = ((($thisType.dRoomT[j] | 0) - 1) | 0);
          $thisType.numDPlats = ((($thisType.numDPlats | 0) + 1) | 0);
          break $loop4;
        }
      }

    $loop5: 
      for (var l = ($thisType.dRoomL[j] | 0); l <= ($thisType.dRoomR[j] | 0); l = ((l + 1) | 0)) {
        if (!$T00().tile.Get(l, ((($thisType.dRoomB[j] | 0) + 1) | 0)).active) {
          $thisType.DPlatX[$thisType.numDPlats] = l;
          $thisType.DPlatY[$thisType.numDPlats] = ((($thisType.dRoomB[j] | 0) + 1) | 0);
          $thisType.numDPlats = ((($thisType.numDPlats | 0) + 1) | 0);
          break $loop5;
        }
      }

    $loop6: 
      for (var m = ($thisType.dRoomT[j] | 0); m <= ($thisType.dRoomB[j] | 0); m = ((m + 1) | 0)) {
        if (!$T00().tile.Get(((($thisType.dRoomL[j] | 0) - 1) | 0), m).active) {
          $thisType.DDoorX[$thisType.numDDoors] = ((($thisType.dRoomL[j] | 0) - 1) | 0);
          $thisType.DDoorY[$thisType.numDDoors] = m;
          $thisType.DDoorPos[$thisType.numDDoors] = -1;
          $thisType.numDDoors = ((($thisType.numDDoors | 0) + 1) | 0);
          break $loop6;
        }
      }

    $loop7: 
      for (var n = ($thisType.dRoomT[j] | 0); n <= ($thisType.dRoomB[j] | 0); n = ((n + 1) | 0)) {
        if (!$T00().tile.Get(((($thisType.dRoomR[j] | 0) + 1) | 0), n).active) {
          $thisType.DDoorX[$thisType.numDDoors] = ((($thisType.dRoomR[j] | 0) + 1) | 0);
          $thisType.DDoorY[$thisType.numDDoors] = n;
          $thisType.DDoorPos[$thisType.numDDoors] = 1;
          $thisType.numDDoors = ((($thisType.numDDoors | 0) + 1) | 0);
          break $loop7;
        }
      }
    }
    $T00().statusText = "Creating dungeon: 70%";
    var num12 = 0;
    var num13 = 1000;

    for (var num14 = 0; num14 < ((($T00().maxTilesX | 0) / 125) | 0); ) {
      num12 = ((num12 + 1) | 0);
      var num15 = ($thisType.genRand.Next($thisType.dMinX, $thisType.dMaxX) | 0);
      var num16 = ($thisType.genRand.Next((((($T00().worldSurface) | 0) + 25) | 0), $thisType.dMaxY) | 0);
      var num17 = num15;
      if (!((($T00().tile.Get(num15, num16).wall | 0) !== (wallType | 0)) || $T00().tile.Get(num15, num16).active)) {
        var num18 = 1;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num18 = -1;
        }

        for (; !$T00().tile.Get(num15, num16).active; num16 = ((num16 + num18) | 0)) {
        }
        if (!(!$T00().tile.Get(((num15 - 1) | 0), num16).active || 
            !$T00().tile.Get(((num15 + 1) | 0), num16).active || 
            $T00().tile.Get(((num15 - 1) | 0), ((num16 - num18) | 0)).active || $T00().tile.Get(((num15 + 1) | 0), ((num16 - num18) | 0)).active)) {
          num14 = ((num14 + 1) | 0);

          for (var num19 = ($thisType.genRand.Next(5, 10) | 0); $T00().tile.Get(((num15 - 1) | 0), num16).active && 
            $T00().tile.Get(num15, ((num16 + num18) | 0)).active && 
            $T00().tile.Get(num15, num16).active && 
            !$T00().tile.Get(num15, ((num16 - num18) | 0)).active && (num19 > 0); num19 = ((num19 - 1) | 0)) {
            $T00().tile.Get(num15, num16).type = 48;
            if (!($T00().tile.Get(((num15 - 1) | 0), ((num16 - num18) | 0)).active || $T00().tile.Get(((num15 + 1) | 0), ((num16 - num18) | 0)).active)) {
              $T00().tile.Get(num15, ((num16 - num18) | 0)).type = 48;
              $T00().tile.Get(num15, ((num16 - num18) | 0)).active = true;
            }
            num15 = ((num15 - 1) | 0);
          }
          num19 = ($thisType.genRand.Next(5, 10) | 0);
          num15 = ((num17 + 1) | 0);

          while ($T00().tile.Get(((num15 + 1) | 0), num16).active && 
            $T00().tile.Get(num15, ((num16 + num18) | 0)).active && 
            $T00().tile.Get(num15, num16).active && 
            !$T00().tile.Get(num15, ((num16 - num18) | 0)).active && (num19 > 0)) {
            $T00().tile.Get(num15, num16).type = 48;
            if (!($T00().tile.Get(((num15 - 1) | 0), ((num16 - num18) | 0)).active || $T00().tile.Get(((num15 + 1) | 0), ((num16 - num18) | 0)).active)) {
              $T00().tile.Get(num15, ((num16 - num18) | 0)).type = 48;
              $T00().tile.Get(num15, ((num16 - num18) | 0)).active = true;
            }
            num15 = ((num15 + 1) | 0);
            num19 = ((num19 - 1) | 0);
          }
        }
      }
      if (num12 > num13) {
        num12 = 0;
        num14 = ((num14 + 1) | 0);
      }
    }
    num12 = 0;
    num13 = 1000;
    num14 = 0;
    $T00().statusText = "Creating dungeon: 75%";

    while (num14 < ((($T00().maxTilesX | 0) / 125) | 0)) {
      num12 = ((num12 + 1) | 0);
      var num20 = ($thisType.genRand.Next($thisType.dMinX, $thisType.dMaxX) | 0);
      var num21 = ($thisType.genRand.Next((((($T00().worldSurface) | 0) + 25) | 0), $thisType.dMaxY) | 0);
      var num22 = num21;
      if (!((($T00().tile.Get(num20, num21).wall | 0) !== (wallType | 0)) || $T00().tile.Get(num20, num21).active)) {
        var num23 = 1;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num23 = -1;
        }

        for (; (num20 > 5) && 
          (num20 < ((($T00().maxTilesX | 0) - 5) | 0)) && !$T00().tile.Get(num20, num21).active; num20 = ((num20 + num23) | 0)) {
        }
        if (!(!$T00().tile.Get(num20, ((num21 - 1) | 0)).active || 
            !$T00().tile.Get(num20, ((num21 + 1) | 0)).active || 
            $T00().tile.Get(((num20 - num23) | 0), ((num21 - 1) | 0)).active || $T00().tile.Get(((num20 - num23) | 0), ((num21 + 1) | 0)).active)) {
          num14 = ((num14 + 1) | 0);

          for (var num24 = ($thisType.genRand.Next(5, 10) | 0); $T00().tile.Get(num20, ((num21 - 1) | 0)).active && 
            $T00().tile.Get(((num20 + num23) | 0), num21).active && 
            $T00().tile.Get(num20, num21).active && 
            !$T00().tile.Get(((num20 - num23) | 0), num21).active && (num24 > 0); num24 = ((num24 - 1) | 0)) {
            $T00().tile.Get(num20, num21).type = 48;
            if (!($T00().tile.Get(((num20 - num23) | 0), ((num21 - 1) | 0)).active || $T00().tile.Get(((num20 - num23) | 0), ((num21 + 1) | 0)).active)) {
              $T00().tile.Get(((num20 - num23) | 0), num21).type = 48;
              $T00().tile.Get(((num20 - num23) | 0), num21).active = true;
            }
            num21 = ((num21 - 1) | 0);
          }
          num24 = ($thisType.genRand.Next(5, 10) | 0);
          num21 = ((num22 + 1) | 0);

          while ($T00().tile.Get(num20, ((num21 + 1) | 0)).active && 
            $T00().tile.Get(((num20 + num23) | 0), num21).active && 
            $T00().tile.Get(num20, num21).active && 
            !$T00().tile.Get(((num20 - num23) | 0), num21).active && (num24 > 0)) {
            $T00().tile.Get(num20, num21).type = 48;
            if (!($T00().tile.Get(((num20 - num23) | 0), ((num21 - 1) | 0)).active || $T00().tile.Get(((num20 - num23) | 0), ((num21 + 1) | 0)).active)) {
              $T00().tile.Get(((num20 - num23) | 0), num21).type = 48;
              $T00().tile.Get(((num20 - num23) | 0), num21).active = true;
            }
            num21 = ((num21 + 1) | 0);
            num24 = ((num24 - 1) | 0);
          }
        }
      }
      if (num12 > num13) {
        num12 = 0;
        num14 = ((num14 + 1) | 0);
      }
    }
    $T00().statusText = "Creating dungeon: 80%";

    for (var num25 = 0; num25 < ($thisType.numDDoors | 0); num25 = ((num25 + 1) | 0)) {
      var num26 = ((($thisType.DDoorX[num25] | 0) - 10) | 0);
      var num27 = ((($thisType.DDoorX[num25] | 0) + 10) | 0);
      var num28 = 100;
      var num29 = 0;

      for (var num30 = num26; num30 < num27; num30 = ((num30 + 1) | 0)) {
        var flag = true;

        for (var num31 = ($thisType.DDoorY[num25] | 0); !$T00().tile.Get(num30, num31).active; num31 = ((num31 - 1) | 0)) {
        }
        if (!$T00().tileDungeon[$T00().tile.Get(num30, num31).type]) {
          flag = false;
        }
        var num32 = num31;

        for (num31 = ($thisType.DDoorY[num25] | 0); !$T00().tile.Get(num30, num31).active; num31 = ((num31 + 1) | 0)) {
        }
        if (!$T00().tileDungeon[$T00().tile.Get(num30, num31).type]) {
          flag = false;
        }
        var num33 = num31;
        if (((num33 - num32) | 0) >= 3) {
          var num34 = ((num30 - 20) | 0);
          var num35 = ((num30 + 20) | 0);
          var num37 = ((num33 + 10) | 0);

          for (var num38 = num34; num38 < num35; num38 = ((num38 + 1) | 0)) {

          $loop21: 
            for (var num39 = ((num33 - 10) | 0); num39 < num37; num39 = ((num39 + 1) | 0)) {
              if (!(!$T00().tile.Get(num38, num39).active || (($T00().tile.Get(num38, num39).type | 0) !== 10))) {
                flag = false;
                break $loop21;
              }
            }
          }
          if (flag) {

            for (var num40 = ((num33 - 3) | 0); num40 < num33; num40 = ((num40 + 1) | 0)) {

            $loop23: 
              for (var num41 = ((num30 - 3) | 0); num41 <= ((num30 + 3) | 0); num41 = ((num41 + 1) | 0)) {
                if ($T00().tile.Get(num41, num40).active) {
                  flag = false;
                  break $loop23;
                }
              }
            }
          }
          if (!(!flag || (((num33 - num32) | 0) >= 20))) {
            var flag2 = false;
            if (!((($thisType.DDoorPos[num25] | 0) !== 0) || (((num33 - num32) | 0) >= num28))) {
              flag2 = true;
            }
            if (!((($thisType.DDoorPos[num25] | 0) !== -1) || (num30 <= num29))) {
              flag2 = true;
            }
            if (!((($thisType.DDoorPos[num25] | 0) !== 1) || ((num30 >= num29) && 
                  (num29 !== 0)))) {
              flag2 = true;
            }
            if (flag2) {
              num29 = num30;
              num28 = ((num33 - num32) | 0);
            }
          }
        }
      }
      if (num28 < 20) {
        var num42 = num29;
        var num43 = ($thisType.DDoorY[num25] | 0);
        var num44 = num43;

        while (!$T00().tile.Get(num42, num43).active) {
          $T00().tile.Get(num42, num43).active = false;
          num43 = ((num43 + 1) | 0);
        }

        for (; !$T00().tile.Get(num42, num44).active; num44 = ((num44 - 1) | 0)) {
        }
        num43 = ((num43 - 1) | 0);
        num44 = ((num44 + 1) | 0);

        for (var num45 = num44; num45 < ((num43 - 2) | 0); num45 = ((num45 + 1) | 0)) {
          $T00().tile.Get(num42, num45).active = true;
          $T00().tile.Get(num42, num45).type = (tileType & 0xFF);
        }
        $thisType.PlaceTile(
          num42, 
          num43, 
          10, 
          true, 
          false, 
          -1
        );
        num42 = ((num42 - 1) | 0);

        for (var num46 = ((num43 - 3) | 0); !$T00().tile.Get(num42, num46).active; num46 = ((num46 - 1) | 0)) {
        }
        if (!((((num43 - num46) | 0) >= ((((num43 - num44) | 0) + 5) | 0)) || !$T00().tileDungeon[$T00().tile.Get(num42, num46).type])) {

          for (var num47 = ((((num43 - 4) | 0) - ($thisType.genRand.Next(3) | 0)) | 0); num47 > num46; num47 = ((num47 - 1) | 0)) {
            $T00().tile.Get(num42, num47).active = true;
            $T00().tile.Get(num42, num47).type = (tileType & 0xFF);
          }
        }
        num42 = ((num42 + 2) | 0);

        for (num46 = ((num43 - 3) | 0); !$T00().tile.Get(num42, num46).active; num46 = ((num46 - 1) | 0)) {
        }
        if (!((((num43 - num46) | 0) >= ((((num43 - num44) | 0) + 5) | 0)) || !$T00().tileDungeon[$T00().tile.Get(num42, num46).type])) {

          for (var num48 = ((((num43 - 4) | 0) - ($thisType.genRand.Next(3) | 0)) | 0); num48 > num46; num48 = ((num48 - 1) | 0)) {
            $T00().tile.Get(num42, num48).active = true;
            $T00().tile.Get(num42, num48).type = (tileType & 0xFF);
          }
        }
        num43 = ((num43 + 1) | 0);
        num42 = ((num42 - 1) | 0);
        $T00().tile.Get(((num42 - 1) | 0), num43).active = true;
        $T00().tile.Get(((num42 - 1) | 0), num43).type = (tileType & 0xFF);
        $T00().tile.Get(((num42 + 1) | 0), num43).active = true;
        $T00().tile.Get(((num42 + 1) | 0), num43).type = (tileType & 0xFF);
      }
    }
    $T00().statusText = "Creating dungeon: 85%";

    for (var num49 = 0; num49 < ($thisType.numDPlats | 0); num49 = ((num49 + 1) | 0)) {
      var num50 = ($thisType.DPlatX[num49] | 0);
      var num51 = ($thisType.DPlatY[num49] | 0);
      var num52 = ($T00().maxTilesX | 0);

    $loop32: 
      for (var num54 = ((num51 - 5) | 0); num54 <= ((num51 + 5) | 0); num54 = ((num54 + 1) | 0)) {
        var num55 = num50;
        var num56 = num50;
        var flag3 = false;
        if ($T00().tile.Get(num55, num54).active) {
          flag3 = true;
        } else {

          while (!$T00().tile.Get(num55, num54).active) {
            num55 = ((num55 - 1) | 0);
            if (!$T00().tileDungeon[$T00().tile.Get(num55, num54).type]) {
              flag3 = true;
            }
          }

          while (!$T00().tile.Get(num56, num54).active) {
            num56 = ((num56 + 1) | 0);
            if (!$T00().tileDungeon[$T00().tile.Get(num56, num54).type]) {
              flag3 = true;
            }
          }
        }
        if (!(flag3 || (((num56 - num55) | 0) > 10))) {
          var flag4 = true;
          var num58 = ((((num50 + ((10 / 2) | 0)) | 0) + 2) | 0);
          var num59 = ((num54 - 5) | 0);
          var num60 = ((num54 + 5) | 0);

          for (var num61 = ((((num50 - ((10 / 2) | 0)) | 0) - 2) | 0); num61 <= num58; num61 = ((num61 + 1) | 0)) {

          $loop36: 
            for (var num62 = num59; num62 <= num60; num62 = ((num62 + 1) | 0)) {
              if (!(!$T00().tile.Get(num61, num62).active || (($T00().tile.Get(num61, num62).type | 0) !== 19))) {
                flag4 = false;
                break $loop36;
              }
            }
          }

        $loop37: 
          for (var num63 = ((num54 + 3) | 0); num63 >= ((num54 - 5) | 0); num63 = ((num63 - 1) | 0)) {
            if ($T00().tile.Get(num50, num63).active) {
              flag4 = false;
              break $loop37;
            }
          }
          if (flag4) {
            num52 = num54;
            break $loop32;
          }
        }
      }
      if (!((num52 <= ((num51 - 10) | 0)) || (num52 >= ((num51 + 10) | 0)))) {
        var num64 = num50;
        var num65 = num52;
        var num66 = ((num50 + 1) | 0);

        while (!$T00().tile.Get(num64, num65).active) {
          $T00().tile.Get(num64, num65).active = true;
          $T00().tile.Get(num64, num65).type = 19;
          num64 = ((num64 - 1) | 0);
        }

        for (; !$T00().tile.Get(num66, num65).active; num66 = ((num66 + 1) | 0)) {
          $T00().tile.Get(num66, num65).active = true;
          $T00().tile.Get(num66, num65).type = 19;
        }
      }
    }
    $T00().statusText = "Creating dungeon: 90%";
    num12 = 0;
    num13 = 1000;

    for (num14 = 0; num14 < ((($T00().maxTilesX | 0) / 20) | 0); ) {
      num12 = ((num12 + 1) | 0);
      var num67 = ($thisType.genRand.Next($thisType.dMinX, $thisType.dMaxX) | 0);
      var num68 = ($thisType.genRand.Next($thisType.dMinY, $thisType.dMaxY) | 0);
      var flag5 = true;
      if (!((($T00().tile.Get(num67, num68).wall | 0) !== (wallType | 0)) || $T00().tile.Get(num67, num68).active)) {
        var num69 = 1;
        if (($thisType.genRand.Next(2) | 0) === 0) {
          num69 = -1;
        }

        while (flag5 && !$T00().tile.Get(num67, num68).active) {
          num67 = ((num67 - num69) | 0);
          if (!((num67 >= 5) && (num67 <= ((($T00().maxTilesX | 0) - 5) | 0)))) {
            flag5 = false;
          } else if (!(!$T00().tile.Get(num67, num68).active || $T00().tileDungeon[$T00().tile.Get(num67, num68).type])) {
            flag5 = false;
          }
        }
        if (!(!flag5 || 
            !$T00().tile.Get(num67, num68).active || 
            !$T00().tileDungeon[$T00().tile.Get(num67, num68).type] || 
            !$T00().tile.Get(num67, ((num68 - 1) | 0)).active || 
            !$T00().tileDungeon[$T00().tile.Get(num67, ((num68 - 1) | 0)).type] || 
            !$T00().tile.Get(num67, ((num68 + 1) | 0)).active || !$T00().tileDungeon[$T00().tile.Get(num67, ((num68 + 1) | 0)).type])) {
          num67 = ((num67 + num69) | 0);

          for (var num70 = ((num67 - 3) | 0); num70 <= ((num67 + 3) | 0); num70 = ((num70 + 1) | 0)) {

          $loop43: 
            for (var num71 = ((num68 - 3) | 0); num71 <= ((num68 + 3) | 0); num71 = ((num71 + 1) | 0)) {
              if (!(!$T00().tile.Get(num70, num71).active || (($T00().tile.Get(num70, num71).type | 0) !== 19))) {
                flag5 = false;
                break $loop43;
              }
            }
          }
          if (!(!flag5 || !((!$T00().tile.Get(num67, ((num68 - 1) | 0)).active & !$T00().tile.Get(num67, ((num68 - 2) | 0)).active) & !$T00().tile.Get(num67, ((num68 - 3) | 0)).active))) {
            var num72 = num67;
            var num73 = num67;

            while ((num72 > ($thisType.dMinX | 0)) && 
              (num72 < ($thisType.dMaxX | 0)) && 
              !$T00().tile.Get(num72, num68).active && 
              !$T00().tile.Get(num72, ((num68 - 1) | 0)).active && !$T00().tile.Get(num72, ((num68 + 1) | 0)).active) {
              num72 = ((num72 + num69) | 0);
            }
            num72 = (Math.abs(((num67 - num72) | 0)));
            var flag6 = false;
            if (($thisType.genRand.Next(2) | 0) === 0) {
              flag6 = true;
            }
            if (num72 > 5) {

              for (var num74 = ($thisType.genRand.Next(1, 4) | 0); num74 > 0; num74 = ((num74 - 1) | 0)) {
                $T00().tile.Get(num67, num68).active = true;
                $T00().tile.Get(num67, num68).type = 19;
                if (flag6) {
                  $thisType.PlaceTile(
                    num67, 
                    ((num68 - 1) | 0), 
                    50, 
                    true, 
                    false, 
                    -1
                  );
                  if (!((($thisType.genRand.Next(50) | 0) !== 0) || (($T00().tile.Get(num67, ((num68 - 1) | 0)).type | 0) !== 50))) {
                    $T00().tile.Get(num67, ((num68 - 1) | 0)).frameX = 90;
                  }
                }
                num67 = ((num67 + num69) | 0);
              }
              num12 = 0;
              num14 = ((num14 + 1) | 0);
              if (!(flag6 || (($thisType.genRand.Next(2) | 0) !== 0))) {
                num67 = num73;
                num68 = ((num68 - 1) | 0);
                var num75 = ($thisType.genRand.Next(2) | 0);
                if (num75 === 0) {
                  num75 = 13;
                } else if (num75 === 1) {
                  num75 = 49;
                }
                $thisType.PlaceTile(
                  num67, 
                  num68, 
                  num75, 
                  true, 
                  false, 
                  -1
                );
                if (($T00().tile.Get(num67, num68).type | 0) === 13) {
                  if (($thisType.genRand.Next(2) | 0) === 0) {
                    $T00().tile.Get(num67, num68).frameX = 18;
                  } else {
                    $T00().tile.Get(num67, num68).frameX = 36;
                  }
                }
              }
            }
          }
        }
      }
      if (num12 > num13) {
        num12 = 0;
        num14 = ((num14 + 1) | 0);
      }
    }
    $T00().statusText = "Creating dungeon: 95%";

    for (var num76 = 0; num76 < ($thisType.numDRooms | 0); num76 = ((num76 + 1) | 0)) {

      for (var num77 = 0; num77 < 1000; ) {
        var num78 = ((+($thisType.dRoomSize[num76]) * 0.4) | 0);
        var i2 = ((($thisType.dRoomX[num76] | 0) + ($thisType.genRand.Next((-num78 | 0), ((num78 + 1) | 0)) | 0)) | 0);
        var j2 = ((($thisType.dRoomY[num76] | 0) + ($thisType.genRand.Next((-num78 | 0), ((num78 + 1) | 0)) | 0)) | 0);
        var num79 = 0;
        var num80 = num76;
        if (num80 === 0) {
          num79 = 113;
        } else if (num80 === 1) {
          num79 = 155;
        } else if (num80 === 2) {
          num79 = 156;
        } else if (num80 === 3) {
          num79 = 157;
        } else if (num80 === 4) {
          num79 = 163;
        } else if (num80 === 5) {
          num79 = 164;
        }
        if (!((num79 !== 0) || (($thisType.genRand.Next(2) | 0) !== 0))) {
          num77 = 1000;
        } else {
          if ($thisType.AddBuriedChest(i2, j2, num79)) {
            num77 = ((num77 + 1000) | 0);
          }
          num77 = ((num77 + 1) | 0);
        }
      }
    }
    $thisType.dMinX = ((($thisType.dMinX | 0) - 25) | 0);
    $thisType.dMaxX = ((($thisType.dMaxX | 0) + 25) | 0);
    $thisType.dMinY = ((($thisType.dMinY | 0) - 25) | 0);
    $thisType.dMaxY = ((($thisType.dMaxY | 0) + 25) | 0);
    if (($thisType.dMinX | 0) < 0) {
      $thisType.dMinX = 0;
    }
    if (($thisType.dMaxX | 0) > ($T00().maxTilesX | 0)) {
      $thisType.dMaxX = ($T00().maxTilesX | 0);
    }
    if (($thisType.dMinY | 0) < 0) {
      $thisType.dMinY = 0;
    }
    if (($thisType.dMaxY | 0) > ($T00().maxTilesY | 0)) {
      $thisType.dMaxY = ($T00().maxTilesY | 0);
    }
    num12 = 0;
    num13 = 1000;

    for (num14 = 0; num14 < ((($T00().maxTilesX | 0) / 20) | 0); ) {
      num12 = ((num12 + 1) | 0);
      var num81 = ($thisType.genRand.Next($thisType.dMinX, $thisType.dMaxX) | 0);
      var num82 = ($thisType.genRand.Next($thisType.dMinY, $thisType.dMaxY) | 0);
      if (($T00().tile.Get(num81, num82).wall | 0) === (wallType | 0)) {

      $loop49: 
        for (var num83 = num82; num83 > ($thisType.dMinY | 0); ) {
          if (!(!$T00().tile.Get(num81, ((num83 - 1) | 0)).active || (($T00().tile.Get(num81, ((num83 - 1) | 0)).type | 0) !== (tileType | 0)))) {
            var flag7 = false;

            for (var num84 = ((num81 - 15) | 0); num84 < ((num81 + 15) | 0); num84 = ((num84 + 1) | 0)) {

            $loop51: 
              for (var num85 = ((num83 - 15) | 0); num85 < ((num83 + 15) | 0); num85 = ((num85 + 1) | 0)) {
                if (!((num84 <= 0) || 
                    (num84 >= ($T00().maxTilesX | 0)) || 
                    (num85 <= 0) || 
                    (num85 >= ($T00().maxTilesY | 0)) || (($T00().tile.Get(num84, num85).type | 0) !== 42))) {
                  flag7 = true;
                  break $loop51;
                }
              }
            }
            if (!(!$T00().tile.Get(((num81 - 1) | 0), num83).active && 
                !$T00().tile.Get(((num81 + 1) | 0), num83).active && 
                !$T00().tile.Get(((num81 - 1) | 0), ((num83 + 1) | 0)).active && 
                !$T00().tile.Get(((num81 + 1) | 0), ((num83 + 1) | 0)).active && !$T00().tile.Get(num81, ((num83 + 2) | 0)).active)) {
              flag7 = true;
            }
            if (flag7) {
              break $loop49;
            }
            $thisType.Place1x2Top(num81, num83, 42);
            if (($T00().tile.Get(num81, num83).type | 0) === 42) {
              num12 = 0;
              num14 = ((num14 + 1) | 0);
              break $loop49;
            }
            break $loop49;
          } else {
            num83 = ((num83 - 1) | 0);
          }
        }
      }
      if (num12 > num13) {
        num14 = ((num14 + 1) | 0);
        num12 = 0;
      }
    }
  }; 

  function WorldGen_meteor (i, j) {
    var value = new ($T24())(), value2 = new ($T24())();
    if (!(((i | 0) >= 50) && ((i | 0) <= ((($T00().maxTilesX | 0) - 50) | 0)))) {
      return false;
    }
    if (!(((j | 0) >= 50) && ((j | 0) <= ((($T00().maxTilesY | 0) - 50) | 0)))) {
      return false;
    }
    var num = 25;
    var rectangle = new ($T24())(Math.imul((((i | 0) - num) | 0), 16), Math.imul((((j | 0) - num) | 0), 16), Math.imul(Math.imul(num, 2), 16), Math.imul(Math.imul(num, 2), 16));

    for (var k = 0; k < 8; k = ((k + 1) | 0)) {
      if ($T00().player[k].active) {
        (value = value.MemberwiseClone(), 
          $T24().prototype._ctor.call(value, ((((+$T00().player[k].position.X + +((($T00().player[k].width | 0) / 2 | 0))) - +((($T00().screenWidth | 0) / 2 | 0))) - +($T12().safeRangeX)) | 0), ((((+$T00().player[k].position.Y + +((($T00().player[k].height | 0) / 2 | 0))) - +((($T00().screenHeight | 0) / 2 | 0))) - +($T12().safeRangeY)) | 0), ((($T00().screenWidth | 0) + Math.imul($T12().safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($T12().safeRangeY, 2)) | 0)));
        if (rectangle.Intersects(value.MemberwiseClone())) {
          return false;
        }
      }
    }

    for (var l = 0; l < 1000; l = ((l + 1) | 0)) {
      if ($T00().npc[l].active) {
        (value2 = value2.MemberwiseClone(), 
          $T24().prototype._ctor.call(value2, (($T00().npc[l].position.X) | 0), (($T00().npc[l].position.Y) | 0), $T00().npc[l].width, $T00().npc[l].height));
        if (rectangle.Intersects(value2.MemberwiseClone())) {
          return false;
        }
      }
    }

    for (var m = (((i | 0) - num) | 0); m < (((i | 0) + num) | 0); m = ((m + 1) | 0)) {

      for (var n = (((j | 0) - num) | 0); n < (((j | 0) + num) | 0); n = ((n + 1) | 0)) {
        if (!(!$T00().tile.Get(m, n).active || (($T00().tile.Get(m, n).type | 0) !== 21))) {
          return false;
        }
      }
    }
    $thisType.stopDrops = true;
    num = 15;

    for (var num2 = (((i | 0) - num) | 0); num2 < (((i | 0) + num) | 0); num2 = ((num2 + 1) | 0)) {

      for (var num3 = (((j | 0) - num) | 0); num3 < (((j | 0) + num) | 0); num3 = ((num3 + 1) | 0)) {
        if (!((num3 <= (((((j | 0) + ($T00().rand.Next(-2, 3) | 0)) | 0) - 5) | 0)) || (+((Math.abs((((i | 0) - num2) | 0))) + (Math.abs((((j | 0) - num3) | 0)))) >= ((+num * 1.5) + +($T00().rand.Next(-5, 5)))))) {
          if (!$T00().tileSolid[$T00().tile.Get(num2, num3).type]) {
            $T00().tile.Get(num2, num3).active = false;
          }
          $T00().tile.Get(num2, num3).type = 37;
        }
      }
    }
    num = 10;

    for (var num4 = (((i | 0) - num) | 0); num4 < (((i | 0) + num) | 0); num4 = ((num4 + 1) | 0)) {

      for (var num5 = (((j | 0) - num) | 0); num5 < (((j | 0) + num) | 0); num5 = ((num5 + 1) | 0)) {
        if (!((num5 <= (((((j | 0) + ($T00().rand.Next(-2, 3) | 0)) | 0) - 5) | 0)) || ((((Math.abs((((i | 0) - num4) | 0))) + (Math.abs((((j | 0) - num5) | 0)))) | 0) >= ((num + ($T00().rand.Next(-3, 4) | 0)) | 0)))) {
          $T00().tile.Get(num4, num5).active = false;
        }
      }
    }
    num = 16;

    for (var num6 = (((i | 0) - num) | 0); num6 < (((i | 0) + num) | 0); num6 = ((num6 + 1) | 0)) {

      for (var num7 = (((j | 0) - num) | 0); num7 < (((j | 0) + num) | 0); num7 = ((num7 + 1) | 0)) {
        if (!((($T00().tile.Get(num6, num7).type | 0) !== 5) && (($T00().tile.Get(num6, num7).type | 0) !== 32))) {
          $thisType.KillTile(
            num6, 
            num7, 
            false, 
            false, 
            false
          );
        }
        $thisType.SquareTileFrame(num6, num7, true);
        $thisType.SquareWallFrame(num6, num7, true);
      }
    }
    num = 23;

    for (var num8 = (((i | 0) - num) | 0); num8 < (((i | 0) + num) | 0); num8 = ((num8 + 1) | 0)) {

      for (var num9 = (((j | 0) - num) | 0); num9 < (((j | 0) + num) | 0); num9 = ((num9 + 1) | 0)) {
        if (!(!$T00().tile.Get(num8, num9).active || 
            (($T00().rand.Next(10) | 0) !== 0) || (+((Math.abs((((i | 0) - num8) | 0))) + (Math.abs((((j | 0) - num9) | 0)))) >= (+num * 1.3)))) {
          if (!((($T00().tile.Get(num8, num9).type | 0) !== 5) && (($T00().tile.Get(num8, num9).type | 0) !== 32))) {
            $thisType.KillTile(
              num8, 
              num9, 
              false, 
              false, 
              false
            );
          }
          $T00().tile.Get(num8, num9).type = 37;
          $thisType.SquareTileFrame(num8, num9, true);
        }
      }
    }
    $thisType.stopDrops = false;
    if (($T00().netMode | 0) === 0) {
      $T00().NewText("A meteorite has landed!", 50, 255, 130);
    } else if (($T00().netMode | 0) === 2) {
      $T1B().SendData(
        25, 
        -1, 
        -1, 
        "A meteorite has landed!", 
        8, 
        50, 
        255, 
        130
      );
    }
    if (($T00().netMode | 0) !== 1) {
      $T1B().SendTileSquare(-1, i, j, 30);
    }
    return true;
  }; 

  function WorldGen_Mountinater (i, j) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(80, 120));
    var num2 = +($thisType.genRand.Next(40, 55));
    value.X = +i;
    value.Y = +j + +((num2 / 2));
    value2.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.Y = +($thisType.genRand.Next(-20, -10)) * 0.1;

    while ((num > 0) && (num2 > 0)) {
      num -= +($thisType.genRand.Next(4));
      num2 -= 1;
      var num3 = ((value.X - (num * 0.5)) | 0);
      var num4 = ((value.X + (num * 0.5)) | 0);
      var num5 = ((value.Y - (num * 0.5)) | 0);
      var num6 = ((value.Y + (num * 0.5)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }
      var num7 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var k = num3; k < num4; k = ((k + 1) | 0)) {

        for (var l = num5; l < num6; l = ((l + 1) | 0)) {
          var num8 = (Math.abs((+k - +value.X)));
          var num9 = (Math.abs((+l - +value.Y)));
          var num10 = (Math.sqrt((num8 * num8) + (num9 * num9)));
          if (!((num10 >= (num7 * 0.4)) || $T00().tile.Get(k, l).active)) {
            $T00().tile.Get(k, l).active = true;
            $T00().tile.Get(k, l).type = 0;
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (value2.X > 0.5) {
        value2.X = 0.5;
      }
      if (value2.X < -0.5) {
        value2.X = -0.5;
      }
      if (value2.Y > -0.5) {
        value2.Y = -0.5;
      }
      if (value2.Y < -1.5) {
        value2.Y = -1.5;
      }
    }
  }; 

  function WorldGen_OpenDoor (i, j, direction) {
    if ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null) {
      $T00().tile.Set(i, (((j | 0) - 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(i, (((j | 0) - 2) | 0)) === null) {
      $T00().tile.Set(i, (((j | 0) - 2) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) {
      $T00().tile.Set(i, (((j | 0) + 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(i, j) === null) {
      $T00().tile.Set(i, j, new ($T0D())());
    }
    if (!((($T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY | 0) !== 0) || (($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) !== ($T00().tile.Get(i, j).type | 0)))) {
      var num = (((j | 0) - 1) | 0);
    } else if (!((($T00().tile.Get(i, (((j | 0) - 2) | 0)).frameY | 0) !== 0) || (($T00().tile.Get(i, (((j | 0) - 2) | 0)).type | 0) !== ($T00().tile.Get(i, j).type | 0)))) {
      num = (((j | 0) - 2) | 0);
    } else if (!((($T00().tile.Get(i, (((j | 0) + 1) | 0)).frameY | 0) !== 0) || (($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) !== ($T00().tile.Get(i, j).type | 0)))) {
      num = (((j | 0) + 1) | 0);
    } else {
      num = (j | 0);
    }
    var num2 = 0;
    if ((direction | 0) === -1) {
      var num3 = (((i | 0) - 1) | 0);
      num2 = 36;
      var num4 = (((i | 0) - 1) | 0);
    } else {
      num3 = (i | 0);
      num4 = (((i | 0) + 1) | 0);
    }
    var flag = true;

  $loop0: 
    for (var k = num; k < ((num + 3) | 0); k = ((k + 1) | 0)) {
      if ($T00().tile.Get(num4, k) === null) {
        $T00().tile.Set(num4, k, new ($T0D())());
      }
      if ($T00().tile.Get(num4, k).active) {
        if ((($T00().tile.Get(num4, k).type | 0) !== 3) && 
          (($T00().tile.Get(num4, k).type | 0) !== 24) && 
          (($T00().tile.Get(num4, k).type | 0) !== 52) && 
          (($T00().tile.Get(num4, k).type | 0) !== 61) && 
          (($T00().tile.Get(num4, k).type | 0) !== 62) && 
          (($T00().tile.Get(num4, k).type | 0) !== 69) && 
          (($T00().tile.Get(num4, k).type | 0) !== 71) && 
          (($T00().tile.Get(num4, k).type | 0) !== 73) && (($T00().tile.Get(num4, k).type | 0) !== 74)) {
          flag = false;
          break $loop0;
        }
        $thisType.KillTile(
          num4, 
          k, 
          false, 
          false, 
          false
        );
      }
    }
    if (flag) {
      $T00().PlaySound(8, Math.imul(i, 16), Math.imul(j, 16), 1);
      $T00().tile.Get(num3, num).active = true;
      $T00().tile.Get(num3, num).type = 11;
      $T00().tile.Get(num3, num).frameY = 0;
      $T00().tile.Get(num3, num).frameX = num2;
      if ($T00().tile.Get(((num3 + 1) | 0), num) === null) {
        $T00().tile.Set(((num3 + 1) | 0), num, new ($T0D())());
      }
      $T00().tile.Get(((num3 + 1) | 0), num).active = true;
      $T00().tile.Get(((num3 + 1) | 0), num).type = 11;
      $T00().tile.Get(((num3 + 1) | 0), num).frameY = 0;
      $T00().tile.Get(((num3 + 1) | 0), num).frameX = ((((num2 + 18) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      if ($T00().tile.Get(num3, ((num + 1) | 0)) === null) {
        $T00().tile.Set(num3, ((num + 1) | 0), new ($T0D())());
      }
      $T00().tile.Get(num3, ((num + 1) | 0)).active = true;
      $T00().tile.Get(num3, ((num + 1) | 0)).type = 11;
      $T00().tile.Get(num3, ((num + 1) | 0)).frameY = 18;
      $T00().tile.Get(num3, ((num + 1) | 0)).frameX = num2;
      if ($T00().tile.Get(((num3 + 1) | 0), ((num + 1) | 0)) === null) {
        $T00().tile.Set(((num3 + 1) | 0), ((num + 1) | 0), new ($T0D())());
      }
      $T00().tile.Get(((num3 + 1) | 0), ((num + 1) | 0)).active = true;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 1) | 0)).type = 11;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 1) | 0)).frameY = 18;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 1) | 0)).frameX = ((((num2 + 18) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      if ($T00().tile.Get(num3, ((num + 2) | 0)) === null) {
        $T00().tile.Set(num3, ((num + 2) | 0), new ($T0D())());
      }
      $T00().tile.Get(num3, ((num + 2) | 0)).active = true;
      $T00().tile.Get(num3, ((num + 2) | 0)).type = 11;
      $T00().tile.Get(num3, ((num + 2) | 0)).frameY = 36;
      $T00().tile.Get(num3, ((num + 2) | 0)).frameX = num2;
      if ($T00().tile.Get(((num3 + 1) | 0), ((num + 2) | 0)) === null) {
        $T00().tile.Set(((num3 + 1) | 0), ((num + 2) | 0), new ($T0D())());
      }
      $T00().tile.Get(((num3 + 1) | 0), ((num + 2) | 0)).active = true;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 2) | 0)).type = 11;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 2) | 0)).frameY = 36;
      $T00().tile.Get(((num3 + 1) | 0), ((num + 2) | 0)).frameX = ((((num2 + 18) | 0) + 0x8000 & 0xFFFF) - 0x8000);

      for (var l = ((num3 - 1) | 0); l <= ((num3 + 2) | 0); l = ((l + 1) | 0)) {

        for (var m = ((num - 1) | 0); m <= ((num + 2) | 0); m = ((m + 1) | 0)) {
          $thisType.TileFrame(l, m, false, false);
        }
      }
    }
    return flag;
  }; 

  function WorldGen_Place1x2 (x, y, type) {
    var frameX = 0;
    if ((type | 0) === 20) {
      frameX = ((Math.imul($thisType.genRand.Next(3), 18) + 0x8000 & 0xFFFF) - 0x8000);
    }
    if ($T00().tile.Get(x, (((y | 0) - 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) - 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(x, (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) + 1) | 0), new ($T0D())());
    }
    if (!(!$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type] || $T00().tile.Get(x, (((y | 0) - 1) | 0)).active)) {
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameX = frameX;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 18;
      $T00().tile.Get(x, y).frameX = frameX;
      $T00().tile.Get(x, y).type = (type & 0xFF);
    }
  }; 

  function WorldGen_Place1x2Top (x, y, type) {
    if ($T00().tile.Get(x, (((y | 0) - 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) - 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get(x, (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) + 1) | 0), new ($T0D())());
    }
    if (!(!$T00().tile.Get(x, (((y | 0) - 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type] || 
        $T00().tileSolidTop[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type] || $T00().tile.Get(x, (((y | 0) + 1) | 0)).active)) {
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 0;
      $T00().tile.Get(x, y).frameX = (0 | 0);
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).frameY = 18;
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).frameX = (0 | 0);
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).type = (type & 0xFF);
    }
  }; 

  function WorldGen_Place2x1 (x, y, type) {
    if ($T00().tile.Get(x, y) === null) {
      $T00().tile.Set(x, y, new ($T0D())());
    }
    if ($T00().tile.Get((((x | 0) + 1) | 0), y) === null) {
      $T00().tile.Set((((x | 0) + 1) | 0), y, new ($T0D())());
    }
    if ($T00().tile.Get(x, (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) + 1) | 0), new ($T0D())());
    }
    if ($T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set((((x | 0) + 1) | 0), (((y | 0) + 1) | 0), new ($T0D())());
    }
    var flag = false;
    if (!(((type | 0) === 29) || 
        !$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || 
        !$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type] || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type] || 
        $T00().tile.Get(x, y).active || $T00().tile.Get((((x | 0) + 1) | 0), y).active)) {
      flag = true;
    } else if (!(((type | 0) !== 29) || 
        !$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || 
        !$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).active || 
        !$T00().tileTable[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type] || 
        !$T00().tileTable[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type] || 
        $T00().tile.Get(x, y).active || $T00().tile.Get((((x | 0) + 1) | 0), y).active)) {
      flag = true;
    }
    if (flag) {
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 0;
      $T00().tile.Get(x, y).frameX = 0;
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameY = 0;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameX = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), y).type = (type & 0xFF);
    }
  }; 

  function WorldGen_Place3x2 (x, y, type) {
    if (!(((x | 0) >= 5) && 
        ((x | 0) <= ((($T00().maxTilesX | 0) - 5) | 0)) && 
        ((y | 0) >= 5) && ((y | 0) <= ((($T00().maxTilesY | 0) - 5) | 0)))) {
      return;
    }
    var flag = true;

    for (var i = (((x | 0) - 1) | 0); i < (((x | 0) + 2) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 1) | 0); j < (((y | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if ($T00().tile.Get(i, j).active) {
          flag = false;
        }
      }
      if ($T00().tile.Get(i, (((y | 0) + 1) | 0)) === null) {
        $T00().tile.Set(i, (((y | 0) + 1) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(i, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, (((y | 0) + 1) | 0)).type])) {
        flag = false;
      }
    }
    if (flag) {
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameX = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameX = 18;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameX = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) - 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameX = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), y).type = (type & 0xFF);
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 18;
      $T00().tile.Get(x, y).frameX = 18;
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameX = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), y).type = (type & 0xFF);
    }
  }; 

  function WorldGen_Place3x3 (x, y, type) {
    var flag = true;

    for (var i = (((x | 0) - 1) | 0); i < (((x | 0) + 2) | 0); i = ((i + 1) | 0)) {

      for (var j = (y | 0); j < (((y | 0) + 3) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if ($T00().tile.Get(i, j).active) {
          flag = false;
        }
      }
    }
    if ($T00().tile.Get(x, (((y | 0) - 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) - 1) | 0), new ($T0D())());
    }
    if (!($T00().tile.Get(x, (((y | 0) - 1) | 0)).active && 
        $T00().tileSolid[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type] && !$T00().tileSolidTop[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type])) {
      flag = false;
    }
    if (flag) {
      $T00().tile.Get((((x | 0) - 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameY = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameX = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), y).type = (type & 0xFF);
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 0;
      $T00().tile.Get(x, y).frameX = 18;
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameY = 0;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameX = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).frameY = 18;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).frameX = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).frameY = 18;
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).frameX = 18;
      $T00().tile.Get(x, (((y | 0) + 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).frameY = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).frameX = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 2) | 0)).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 2) | 0)).frameY = 36;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 2) | 0)).frameX = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 2) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, (((y | 0) + 2) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) + 2) | 0)).frameY = 36;
      $T00().tile.Get(x, (((y | 0) + 2) | 0)).frameX = 18;
      $T00().tile.Get(x, (((y | 0) + 2) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 2) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 2) | 0)).frameY = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 2) | 0)).frameX = 36;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 2) | 0)).type = (type & 0xFF);
    }
  }; 

  function WorldGen_Place4x2 (x, y, type, direction) {
    if (!(((x | 0) >= 5) && 
        ((x | 0) <= ((($T00().maxTilesX | 0) - 5) | 0)) && 
        ((y | 0) >= 5) && ((y | 0) <= ((($T00().maxTilesY | 0) - 5) | 0)))) {
      return;
    }
    var flag = true;

    for (var i = (((x | 0) - 1) | 0); i < (((x | 0) + 3) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 1) | 0); j < (((y | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if ($T00().tile.Get(i, j).active) {
          flag = false;
        }
      }
      if ($T00().tile.Get(i, (((y | 0) + 1) | 0)) === null) {
        $T00().tile.Set(i, (((y | 0) + 1) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(i, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, (((y | 0) + 1) | 0)).type])) {
        flag = false;
      }
    }
    var num = 0;
    if ((direction | 0) === 1) {
      num = 72;
    }
    if (flag) {
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).frameX = num;
      $T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameX = ((((18 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameX = ((((36 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 2) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 2) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) + 2) | 0), (((y | 0) - 1) | 0)).frameX = ((((54 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get((((x | 0) + 2) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) - 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) - 1) | 0), y).frameX = num;
      $T00().tile.Get((((x | 0) - 1) | 0), y).type = (type & 0xFF);
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 18;
      $T00().tile.Get(x, y).frameX = ((((18 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameX = ((((36 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get((((x | 0) + 1) | 0), y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 2) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 2) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) + 2) | 0), y).frameX = ((((54 + num) | 0) + 0x8000 & 0xFFFF) - 0x8000);
      $T00().tile.Get((((x | 0) + 2) | 0), y).type = (type & 0xFF);
    }
  }; 

  function WorldGen_PlaceChest (x, y, type) {
    var flag = true;
    var num = -1;

    for (var i = (x | 0); i < (((x | 0) + 2) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 1) | 0); j < (((y | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if ($T00().tile.Get(i, j).active) {
          flag = false;
        }
        if ($T00().tile.Get(i, j).lava) {
          flag = false;
        }
      }
      if ($T00().tile.Get(i, (((y | 0) + 1) | 0)) === null) {
        $T00().tile.Set(i, (((y | 0) + 1) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(i, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, (((y | 0) + 1) | 0)).type])) {
        flag = false;
      }
    }
    if (flag) {
      num = ($T1D().CreateChest(x, (((y | 0) - 1) | 0)) | 0);
      if (num === -1) {
        flag = false;
      }
    }
    if (flag) {
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).frameX = 0;
      $T00().tile.Get(x, (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameY = 0;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).frameX = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).type = (type & 0xFF);
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameY = 18;
      $T00().tile.Get(x, y).frameX = 0;
      $T00().tile.Get(x, y).type = (type & 0xFF);
      $T00().tile.Get((((x | 0) + 1) | 0), y).active = true;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameY = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), y).frameX = 18;
      $T00().tile.Get((((x | 0) + 1) | 0), y).type = (type & 0xFF);
    }
    return num;
  }; 

  function WorldGen_PlaceDoor (i, j, type, $exception) {
    try {
      if (!(!$T00().tile.Get(i, (((j | 0) - 2) | 0)).active || 
          !$T00().tileSolid[$T00().tile.Get(i, (((j | 0) - 2) | 0)).type] || 
          !$T00().tile.Get(i, (((j | 0) + 2) | 0)).active || !$T00().tileSolid[$T00().tile.Get(i, (((j | 0) + 2) | 0)).type])) {
        $T00().tile.Get(i, (((j | 0) - 1) | 0)).active = true;
        $T00().tile.Get(i, (((j | 0) - 1) | 0)).type = 10;
        $T00().tile.Get(i, (((j | 0) - 1) | 0)).frameY = 0;
        $T00().tile.Get(i, (((j | 0) - 1) | 0)).frameX = ((Math.imul($thisType.genRand.Next(3), 18) + 0x8000 & 0xFFFF) - 0x8000);
        $T00().tile.Get(i, j).active = true;
        $T00().tile.Get(i, j).type = 10;
        $T00().tile.Get(i, j).frameY = 18;
        $T00().tile.Get(i, j).frameX = ((Math.imul($thisType.genRand.Next(3), 18) + 0x8000 & 0xFFFF) - 0x8000);
        $T00().tile.Get(i, (((j | 0) + 1) | 0)).active = true;
        $T00().tile.Get(i, (((j | 0) + 1) | 0)).type = 10;
        $T00().tile.Get(i, (((j | 0) + 1) | 0)).frameY = 36;
        $T00().tile.Get(i, (((j | 0) + 1) | 0)).frameX = ((Math.imul($thisType.genRand.Next(3), 18) + 0x8000 & 0xFFFF) - 0x8000);
        var result = true;
      } else {
        result = false;
      }
    } catch ($exception) {
      result = false;
    }
    return result;
  }; 

  function WorldGen_PlaceOnTable1x1 (x, y, type) {
    var flag = false;
    if ($T00().tile.Get(x, y) === null) {
      $T00().tile.Set(x, y, new ($T0D())());
    }
    if ($T00().tile.Get(x, (((y | 0) + 1) | 0)) === null) {
      $T00().tile.Set(x, (((y | 0) + 1) | 0), new ($T0D())());
    }
    if (!($T00().tile.Get(x, y).active || 
        !$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || !$T00().tileTable[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type])) {
      flag = true;
    }
    if (!(((type | 0) !== 78) || 
        $T00().tile.Get(x, y).active || 
        !$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type])) {
      flag = true;
    }
    if (flag) {
      $T00().tile.Get(x, y).active = true;
      $T00().tile.Get(x, y).frameX = 0;
      $T00().tile.Get(x, y).frameY = 0;
      $T00().tile.Get(x, y).type = (type & 0xFF);
      if ((type | 0) === 50) {
        $T00().tile.Get(x, y).frameX = ((Math.imul(18, $thisType.genRand.Next(5)) + 0x8000 & 0xFFFF) - 0x8000);
      }
    }
  }; 

  function WorldGen_PlacePot (x, y, type) {
    var flag = true;

    for (var i = (x | 0); i < (((x | 0) + 2) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 1) | 0); j < (((y | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if ($T00().tile.Get(i, j).active) {
          flag = false;
        }
      }
      if ($T00().tile.Get(i, (((y | 0) + 1) | 0)) === null) {
        $T00().tile.Set(i, (((y | 0) + 1) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(i, (((y | 0) + 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, (((y | 0) + 1) | 0)).type])) {
        flag = false;
      }
    }
    if (flag) {

      for (var k = 0; k < 2; k = ((k + 1) | 0)) {

        for (var l = -1; l < 1; l = ((l + 1) | 0)) {
          var num = ((Math.imul(k, 18) + Math.imul($thisType.genRand.Next(3), 36)) | 0);
          var num2 = Math.imul(((l + 1) | 0), 18);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).active = true;
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).frameX = ((num + 0x8000 & 0xFFFF) - 0x8000);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).frameY = ((num2 + 0x8000 & 0xFFFF) - 0x8000);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).type = (type & 0xFF);
        }
      }
      return true;
    }
    return false;
  }; 

  function WorldGen_PlaceSign (x, y, type) {
    var num = (((x | 0) - 2) | 0);
    var num2 = (((x | 0) + 3) | 0);
    var num3 = (((y | 0) - 2) | 0);
    var num4 = (((y | 0) + 3) | 0);
    if (num < 0) {
      return false;
    }
    if (num2 > ($T00().maxTilesX | 0)) {
      return false;
    }
    if (num3 < 0) {
      return false;
    }
    if (num4 > ($T00().maxTilesY | 0)) {
      return false;
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
      }
    }
    var num5 = (x | 0);
    var num6 = (y | 0);
    if (!(!$T00().tile.Get(x, (((y | 0) + 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) + 1) | 0)).type] || 
        !$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).active || !$T00().tileSolid[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type])) {
      num6 = ((num6 - 1) | 0);
      var num7 = 0;
    } else if (!(!$T00().tile.Get(x, (((y | 0) - 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type] || 
        $T00().tileSolidTop[$T00().tile.Get(x, (((y | 0) - 1) | 0)).type] || 
        !$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) - 1) | 0)).type])) {
      num7 = 1;
    } else if (!(!$T00().tile.Get((((x | 0) - 1) | 0), y).active || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) - 1) | 0), y).type] || 
        $T00().tileSolidTop[$T00().tile.Get((((x | 0) - 1) | 0), y).type] || 
        !$T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get((((x | 0) - 1) | 0), (((y | 0) + 1) | 0)).type])) {
      num7 = 2;
    } else {
      if (!$T00().tile.Get((((x | 0) + 1) | 0), y).active || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) + 1) | 0), y).type] || 
        $T00().tileSolidTop[$T00().tile.Get((((x | 0) + 1) | 0), y).type] || 
        !$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).active || 
        !$T00().tileSolid[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get((((x | 0) + 1) | 0), (((y | 0) + 1) | 0)).type]) {
        return false;
      }
      num5 = ((num5 - 1) | 0);
      num7 = 3;
    }
    if (!(!$T00().tile.Get(num5, num6).active && 
        !$T00().tile.Get(((num5 + 1) | 0), num6).active && 
        !$T00().tile.Get(num5, ((num6 + 1) | 0)).active && !$T00().tile.Get(((num5 + 1) | 0), ((num6 + 1) | 0)).active)) {
      return false;
    }
    var num8 = Math.imul(36, num7);

    for (var k = 0; k < 2; k = ((k + 1) | 0)) {

      for (var l = 0; l < 2; l = ((l + 1) | 0)) {
        $T00().tile.Get(((num5 + k) | 0), ((num6 + l) | 0)).active = true;
        $T00().tile.Get(((num5 + k) | 0), ((num6 + l) | 0)).type = (type & 0xFF);
        $T00().tile.Get(((num5 + k) | 0), ((num6 + l) | 0)).frameX = ((((num8 + Math.imul(18, k)) | 0) + 0x8000 & 0xFFFF) - 0x8000);
        $T00().tile.Get(((num5 + k) | 0), ((num6 + l) | 0)).frameY = ((Math.imul(18, l) + 0x8000 & 0xFFFF) - 0x8000);
      }
    }
    return true;
  }; 

  function WorldGen_PlaceSunflower (x, y, type) {
    if (+y > (+$T00().worldSurface - 1)) {
      return;
    }
    var flag = true;

    for (var i = (x | 0); i < (((x | 0) + 2) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 3) | 0); j < (((y | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        if (!(!$T00().tile.Get(i, j).active && (($T00().tile.Get(i, j).wall | 0) <= 0))) {
          flag = false;
        }
      }
      if ($T00().tile.Get(i, (((y | 0) + 1) | 0)) === null) {
        $T00().tile.Set(i, (((y | 0) + 1) | 0), new ($T0D())());
      }
      if (!($T00().tile.Get(i, (((y | 0) + 1) | 0)).active && (($T00().tile.Get(i, (((y | 0) + 1) | 0)).type | 0) === 2))) {
        flag = false;
      }
    }
    if (flag) {

      for (var k = 0; k < 2; k = ((k + 1) | 0)) {

        for (var l = -3; l < 1; l = ((l + 1) | 0)) {
          var num = ((Math.imul(k, 18) + Math.imul($thisType.genRand.Next(3), 36)) | 0);
          var num2 = Math.imul(((l + 3) | 0), 18);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).active = true;
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).frameX = ((num + 0x8000 & 0xFFFF) - 0x8000);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).frameY = ((num2 + 0x8000 & 0xFFFF) - 0x8000);
          $T00().tile.Get((((x | 0) + k) | 0), (((y | 0) + l) | 0)).type = (type & 0xFF);
        }
      }
    }
  }; 

  function WorldGen_PlaceTile (i, j, type, mute, forced, plr) {
    var $hoisted00 = new ($T04())();
    var result = false;
    if (!(((i | 0) < 0) || 
        ((j | 0) < 0) || 
        ((i | 0) >= ($T00().maxTilesX | 0)) || ((j | 0) >= ($T00().maxTilesY | 0)))) {
      if ($T00().tile.Get(i, j) === null) {
        $T00().tile.Set(i, j, new ($T0D())());
      }
      if (!(!(forced || 
            $T18().EmptyTile(i, j, false) || 
            !$T00().tileSolid[type] || 
            (((type | 0) === 23) && 
              (($T00().tile.Get(i, j).type | 0) === 0) && 
              $T00().tile.Get(i, j).active)) && 
          !(((type | 0) === 2) && 
            (($T00().tile.Get(i, j).type | 0) === 0) && 
            $T00().tile.Get(i, j).active) && 
          !(((type | 0) === 60) && 
            (($T00().tile.Get(i, j).type | 0) === 59) && 
            $T00().tile.Get(i, j).active) && (((type | 0) !== 70) || 
            (($T00().tile.Get(i, j).type | 0) !== 59) || 
            !$T00().tile.Get(i, j).active))) {
        if (!(((type | 0) !== 23) || ((($T00().tile.Get(i, j).type | 0) === 0) && 
              $T00().tile.Get(i, j).active))) {
          return false;
        }
        if (!(((type | 0) !== 2) || ((($T00().tile.Get(i, j).type | 0) === 0) && 
              $T00().tile.Get(i, j).active))) {
          return false;
        }
        if (!(((type | 0) !== 60) || ((($T00().tile.Get(i, j).type | 0) === 59) && 
              $T00().tile.Get(i, j).active))) {
          return false;
        }
        if (!((($T00().tile.Get(i, j).liquid | 0) <= 0) || (((type | 0) !== 3) && 
              ((type | 0) !== 4) && 
              ((type | 0) !== 20) && 
              ((type | 0) !== 24) && 
              ((type | 0) !== 27) && 
              ((type | 0) !== 32) && 
              ((type | 0) !== 51) && 
              ((type | 0) !== 61) && 
              ((type | 0) !== 69) && 
              ((type | 0) !== 72) && 
              ((type | 0) !== 73)))) {
          return false;
        }
        $T00().tile.Get(i, j).frameY = 0;
        $T00().tile.Get(i, j).frameX = 0;
        if (!(((type | 0) !== 3) && ((type | 0) !== 24))) {
          if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
              !$T00().tile.Get(i, (((j | 0) + 1) | 0)).active || (!((($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) === 2) && 
                  ((type | 0) === 3)) && 
                !((($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) === 23) && 
                  ((type | 0) === 24)) && 
                ((($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) !== 78) || 
                  ((type | 0) !== 3))))) {
            if (!(((type | 0) !== 24) || (($thisType.genRand.Next(13) | 0) !== 0))) {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = 32;
              $thisType.SquareTileFrame(i, j, true);
            } else if (($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) === 78) {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = (type & 0xFF);
              $T00().tile.Get(i, j).frameX = ((((Math.imul($thisType.genRand.Next(2), 18) + 108) | 0) + 0x8000 & 0xFFFF) - 0x8000);
            } else if (!((($T00().tile.Get(i, j).wall | 0) !== 0) || (($T00().tile.Get(i, (((j | 0) + 1) | 0)).wall | 0) !== 0))) {
              if (($thisType.genRand.Next(50) | 0) === 0) {
                $T00().tile.Get(i, j).active = true;
                $T00().tile.Get(i, j).type = (type & 0xFF);
                $T00().tile.Get(i, j).frameX = 144;
              } else if (($thisType.genRand.Next(35) | 0) === 0) {
                $T00().tile.Get(i, j).active = true;
                $T00().tile.Get(i, j).type = (type & 0xFF);
                $T00().tile.Get(i, j).frameX = ((((Math.imul($thisType.genRand.Next(2), 18) + 108) | 0) + 0x8000 & 0xFFFF) - 0x8000);
              } else {
                $T00().tile.Get(i, j).active = true;
                $T00().tile.Get(i, j).type = (type & 0xFF);
                $T00().tile.Get(i, j).frameX = ((Math.imul($thisType.genRand.Next(6), 18) + 0x8000 & 0xFFFF) - 0x8000);
              }
            }
          }
        } else if ((type | 0) === 61) {
          if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
              !$T00().tile.Get(i, (((j | 0) + 1) | 0)).active || (($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) !== 60))) {
            if (($thisType.genRand.Next(10) | 0) === 0) {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = 69;
              $thisType.SquareTileFrame(i, j, true);
            } else if (($thisType.genRand.Next(15) | 0) === 0) {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = (type & 0xFF);
              $T00().tile.Get(i, j).frameX = 144;
            } else if (($thisType.genRand.Next(1000) | 0) === 0) {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = (type & 0xFF);
              $T00().tile.Get(i, j).frameX = 162;
            } else {
              $T00().tile.Get(i, j).active = true;
              $T00().tile.Get(i, j).type = (type & 0xFF);
              $T00().tile.Get(i, j).frameX = ((Math.imul($thisType.genRand.Next(8), 18) + 0x8000 & 0xFFFF) - 0x8000);
            }
          }
        } else if ((type | 0) === 71) {
          if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
              !$T00().tile.Get(i, (((j | 0) + 1) | 0)).active || (($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) !== 70))) {
            $T00().tile.Get(i, j).active = true;
            $T00().tile.Get(i, j).type = (type & 0xFF);
            $T00().tile.Get(i, j).frameX = ((Math.imul($thisType.genRand.Next(5), 18) + 0x8000 & 0xFFFF) - 0x8000);
          }
        } else if ((type | 0) === 4) {
          if ($T00().tile.Get((((i | 0) - 1) | 0), j) === null) {
            $T00().tile.Set((((i | 0) - 1) | 0), j, new ($T0D())());
          }
          if ($T00().tile.Get((((i | 0) + 1) | 0), j) === null) {
            $T00().tile.Set((((i | 0) + 1) | 0), j, new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) + 1) | 0), new ($T0D())());
          }
          if (!(!($T00().tile.Get((((i | 0) - 1) | 0), j).active && 
                ($T00().tileSolid[$T00().tile.Get((((i | 0) - 1) | 0), j).type] || 
                  ((($T00().tile.Get((((i | 0) - 1) | 0), j).type | 0) === 5) && 
                    (($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).type | 0) === 5) && 
                    (($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).type | 0) === 5)))) && 
              !($T00().tile.Get((((i | 0) + 1) | 0), j).active && 
                ($T00().tileSolid[$T00().tile.Get((((i | 0) + 1) | 0), j).type] || 
                  ((($T00().tile.Get((((i | 0) + 1) | 0), j).type | 0) === 5) && 
                    (($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).type | 0) === 5) && 
                    (($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).type | 0) === 5)))) && (!$T00().tile.Get(i, (((j | 0) + 1) | 0)).active || 
                !$T00().tileSolid[$T00().tile.Get(i, (((j | 0) + 1) | 0)).type]))) {
            $T00().tile.Get(i, j).active = true;
            $T00().tile.Get(i, j).type = (type & 0xFF);
            $thisType.SquareTileFrame(i, j, true);
          }
        } else if ((type | 0) === 10) {
          if ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) - 1) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) - 2) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) - 2) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) - 3) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) - 3) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) + 1) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) + 2) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) + 2) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, (((j | 0) + 3) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) + 3) | 0), new ($T0D())());
          }
          if (!($T00().tile.Get(i, (((j | 0) - 1) | 0)).active || 
              $T00().tile.Get(i, (((j | 0) - 2) | 0)).active || 
              !$T00().tile.Get(i, (((j | 0) - 3) | 0)).active || !$T00().tileSolid[$T00().tile.Get(i, (((j | 0) - 3) | 0)).type])) {
            $thisType.PlaceDoor(i, (((j | 0) - 1) | 0), type);
            $thisType.SquareTileFrame(i, j, true);
          } else {
            if ($T00().tile.Get(i, (((j | 0) + 1) | 0)).active || 
              $T00().tile.Get(i, (((j | 0) + 2) | 0)).active || 
              !$T00().tile.Get(i, (((j | 0) + 3) | 0)).active || !$T00().tileSolid[$T00().tile.Get(i, (((j | 0) + 3) | 0)).type]) {
              return false;
            }
            $thisType.PlaceDoor(i, (((j | 0) + 1) | 0), type);
            $thisType.SquareTileFrame(i, j, true);
          }
        } else if (!(((type | 0) !== 34) && 
            ((type | 0) !== 35) && ((type | 0) !== 36))) {
          $thisType.Place3x3(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if (!(((type | 0) !== 13) && 
            ((type | 0) !== 33) && 
            ((type | 0) !== 49) && 
            ((type | 0) !== 50) && ((type | 0) !== 78))) {
          $thisType.PlaceOnTable1x1(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if (!(((type | 0) !== 14) && ((type | 0) !== 26))) {
          $thisType.Place3x2(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 20) {
          if ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) + 1) | 0), new ($T0D())());
          }
          if (!(!$T00().tile.Get(i, (((j | 0) + 1) | 0)).active || (($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0) !== 2))) {
            $thisType.Place1x2(i, j, type);
            $thisType.SquareTileFrame(i, j, true);
          }
        } else if ((type | 0) === 15) {
          if ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null) {
            $T00().tile.Set(i, (((j | 0) - 1) | 0), new ($T0D())());
          }
          if ($T00().tile.Get(i, j) === null) {
            $T00().tile.Set(i, j, new ($T0D())());
          }
          $thisType.Place1x2(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if (!(((type | 0) !== 16) && 
            ((type | 0) !== 18) && ((type | 0) !== 29))) {
          $thisType.Place2x1(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if (!(((type | 0) !== 17) && ((type | 0) !== 77))) {
          $thisType.Place3x2(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 21) {
          $thisType.PlaceChest(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 27) {
          $thisType.PlaceSunflower(i, j, 27);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 28) {
          $thisType.PlacePot(i, j, 28);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 42) {
          $thisType.Place1x2Top(i, j, type);
          $thisType.SquareTileFrame(i, j, true);
        } else if ((type | 0) === 55) {
          $thisType.PlaceSign(i, j, type);
        } else if ((type | 0) === 79) {
          var direction = 1;
          if ((plr | 0) > -1) {
            direction = ($T00().player[plr].direction | 0);
          }
          $thisType.Place4x2(i, j, type, direction);
        } else {
          $T00().tile.Get(i, j).active = true;
          $T00().tile.Get(i, j).type = (type & 0xFF);
        }
        if (!(!$T00().tile.Get(i, j).active || mute)) {
          $thisType.SquareTileFrame(i, j, true);
          result = true;
          $T00().PlaySound(0, Math.imul(i, 16), Math.imul(j, 16), 1);
          if ((type | 0) === 22) {

            for (var k = 0; k < 3; k = ((k + 1) | 0)) {
              $T16().NewDust(
                ($hoisted00._ctor(+((i | 0) * 16), +((j | 0) * 16)), 
                  $hoisted00), 
                16, 
                16, 
                14, 
                0, 
                0, 
                0, 
                new ($T1C())(), 
                1
              );
            }
          }
        }
      }
    }
    return result;
  }; 

  function WorldGen_PlaceWall (i, j, type, mute) {
    if ($T00().tile.Get(i, j) === null) {
      $T00().tile.Set(i, j, new ($T0D())());
    }
    if (($T00().tile.Get(i, j).wall | 0) !== (type | 0)) {

      for (var k = (((i | 0) - 1) | 0); k < (((i | 0) + 2) | 0); k = ((k + 1) | 0)) {

        for (var l = (((j | 0) - 1) | 0); l < (((j | 0) + 2) | 0); l = ((l + 1) | 0)) {
          if ($T00().tile.Get(k, l) === null) {
            $T00().tile.Set(k, l, new ($T0D())());
          }
          if (!((($T00().tile.Get(k, l).wall | 0) <= 0) || (($T00().tile.Get(k, l).wall | 0) === (type | 0)))) {
            return;
          }
        }
      }
      $T00().tile.Get(i, j).wall = (type & 0xFF);
      $thisType.SquareWallFrame(i, j, true);
      if (!mute) {
        $T00().PlaySound(0, Math.imul(i, 16), Math.imul(j, 16), 1);
      }
    }
  }; 

  function WorldGen_PlantCheck (i, j) {
    var num = -1;
    var type = ($T00().tile.Get(i, j).type | 0);
    var arg_22_0 = ($T00().maxTilesX | 0);
    if ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) {
      num = type;
    }
    if (!(((((i | 0) - 1) | 0) < 0) || 
        ($T00().tile.Get((((i | 0) - 1) | 0), j) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), j).active)) {
      var arg_74_0 = ($T00().tile.Get((((i | 0) - 1) | 0), j).type | 0);
    }
    if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
        ($T00().tile.Get((((i | 0) + 1) | 0), j) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), j).active)) {
      var arg_B7_0 = ($T00().tile.Get((((i | 0) + 1) | 0), j).type | 0);
    }
    if (!(((((j | 0) - 1) | 0) < 0) || 
        ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get(i, (((j | 0) - 1) | 0)).active)) {
      var arg_F6_0 = ($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0);
    }
    if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
        ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get(i, (((j | 0) + 1) | 0)).active)) {
      num = ($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0);
    }
    if (!(((((i | 0) - 1) | 0) < 0) || 
        ((((j | 0) - 1) | 0) < 0) || 
        ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).active)) {
      var arg_184_0 = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).type | 0);
    }
    if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
        ((((j | 0) - 1) | 0) < 0) || 
        ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).active)) {
      var arg_1D3_0 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).type | 0);
    }
    if (!(((((i | 0) - 1) | 0) < 0) || 
        ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
        ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).active)) {
      var arg_222_0 = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).type | 0);
    }
    if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
        ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
        ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).active)) {
      var arg_275_0 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).type | 0);
    }
    if (!(!((type === 3) && 
          (num !== 2) && 
          (num !== 78)) && 
        !((type === 24) && 
          (num !== 23)) && 
        !((type === 61) && 
          (num !== 60)) && 
        !((type === 71) && 
          (num !== 70)) && 
        !((type === 73) && 
          (num !== 2) && 
          (num !== 78)) && ((type !== 74) || 
          (num === 60)))) {
      $thisType.KillTile(
        i, 
        j, 
        false, 
        false, 
        false
      );
    }
  }; 

  function WorldGen_PlayerLOS (x, y) {
    var value = new ($T24())();
    var rectangle = new ($T24())(Math.imul(x, 16), Math.imul(y, 16), 16, 16);

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if ($T00().player[i].active) {
        (value = value.MemberwiseClone(), 
          $T24().prototype._ctor.call(value, ((($T00().player[i].position.X + (+($T00().player[i].width) * 0.5)) - (+($T00().screenWidth) * 0.6)) | 0), ((($T00().player[i].position.Y + (+($T00().player[i].height) * 0.5)) - (+($T00().screenHeight) * 0.6)) | 0), ((+($T00().screenWidth) * 1.2) | 0), ((+($T00().screenHeight) * 1.2) | 0)));
        if (rectangle.Intersects(value.MemberwiseClone())) {
          return true;
        }
      }
    }
    return false;
  }; 

  function WorldGen_playWorld () {
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "playWorldCallBack", $S09(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_playWorldCallBack (threadContext) {
    if ($T00().rand === null) {
      $T00().rand = $S01().Construct($T06().get_Now().get_Ticks().ToNumber(4294967295, true));
    }

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if (i !== ($T00().myPlayer | 0)) {
        $T00().player[i].active = false;
      }
    }
    $thisType.loadWorld();
    if ($thisType.loadFailed) {
      return;
    }
    $thisType.EveryTileFrame();
    if ($T00().gameMenu) {
      $T00().gameMenu = false;
    }
    $T00().player[$T00().myPlayer].Spawn();
    $T00().player[$T00().myPlayer].UpdatePlayer($T00().myPlayer);
    $T00().dayTime = $thisType.tempDayTime;
    $T00().time = +$thisType.tempTime;
    $T00().moonPhase = ($thisType.tempMoonPhase | 0);
    $T00().bloodMoon = $thisType.tempBloodMoon;
    $T00().PlaySound(11, -1, -1, 1);
    $T00().resetClouds = true;
  }; 

  function WorldGen_QuickFindHome (npc) {
    if (!((($T00().npc[npc].homeTileX | 0) <= 10) || 
        (($T00().npc[npc].homeTileY | 0) <= 10) || 
        (($T00().npc[npc].homeTileX | 0) >= ((($T00().maxTilesX | 0) - 10) | 0)) || (($T00().npc[npc].homeTileY | 0) >= ($T00().maxTilesY | 0)))) {
      $thisType.canSpawn = false;
      $thisType.StartRoomCheck($T00().npc[npc].homeTileX, ((($T00().npc[npc].homeTileY | 0) - 1) | 0));
      if (!$thisType.canSpawn) {

        for (var i = ((($T00().npc[npc].homeTileX | 0) - 1) | 0); i < ((($T00().npc[npc].homeTileX | 0) + 2) | 0); i = ((i + 1) | 0)) {

          for (var num = ((($T00().npc[npc].homeTileY | 0) - 1) | 0); !((num >= ((($T00().npc[npc].homeTileY | 0) + 2) | 0)) || $thisType.StartRoomCheck(i, num)); num = ((num + 1) | 0)) {
          }
        }
      }
      if (!$thisType.canSpawn) {
        var num2 = 10;

        for (var j = ((($T00().npc[npc].homeTileX | 0) - num2) | 0); j <= ((($T00().npc[npc].homeTileX | 0) + num2) | 0); j = ((j + 2) | 0)) {

          for (var num3 = ((($T00().npc[npc].homeTileY | 0) - num2) | 0); !((num3 > ((($T00().npc[npc].homeTileY | 0) + num2) | 0)) || $thisType.StartRoomCheck(j, num3)); num3 = ((num3 + 2) | 0)) {
          }
        }
      }
      if ($thisType.canSpawn) {
        $thisType.RoomNeeds($T00().npc[npc].type);
        if ($thisType.canSpawn) {
          $thisType.ScoreRoom(npc);
        }
        if (!(!$thisType.canSpawn || (($thisType.hiScore | 0) <= 0))) {
          $T00().npc[npc].homeTileX = ($thisType.bestX | 0);
          $T00().npc[npc].homeTileY = ($thisType.bestY | 0);
          $T00().npc[npc].homeless = false;
          $thisType.canSpawn = false;
          return;
        }
        $T00().npc[npc].homeless = true;
        return;
      } else {
        $T00().npc[npc].homeless = true;
      }
    }
  }; 

  function WorldGen_RangeFrame (startX, startY, endX, endY) {
    var num = (((endX | 0) + 1) | 0);
    var num2 = (((endY | 0) + 1) | 0);

    for (var i = (((startX | 0) - 1) | 0); i < ((num + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = (((startY | 0) - 1) | 0); j < ((num2 + 1) | 0); j = ((j + 1) | 0)) {
        $thisType.TileFrame(i, j, false, false);
        $thisType.WallFrame(i, j, false);
      }
    }
  }; 

  function WorldGen_RoomNeeds (npcType) {
    if (!(!$thisType.houseTile[15] || 
        (!$thisType.houseTile[14] && 
          !$thisType.houseTile[18]) || 
        (!$thisType.houseTile[4] && 
          !$thisType.houseTile[33] && 
          !$thisType.houseTile[34] && 
          !$thisType.houseTile[35] && 
          !$thisType.houseTile[36] && 
          !$thisType.houseTile[42] && 
          !$thisType.houseTile[49]) || (!$thisType.houseTile[10] && 
          !$thisType.houseTile[11] && 
          !$thisType.houseTile[19]))) {
      $thisType.canSpawn = true;
    } else {
      $thisType.canSpawn = false;
    }
    return $thisType.canSpawn;
  }; 

  function WorldGen_saveAndPlay () {
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "saveAndPlayCallBack", $S0A(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_saveAndPlayCallBack (threadContext) {
    $thisType.saveWorld(false);
  }; 

  function WorldGen_SaveAndQuit () {
    $T00().PlaySound(11, -1, -1, 1);
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "SaveAndQuitCallBack", $S0B(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_SaveAndQuitCallBack (threadContext) {
    $T00().menuMode = 10;
    $T00().gameMenu = true;
    $T10().SavePlayer($T00().player[$T00().myPlayer], $T00().playerPathName);
    if (($T00().netMode | 0) === 0) {
      $thisType.saveWorld(false);
      $T00().PlaySound(10, -1, -1, 1);
    } else {
      $T25().disconnect = true;
      $T00().netMode = 0;
    }
    $T00().menuMode = 0;
  }; 

  function WorldGen_saveToonWhilePlaying () {
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "saveToonWhilePlayingCallBack", $S0C(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_saveToonWhilePlayingCallBack (threadContext) {
    $T10().SavePlayer($T00().player[$T00().myPlayer], $T00().playerPathName);
  }; 

  function WorldGen_saveWorld (resetTime) {
    var obj = null;
    if ($thisType.saveLock) {
      return;
    }
    $thisType.saveLock = true;
    if ($T00().skipMenu) {
      return;
    }
    var value = $T00().dayTime;
    $thisType.tempTime = +$T00().time;
    $thisType.tempMoonPhase = ($T00().moonPhase | 0);
    $thisType.tempBloodMoon = $T00().bloodMoon;
    if (resetTime) {
      value = true;
      $thisType.tempTime = 13500;
      $thisType.tempMoonPhase = 0;
      $thisType.tempBloodMoon = false;
    }
    if ($T00().worldPathName === null) {
      return;
    }
    $T00().statusText = "Backing up world file...";
    if ($T26().Exists($T00().worldPathName)) {
      $T26().Copy($T00().worldPathName, JSIL.ConcatString($T00().worldPathName, ".bak"), true);
    }
    var fileStream = $S05().Construct($T00().worldPathName, $T20().Create);
    var flag = new JSIL.BoxedVariable(false);
    try {
      var binaryWriter = $S0D().Construct(fileStream);
      try {
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().curRelease);
        $S0F().CallVirtual("Write", null, binaryWriter, $T00().worldName);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().worldID);
        $S0E().CallVirtual("Write", null, binaryWriter, (($T00().leftWorld) | 0));
        $S0E().CallVirtual("Write", null, binaryWriter, (($T00().rightWorld) | 0));
        $S0E().CallVirtual("Write", null, binaryWriter, (($T00().topWorld) | 0));
        $S0E().CallVirtual("Write", null, binaryWriter, (($T00().bottomWorld) | 0));
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().maxTilesY);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().maxTilesX);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().spawnTileX);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().spawnTileY);
        $S10().CallVirtual("Write", null, binaryWriter, $T00().worldSurface);
        $S10().CallVirtual("Write", null, binaryWriter, $T00().rockLayer);
        $S10().CallVirtual("Write", null, binaryWriter, $thisType.tempTime);
        $S11().CallVirtual("Write", null, binaryWriter, value);
        $S0E().CallVirtual("Write", null, binaryWriter, $thisType.tempMoonPhase);
        $S11().CallVirtual("Write", null, binaryWriter, $thisType.tempBloodMoon);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().dungeonX);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().dungeonY);
        $S11().CallVirtual("Write", null, binaryWriter, $T12().downedBoss1);
        $S11().CallVirtual("Write", null, binaryWriter, $T12().downedBoss2);
        $S11().CallVirtual("Write", null, binaryWriter, $T12().downedBoss3);
        $S11().CallVirtual("Write", null, binaryWriter, $thisType.shadowOrbSmashed);
        $S11().CallVirtual("Write", null, binaryWriter, $thisType.spawnMeteor);
        $S12().CallVirtual("Write", null, binaryWriter, ($thisType.shadowOrbCount & 0xFF));
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().invasionDelay);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().invasionSize);
        $S0E().CallVirtual("Write", null, binaryWriter, $T00().invasionType);
        $S10().CallVirtual("Write", null, binaryWriter, $T00().invasionX);

        for (var i = 0; i < ($T00().maxTilesX | 0); i = ((i + 1) | 0)) {
          var num = +((+i / +($T00().maxTilesX)));
          $T00().statusText = (JSIL.ConcatString("Saving world data: ", $T02().$Box((((num * 100) + 1) | 0)), "%"));

          for (var j = 0; j < ($T00().maxTilesY | 0); j = ((j + 1) | 0)) {
            $S11().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).active);
            if ($T00().tile.Get(i, j).active) {
              $S12().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).type);
              if ($T00().tileFrameImportant[$T00().tile.Get(i, j).type]) {
                $S13().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).frameX);
                $S13().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).frameY);
              }
            }
            $S11().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).lighted);
            if (($T00().tile.Get(i, j).wall | 0) > 0) {
              $S11().CallVirtual("Write", null, binaryWriter, true);
              $S12().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).wall);
            } else {
              $S11().CallVirtual("Write", null, binaryWriter, false);
            }
            if (($T00().tile.Get(i, j).liquid | 0) > 0) {
              $S11().CallVirtual("Write", null, binaryWriter, true);
              $S12().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).liquid);
              $S11().CallVirtual("Write", null, binaryWriter, $T00().tile.Get(i, j).lava);
            } else {
              $S11().CallVirtual("Write", null, binaryWriter, false);
            }
          }
        }

        for (var k = 0; k < 1000; k = ((k + 1) | 0)) {
          if ($T00().chest[k] === null) {
            $S11().CallVirtual("Write", null, binaryWriter, false);
          } else {
            $S11().CallVirtual("Write", null, binaryWriter, true);
            $S0E().CallVirtual("Write", null, binaryWriter, $T00().chest[k].x);
            $S0E().CallVirtual("Write", null, binaryWriter, $T00().chest[k].y);

            for (var l = 0; l < ($T1D().maxItems | 0); l = ((l + 1) | 0)) {
              $S12().CallVirtual("Write", null, binaryWriter, ($T00().chest[k].item[l].stack & 0xFF));
              if (($T00().chest[k].item[l].stack | 0) > 0) {
                $S0F().CallVirtual("Write", null, binaryWriter, $T00().chest[k].item[l].$name);
              }
            }
          }
        }

        for (var m = 0; m < 1000; m = ((m + 1) | 0)) {
          if (!(($T00().sign[m] !== null) && ($T00().sign[m].text !== null))) {
            $S11().CallVirtual("Write", null, binaryWriter, false);
          } else {
            $S11().CallVirtual("Write", null, binaryWriter, true);
            $S0F().CallVirtual("Write", null, binaryWriter, $T00().sign[m].text);
            $S0E().CallVirtual("Write", null, binaryWriter, $T00().sign[m].x);
            $S0E().CallVirtual("Write", null, binaryWriter, $T00().sign[m].y);
          }
        }

        for (var n = 0; n < 1000; n = ((n + 1) | 0)) {
          flag.set(false);
          try {
            $T28().Enter(obj = $T00().npc[n], /* ref */ flag);
            if (!(!$T00().npc[n].active || !$T00().npc[n].townNPC)) {
              $S11().CallVirtual("Write", null, binaryWriter, true);
              $S0F().CallVirtual("Write", null, binaryWriter, $T00().npc[n].$name);
              $S14().CallVirtual("Write", null, binaryWriter, $T00().npc[n].position.X);
              $S14().CallVirtual("Write", null, binaryWriter, $T00().npc[n].position.Y);
              $S11().CallVirtual("Write", null, binaryWriter, $T00().npc[n].homeless);
              $S0E().CallVirtual("Write", null, binaryWriter, $T00().npc[n].homeTileX);
              $S0E().CallVirtual("Write", null, binaryWriter, $T00().npc[n].homeTileY);
            }
          } finally {
            if (flag.get()) {
              $T28().Exit(obj);
            }
          }
        }
        $S11().CallVirtual("Write", null, binaryWriter, false);
        binaryWriter.Close();
      } finally {
        if (binaryWriter !== null) {
          $IM00().Call(binaryWriter, null);
        }
      }
    } finally {
      if (fileStream !== null) {
        $IM00().Call(fileStream, null);
      }
    }
    $thisType.saveLock = false;
  }; 

  function WorldGen_ScoreRoom (ignoreNPC) {

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(!$T00().npc[i].active || 
          !$T00().npc[i].townNPC || 
          ((ignoreNPC | 0) === i) || $T00().npc[i].homeless)) {

        for (var j = 0; j < ($thisType.numRoomTiles | 0); j = ((j + 1) | 0)) {
          if (!((($T00().npc[i].homeTileX | 0) !== ($thisType.roomX[j] | 0)) || (($T00().npc[i].homeTileY | 0) !== ($thisType.roomY[j] | 0)))) {
            var flag = false;

          $loop2: 
            for (var k = 0; k < ($thisType.numRoomTiles | 0); k = ((k + 1) | 0)) {
              if (!((($T00().npc[i].homeTileX | 0) !== ($thisType.roomX[k] | 0)) || (((($T00().npc[i].homeTileY | 0) - 1) | 0) !== ($thisType.roomY[k] | 0)))) {
                flag = true;
                break $loop2;
              }
            }
            if (flag) {
              $thisType.hiScore = -1;
              return;
            }
          }
        }
      }
    }
    $thisType.hiScore = 0;
    var num = 0;
    var num2 = ((((((($thisType.roomX1 | 0) - ((((($T00().screenWidth | 0) / 2) | 0) / 16) | 0)) | 0) - 1) | 0) - 21) | 0);
    var num3 = ((((((($thisType.roomX2 | 0) + ((((($T00().screenWidth | 0) / 2) | 0) / 16) | 0)) | 0) + 1) | 0) + 21) | 0);
    var num4 = ((((((($thisType.roomY1 | 0) - ((((($T00().screenHeight | 0) / 2) | 0) / 16) | 0)) | 0) - 1) | 0) - 21) | 0);
    var num5 = ((((((($thisType.roomY2 | 0) + ((((($T00().screenHeight | 0) / 2) | 0) / 16) | 0)) | 0) + 1) | 0) + 21) | 0);
    if (num2 < 0) {
      num2 = 0;
    }
    if (num3 >= ($T00().maxTilesX | 0)) {
      num3 = ((($T00().maxTilesX | 0) - 1) | 0);
    }
    if (num4 < 0) {
      num4 = 0;
    }
    if (num5 > ($T00().maxTilesX | 0)) {
      num5 = ($T00().maxTilesX | 0);
    }

    for (var l = ((num2 + 1) | 0); l < num3; l = ((l + 1) | 0)) {

      for (var m = ((num4 + 2) | 0); m < ((num5 + 2) | 0); m = ((m + 1) | 0)) {
        if ($T00().tile.Get(l, m).active) {
          if (!((($T00().tile.Get(l, m).type | 0) !== 23) && 
              (($T00().tile.Get(l, m).type | 0) !== 24) && 
              (($T00().tile.Get(l, m).type | 0) !== 25) && (($T00().tile.Get(l, m).type | 0) !== 32))) {
            $T00().evilTiles = ((($T00().evilTiles | 0) + 1) | 0);
          } else if (($T00().tile.Get(l, m).type | 0) === 27) {
            $T00().evilTiles = ((($T00().evilTiles | 0) - 5) | 0);
          }
        }
      }
    }
    if (num < 50) {
      num = 0;
    }
    var num6 = (-num | 0);
    if (num6 <= -250) {
      $thisType.hiScore = num6;
      return;
    }
    num2 = ($thisType.roomX1 | 0);
    num3 = ($thisType.roomX2 | 0);
    num4 = ($thisType.roomY1 | 0);
    num5 = ($thisType.roomY2 | 0);

    for (var n = ((num2 + 1) | 0); n < num3; n = ((n + 1) | 0)) {

      for (var num7 = ((num4 + 2) | 0); num7 < ((num5 + 2) | 0); num7 = ((num7 + 1) | 0)) {
        if ($T00().tile.Get(n, num7).active) {
          var num8 = num6;
          if (!(!$T00().tileSolid[$T00().tile.Get(n, num7).type] || 
              $T00().tileSolidTop[$T00().tile.Get(n, num7).type] || 
              $T18().SolidTiles(((n - 1) | 0), ((n + 1) | 0), ((num7 - 3) | 0), ((num7 - 1) | 0)) || 
              !$T00().tile.Get(((n - 1) | 0), num7).active || 
              !$T00().tileSolid[$T00().tile.Get(((n - 1) | 0), num7).type] || 
              !$T00().tile.Get(((n + 1) | 0), num7).active || !$T00().tileSolid[$T00().tile.Get(((n + 1) | 0), num7).type])) {

            for (var num9 = ((n - 2) | 0); num9 < ((n + 3) | 0); num9 = ((num9 + 1) | 0)) {

              for (var num10 = ((num7 - 4) | 0); num10 < num7; num10 = ((num10 + 1) | 0)) {
                if ($T00().tile.Get(num9, num10).active) {
                  if (num9 === n) {
                    num8 = ((num8 - 15) | 0);
                  } else if (!((($T00().tile.Get(num9, num10).type | 0) !== 10) && (($T00().tile.Get(num9, num10).type | 0) !== 11))) {
                    num8 = ((num8 - 20) | 0);
                  } else if ($T00().tileSolid[$T00().tile.Get(num9, num10).type]) {
                    num8 = ((num8 - 5) | 0);
                  } else {
                    num8 = ((num8 + 5) | 0);
                  }
                }
              }
            }
            if (num8 > ($thisType.hiScore | 0)) {
              var flag2 = false;

            $loop9: 
              for (var num11 = 0; num11 < ($thisType.numRoomTiles | 0); num11 = ((num11 + 1) | 0)) {
                if (!((($thisType.roomX[num11] | 0) !== n) || (($thisType.roomY[num11] | 0) !== num7))) {
                  flag2 = true;
                  break $loop9;
                }
              }
              if (flag2) {
                $thisType.hiScore = num8;
                $thisType.bestX = n;
                $thisType.bestY = num7;
              }
            }
          }
        }
      }
    }
  }; 

  function WorldGen_SectionTileFrame (startX, startY, endX, endY) {
    var num = Math.imul(startX, 200);
    var num2 = Math.imul((((endX | 0) + 1) | 0), 200);
    var num3 = Math.imul(startY, 150);
    var num4 = Math.imul((((endY | 0) + 1) | 0), 150);
    if (num < 1) {
      num = 1;
    }
    if (num3 < 1) {
      num3 = 1;
    }
    if (num > ((($T00().maxTilesX | 0) - 2) | 0)) {
      num = ((($T00().maxTilesX | 0) - 2) | 0);
    }
    if (num3 > ((($T00().maxTilesY | 0) - 2) | 0)) {
      num3 = ((($T00().maxTilesY | 0) - 2) | 0);
    }

    for (var i = ((num - 1) | 0); i < ((num2 + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = ((num3 - 1) | 0); j < ((num4 + 1) | 0); j = ((j + 1) | 0)) {
        if ($T00().tile.Get(i, j) === null) {
          $T00().tile.Set(i, j, new ($T0D())());
        }
        $thisType.TileFrame(i, j, true, true);
        $thisType.WallFrame(i, j, true);
      }
    }
  }; 

  function WorldGen_serverLoadWorld () {
    $T19().QueueUserWorkItem($T1A().New(null, null, new JSIL.MethodPointerInfo($thisType, "serverLoadWorldCallBack", $S15(), true, false)), $T02().$Box(1));
  }; 

  function WorldGen_serverLoadWorldCallBack (threadContext) {
    $thisType.loadWorld();
    if ($thisType.loadFailed) {
      return;
    }
    $T00().PlaySound(10, -1, -1, 1);
    $T25().StartServer();
    $T00().dayTime = $thisType.tempDayTime;
    $T00().time = +$thisType.tempTime;
    $T00().moonPhase = ($thisType.tempMoonPhase | 0);
    $T00().bloodMoon = $thisType.tempBloodMoon;
  }; 

  function WorldGen_setWorldSize () {
    $T00().bottomWorld = +(($T00().maxTilesY | 0) * 16);
    $T00().rightWorld = +(($T00().maxTilesX | 0) * 16);
    $T00().maxSectionsX = ((($T00().maxTilesX | 0) / 200) | 0);
    $T00().maxSectionsY = ((($T00().maxTilesY | 0) / 150) | 0);
  }; 

  function WorldGen_ShroomPatch (i, j) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +($thisType.genRand.Next(40, 70));
    var num2 = num;
    var num3 = +($thisType.genRand.Next(10, 20));
    if (($thisType.genRand.Next(5) | 0) === 0) {
      num *= 1.5;
      num2 *= 1.5;
      num3 *= 1.2;
    }
    value.X = +i;
    value.Y = +j - (num3 * 0.3);
    value2.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.Y = +($thisType.genRand.Next(-20, -10)) * 0.1;

    while ((num > 0) && (num3 > 0)) {
      num -= +($thisType.genRand.Next(3));
      num3 -= 1;
      var num4 = ((value.X - (num * 0.5)) | 0);
      var num5 = ((value.X + (num * 0.5)) | 0);
      var num6 = ((value.Y - (num * 0.5)) | 0);
      var num7 = ((value.Y + (num * 0.5)) | 0);
      if (num4 < 0) {
        num4 = 0;
      }
      if (num5 > ($T00().maxTilesX | 0)) {
        num5 = ($T00().maxTilesX | 0);
      }
      if (num6 < 0) {
        num6 = 0;
      }
      if (num7 > ($T00().maxTilesY | 0)) {
        num7 = ($T00().maxTilesY | 0);
      }
      num2 = (num * +($thisType.genRand.Next(80, 120))) * 0.01;

      for (var k = num4; k < num5; k = ((k + 1) | 0)) {

        for (var l = num6; l < num7; l = ((l + 1) | 0)) {
          var num8 = (Math.abs((+k - +value.X)));
          var num9 = (Math.abs(((+l - +value.Y) * 2.3)));
          var num10 = (Math.sqrt((num8 * num8) + (num9 * num9)));
          if (num10 < (num2 * 0.4)) {
            if (+l < (value.Y + (num2 * 0.05))) {
              if (($T00().tile.Get(k, l).type | 0) !== 59) {
                $T00().tile.Get(k, l).active = false;
              }
            } else {
              $T00().tile.Get(k, l).type = 59;
            }
            $T00().tile.Get(k, l).liquid = 0;
            $T00().tile.Get(k, l).lava = false;
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value2.X > 1) {
        value2.X = 0.1;
      }
      if (+value2.X < -1) {
        value2.X = -1;
      }
      if (+value2.Y > 1) {
        value2.Y = 1;
      }
      if (+value2.Y < -1) {
        value2.Y = -1;
      }
    }
  }; 

  function WorldGen_SpawnNPC (x, y) {
    var value = new ($T24())(), rectangle = new ($T24())(), value2 = new ($T24())(), rectangle2 = new ($T24())();
    if ($T00().wallHouse[$T00().tile.Get(x, y).wall]) {
      $thisType.canSpawn = true;
    }
    if (!$thisType.canSpawn) {
      return;
    }
    if (!$thisType.StartRoomCheck(x, y)) {
      return;
    }
    if (!$thisType.RoomNeeds($thisType.spawnNPC)) {
      return;
    }
    $thisType.ScoreRoom(-1);
    if (($thisType.hiScore | 0) > 0) {
      var num = -1;

    $loop0: 
      for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
        if (!(!$T00().npc[i].active || 
            !$T00().npc[i].homeless || (($T00().npc[i].type | 0) !== ($thisType.spawnNPC | 0)))) {
          num = i;
          break $loop0;
        }
      }
      if (num === -1) {
        var num2 = ($thisType.bestX | 0);
        var num3 = ($thisType.bestY | 0);
        var flag = false;
        if (!flag) {
          flag = true;
          (value = value.MemberwiseClone(), 
            $T24().prototype._ctor.call(value, ((((((Math.imul(num2, 16) + 8) | 0) - ((($T00().screenWidth | 0) / 2) | 0)) | 0) - ($T12().safeRangeX | 0)) | 0), ((((((Math.imul(num3, 16) + 8) | 0) - ((($T00().screenHeight | 0) / 2) | 0)) | 0) - ($T12().safeRangeY | 0)) | 0), ((($T00().screenWidth | 0) + Math.imul($T12().safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($T12().safeRangeY, 2)) | 0)));

        $loop1: 
          for (var j = 0; j < 8; j = ((j + 1) | 0)) {
            if ($T00().player[j].active) {
              (rectangle = rectangle.MemberwiseClone(), 
                $T24().prototype._ctor.call(rectangle, (($T00().player[j].position.X) | 0), (($T00().player[j].position.Y) | 0), $T00().player[j].width, $T00().player[j].height));
              if (rectangle.Intersects(value.MemberwiseClone())) {
                flag = false;
                break $loop1;
              }
            }
          }
        }
        if (!flag) {

        $loop2: 
          for (var k = 1; k < 500; k = ((k + 1) | 0)) {

          $loop3: 
            for (var l = 0; l < 2; l = ((l + 1) | 0)) {
              if (l === 0) {
                num2 = ((($thisType.bestX | 0) + k) | 0);
              } else {
                num2 = ((($thisType.bestX | 0) - k) | 0);
              }
              if (!((num2 <= 10) || (num2 >= ((($T00().maxTilesX | 0) - 10) | 0)))) {
                var num4 = ((($thisType.bestY | 0) - k) | 0);
                var num5 = +(($thisType.bestY | 0) + k);
                if (num4 < 10) {
                  num4 = 10;
                }
                if (num5 > +$T00().worldSurface) {
                  num5 = +$T00().worldSurface;
                }

              $loop4: 
                for (var num6 = num4; +num6 < num5; ) {
                  num3 = num6;
                  if (!(!$T00().tile.Get(num2, num3).active || !$T00().tileSolid[$T00().tile.Get(num2, num3).type])) {
                    if (!$T18().SolidTiles(((num2 - 1) | 0), ((num2 + 1) | 0), ((num3 - 3) | 0), ((num3 - 1) | 0))) {
                      flag = true;
                      (value2 = value2.MemberwiseClone(), 
                        $T24().prototype._ctor.call(value2, ((((((Math.imul(num2, 16) + 8) | 0) - ((($T00().screenWidth | 0) / 2) | 0)) | 0) - ($T12().safeRangeX | 0)) | 0), ((((((Math.imul(num3, 16) + 8) | 0) - ((($T00().screenHeight | 0) / 2) | 0)) | 0) - ($T12().safeRangeY | 0)) | 0), ((($T00().screenWidth | 0) + Math.imul($T12().safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($T12().safeRangeY, 2)) | 0)));

                    $loop5: 
                      for (var m = 0; m < 8; m = ((m + 1) | 0)) {
                        if ($T00().player[m].active) {
                          (rectangle2 = rectangle2.MemberwiseClone(), 
                            $T24().prototype._ctor.call(rectangle2, (($T00().player[m].position.X) | 0), (($T00().player[m].position.Y) | 0), $T00().player[m].width, $T00().player[m].height));
                          if (rectangle2.Intersects(value2.MemberwiseClone())) {
                            flag = false;
                            break $loop5;
                          }
                        }
                      }
                      break $loop4;
                    }
                    break $loop4;
                  } else {
                    num6 = ((num6 + 1) | 0);
                  }
                }
              }
              if (flag) {
                break $loop3;
              }
            }
            if (flag) {
              break $loop2;
            }
          }
        }
        var num7 = ($T12().NewNPC(Math.imul(num2, 16), Math.imul(num3, 16), $thisType.spawnNPC, 1) | 0);
        $T00().npc[num7].homeTileX = ($thisType.bestX | 0);
        $T00().npc[num7].homeTileY = ($thisType.bestY | 0);
        if (num2 < ($thisType.bestX | 0)) {
          $T00().npc[num7].direction = 1;
        } else if (num2 > ($thisType.bestX | 0)) {
          $T00().npc[num7].direction = -1;
        }
        $T00().npc[num7].netUpdate = true;
        if (($T00().netMode | 0) === 0) {
          $T00().NewText(JSIL.ConcatString($T00().npc[num7].$name, " has arrived!"), 50, 125, 255);
        } else if (($T00().netMode | 0) === 2) {
          $T1B().SendData(
            25, 
            -1, 
            -1, 
            JSIL.ConcatString($T00().npc[num7].$name, " has arrived!"), 
            8, 
            50, 
            125, 
            255
          );
        }
      } else {
        $thisType.spawnNPC = 0;
        $T00().npc[num].homeTileX = ($thisType.bestX | 0);
        $T00().npc[num].homeTileY = ($thisType.bestY | 0);
        $T00().npc[num].homeless = false;
      }
      $thisType.spawnNPC = 0;
    }
  }; 

  function WorldGen_SpreadGrass (i, j, dirt, grass, repeat) {
    if (!((($T00().tile.Get(i, j).type | 0) === (dirt | 0)) && 
        $T00().tile.Get(i, j).active && ((+j < +$T00().worldSurface) || 
          ((dirt | 0) === 59)))) {
      return;
    }
    var num = (((i | 0) - 1) | 0);
    var num2 = (((i | 0) + 2) | 0);
    var num3 = (((j | 0) - 1) | 0);
    var num4 = (((j | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T00().maxTilesX | 0)) {
      num2 = ($T00().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T00().maxTilesY | 0)) {
      num4 = ($T00().maxTilesY | 0);
    }
    var flag = true;

    for (var k = num; k < num2; k = ((k + 1) | 0)) {

    $loop1: 
      for (var l = num3; l < num4; l = ((l + 1) | 0)) {
        if (!($T00().tile.Get(k, l).active && $T00().tileSolid[$T00().tile.Get(k, l).type])) {
          flag = false;
          break $loop1;
        }
      }
    }
    if (!flag) {
      if (!(((grass | 0) !== 23) || (($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0) !== 27))) {
        return;
      }
      $T00().tile.Get(i, j).type = (grass & 0xFF);

      for (var m = num; m < num2; m = ((m + 1) | 0)) {

        for (var n = num3; n < num4; n = ((n + 1) | 0)) {
          if (!(!$T00().tile.Get(m, n).active || 
              (($T00().tile.Get(m, n).type | 0) !== (dirt | 0)) || !repeat)) {
            $thisType.SpreadGrass(
              m, 
              n, 
              dirt, 
              grass, 
              true
            );
          }
        }
      }
    }
  }; 

  function WorldGen_SquareTileFrame (i, j, resetFrame) {
    $thisType.TileFrame((((i | 0) - 1) | 0), (((j | 0) - 1) | 0), false, false);
    $thisType.TileFrame((((i | 0) - 1) | 0), j, false, false);
    $thisType.TileFrame((((i | 0) - 1) | 0), (((j | 0) + 1) | 0), false, false);
    $thisType.TileFrame(i, (((j | 0) - 1) | 0), false, false);
    $thisType.TileFrame(i, j, resetFrame, false);
    $thisType.TileFrame(i, (((j | 0) + 1) | 0), false, false);
    $thisType.TileFrame((((i | 0) + 1) | 0), (((j | 0) - 1) | 0), false, false);
    $thisType.TileFrame((((i | 0) + 1) | 0), j, false, false);
    $thisType.TileFrame((((i | 0) + 1) | 0), (((j | 0) + 1) | 0), false, false);
  }; 

  function WorldGen_SquareWallFrame (i, j, resetFrame) {
    $thisType.WallFrame((((i | 0) - 1) | 0), (((j | 0) - 1) | 0), false);
    $thisType.WallFrame((((i | 0) - 1) | 0), j, false);
    $thisType.WallFrame((((i | 0) - 1) | 0), (((j | 0) + 1) | 0), false);
    $thisType.WallFrame(i, (((j | 0) - 1) | 0), false);
    $thisType.WallFrame(i, j, resetFrame);
    $thisType.WallFrame(i, (((j | 0) + 1) | 0), false);
    $thisType.WallFrame((((i | 0) + 1) | 0), (((j | 0) - 1) | 0), false);
    $thisType.WallFrame((((i | 0) + 1) | 0), j, false);
    $thisType.WallFrame((((i | 0) + 1) | 0), (((j | 0) + 1) | 0), false);
  }; 

  function WorldGen_StartRoomCheck (x, y) {
    $thisType.roomX1 = (x | 0);
    $thisType.roomX2 = (x | 0);
    $thisType.roomY1 = (y | 0);
    $thisType.roomY2 = (y | 0);
    $thisType.numRoomTiles = 0;

    for (var i = 0; i < 80; i = ((i + 1) | 0)) {
      $thisType.houseTile[i] = false;
    }
    $thisType.canSpawn = true;
    if (!(!$T00().tile.Get(x, y).active || !$T00().tileSolid[$T00().tile.Get(x, y).type])) {
      $thisType.canSpawn = false;
    }
    $thisType.CheckRoom(x, y);
    if (($thisType.numRoomTiles | 0) < 60) {
      $thisType.canSpawn = false;
    }
    return $thisType.canSpawn;
  }; 

  function WorldGen_TileFrame (i, j, resetFrame, noBreak) {
    var rectangle = new ($T24())();
    if (!(((i | 0) < 0) || 
        ((j | 0) < 0) || 
        ((i | 0) >= ($T00().maxTilesX | 0)) || 
        ((j | 0) >= ($T00().maxTilesY | 0)) || ($T00().tile.Get(i, j) === null))) {
      if (!((($T00().tile.Get(i, j).liquid | 0) <= 0) || 
          (($T00().netMode | 0) === 1) || $thisType.noLiquidCheck)) {
        $T13().AddWater(i, j);
      }
      if ($T00().tile.Get(i, j).active) {
        if (!(!noBreak || !$T00().tileFrameImportant[$T00().tile.Get(i, j).type])) {
          return;
        }
        var num = -1;
        var num2 = -1;
        var num3 = -1;
        var num4 = -1;
        var num5 = -1;
        var num6 = -1;
        var num7 = -1;
        var num8 = -1;
        var num9 = ($T00().tile.Get(i, j).type | 0);
        if ($T00().tileStone[num9]) {
          num9 = 1;
        }
        var frameX = ($T00().tile.Get(i, j).frameX | 0);
        var frameY = ($T00().tile.Get(i, j).frameY | 0);
        rectangle.X = -1;
        rectangle.Y = -1;
        if (!((num9 !== 3) && 
            (num9 !== 24) && 
            (num9 !== 61) && 
            (num9 !== 71) && 
            (num9 !== 73) && (num9 !== 74))) {
          $thisType.PlantCheck(i, j);
          return;
        }
        $thisType.mergeUp = false;
        $thisType.mergeDown = false;
        $thisType.mergeLeft = false;
        $thisType.mergeRight = false;
        if ((((i | 0) - 1) | 0) < 0) {
          num = num9;
          num4 = num9;
          num6 = num9;
        }
        if ((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) {
          num3 = num9;
          num5 = num9;
          num8 = num9;
        }
        if ((((j | 0) - 1) | 0) < 0) {
          num = num9;
          num2 = num9;
          num3 = num9;
        }
        if ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) {
          num6 = num9;
          num7 = num9;
          num8 = num9;
        }
        if (!(((((i | 0) - 1) | 0) < 0) || 
            ($T00().tile.Get((((i | 0) - 1) | 0), j) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), j).active)) {
          num4 = ($T00().tile.Get((((i | 0) - 1) | 0), j).type | 0);
        }
        if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
            ($T00().tile.Get((((i | 0) + 1) | 0), j) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), j).active)) {
          num5 = ($T00().tile.Get((((i | 0) + 1) | 0), j).type | 0);
        }
        if (!(((((j | 0) - 1) | 0) < 0) || 
            ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get(i, (((j | 0) - 1) | 0)).active)) {
          num2 = ($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0);
        }
        if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
            ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get(i, (((j | 0) + 1) | 0)).active)) {
          num7 = ($T00().tile.Get(i, (((j | 0) + 1) | 0)).type | 0);
        }
        if (!(((((i | 0) - 1) | 0) < 0) || 
            ((((j | 0) - 1) | 0) < 0) || 
            ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).active)) {
          num = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).type | 0);
        }
        if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
            ((((j | 0) - 1) | 0) < 0) || 
            ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).active)) {
          num3 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).type | 0);
        }
        if (!(((((i | 0) - 1) | 0) < 0) || 
            ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
            ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).active)) {
          num6 = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).type | 0);
        }
        if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
            ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || 
            ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)) === null) || !$T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).active)) {
          num8 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).type | 0);
        }
        if (!((num4 < 0) || !$T00().tileStone[num4])) {
          num4 = 1;
        }
        if (!((num5 < 0) || !$T00().tileStone[num5])) {
          num5 = 1;
        }
        if (!((num2 < 0) || !$T00().tileStone[num2])) {
          num2 = 1;
        }
        if (!((num7 < 0) || !$T00().tileStone[num7])) {
          num7 = 1;
        }
        if (!((num < 0) || !$T00().tileStone[num])) {
          num = 1;
        }
        if (!((num3 < 0) || !$T00().tileStone[num3])) {
          num3 = 1;
        }
        if (!((num6 < 0) || !$T00().tileStone[num6])) {
          num6 = 1;
        }
        if (!((num8 < 0) || !$T00().tileStone[num8])) {
          num8 = 1;
        }
        if (num9 === 4) {
          if (!((num7 < 0) || 
              !$T00().tileSolid[num7] || $T00().tileNoAttach[num7])) {
            $T00().tile.Get(i, j).frameX = 0;
            return;
          }
          if (!(!((num4 >= 0) && 
                $T00().tileSolid[num4] && 
                !$T00().tileNoAttach[num4]) && ((num4 !== 5) || 
                (num !== 5) || 
                (num6 !== 5)))) {
            $T00().tile.Get(i, j).frameX = 22;
            return;
          }
          if (!(!((num5 >= 0) && 
                $T00().tileSolid[num5] && 
                !$T00().tileNoAttach[num5]) && ((num5 !== 5) || 
                (num3 !== 5) || 
                (num8 !== 5)))) {
            $T00().tile.Get(i, j).frameX = 44;
            return;
          }
          $thisType.KillTile(
            i, 
            j, 
            false, 
            false, 
            false
          );
          return;
        } else {
          if (!((num9 !== 12) && (num9 !== 31))) {
            if (!$thisType.destroyObject) {
              if (($T00().tile.Get(i, j).frameX | 0) === 0) {
                var num10 = (i | 0);
              } else {
                num10 = (((i | 0) - 1) | 0);
              }
              if (($T00().tile.Get(i, j).frameY | 0) === 0) {
                var num11 = (j | 0);
              } else {
                num11 = (((j | 0) - 1) | 0);
              }
              if (!(($T00().tile.Get(num10, num11) === null) || 
                  ($T00().tile.Get(((num10 + 1) | 0), num11) === null) || 
                  ($T00().tile.Get(num10, ((num11 + 1) | 0)) === null) || 
                  ($T00().tile.Get(((num10 + 1) | 0), ((num11 + 1) | 0)) === null) || ($T00().tile.Get(num10, num11).active && 
                    (($T00().tile.Get(num10, num11).type | 0) === num9) && 
                    $T00().tile.Get(((num10 + 1) | 0), num11).active && 
                    (($T00().tile.Get(((num10 + 1) | 0), num11).type | 0) === num9) && 
                    $T00().tile.Get(num10, ((num11 + 1) | 0)).active && 
                    (($T00().tile.Get(num10, ((num11 + 1) | 0)).type | 0) === num9) && 
                    $T00().tile.Get(((num10 + 1) | 0), ((num11 + 1) | 0)).active && 
                    (($T00().tile.Get(((num10 + 1) | 0), ((num11 + 1) | 0)).type | 0) === num9)))) {
                $thisType.destroyObject = true;
                if (($T00().tile.Get(num10, num11).type | 0) === num9) {
                  $thisType.KillTile(
                    num10, 
                    num11, 
                    false, 
                    false, 
                    false
                  );
                }
                if (($T00().tile.Get(((num10 + 1) | 0), num11).type | 0) === num9) {
                  $thisType.KillTile(
                    ((num10 + 1) | 0), 
                    num11, 
                    false, 
                    false, 
                    false
                  );
                }
                if (($T00().tile.Get(num10, ((num11 + 1) | 0)).type | 0) === num9) {
                  $thisType.KillTile(
                    num10, 
                    ((num11 + 1) | 0), 
                    false, 
                    false, 
                    false
                  );
                }
                if (($T00().tile.Get(((num10 + 1) | 0), ((num11 + 1) | 0)).type | 0) === num9) {
                  $thisType.KillTile(
                    ((num10 + 1) | 0), 
                    ((num11 + 1) | 0), 
                    false, 
                    false, 
                    false
                  );
                }
                if (num9 === 12) {
                  $T08().NewItem(
                    Math.imul(num10, 16), 
                    Math.imul(num11, 16), 
                    32, 
                    32, 
                    29, 
                    1, 
                    false
                  );
                } else if (num9 === 31) {
                  if (($thisType.genRand.Next(2) | 0) === 0) {
                    $thisType.spawnMeteor = true;
                  }
                  var num12 = ($T00().rand.Next(5) | 0);
                  if (!$thisType.shadowOrbSmashed) {
                    num12 = 0;
                  }
                  if (num12 === 0) {
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      96, 
                      1, 
                      false
                    );
                    var stack = ($thisType.genRand.Next(25, 51) | 0);
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      97, 
                      stack, 
                      false
                    );
                  } else if (num12 === 1) {
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      64, 
                      1, 
                      false
                    );
                  } else if (num12 === 2) {
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      162, 
                      1, 
                      false
                    );
                  } else if (num12 === 3) {
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      115, 
                      1, 
                      false
                    );
                  } else if (num12 === 4) {
                    $T08().NewItem(
                      Math.imul(num10, 16), 
                      Math.imul(num11, 16), 
                      32, 
                      32, 
                      111, 
                      1, 
                      false
                    );
                  }
                  $thisType.shadowOrbSmashed = true;
                  $thisType.shadowOrbCount = ((($thisType.shadowOrbCount | 0) + 1) | 0);
                  if (($thisType.shadowOrbCount | 0) >= 3) {
                    $thisType.shadowOrbCount = 0;
                    var num13 = +(num10 * 16);
                    var num14 = +(num11 * 16);
                    var num15 = -1;
                    var plr = 0;

                    for (var k = 0; k < 8; k = ((k + 1) | 0)) {
                      var num16 = (Math.abs((+$T00().player[k].position.X - num13))) + (Math.abs((+$T00().player[k].position.Y - num14)));
                      if (!((num16 >= num15) && (num15 !== -1))) {
                        plr = 0;
                        num15 = num16;
                      }
                    }
                    $T12().SpawnOnPlayer(plr, 13);
                  } else {
                    var text = "A horrible chill goes down your spine...";
                    if (($thisType.shadowOrbCount | 0) === 2) {
                      text = "Screams echo around you...";
                    }
                    if (($T00().netMode | 0) === 0) {
                      $T00().NewText(text, 50, 255, 130);
                    } else if (($T00().netMode | 0) === 2) {
                      $T1B().SendData(
                        25, 
                        -1, 
                        -1, 
                        text, 
                        8, 
                        50, 
                        255, 
                        130
                      );
                    }
                  }
                }
                $T00().PlaySound(13, Math.imul(i, 16), Math.imul(j, 16), 1);
                $thisType.destroyObject = false;
              }
            }
            return;
          }
          if (num9 === 19) {
            if (!((num4 !== num9) || (num5 !== num9))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 0;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 0;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 0;
                rectangle.Y = 36;
              }
            } else if (!((num4 !== num9) || (num5 !== -1))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 18;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 18;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 18;
                rectangle.Y = 36;
              }
            } else if (!((num4 !== -1) || (num5 !== num9))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 36;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 36;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 36;
                rectangle.Y = 36;
              }
            } else if (!((num4 === num9) || (num5 !== num9))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 54;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 54;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 54;
                rectangle.Y = 36;
              }
            } else if (!((num4 !== num9) || (num5 === num9))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 72;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 72;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 72;
                rectangle.Y = 36;
              }
            } else if (!((num4 === num9) || 
                (num4 === -1) || (num5 !== -1))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 108;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 108;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 108;
                rectangle.Y = 36;
              }
            } else if (!((num4 !== -1) || 
                (num5 === num9) || (num5 === -1))) {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 126;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 126;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 126;
                rectangle.Y = 36;
              }
            } else {
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                rectangle.X = 90;
                rectangle.Y = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                rectangle.X = 90;
                rectangle.Y = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                rectangle.X = 90;
                rectangle.Y = 36;
              }
            }
          } else {
            if (num9 === 10) {
              if (!$thisType.destroyObject) {
                var frameY2 = ($T00().tile.Get(i, j).frameY | 0);
                var num17 = (j | 0);
                var flag = false;
                if (frameY2 === 0) {
                  num17 = (j | 0);
                }
                if (frameY2 === 18) {
                  num17 = (((j | 0) - 1) | 0);
                }
                if (frameY2 === 36) {
                  num17 = (((j | 0) - 2) | 0);
                }
                if ($T00().tile.Get(i, ((num17 - 1) | 0)) === null) {
                  $T00().tile.Set(i, ((num17 - 1) | 0), new ($T0D())());
                }
                if ($T00().tile.Get(i, ((num17 + 3) | 0)) === null) {
                  $T00().tile.Set(i, ((num17 + 3) | 0), new ($T0D())());
                }
                if ($T00().tile.Get(i, ((num17 + 2) | 0)) === null) {
                  $T00().tile.Set(i, ((num17 + 2) | 0), new ($T0D())());
                }
                if ($T00().tile.Get(i, ((num17 + 1) | 0)) === null) {
                  $T00().tile.Set(i, ((num17 + 1) | 0), new ($T0D())());
                }
                if ($T00().tile.Get(i, num17) === null) {
                  $T00().tile.Set(i, num17, new ($T0D())());
                }
                if (!($T00().tile.Get(i, ((num17 - 1) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, ((num17 - 1) | 0)).type])) {
                  flag = true;
                }
                if (!($T00().tile.Get(i, ((num17 + 3) | 0)).active && $T00().tileSolid[$T00().tile.Get(i, ((num17 + 3) | 0)).type])) {
                  flag = true;
                }
                if (!($T00().tile.Get(i, num17).active && (($T00().tile.Get(i, num17).type | 0) === num9))) {
                  flag = true;
                }
                if (!($T00().tile.Get(i, ((num17 + 1) | 0)).active && (($T00().tile.Get(i, ((num17 + 1) | 0)).type | 0) === num9))) {
                  flag = true;
                }
                if (!($T00().tile.Get(i, ((num17 + 2) | 0)).active && (($T00().tile.Get(i, ((num17 + 2) | 0)).type | 0) === num9))) {
                  flag = true;
                }
                if (flag) {
                  $thisType.destroyObject = true;
                  $thisType.KillTile(
                    i, 
                    num17, 
                    false, 
                    false, 
                    false
                  );
                  $thisType.KillTile(
                    i, 
                    ((num17 + 1) | 0), 
                    false, 
                    false, 
                    false
                  );
                  $thisType.KillTile(
                    i, 
                    ((num17 + 2) | 0), 
                    false, 
                    false, 
                    false
                  );
                  $T08().NewItem(
                    Math.imul(i, 16), 
                    Math.imul(j, 16), 
                    16, 
                    16, 
                    25, 
                    1, 
                    false
                  );
                }
                $thisType.destroyObject = false;
              }
              return;
            }
            if (num9 === 11) {
              if (!$thisType.destroyObject) {
                var num18 = 0;
                var num19 = (i | 0);
                var num20 = (j | 0);
                var frameX2 = ($T00().tile.Get(i, j).frameX | 0);
                var frameY3 = ($T00().tile.Get(i, j).frameY | 0);
                var flag2 = false;
                if (frameX2 === 0) {
                  num19 = (i | 0);
                  num18 = 1;
                } else if (frameX2 === 18) {
                  num19 = (((i | 0) - 1) | 0);
                  num18 = 1;
                } else if (frameX2 === 36) {
                  num19 = (((i | 0) + 1) | 0);
                  num18 = -1;
                } else if (frameX2 === 54) {
                  num19 = (i | 0);
                  num18 = -1;
                }
                if (frameY3 === 0) {
                  num20 = (j | 0);
                } else if (frameY3 === 18) {
                  num20 = (((j | 0) - 1) | 0);
                } else if (frameY3 === 36) {
                  num20 = (((j | 0) - 2) | 0);
                }
                if ($T00().tile.Get(num19, ((num20 + 3) | 0)) === null) {
                  $T00().tile.Set(num19, ((num20 + 3) | 0), new ($T0D())());
                }
                if ($T00().tile.Get(num19, ((num20 - 1) | 0)) === null) {
                  $T00().tile.Set(num19, ((num20 - 1) | 0), new ($T0D())());
                }
                if (!($T00().tile.Get(num19, ((num20 - 1) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(num19, ((num20 - 1) | 0)).type] && 
                    $T00().tile.Get(num19, ((num20 + 3) | 0)).active && $T00().tileSolid[$T00().tile.Get(num19, ((num20 + 3) | 0)).type])) {
                  flag2 = true;
                  $thisType.destroyObject = true;
                  $T08().NewItem(
                    Math.imul(i, 16), 
                    Math.imul(j, 16), 
                    16, 
                    16, 
                    25, 
                    1, 
                    false
                  );
                }
                var num21 = num19;
                if (num18 === -1) {
                  num21 = ((num19 - 1) | 0);
                }

                for (var l = num21; l < ((num21 + 2) | 0); l = ((l + 1) | 0)) {

                  for (var m = num20; m < ((num20 + 3) | 0); m = ((m + 1) | 0)) {
                    if (!(flag2 || ((($T00().tile.Get(l, m).type | 0) === 11) && 
                          $T00().tile.Get(l, m).active))) {
                      $thisType.destroyObject = true;
                      $T08().NewItem(
                        Math.imul(i, 16), 
                        Math.imul(j, 16), 
                        16, 
                        16, 
                        25, 
                        1, 
                        false
                      );
                      flag2 = true;
                      l = num21;
                      m = num20;
                    }
                    if (flag2) {
                      $thisType.KillTile(
                        l, 
                        m, 
                        false, 
                        false, 
                        false
                      );
                    }
                  }
                }
                $thisType.destroyObject = false;
              }
              return;
            }
            if (!((num9 !== 34) && 
                (num9 !== 35) && (num9 !== 36))) {
              $thisType.Check3x3(i, j, (num9 & 0xFF));
              return;
            }
            if (!((num9 !== 15) && (num9 !== 20))) {
              $thisType.Check1x2(i, j, (num9 & 0xFF));
              return;
            }
            if (!((num9 !== 14) && 
                (num9 !== 17) && 
                (num9 !== 26) && (num9 !== 77))) {
              $thisType.Check3x2(i, j, (num9 & 0xFF));
              return;
            }
            if (!((num9 !== 16) && 
                (num9 !== 18) && (num9 !== 29))) {
              $thisType.Check2x1(i, j, (num9 & 0xFF));
              return;
            }
            if (!((num9 !== 13) && 
                (num9 !== 33) && 
                (num9 !== 49) && 
                (num9 !== 50) && (num9 !== 78))) {
              $thisType.CheckOnTable1x1(i, j, (num9 & 0xFF));
              return;
            }
            if (num9 === 21) {
              $thisType.CheckChest(i, j, (num9 & 0xFF));
              return;
            }
            if (num9 === 27) {
              $thisType.CheckSunflower(i, j, 27);
              return;
            }
            if (num9 === 28) {
              $thisType.CheckPot(i, j, 28);
              return;
            }
            if (num9 === 42) {
              $thisType.Check1x2Top(i, j, (num9 & 0xFF));
              return;
            }
            if (num9 === 55) {
              $thisType.CheckSign(i, j, num9);
              return;
            }
            if (num9 === 79) {
              $thisType.Check4x2(i, j, num9);
              return;
            }
          }
          if (num9 === 72) {
            if (!((num7 === num9) || (num7 === 70))) {
              $thisType.KillTile(
                i, 
                j, 
                false, 
                false, 
                false
              );
            } else if (!((num2 === num9) || (($T00().tile.Get(i, j).frameX | 0) !== 0))) {
              $T00().tile.Get(i, j).frameNumber = ($thisType.genRand.Next(3) & 0xFF);
              if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                $T00().tile.Get(i, j).frameX = 18;
                $T00().tile.Get(i, j).frameY = 0;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                $T00().tile.Get(i, j).frameX = 18;
                $T00().tile.Get(i, j).frameY = 18;
              }
              if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                $T00().tile.Get(i, j).frameX = 18;
                $T00().tile.Get(i, j).frameY = 36;
              }
            }
          }
          if (num9 === 5) {
            if (!((($T00().tile.Get(i, j).frameX | 0) < 22) || 
                (($T00().tile.Get(i, j).frameX | 0) > 44) || 
                (($T00().tile.Get(i, j).frameY | 0) < 132) || (($T00().tile.Get(i, j).frameY | 0) > 176))) {
              if (!(!((num4 !== num9) && 
                    (num5 !== num9)) && (num7 === 2))) {
                $thisType.KillTile(
                  i, 
                  j, 
                  false, 
                  false, 
                  false
                );
              }
            } else if (!(!((($T00().tile.Get(i, j).frameX | 0) === 88) && 
                  (($T00().tile.Get(i, j).frameY | 0) >= 0) && 
                  (($T00().tile.Get(i, j).frameY | 0) <= 44)) && 
                !((($T00().tile.Get(i, j).frameX | 0) === 66) && 
                  (($T00().tile.Get(i, j).frameY | 0) >= 66) && 
                  (($T00().tile.Get(i, j).frameY | 0) <= 130)) && 
                !((($T00().tile.Get(i, j).frameX | 0) === 110) && 
                  (($T00().tile.Get(i, j).frameY | 0) >= 66) && 
                  (($T00().tile.Get(i, j).frameY | 0) <= 110)) && ((($T00().tile.Get(i, j).frameX | 0) !== 132) || 
                  (($T00().tile.Get(i, j).frameY | 0) < 0) || 
                  (($T00().tile.Get(i, j).frameY | 0) > 176)))) {
              if (!((num4 !== num9) || (num5 !== num9))) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 66;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 88;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 110;
                }
              } else if (num4 === num9) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 0;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 22;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 44;
                }
              } else if (num5 === num9) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 66;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 88;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 110;
                }
              } else {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 0;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 22;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 44;
                }
              }
            }
            if (!((($T00().tile.Get(i, j).frameY | 0) < 132) || 
                (($T00().tile.Get(i, j).frameY | 0) > 176) || ((($T00().tile.Get(i, j).frameX | 0) !== 0) && 
                  (($T00().tile.Get(i, j).frameX | 0) !== 66) && 
                  (($T00().tile.Get(i, j).frameX | 0) !== 88)))) {
              if (num7 !== 2) {
                $thisType.KillTile(
                  i, 
                  j, 
                  false, 
                  false, 
                  false
                );
              }
              if (!((num4 === num9) || (num5 === num9))) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 0;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 22;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 44;
                }
              } else if (num4 !== num9) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 132;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 154;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 0;
                  $T00().tile.Get(i, j).frameY = 176;
                }
              } else if (num5 !== num9) {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 132;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 154;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 66;
                  $T00().tile.Get(i, j).frameY = 176;
                }
              } else {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 132;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 154;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 88;
                  $T00().tile.Get(i, j).frameY = 176;
                }
              }
            }
            if (!(!((($T00().tile.Get(i, j).frameX | 0) === 66) && 
                  ((($T00().tile.Get(i, j).frameY | 0) === 0) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 22) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 44))) && 
                !((($T00().tile.Get(i, j).frameX | 0) === 88) && 
                  ((($T00().tile.Get(i, j).frameY | 0) === 66) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 88) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 110))) && 
                !((($T00().tile.Get(i, j).frameX | 0) === 44) && 
                  ((($T00().tile.Get(i, j).frameY | 0) === 198) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 220) || 
                    (($T00().tile.Get(i, j).frameY | 0) === 242))) && ((($T00().tile.Get(i, j).frameX | 0) !== 66) || 
                  ((($T00().tile.Get(i, j).frameY | 0) !== 198) && 
                    (($T00().tile.Get(i, j).frameY | 0) !== 220) && 
                    (($T00().tile.Get(i, j).frameY | 0) !== 242))))) {
              if (!((num4 === num9) || (num5 === num9))) {
                $thisType.KillTile(
                  i, 
                  j, 
                  false, 
                  false, 
                  false
                );
              }
            } else if (!((num7 !== -1) && (num7 !== 23))) {
              $thisType.KillTile(
                i, 
                j, 
                false, 
                false, 
                false
              );
            } else if (!((num2 === num9) || 
                (($T00().tile.Get(i, j).frameY | 0) >= 198) || (!((($T00().tile.Get(i, j).frameX | 0) !== 22) && 
                    (($T00().tile.Get(i, j).frameX | 0) !== 44)) && 
                  (($T00().tile.Get(i, j).frameY | 0) >= 132)))) {
              if (!((num4 !== num9) && (num5 !== num9))) {
                if (num7 === num9) {
                  if (!((num4 !== num9) || (num5 !== num9))) {
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 132;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 154;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 176;
                    }
                  } else if (num4 === num9) {
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 0;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 22;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 44;
                    }
                  } else if (num5 === num9) {
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 66;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 88;
                    }
                    if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                      $T00().tile.Get(i, j).frameX = 132;
                      $T00().tile.Get(i, j).frameY = 110;
                    }
                  }
                } else if (!((num4 !== num9) || (num5 !== num9))) {
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 132;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 154;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 176;
                  }
                } else if (num4 === num9) {
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 0;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 22;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 44;
                  }
                } else if (num5 === num9) {
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 66;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 88;
                  }
                  if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                    $T00().tile.Get(i, j).frameX = 154;
                    $T00().tile.Get(i, j).frameY = 110;
                  }
                }
              } else {
                if (($T00().tile.Get(i, j).frameNumber | 0) === 0) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 0;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 1) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 22;
                }
                if (($T00().tile.Get(i, j).frameNumber | 0) === 2) {
                  $T00().tile.Get(i, j).frameX = 110;
                  $T00().tile.Get(i, j).frameY = 44;
                }
              }
            }
            rectangle.X = ($T00().tile.Get(i, j).frameX | 0);
            rectangle.Y = ($T00().tile.Get(i, j).frameY | 0);
          }
          if ($T00().tileFrameImportant[$T00().tile.Get(i, j).type]) {
            return;
          }
          if (resetFrame) {
            var num22 = ($thisType.genRand.Next(0, 3) | 0);
            $T00().tile.Get(i, j).frameNumber = (num22 & 0xFF);
          } else {
            num22 = ($T00().tile.Get(i, j).frameNumber | 0);
          }
          if (num9 === 0) {

            for (var n = 0; n < 80; n = ((n + 1) | 0)) {
              if (!((n !== 1) && 
                  (n !== 6) && 
                  (n !== 7) && 
                  (n !== 8) && 
                  (n !== 9) && 
                  (n !== 22) && 
                  (n !== 25) && 
                  (n !== 37) && 
                  (n !== 40) && 
                  (n !== 53) && (n !== 56))) {
                if (num2 === n) {
                  $thisType.TileFrame(i, (((j | 0) - 1) | 0), false, false);
                  if ($thisType.mergeDown) {
                    num2 = num9;
                  }
                }
                if (num7 === n) {
                  $thisType.TileFrame(i, (((j | 0) + 1) | 0), false, false);
                  if ($thisType.mergeUp) {
                    num7 = num9;
                  }
                }
                if (num4 === n) {
                  $thisType.TileFrame((((i | 0) - 1) | 0), j, false, false);
                  if ($thisType.mergeRight) {
                    num4 = num9;
                  }
                }
                if (num5 === n) {
                  $thisType.TileFrame((((i | 0) + 1) | 0), j, false, false);
                  if ($thisType.mergeLeft) {
                    num5 = num9;
                  }
                }
                if (num === n) {
                  num = num9;
                }
                if (num3 === n) {
                  num3 = num9;
                }
                if (num6 === n) {
                  num6 = num9;
                }
                if (num8 === n) {
                  num8 = num9;
                }
              }
            }
            if (num2 === 2) {
              num2 = num9;
            }
            if (num7 === 2) {
              num7 = num9;
            }
            if (num4 === 2) {
              num4 = num9;
            }
            if (num5 === 2) {
              num5 = num9;
            }
            if (num === 2) {
              num = num9;
            }
            if (num3 === 2) {
              num3 = num9;
            }
            if (num6 === 2) {
              num6 = num9;
            }
            if (num8 === 2) {
              num8 = num9;
            }
            if (num2 === 23) {
              num2 = num9;
            }
            if (num7 === 23) {
              num7 = num9;
            }
            if (num4 === 23) {
              num4 = num9;
            }
            if (num5 === 23) {
              num5 = num9;
            }
            if (num === 23) {
              num = num9;
            }
            if (num3 === 23) {
              num3 = num9;
            }
            if (num6 === 23) {
              num6 = num9;
            }
            if (num8 === 23) {
              num8 = num9;
            }
          } else if (num9 === 57) {
            if (num2 === 58) {
              $thisType.TileFrame(i, (((j | 0) - 1) | 0), false, false);
              if ($thisType.mergeDown) {
                num2 = num9;
              }
            }
            if (num7 === 58) {
              $thisType.TileFrame(i, (((j | 0) + 1) | 0), false, false);
              if ($thisType.mergeUp) {
                num7 = num9;
              }
            }
            if (num4 === 58) {
              $thisType.TileFrame((((i | 0) - 1) | 0), j, false, false);
              if ($thisType.mergeRight) {
                num4 = num9;
              }
            }
            if (num5 === 58) {
              $thisType.TileFrame((((i | 0) + 1) | 0), j, false, false);
              if ($thisType.mergeLeft) {
                num5 = num9;
              }
            }
            if (num === 58) {
              num = num9;
            }
            if (num3 === 58) {
              num3 = num9;
            }
            if (num6 === 58) {
              num6 = num9;
            }
            if (num8 === 58) {
              num8 = num9;
            }
          } else if (num9 === 59) {
            if (num2 === 60) {
              num2 = num9;
            }
            if (num7 === 60) {
              num7 = num9;
            }
            if (num4 === 60) {
              num4 = num9;
            }
            if (num5 === 60) {
              num5 = num9;
            }
            if (num === 60) {
              num = num9;
            }
            if (num3 === 60) {
              num3 = num9;
            }
            if (num6 === 60) {
              num6 = num9;
            }
            if (num8 === 60) {
              num8 = num9;
            }
            if (num2 === 70) {
              num2 = num9;
            }
            if (num7 === 70) {
              num7 = num9;
            }
            if (num4 === 70) {
              num4 = num9;
            }
            if (num5 === 70) {
              num5 = num9;
            }
            if (num === 70) {
              num = num9;
            }
            if (num3 === 70) {
              num3 = num9;
            }
            if (num6 === 70) {
              num6 = num9;
            }
            if (num8 === 70) {
              num8 = num9;
            }
          } else if (num9 === 1) {
            if (num2 === 59) {
              $thisType.TileFrame(i, (((j | 0) - 1) | 0), false, false);
              if ($thisType.mergeDown) {
                num2 = num9;
              }
            }
            if (num7 === 59) {
              $thisType.TileFrame(i, (((j | 0) + 1) | 0), false, false);
              if ($thisType.mergeUp) {
                num7 = num9;
              }
            }
            if (num4 === 59) {
              $thisType.TileFrame((((i | 0) - 1) | 0), j, false, false);
              if ($thisType.mergeRight) {
                num4 = num9;
              }
            }
            if (num5 === 59) {
              $thisType.TileFrame((((i | 0) + 1) | 0), j, false, false);
              if ($thisType.mergeLeft) {
                num5 = num9;
              }
            }
            if (num === 59) {
              num = num9;
            }
            if (num3 === 59) {
              num3 = num9;
            }
            if (num6 === 59) {
              num6 = num9;
            }
            if (num8 === 59) {
              num8 = num9;
            }
          }
          if (!((num9 !== 1) && 
              (num9 !== 6) && 
              (num9 !== 7) && 
              (num9 !== 8) && 
              (num9 !== 9) && 
              (num9 !== 22) && 
              (num9 !== 25) && 
              (num9 !== 37) && 
              (num9 !== 40) && 
              (num9 !== 53) && (num9 !== 56))) {

            for (var num23 = 0; num23 < 80; num23 = ((num23 + 1) | 0)) {
              if (!((num23 !== 1) && 
                  (num23 !== 6) && 
                  (num23 !== 7) && 
                  (num23 !== 8) && 
                  (num23 !== 9) && 
                  (num23 !== 22) && 
                  (num23 !== 25) && 
                  (num23 !== 37) && 
                  (num23 !== 40) && 
                  (num23 !== 53) && (num23 !== 56))) {
                if (num2 === 0) {
                  num2 = -2;
                }
                if (num7 === 0) {
                  num7 = -2;
                }
                if (num4 === 0) {
                  num4 = -2;
                }
                if (num5 === 0) {
                  num5 = -2;
                }
                if (num === 0) {
                  num = -2;
                }
                if (num3 === 0) {
                  num3 = -2;
                }
                if (num6 === 0) {
                  num6 = -2;
                }
                if (num8 === 0) {
                  num8 = -2;
                }
              }
            }
          } else if (num9 === 58) {
            if (num2 === 57) {
              num2 = -2;
            }
            if (num7 === 57) {
              num7 = -2;
            }
            if (num4 === 57) {
              num4 = -2;
            }
            if (num5 === 57) {
              num5 = -2;
            }
            if (num === 57) {
              num = -2;
            }
            if (num3 === 57) {
              num3 = -2;
            }
            if (num6 === 57) {
              num6 = -2;
            }
            if (num8 === 57) {
              num8 = -2;
            }
          } else if (num9 === 59) {
            if (num2 === 1) {
              num2 = -2;
            }
            if (num7 === 1) {
              num7 = -2;
            }
            if (num4 === 1) {
              num4 = -2;
            }
            if (num5 === 1) {
              num5 = -2;
            }
            if (num === 1) {
              num = -2;
            }
            if (num3 === 1) {
              num3 = -2;
            }
            if (num6 === 1) {
              num6 = -2;
            }
            if (num8 === 1) {
              num8 = -2;
            }
          }
          if (!((num9 !== 32) || (num7 !== 23))) {
            num7 = num9;
          }
          if (!((num9 !== 69) || (num7 !== 60))) {
            num7 = num9;
          }
          if (num9 === 51) {
            if (!((num2 <= -1) || $T00().tileNoAttach[num2])) {
              num2 = num9;
            }
            if (!((num7 <= -1) || $T00().tileNoAttach[num7])) {
              num7 = num9;
            }
            if (!((num4 <= -1) || $T00().tileNoAttach[num4])) {
              num4 = num9;
            }
            if (!((num5 <= -1) || $T00().tileNoAttach[num5])) {
              num5 = num9;
            }
            if (!((num <= -1) || $T00().tileNoAttach[num])) {
              num = num9;
            }
            if (!((num3 <= -1) || $T00().tileNoAttach[num3])) {
              num3 = num9;
            }
            if (!((num6 <= -1) || $T00().tileNoAttach[num6])) {
              num6 = num9;
            }
            if (!((num8 <= -1) || $T00().tileNoAttach[num8])) {
              num8 = num9;
            }
          }
          if (!((num2 <= -1) || 
              $T00().tileSolid[num2] || (num2 === num9))) {
            num2 = -1;
          }
          if (!((num7 <= -1) || 
              $T00().tileSolid[num7] || (num7 === num9))) {
            num7 = -1;
          }
          if (!((num4 <= -1) || 
              $T00().tileSolid[num4] || (num4 === num9))) {
            num4 = -1;
          }
          if (!((num5 <= -1) || 
              $T00().tileSolid[num5] || (num5 === num9))) {
            num5 = -1;
          }
          if (!((num <= -1) || 
              $T00().tileSolid[num] || (num === num9))) {
            num = -1;
          }
          if (!((num3 <= -1) || 
              $T00().tileSolid[num3] || (num3 === num9))) {
            num3 = -1;
          }
          if (!((num6 <= -1) || 
              $T00().tileSolid[num6] || (num6 === num9))) {
            num6 = -1;
          }
          if (!((num8 <= -1) || 
              $T00().tileSolid[num8] || (num8 === num9))) {
            num8 = -1;
          }
          if (!((num9 !== 2) && 
              (num9 !== 23) && 
              (num9 !== 60) && (num9 !== 70))) {
            var num24 = 0;
            if (!((num9 !== 60) && (num9 !== 70))) {
              num24 = 59;
            } else if (num9 === 2) {
              if (num2 === 23) {
                num2 = num24;
              }
              if (num7 === 23) {
                num7 = num24;
              }
              if (num4 === 23) {
                num4 = num24;
              }
              if (num5 === 23) {
                num5 = num24;
              }
              if (num === 23) {
                num = num24;
              }
              if (num3 === 23) {
                num3 = num24;
              }
              if (num6 === 23) {
                num6 = num24;
              }
              if (num8 === 23) {
                num8 = num24;
              }
            } else if (num9 === 23) {
              if (num2 === 2) {
                num2 = num24;
              }
              if (num7 === 2) {
                num7 = num24;
              }
              if (num4 === 2) {
                num4 = num24;
              }
              if (num5 === 2) {
                num5 = num24;
              }
              if (num === 2) {
                num = num24;
              }
              if (num3 === 2) {
                num3 = num24;
              }
              if (num6 === 2) {
                num6 = num24;
              }
              if (num8 === 2) {
                num8 = num24;
              }
            }
            if (!((num2 === num9) || 
                (num2 === num24) || ((num7 !== num9) && 
                  (num7 !== num24)))) {
              if (!((num4 !== num24) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 198;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 198;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 198;
                }
              } else if (!((num4 !== num9) || (num5 !== num24))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 198;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 198;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 198;
                }
              }
            } else if (!((num7 === num9) || 
                (num7 === num24) || ((num2 !== num9) && 
                  (num2 !== num24)))) {
              if (!((num4 !== num24) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 216;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 216;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 216;
                }
              } else if (!((num4 !== num9) || (num5 !== num24))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 216;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 216;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 216;
                }
              }
            } else if (!((num4 === num9) || 
                (num4 === num24) || ((num5 !== num9) && 
                  (num5 !== num24)))) {
              if (!((num2 !== num24) || (num7 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 72;
                  rectangle.Y = 144;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 162;
                }
                if (num22 === 2) {
                  rectangle.X = 72;
                  rectangle.Y = 180;
                }
              } else if (!((num7 !== num9) || (num5 !== num2))) {
                if (num22 === 0) {
                  rectangle.X = 72;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 72;
                  rectangle.Y = 126;
                }
              }
            } else if (!((num5 === num9) || 
                (num5 === num24) || ((num4 !== num9) && 
                  (num4 !== num24)))) {
              if (!((num2 !== num24) || (num7 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 90;
                  rectangle.Y = 144;
                }
                if (num22 === 1) {
                  rectangle.X = 90;
                  rectangle.Y = 162;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 180;
                }
              } else if (!((num7 !== num9) || (num5 !== num2))) {
                if (num22 === 0) {
                  rectangle.X = 90;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 90;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 126;
                }
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || 
                (num4 !== num9) || (num5 !== num9))) {
              if (!((num === num9) || 
                  (num3 === num9) || 
                  (num6 === num9) || (num8 === num9))) {
                if (num8 === num24) {
                  if (num22 === 0) {
                    rectangle.X = 108;
                    rectangle.Y = 324;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 324;
                  }
                  if (num22 === 2) {
                    rectangle.X = 144;
                    rectangle.Y = 324;
                  }
                } else if (num3 === num24) {
                  if (num22 === 0) {
                    rectangle.X = 108;
                    rectangle.Y = 342;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 342;
                  }
                  if (num22 === 2) {
                    rectangle.X = 144;
                    rectangle.Y = 342;
                  }
                } else if (num6 === num24) {
                  if (num22 === 0) {
                    rectangle.X = 108;
                    rectangle.Y = 360;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 360;
                  }
                  if (num22 === 2) {
                    rectangle.X = 144;
                    rectangle.Y = 360;
                  }
                } else if (num === num24) {
                  if (num22 === 0) {
                    rectangle.X = 108;
                    rectangle.Y = 378;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 378;
                  }
                  if (num22 === 2) {
                    rectangle.X = 144;
                    rectangle.Y = 378;
                  }
                } else {
                  if (num22 === 0) {
                    rectangle.X = 144;
                    rectangle.Y = 234;
                  }
                  if (num22 === 1) {
                    rectangle.X = 198;
                    rectangle.Y = 234;
                  }
                  if (num22 === 2) {
                    rectangle.X = 252;
                    rectangle.Y = 234;
                  }
                }
              } else if (!((num === num9) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 306;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 306;
                }
                if (num22 === 2) {
                  rectangle.X = 72;
                  rectangle.Y = 306;
                }
              } else if (!((num3 === num9) || (num6 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 90;
                  rectangle.Y = 306;
                }
                if (num22 === 1) {
                  rectangle.X = 108;
                  rectangle.Y = 306;
                }
                if (num22 === 2) {
                  rectangle.X = 126;
                  rectangle.Y = 306;
                }
              } else if (!((num === num9) || 
                  (num3 !== num9) || 
                  (num6 !== num9) || (num8 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 180;
                }
              } else if (!((num !== num9) || 
                  (num3 === num9) || 
                  (num6 !== num9) || (num8 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 180;
                }
              } else if (!((num !== num9) || 
                  (num3 !== num9) || 
                  (num6 === num9) || (num8 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 162;
                }
              } else if (!((num !== num9) || 
                  (num3 !== num9) || 
                  (num6 !== num9) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 162;
                }
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num24) || 
                (num4 !== num9) || 
                (num5 !== num9) || 
                (num !== -1) || (num3 !== -1))) {
              if (num22 === 0) {
                rectangle.X = 108;
                rectangle.Y = 18;
              }
              if (num22 === 1) {
                rectangle.X = 126;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 144;
                rectangle.Y = 18;
              }
            } else if (!((num2 !== num24) || 
                (num7 !== num9) || 
                (num4 !== num9) || 
                (num5 !== num9) || 
                (num6 !== -1) || (num8 !== -1))) {
              if (num22 === 0) {
                rectangle.X = 108;
                rectangle.Y = 36;
              }
              if (num22 === 1) {
                rectangle.X = 126;
                rectangle.Y = 36;
              }
              if (num22 === 2) {
                rectangle.X = 144;
                rectangle.Y = 36;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || 
                (num4 !== num24) || 
                (num5 !== num9) || 
                (num3 !== -1) || (num8 !== -1))) {
              if (num22 === 0) {
                rectangle.X = 198;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 198;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 198;
                rectangle.Y = 36;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || 
                (num4 !== num9) || 
                (num5 !== num24) || 
                (num !== -1) || (num6 !== -1))) {
              if (num22 === 0) {
                rectangle.X = 180;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 180;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 180;
                rectangle.Y = 36;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num24) || 
                (num4 !== num9) || (num5 !== num9))) {
              if (num3 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 180;
                }
              } else if (num !== -1) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 180;
                }
              }
            } else if (!((num2 !== num24) || 
                (num7 !== num9) || 
                (num4 !== num9) || (num5 !== num9))) {
              if (num8 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 162;
                }
              } else if (num6 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 162;
                }
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || 
                (num4 !== num9) || (num5 !== num24))) {
              if (num !== -1) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 162;
                }
              } else if (num6 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 180;
                }
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || 
                (num4 !== num24) || (num5 !== num9))) {
              if (num3 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 162;
                }
              } else if (num8 !== -1) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 180;
                }
              }
            } else if (!(!((num2 === num24) && 
                  (num7 === num9) && 
                  (num4 === num9) && 
                  (num5 === num9)) && 
                !((num2 === num9) && 
                  (num7 === num24) && 
                  (num4 === num9) && 
                  (num5 === num9)) && 
                !((num2 === num9) && 
                  (num7 === num9) && 
                  (num4 === num24) && 
                  (num5 === num9)) && ((num2 !== num9) || 
                  (num7 !== num9) || 
                  (num4 !== num9) || 
                  (num5 !== num24)))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 18;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 54;
                rectangle.Y = 18;
              }
            }
            if (!(((num2 !== num9) && 
                  (num2 !== num24)) || 
                ((num7 !== num9) && 
                  (num7 !== num24)) || 
                ((num4 !== num9) && 
                  (num4 !== num24)) || ((num5 !== num9) && 
                  (num5 !== num24)))) {
              if (!((num === num9) || 
                  (num === num24) || 
                  ((num3 !== num9) && 
                    (num3 !== num24)) || 
                  ((num6 !== num9) && 
                    (num6 !== num24)) || ((num8 !== num9) && 
                    (num8 !== num24)))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 180;
                }
              } else if (!((num3 === num9) || 
                  (num3 === num24) || 
                  ((num !== num9) && 
                    (num !== num24)) || 
                  ((num6 !== num9) && 
                    (num6 !== num24)) || ((num8 !== num9) && 
                    (num8 !== num24)))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 180;
                }
              } else if (!((num6 === num9) || 
                  (num6 === num24) || 
                  ((num !== num9) && 
                    (num !== num24)) || 
                  ((num3 !== num9) && 
                    (num3 !== num24)) || ((num8 !== num9) && 
                    (num8 !== num24)))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 162;
                }
              } else if (!((num8 === num9) || 
                  (num8 === num24) || 
                  ((num !== num9) && 
                    (num !== num24)) || 
                  ((num6 !== num9) && 
                    (num6 !== num24)) || ((num3 !== num9) && 
                    (num3 !== num24)))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 162;
                }
              }
            }
            if (!((num2 === num24) || 
                (num2 === num9) || 
                (num7 !== num9) || 
                (num4 === num24) || 
                (num4 === num9) || 
                (num5 !== num9) || 
                (num8 === num24) || (num8 === num9))) {
              if (num22 === 0) {
                rectangle.X = 90;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 108;
                rectangle.Y = 270;
              }
              if (num22 === 2) {
                rectangle.X = 126;
                rectangle.Y = 270;
              }
            } else if (!((num2 === num24) || 
                (num2 === num9) || 
                (num7 !== num9) || 
                (num4 !== num9) || 
                (num5 === num24) || 
                (num5 === num9) || 
                (num6 === num24) || (num6 === num9))) {
              if (num22 === 0) {
                rectangle.X = 144;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 162;
                rectangle.Y = 270;
              }
              if (num22 === 2) {
                rectangle.X = 180;
                rectangle.Y = 270;
              }
            } else if (!((num7 === num24) || 
                (num7 === num9) || 
                (num2 !== num9) || 
                (num4 === num24) || 
                (num4 === num9) || 
                (num5 !== num9) || 
                (num3 === num24) || (num3 === num9))) {
              if (num22 === 0) {
                rectangle.X = 90;
                rectangle.Y = 288;
              }
              if (num22 === 1) {
                rectangle.X = 108;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 126;
                rectangle.Y = 288;
              }
            } else if (!((num7 === num24) || 
                (num7 === num9) || 
                (num2 !== num9) || 
                (num4 !== num9) || 
                (num5 === num24) || 
                (num5 === num9) || 
                (num === num24) || (num === num9))) {
              if (num22 === 0) {
                rectangle.X = 144;
                rectangle.Y = 288;
              }
              if (num22 === 1) {
                rectangle.X = 162;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 180;
                rectangle.Y = 288;
              }
            } else if (!((num2 === num9) || 
                (num2 === num24) || 
                (num7 !== num9) || 
                (num4 !== num9) || 
                (num5 !== num9) || 
                (num6 === num9) || 
                (num6 === num24) || 
                (num8 === num9) || (num8 === num24))) {
              if (num22 === 0) {
                rectangle.X = 144;
                rectangle.Y = 216;
              }
              if (num22 === 1) {
                rectangle.X = 198;
                rectangle.Y = 216;
              }
              if (num22 === 2) {
                rectangle.X = 252;
                rectangle.Y = 216;
              }
            } else if (!((num7 === num9) || 
                (num7 === num24) || 
                (num2 !== num9) || 
                (num4 !== num9) || 
                (num5 !== num9) || 
                (num === num9) || 
                (num === num24) || 
                (num3 === num9) || (num3 === num24))) {
              if (num22 === 0) {
                rectangle.X = 144;
                rectangle.Y = 252;
              }
              if (num22 === 1) {
                rectangle.X = 198;
                rectangle.Y = 252;
              }
              if (num22 === 2) {
                rectangle.X = 252;
                rectangle.Y = 252;
              }
            } else if (!((num4 === num9) || 
                (num4 === num24) || 
                (num7 !== num9) || 
                (num2 !== num9) || 
                (num5 !== num9) || 
                (num3 === num9) || 
                (num3 === num24) || 
                (num8 === num9) || (num8 === num24))) {
              if (num22 === 0) {
                rectangle.X = 126;
                rectangle.Y = 234;
              }
              if (num22 === 1) {
                rectangle.X = 180;
                rectangle.Y = 234;
              }
              if (num22 === 2) {
                rectangle.X = 234;
                rectangle.Y = 234;
              }
            } else if (!((num5 === num9) || 
                (num5 === num24) || 
                (num7 !== num9) || 
                (num2 !== num9) || 
                (num4 !== num9) || 
                (num === num9) || 
                (num === num24) || 
                (num6 === num9) || (num6 === num24))) {
              if (num22 === 0) {
                rectangle.X = 162;
                rectangle.Y = 234;
              }
              if (num22 === 1) {
                rectangle.X = 216;
                rectangle.Y = 234;
              }
              if (num22 === 2) {
                rectangle.X = 270;
                rectangle.Y = 234;
              }
            } else if (!((num2 === num24) || 
                (num2 === num9) || 
                ((num7 !== num24) && 
                  (num7 !== num9)) || 
                (num4 !== num24) || (num5 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 36;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 54;
                rectangle.Y = 270;
              }
              if (num22 === 2) {
                rectangle.X = 72;
                rectangle.Y = 270;
              }
            } else if (!((num7 === num24) || 
                (num7 === num9) || 
                ((num2 !== num24) && 
                  (num2 !== num9)) || 
                (num4 !== num24) || (num5 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 36;
                rectangle.Y = 288;
              }
              if (num22 === 1) {
                rectangle.X = 54;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 72;
                rectangle.Y = 288;
              }
            } else if (!((num4 === num24) || 
                (num4 === num9) || 
                ((num5 !== num24) && 
                  (num5 !== num9)) || 
                (num2 !== num24) || (num7 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 0;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 0;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 0;
                rectangle.Y = 306;
              }
            } else if (!((num5 === num24) || 
                (num5 === num9) || 
                ((num4 !== num24) && 
                  (num4 !== num9)) || 
                (num2 !== num24) || (num7 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 18;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 18;
                rectangle.Y = 306;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num24) || 
                (num4 !== num24) || (num5 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 198;
                rectangle.Y = 288;
              }
              if (num22 === 1) {
                rectangle.X = 216;
                rectangle.Y = 288;
              }
              if (num22 === 2) {
                rectangle.X = 234;
                rectangle.Y = 288;
              }
            } else if (!((num2 !== num24) || 
                (num7 !== num9) || 
                (num4 !== num24) || (num5 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 198;
                rectangle.Y = 270;
              }
              if (num22 === 1) {
                rectangle.X = 216;
                rectangle.Y = 270;
              }
              if (num22 === 2) {
                rectangle.X = 234;
                rectangle.Y = 270;
              }
            } else if (!((num2 !== num24) || 
                (num7 !== num24) || 
                (num4 !== num9) || (num5 !== num24))) {
              if (num22 === 0) {
                rectangle.X = 198;
                rectangle.Y = 306;
              }
              if (num22 === 1) {
                rectangle.X = 216;
                rectangle.Y = 306;
              }
              if (num22 === 2) {
                rectangle.X = 234;
                rectangle.Y = 306;
              }
            } else if (!((num2 !== num24) || 
                (num7 !== num24) || 
                (num4 !== num24) || (num5 !== num9))) {
              if (num22 === 0) {
                rectangle.X = 144;
                rectangle.Y = 306;
              }
              if (num22 === 1) {
                rectangle.X = 162;
                rectangle.Y = 306;
              }
              if (num22 === 2) {
                rectangle.X = 180;
                rectangle.Y = 306;
              }
            }
            if (!((num2 === num9) || 
                (num2 === num24) || 
                (num7 !== num9) || 
                (num4 !== num9) || (num5 !== num9))) {
              if (!(((num6 !== num24) && 
                    (num6 !== num9)) || 
                  (num8 === num24) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 324;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 324;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 324;
                }
              } else if (!(((num8 !== num24) && 
                    (num8 !== num9)) || 
                  (num6 === num24) || (num6 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 324;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 324;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 324;
                }
              }
            } else if (!((num7 === num9) || 
                (num7 === num24) || 
                (num2 !== num9) || 
                (num4 !== num9) || (num5 !== num9))) {
              if (!(((num !== num24) && 
                    (num !== num9)) || 
                  (num3 === num24) || (num3 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 342;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 342;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 342;
                }
              } else if (!(((num3 !== num24) && 
                    (num3 !== num9)) || 
                  (num === num24) || (num === num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 342;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 342;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 342;
                }
              }
            } else if (!((num4 === num9) || 
                (num4 === num24) || 
                (num2 !== num9) || 
                (num7 !== num9) || (num5 !== num9))) {
              if (!(((num3 !== num24) && 
                    (num3 !== num9)) || 
                  (num8 === num24) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 360;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 360;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 360;
                }
              } else if (!(((num8 !== num24) && 
                    (num8 !== num9)) || 
                  (num3 === num24) || (num3 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 360;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 360;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 360;
                }
              }
            } else if (!((num5 === num9) || 
                (num5 === num24) || 
                (num2 !== num9) || 
                (num7 !== num9) || (num4 !== num9))) {
              if (!(((num !== num24) && 
                    (num !== num9)) || 
                  (num6 === num24) || (num6 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 378;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 378;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 378;
                }
              } else if (!(((num6 !== num24) && 
                    (num6 !== num9)) || 
                  (num === num24) || (num === num9))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 378;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 378;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 378;
                }
              }
            }
            if (!(((num2 !== num9) && 
                  (num2 !== num24)) || 
                ((num7 !== num9) && 
                  (num7 !== num24)) || 
                ((num4 !== num9) && 
                  (num4 !== num24)) || 
                ((num5 !== num9) && 
                  (num5 !== num24)) || 
                (num === -1) || 
                (num3 === -1) || 
                (num6 === -1) || (num8 === -1))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 18;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 54;
                rectangle.Y = 18;
              }
            }
            if (num2 === num24) {
              num2 = -2;
            }
            if (num7 === num24) {
              num7 = -2;
            }
            if (num4 === num24) {
              num4 = -2;
            }
            if (num5 === num24) {
              num5 = -2;
            }
            if (num === num24) {
              num = -2;
            }
            if (num3 === num24) {
              num3 = -2;
            }
            if (num6 === num24) {
              num6 = -2;
            }
            if (num8 === num24) {
              num8 = -2;
            }
          }
          if (!(((num9 !== 1) && 
                (num9 !== 2) && 
                (num9 !== 6) && 
                (num9 !== 7) && 
                (num9 !== 8) && 
                (num9 !== 9) && 
                (num9 !== 22) && 
                (num9 !== 23) && 
                (num9 !== 25) && 
                (num9 !== 37) && 
                (num9 !== 40) && 
                (num9 !== 53) && 
                (num9 !== 56) && 
                (num9 !== 58) && 
                (num9 !== 59) && 
                (num9 !== 60) && 
                (num9 !== 70)) || 
              ((rectangle.X | 0) !== -1) || ((rectangle.Y | 0) !== -1))) {
            if (!((num2 < 0) || (num2 === num9))) {
              num2 = -1;
            }
            if (!((num7 < 0) || (num7 === num9))) {
              num7 = -1;
            }
            if (!((num4 < 0) || (num4 === num9))) {
              num4 = -1;
            }
            if (!((num5 < 0) || (num5 === num9))) {
              num5 = -1;
            }
            if (!((num2 === -1) || 
                (num7 === -1) || 
                (num4 === -1) || (num5 === -1))) {
              if (!((num2 !== -2) || 
                  (num7 !== num9) || 
                  (num4 !== num9) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 144;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 162;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 180;
                  rectangle.Y = 108;
                }
                $thisType.mergeUp = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== -2) || 
                  (num4 !== num9) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 144;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 162;
                  rectangle.Y = 90;
                }
                if (num22 === 2) {
                  rectangle.X = 180;
                  rectangle.Y = 90;
                }
                $thisType.mergeDown = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== num9) || 
                  (num4 !== -2) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 162;
                  rectangle.Y = 126;
                }
                if (num22 === 1) {
                  rectangle.X = 162;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 162;
                  rectangle.Y = 162;
                }
                $thisType.mergeLeft = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== num9) || 
                  (num4 !== num9) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 144;
                  rectangle.Y = 126;
                }
                if (num22 === 1) {
                  rectangle.X = 144;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 144;
                  rectangle.Y = 162;
                }
                $thisType.mergeRight = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== num9) || 
                  (num4 !== -2) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 162;
                }
                $thisType.mergeUp = true;
                $thisType.mergeLeft = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== num9) || 
                  (num4 !== num9) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 126;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 162;
                }
                $thisType.mergeUp = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== -2) || 
                  (num4 !== -2) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 36;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 180;
                }
                $thisType.mergeDown = true;
                $thisType.mergeLeft = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== -2) || 
                  (num4 !== num9) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 108;
                }
                if (num22 === 1) {
                  rectangle.X = 54;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 180;
                }
                $thisType.mergeDown = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== num9) || 
                  (num4 !== -2) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 180;
                  rectangle.Y = 126;
                }
                if (num22 === 1) {
                  rectangle.X = 180;
                  rectangle.Y = 144;
                }
                if (num22 === 2) {
                  rectangle.X = 180;
                  rectangle.Y = 162;
                }
                $thisType.mergeLeft = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== -2) || 
                  (num4 !== num9) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 144;
                  rectangle.Y = 180;
                }
                if (num22 === 1) {
                  rectangle.X = 162;
                  rectangle.Y = 180;
                }
                if (num22 === 2) {
                  rectangle.X = 180;
                  rectangle.Y = 180;
                }
                $thisType.mergeUp = true;
                $thisType.mergeDown = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== num9) || 
                  (num4 !== -2) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 198;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 198;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 198;
                  rectangle.Y = 126;
                }
                $thisType.mergeUp = true;
                $thisType.mergeLeft = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== -2) || 
                  (num4 !== -2) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 198;
                  rectangle.Y = 144;
                }
                if (num22 === 1) {
                  rectangle.X = 198;
                  rectangle.Y = 162;
                }
                if (num22 === 2) {
                  rectangle.X = 198;
                  rectangle.Y = 180;
                }
                $thisType.mergeDown = true;
                $thisType.mergeLeft = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== -2) || 
                  (num4 !== num9) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 216;
                  rectangle.Y = 144;
                }
                if (num22 === 1) {
                  rectangle.X = 216;
                  rectangle.Y = 162;
                }
                if (num22 === 2) {
                  rectangle.X = 216;
                  rectangle.Y = 180;
                }
                $thisType.mergeUp = true;
                $thisType.mergeDown = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== -2) || 
                  (num4 !== -2) || (num5 !== num9))) {
                if (num22 === 0) {
                  rectangle.X = 216;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 216;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 216;
                  rectangle.Y = 126;
                }
                $thisType.mergeUp = true;
                $thisType.mergeDown = true;
                $thisType.mergeLeft = true;
              } else if (!((num2 !== -2) || 
                  (num7 !== -2) || 
                  (num4 !== -2) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 108;
                  rectangle.Y = 198;
                }
                if (num22 === 1) {
                  rectangle.X = 126;
                  rectangle.Y = 198;
                }
                if (num22 === 2) {
                  rectangle.X = 144;
                  rectangle.Y = 198;
                }
                $thisType.mergeUp = true;
                $thisType.mergeDown = true;
                $thisType.mergeLeft = true;
                $thisType.mergeRight = true;
              } else if (!((num2 !== num9) || 
                  (num7 !== num9) || 
                  (num4 !== num9) || (num5 !== num9))) {
                if (num === -2) {
                  if (num22 === 0) {
                    rectangle.X = 18;
                    rectangle.Y = 108;
                  }
                  if (num22 === 1) {
                    rectangle.X = 18;
                    rectangle.Y = 144;
                  }
                  if (num22 === 2) {
                    rectangle.X = 18;
                    rectangle.Y = 180;
                  }
                }
                if (num3 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 0;
                    rectangle.Y = 108;
                  }
                  if (num22 === 1) {
                    rectangle.X = 0;
                    rectangle.Y = 144;
                  }
                  if (num22 === 2) {
                    rectangle.X = 0;
                    rectangle.Y = 180;
                  }
                }
                if (num6 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 18;
                    rectangle.Y = 90;
                  }
                  if (num22 === 1) {
                    rectangle.X = 18;
                    rectangle.Y = 126;
                  }
                  if (num22 === 2) {
                    rectangle.X = 18;
                    rectangle.Y = 162;
                  }
                }
                if (num8 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 0;
                    rectangle.Y = 90;
                  }
                  if (num22 === 1) {
                    rectangle.X = 0;
                    rectangle.Y = 126;
                  }
                  if (num22 === 2) {
                    rectangle.X = 0;
                    rectangle.Y = 162;
                  }
                }
              }
            } else {
              if (!((num9 === 2) || 
                  (num9 === 23) || 
                  (num9 === 60) || (num9 === 70))) {
                if (!((num2 !== -1) || 
                    (num7 !== -2) || 
                    (num4 !== num9) || (num5 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 234;
                    rectangle.Y = 0;
                  }
                  if (num22 === 1) {
                    rectangle.X = 252;
                    rectangle.Y = 0;
                  }
                  if (num22 === 2) {
                    rectangle.X = 270;
                    rectangle.Y = 0;
                  }
                  $thisType.mergeDown = true;
                } else if (!((num2 !== -2) || 
                    (num7 !== -1) || 
                    (num4 !== num9) || (num5 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 234;
                    rectangle.Y = 18;
                  }
                  if (num22 === 1) {
                    rectangle.X = 252;
                    rectangle.Y = 18;
                  }
                  if (num22 === 2) {
                    rectangle.X = 270;
                    rectangle.Y = 18;
                  }
                  $thisType.mergeUp = true;
                } else if (!((num2 !== num9) || 
                    (num7 !== num9) || 
                    (num4 !== -1) || (num5 !== -2))) {
                  if (num22 === 0) {
                    rectangle.X = 234;
                    rectangle.Y = 36;
                  }
                  if (num22 === 1) {
                    rectangle.X = 252;
                    rectangle.Y = 36;
                  }
                  if (num22 === 2) {
                    rectangle.X = 270;
                    rectangle.Y = 36;
                  }
                  $thisType.mergeRight = true;
                } else if (!((num2 !== num9) || 
                    (num7 !== num9) || 
                    (num4 !== -2) || (num5 !== -1))) {
                  if (num22 === 0) {
                    rectangle.X = 234;
                    rectangle.Y = 54;
                  }
                  if (num22 === 1) {
                    rectangle.X = 252;
                    rectangle.Y = 54;
                  }
                  if (num22 === 2) {
                    rectangle.X = 270;
                    rectangle.Y = 54;
                  }
                  $thisType.mergeLeft = true;
                }
              }
              if (!((num2 === -1) || 
                  (num7 === -1) || 
                  (num4 !== -1) || (num5 !== num9))) {
                if (!((num2 !== -2) || (num7 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 72;
                    rectangle.Y = 144;
                  }
                  if (num22 === 1) {
                    rectangle.X = 72;
                    rectangle.Y = 162;
                  }
                  if (num22 === 2) {
                    rectangle.X = 72;
                    rectangle.Y = 180;
                  }
                  $thisType.mergeUp = true;
                } else if (!((num7 !== -2) || (num2 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 72;
                    rectangle.Y = 90;
                  }
                  if (num22 === 1) {
                    rectangle.X = 72;
                    rectangle.Y = 108;
                  }
                  if (num22 === 2) {
                    rectangle.X = 72;
                    rectangle.Y = 126;
                  }
                  $thisType.mergeDown = true;
                }
              } else if (!((num2 === -1) || 
                  (num7 === -1) || 
                  (num4 !== num9) || (num5 !== -1))) {
                if (!((num2 !== -2) || (num7 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 90;
                    rectangle.Y = 144;
                  }
                  if (num22 === 1) {
                    rectangle.X = 90;
                    rectangle.Y = 162;
                  }
                  if (num22 === 2) {
                    rectangle.X = 90;
                    rectangle.Y = 180;
                  }
                  $thisType.mergeUp = true;
                } else if (!((num7 !== -2) || (num2 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 90;
                    rectangle.Y = 90;
                  }
                  if (num22 === 1) {
                    rectangle.X = 90;
                    rectangle.Y = 108;
                  }
                  if (num22 === 2) {
                    rectangle.X = 90;
                    rectangle.Y = 126;
                  }
                  $thisType.mergeDown = true;
                }
              } else if (!((num2 !== -1) || 
                  (num7 !== num9) || 
                  (num4 === -1) || (num5 === -1))) {
                if (!((num4 !== -2) || (num5 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 0;
                    rectangle.Y = 198;
                  }
                  if (num22 === 1) {
                    rectangle.X = 18;
                    rectangle.Y = 198;
                  }
                  if (num22 === 2) {
                    rectangle.X = 36;
                    rectangle.Y = 198;
                  }
                  $thisType.mergeLeft = true;
                } else if (!((num5 !== -2) || (num4 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 54;
                    rectangle.Y = 198;
                  }
                  if (num22 === 1) {
                    rectangle.X = 72;
                    rectangle.Y = 198;
                  }
                  if (num22 === 2) {
                    rectangle.X = 90;
                    rectangle.Y = 198;
                  }
                  $thisType.mergeRight = true;
                }
              } else if (!((num2 !== num9) || 
                  (num7 !== -1) || 
                  (num4 === -1) || (num5 === -1))) {
                if (!((num4 !== -2) || (num5 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 0;
                    rectangle.Y = 216;
                  }
                  if (num22 === 1) {
                    rectangle.X = 18;
                    rectangle.Y = 216;
                  }
                  if (num22 === 2) {
                    rectangle.X = 36;
                    rectangle.Y = 216;
                  }
                  $thisType.mergeLeft = true;
                } else if (!((num5 !== -2) || (num4 !== num9))) {
                  if (num22 === 0) {
                    rectangle.X = 54;
                    rectangle.Y = 216;
                  }
                  if (num22 === 1) {
                    rectangle.X = 72;
                    rectangle.Y = 216;
                  }
                  if (num22 === 2) {
                    rectangle.X = 90;
                    rectangle.Y = 216;
                  }
                  $thisType.mergeRight = true;
                }
              } else if (!((num2 === -1) || 
                  (num7 === -1) || 
                  (num4 !== -1) || (num5 !== -1))) {
                if (!((num2 !== -2) || (num7 !== -2))) {
                  if (num22 === 0) {
                    rectangle.X = 108;
                    rectangle.Y = 216;
                  }
                  if (num22 === 1) {
                    rectangle.X = 108;
                    rectangle.Y = 234;
                  }
                  if (num22 === 2) {
                    rectangle.X = 108;
                    rectangle.Y = 252;
                  }
                  $thisType.mergeUp = true;
                  $thisType.mergeDown = true;
                } else if (num2 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 126;
                    rectangle.Y = 144;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 162;
                  }
                  if (num22 === 2) {
                    rectangle.X = 126;
                    rectangle.Y = 180;
                  }
                  $thisType.mergeUp = true;
                } else if (num7 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 126;
                    rectangle.Y = 90;
                  }
                  if (num22 === 1) {
                    rectangle.X = 126;
                    rectangle.Y = 108;
                  }
                  if (num22 === 2) {
                    rectangle.X = 126;
                    rectangle.Y = 126;
                  }
                  $thisType.mergeDown = true;
                }
              } else if (!((num2 !== -1) || 
                  (num7 !== -1) || 
                  (num4 === -1) || (num5 === -1))) {
                if (!((num4 !== -2) || (num5 !== -2))) {
                  if (num22 === 0) {
                    rectangle.X = 162;
                    rectangle.Y = 198;
                  }
                  if (num22 === 1) {
                    rectangle.X = 180;
                    rectangle.Y = 198;
                  }
                  if (num22 === 2) {
                    rectangle.X = 198;
                    rectangle.Y = 198;
                  }
                  $thisType.mergeLeft = true;
                  $thisType.mergeRight = true;
                } else if (num4 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 0;
                    rectangle.Y = 252;
                  }
                  if (num22 === 1) {
                    rectangle.X = 18;
                    rectangle.Y = 252;
                  }
                  if (num22 === 2) {
                    rectangle.X = 36;
                    rectangle.Y = 252;
                  }
                  $thisType.mergeLeft = true;
                } else if (num5 === -2) {
                  if (num22 === 0) {
                    rectangle.X = 54;
                    rectangle.Y = 252;
                  }
                  if (num22 === 1) {
                    rectangle.X = 72;
                    rectangle.Y = 252;
                  }
                  if (num22 === 2) {
                    rectangle.X = 90;
                    rectangle.Y = 252;
                  }
                  $thisType.mergeRight = true;
                }
              } else if (!((num2 !== -2) || 
                  (num7 !== -1) || 
                  (num4 !== -1) || (num5 !== -1))) {
                if (num22 === 0) {
                  rectangle.X = 108;
                  rectangle.Y = 144;
                }
                if (num22 === 1) {
                  rectangle.X = 108;
                  rectangle.Y = 162;
                }
                if (num22 === 2) {
                  rectangle.X = 108;
                  rectangle.Y = 180;
                }
                $thisType.mergeUp = true;
              } else if (!((num2 !== -1) || 
                  (num7 !== -2) || 
                  (num4 !== -1) || (num5 !== -1))) {
                if (num22 === 0) {
                  rectangle.X = 108;
                  rectangle.Y = 90;
                }
                if (num22 === 1) {
                  rectangle.X = 108;
                  rectangle.Y = 108;
                }
                if (num22 === 2) {
                  rectangle.X = 108;
                  rectangle.Y = 126;
                }
                $thisType.mergeDown = true;
              } else if (!((num2 !== -1) || 
                  (num7 !== -1) || 
                  (num4 !== -2) || (num5 !== -1))) {
                if (num22 === 0) {
                  rectangle.X = 0;
                  rectangle.Y = 234;
                }
                if (num22 === 1) {
                  rectangle.X = 18;
                  rectangle.Y = 234;
                }
                if (num22 === 2) {
                  rectangle.X = 36;
                  rectangle.Y = 234;
                }
                $thisType.mergeLeft = true;
              } else if (!((num2 !== -1) || 
                  (num7 !== -1) || 
                  (num4 !== -1) || (num5 !== -2))) {
                if (num22 === 0) {
                  rectangle.X = 54;
                  rectangle.Y = 234;
                }
                if (num22 === 1) {
                  rectangle.X = 72;
                  rectangle.Y = 234;
                }
                if (num22 === 2) {
                  rectangle.X = 90;
                  rectangle.Y = 234;
                }
                $thisType.mergeRight = true;
              }
            }
          }
          if (!(((rectangle.X | 0) >= 0) && ((rectangle.Y | 0) >= 0))) {
            if (!((num9 !== 2) && 
                (num9 !== 23) && 
                (num9 !== 60) && (num9 !== 70))) {
              if (num2 === -2) {
                num2 = num9;
              }
              if (num7 === -2) {
                num7 = num9;
              }
              if (num4 === -2) {
                num4 = num9;
              }
              if (num5 === -2) {
                num5 = num9;
              }
              if (num === -2) {
                num = num9;
              }
              if (num3 === -2) {
                num3 = num9;
              }
              if (num6 === -2) {
                num6 = num9;
              }
              if (num8 === -2) {
                num8 = num9;
              }
            }
            if (!((num2 !== num9) || 
                (num7 !== num9) || !((num4 === num9) & (num5 === num9)))) {
              if (!((num === num9) || (num3 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 108;
                  rectangle.Y = 18;
                }
                if (num22 === 1) {
                  rectangle.X = 126;
                  rectangle.Y = 18;
                }
                if (num22 === 2) {
                  rectangle.X = 144;
                  rectangle.Y = 18;
                }
              } else if (!((num6 === num9) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 108;
                  rectangle.Y = 36;
                }
                if (num22 === 1) {
                  rectangle.X = 126;
                  rectangle.Y = 36;
                }
                if (num22 === 2) {
                  rectangle.X = 144;
                  rectangle.Y = 36;
                }
              } else if (!((num === num9) || (num6 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 180;
                  rectangle.Y = 0;
                }
                if (num22 === 1) {
                  rectangle.X = 180;
                  rectangle.Y = 18;
                }
                if (num22 === 2) {
                  rectangle.X = 180;
                  rectangle.Y = 36;
                }
              } else if (!((num3 === num9) || (num8 === num9))) {
                if (num22 === 0) {
                  rectangle.X = 198;
                  rectangle.Y = 0;
                }
                if (num22 === 1) {
                  rectangle.X = 198;
                  rectangle.Y = 18;
                }
                if (num22 === 2) {
                  rectangle.X = 198;
                  rectangle.Y = 36;
                }
              } else {
                if (num22 === 0) {
                  rectangle.X = 18;
                  rectangle.Y = 18;
                }
                if (num22 === 1) {
                  rectangle.X = 36;
                  rectangle.Y = 18;
                }
                if (num22 === 2) {
                  rectangle.X = 54;
                  rectangle.Y = 18;
                }
              }
            } else if (!((num2 === num9) || 
                (num7 !== num9) || !((num4 === num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 0;
              }
              if (num22 === 2) {
                rectangle.X = 54;
                rectangle.Y = 0;
              }
            } else if (!((num2 !== num9) || 
                (num7 === num9) || !((num4 === num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 36;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 36;
              }
              if (num22 === 2) {
                rectangle.X = 54;
                rectangle.Y = 36;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || !((num4 !== num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 0;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 0;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 0;
                rectangle.Y = 36;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || !((num4 === num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 72;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 72;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 72;
                rectangle.Y = 36;
              }
            } else if (!((num2 === num9) || 
                (num7 !== num9) || !((num4 !== num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 0;
                rectangle.Y = 54;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 54;
              }
              if (num22 === 2) {
                rectangle.X = 72;
                rectangle.Y = 54;
              }
            } else if (!((num2 === num9) || 
                (num7 !== num9) || !((num4 === num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 54;
              }
              if (num22 === 1) {
                rectangle.X = 54;
                rectangle.Y = 54;
              }
              if (num22 === 2) {
                rectangle.X = 90;
                rectangle.Y = 54;
              }
            } else if (!((num2 !== num9) || 
                (num7 === num9) || !((num4 !== num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 0;
                rectangle.Y = 72;
              }
              if (num22 === 1) {
                rectangle.X = 36;
                rectangle.Y = 72;
              }
              if (num22 === 2) {
                rectangle.X = 72;
                rectangle.Y = 72;
              }
            } else if (!((num2 !== num9) || 
                (num7 === num9) || !((num4 === num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 18;
                rectangle.Y = 72;
              }
              if (num22 === 1) {
                rectangle.X = 54;
                rectangle.Y = 72;
              }
              if (num22 === 2) {
                rectangle.X = 90;
                rectangle.Y = 72;
              }
            } else if (!((num2 !== num9) || 
                (num7 !== num9) || !((num4 !== num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 90;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 90;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 90;
                rectangle.Y = 36;
              }
            } else if (!((num2 === num9) || 
                (num7 === num9) || !((num4 === num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 108;
                rectangle.Y = 72;
              }
              if (num22 === 1) {
                rectangle.X = 126;
                rectangle.Y = 72;
              }
              if (num22 === 2) {
                rectangle.X = 144;
                rectangle.Y = 72;
              }
            } else if (!((num2 === num9) || 
                (num7 !== num9) || !((num4 !== num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 108;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 126;
                rectangle.Y = 0;
              }
              if (num22 === 2) {
                rectangle.X = 144;
                rectangle.Y = 0;
              }
            } else if (!((num2 !== num9) || 
                (num7 === num9) || !((num4 !== num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 108;
                rectangle.Y = 54;
              }
              if (num22 === 1) {
                rectangle.X = 126;
                rectangle.Y = 54;
              }
              if (num22 === 2) {
                rectangle.X = 144;
                rectangle.Y = 54;
              }
            } else if (!((num2 === num9) || 
                (num7 === num9) || !((num4 !== num9) & (num5 === num9)))) {
              if (num22 === 0) {
                rectangle.X = 162;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 162;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 162;
                rectangle.Y = 36;
              }
            } else if (!((num2 === num9) || 
                (num7 === num9) || !((num4 === num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 216;
                rectangle.Y = 0;
              }
              if (num22 === 1) {
                rectangle.X = 216;
                rectangle.Y = 18;
              }
              if (num22 === 2) {
                rectangle.X = 216;
                rectangle.Y = 36;
              }
            } else if (!((num2 === num9) || 
                (num7 === num9) || !((num4 !== num9) & (num5 !== num9)))) {
              if (num22 === 0) {
                rectangle.X = 162;
                rectangle.Y = 54;
              }
              if (num22 === 1) {
                rectangle.X = 180;
                rectangle.Y = 54;
              }
              if (num22 === 2) {
                rectangle.X = 198;
                rectangle.Y = 54;
              }
            }
          }
          if (!(((rectangle.X | 0) > -1) && ((rectangle.Y | 0) > -1))) {
            if (num22 <= 0) {
              rectangle.X = 18;
              rectangle.Y = 18;
            }
            if (num22 === 1) {
              rectangle.X = 36;
              rectangle.Y = 18;
            }
            if (num22 >= 2) {
              rectangle.X = 54;
              rectangle.Y = 18;
            }
          }
          $T00().tile.Get(i, j).frameX = ((rectangle.X + 0x8000 & 0xFFFF) - 0x8000);
          $T00().tile.Get(i, j).frameY = ((rectangle.Y + 0x8000 & 0xFFFF) - 0x8000);
          if (!((num9 !== 52) && (num9 !== 62))) {
            if ($T00().tile.Get(i, (((j | 0) - 1) | 0)) !== null) {
              if (!$T00().tile.Get(i, (((j | 0) - 1) | 0)).active) {
                num2 = -1;
              } else {
                num2 = ($T00().tile.Get(i, (((j | 0) - 1) | 0)).type | 0);
              }
            } else {
              num2 = num9;
            }
            if (!((num2 === num9) || 
                (num2 === 2) || (num2 === 60))) {
              $thisType.KillTile(
                i, 
                j, 
                false, 
                false, 
                false
              );
            }
          }
          if (num9 === 53) {
            if (($T00().netMode | 0) === 0) {
              if (!(($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) || $T00().tile.Get(i, (((j | 0) + 1) | 0)).active)) {
                $T00().tile.Get(i, j).active = false;
                $T17().NewProjectile(
                  +(Math.imul(i, 16) + 8), 
                  +(Math.imul(j, 16) + 8), 
                  0, 
                  0.41, 
                  31, 
                  10, 
                  0, 
                  $T00().myPlayer
                );
                $thisType.SquareTileFrame(i, j, true);
              }
            } else if (!((($T00().netMode | 0) !== 2) || 
                ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null) || $T00().tile.Get(i, (((j | 0) + 1) | 0)).active)) {
              $T00().tile.Get(i, j).active = false;
              var num25 = ($T17().NewProjectile(
                +(Math.imul(i, 16) + 8), 
                +(Math.imul(j, 16) + 8), 
                0, 
                0.41, 
                31, 
                10, 
                0, 
                $T00().myPlayer
              ) | 0);
              $T00().projectile[num25].velocity.Y = 0.5;
              var expr_64BA_cp_0 = $T00().projectile[num25];
              expr_64BA_cp_0.position.Y = +expr_64BA_cp_0.position.Y + 2;
              $T1B().SendTileSquare(-1, i, j, 1);
              $thisType.SquareTileFrame(i, j, true);
            }
          }
          if (!(((rectangle.X | 0) === frameX) || 
              ((rectangle.Y | 0) === frameY) || 
              (frameX < 0) || (frameY < 0))) {
            var flag3 = $thisType.mergeUp;
            var flag4 = $thisType.mergeDown;
            var flag5 = $thisType.mergeLeft;
            var flag6 = $thisType.mergeRight;
            $thisType.TileFrame((((i | 0) - 1) | 0), j, false, false);
            $thisType.TileFrame((((i | 0) + 1) | 0), j, false, false);
            $thisType.TileFrame(i, (((j | 0) - 1) | 0), false, false);
            $thisType.TileFrame(i, (((j | 0) + 1) | 0), false, false);
            $thisType.mergeUp = flag3;
            $thisType.mergeDown = flag4;
            $thisType.mergeLeft = flag5;
            $thisType.mergeRight = flag6;
          }
        }
      }
    }
  }; 

  function WorldGen_TileRunner (i, j, strength, steps, type, addTile, speedX, speedY, noYChange, overRide) {
    var value = new ($T04())(), value2 = new ($T04())();
    var num = +strength;
    var num2 = +steps;
    value.X = +i;
    value.Y = +j;
    value2.X = +($thisType.genRand.Next(-10, 11)) * 0.1;
    value2.Y = +($thisType.genRand.Next(-10, 11)) * 0.1;
    if (!((+speedX === 0) && (+speedY === 0))) {
      value2.X = +speedX;
      value2.Y = +speedY;
    }

    while ((num > 0) && (num2 > 0)) {
      num = +strength * +(num2 / +steps);
      num2 -= 1;
      var num3 = ((value.X - (num * 0.5)) | 0);
      var num4 = ((value.X + (num * 0.5)) | 0);
      var num5 = ((value.Y - (num * 0.5)) | 0);
      var num6 = ((value.Y + (num * 0.5)) | 0);
      if (num3 < 0) {
        num3 = 0;
      }
      if (num4 > ($T00().maxTilesX | 0)) {
        num4 = ($T00().maxTilesX | 0);
      }
      if (num5 < 0) {
        num5 = 0;
      }
      if (num6 > ($T00().maxTilesY | 0)) {
        num6 = ($T00().maxTilesY | 0);
      }

      for (var k = num3; k < num4; k = ((k + 1) | 0)) {

        for (var l = num5; l < num6; l = ((l + 1) | 0)) {
          if ((Math.abs((+k - +value.X))) + (Math.abs((+l - +value.Y))) < ((+strength * 0.5) * (1 + (+($thisType.genRand.Next(-10, 11)) * 0.015)))) {
            if ((type | 0) < 0) {
              if (!(((type | 0) !== -2) || 
                  !$T00().tile.Get(k, l).active || ((l >= ($thisType.waterLine | 0)) && 
                    (l <= ($thisType.lavaLine | 0))))) {
                $T00().tile.Get(k, l).liquid = 255;
                if (l > ($thisType.lavaLine | 0)) {
                  $T00().tile.Get(k, l).lava = true;
                }
              }
              $T00().tile.Get(k, l).active = false;
            } else {
              if (!((!overRide && 
                    $T00().tile.Get(k, l).active) || 
                  (((type | 0) === 40) && 
                    (($T00().tile.Get(k, l).type | 0) === 53)) || 
                  ($T00().tileStone[type] && 
                    (($T00().tile.Get(k, l).type | 0) !== 1)) || (($T00().tile.Get(k, l).type | 0) === 45))) {
                $T00().tile.Get(k, l).type = (type & 0xFF);
              }
              if (addTile) {
                $T00().tile.Get(k, l).active = true;
                $T00().tile.Get(k, l).liquid = 0;
                $T00().tile.Get(k, l).lava = false;
              }
              if (!(!noYChange || (+l >= +$T00().worldSurface))) {
                $T00().tile.Get(k, l).wall = 2;
              }
              if (!(((type | 0) !== 59) || 
                  (l <= ($thisType.waterLine | 0)) || (($T00().tile.Get(k, l).liquid | 0) <= 0))) {
                $T00().tile.Get(k, l).lava = false;
                $T00().tile.Get(k, l).liquid = 0;
              }
            }
          }
        }
      }
      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
      if (num > 50) {
        value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
        num2 -= 1;
        value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
        value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
        if (num > 100) {
          value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
          num2 -= 1;
          value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
          value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
          if (num > 150) {
            value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
            num2 -= 1;
            value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
            value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
            if (num > 200) {
              value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
              num2 -= 1;
              value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
              value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
              if (num > 250) {
                value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                num2 -= 1;
                value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                if (num > 300) {
                  value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                  num2 -= 1;
                  value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                  value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                  if (num > 400) {
                    value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                    num2 -= 1;
                    value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                    value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                    if (num > 500) {
                      value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                      num2 -= 1;
                      value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                      if (num > 600) {
                        value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                        num2 -= 1;
                        value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                        value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                        if (num > 700) {
                          value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                          num2 -= 1;
                          value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                          value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                          if (num > 800) {
                            value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                            num2 -= 1;
                            value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                            value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                            if (num > 900) {
                              value = $T04().op_Addition(value.MemberwiseClone(), value2.MemberwiseClone()).MemberwiseClone();
                              num2 -= 1;
                              value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                              value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      value2.X = +value2.X + (+($thisType.genRand.Next(-10, 11)) * 0.05);
      if (+value2.X > 1) {
        value2.X = 1;
      }
      if (+value2.X < -1) {
        value2.X = -1;
      }
      if (!noYChange) {
        value2.Y = +value2.Y + (+($thisType.genRand.Next(-10, 11)) * 0.05);
        if (+value2.Y > 1) {
          value2.Y = 1;
        }
        if (+value2.Y < -1) {
          value2.Y = -1;
        }
      } else if (num < 3) {
        if (+value2.Y > 1) {
          value2.Y = 1;
        }
        if (+value2.Y < -1) {
          value2.Y = -1;
        }
      }
      if ((type | 0) === 59) {
        if (value2.Y > 0.5) {
          value2.Y = 0.5;
        }
        if (value2.Y < -0.5) {
          value2.Y = -0.5;
        }
        if (value.Y < (+$T00().rockLayer + 100)) {
          value2.Y = 1;
        }
        if (+value.Y > +(($T00().maxTilesY | 0) - 300)) {
          value2.Y = -1;
        }
      }
    }
  }; 

  function WorldGen_UpdateWorld () {
    var vector = new ($T04())();
    $T13().skipCount = ((($T13().skipCount | 0) + 1) | 0);
    if (($T13().skipCount | 0) > 1) {
      $T13().UpdateLiquid();
      $T13().skipCount = 0;
    }
    var num = 4E-05;
    var num2 = 2E-05;
    var flag = false;
    $thisType.spawnDelay = ((($thisType.spawnDelay | 0) + 1) | 0);
    if (($T00().invasionType | 0) > 0) {
      $thisType.spawnDelay = 0;
    }
    if (($thisType.spawnDelay | 0) >= 20) {
      flag = true;
      $thisType.spawnDelay = 0;

    $loop0: 
      for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
        if (!(!$T00().npc[i].active || 
            !$T00().npc[i].homeless || !$T00().npc[i].townNPC)) {
          $thisType.spawnNPC = ($T00().npc[i].type | 0);
          break $loop0;
        }
      }
    }

    for (var num3 = 0; +num3 < (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * num); num3 = ((num3 + 1) | 0)) {
      var num4 = ($thisType.genRand.Next(10, ((($T00().maxTilesX | 0) - 10) | 0)) | 0);
      var num5 = ($thisType.genRand.Next(10, (((($T00().worldSurface) | 0) - 1) | 0)) | 0);
      var num6 = ((num4 - 1) | 0);
      var num7 = ((num4 + 2) | 0);
      var num8 = ((num5 - 1) | 0);
      var num9 = ((num5 + 2) | 0);
      if (num6 < 10) {
        num6 = 10;
      }
      if (num7 > ((($T00().maxTilesX | 0) - 10) | 0)) {
        num7 = ((($T00().maxTilesX | 0) - 10) | 0);
      }
      if (num8 < 10) {
        num8 = 10;
      }
      if (num9 > ((($T00().maxTilesY | 0) - 10) | 0)) {
        num9 = ((($T00().maxTilesY | 0) - 10) | 0);
      }
      if ($T00().tile.Get(num4, num5) !== null) {
        if (($T00().tile.Get(num4, num5).liquid | 0) > 32) {
          if (!(!$T00().tile.Get(num4, num5).active || ((($T00().tile.Get(num4, num5).type | 0) !== 3) && 
                (($T00().tile.Get(num4, num5).type | 0) !== 20) && 
                (($T00().tile.Get(num4, num5).type | 0) !== 24) && 
                (($T00().tile.Get(num4, num5).type | 0) !== 27) && 
                (($T00().tile.Get(num4, num5).type | 0) !== 73)))) {
            $thisType.KillTile(
              num4, 
              num5, 
              false, 
              false, 
              false
            );
            if (($T00().netMode | 0) === 2) {
              $T1B().SendData(
                17, 
                -1, 
                -1, 
                "", 
                0, 
                +num4, 
                +num5, 
                0
              );
            }
          }
        } else if ($T00().tile.Get(num4, num5).active) {
          if (($T00().tile.Get(num4, num5).type | 0) === 78) {
            if (!$T00().tile.Get(num4, num8).active) {
              $thisType.PlaceTile(
                num4, 
                num8, 
                3, 
                true, 
                false, 
                -1
              );
              if (!((($T00().netMode | 0) !== 2) || !$T00().tile.Get(num4, num8).active)) {
                $T1B().SendTileSquare(-1, num4, num8, 1);
              }
            }
          } else if (!((($T00().tile.Get(num4, num5).type | 0) !== 2) && 
              (($T00().tile.Get(num4, num5).type | 0) !== 23) && (($T00().tile.Get(num4, num5).type | 0) !== 32))) {
            var num10 = ($T00().tile.Get(num4, num5).type | 0);
            if (!($T00().tile.Get(num4, num8).active || 
                (($thisType.genRand.Next(10) | 0) !== 0) || (num10 !== 2))) {
              $thisType.PlaceTile(
                num4, 
                num8, 
                3, 
                true, 
                false, 
                -1
              );
              if (!((($T00().netMode | 0) !== 2) || !$T00().tile.Get(num4, num8).active)) {
                $T1B().SendTileSquare(-1, num4, num8, 1);
              }
            }
            if (!($T00().tile.Get(num4, num8).active || 
                (($thisType.genRand.Next(10) | 0) !== 0) || (num10 !== 23))) {
              $thisType.PlaceTile(
                num4, 
                num8, 
                24, 
                true, 
                false, 
                -1
              );
              if (!((($T00().netMode | 0) !== 2) || !$T00().tile.Get(num4, num8).active)) {
                $T1B().SendTileSquare(-1, num4, num8, 1);
              }
            }
            var flag2 = false;

            for (var j = num6; j < num7; j = ((j + 1) | 0)) {

              for (var k = num8; k < num9; k = ((k + 1) | 0)) {
                if (!(((num4 === j) && 
                      (num5 === k)) || !$T00().tile.Get(j, k).active)) {
                  if (num10 === 32) {
                    num10 = 23;
                  }
                  if (!((($T00().tile.Get(j, k).type | 0) !== 0) && ((num10 !== 23) || 
                        (($T00().tile.Get(j, k).type | 0) !== 2)))) {
                    $thisType.SpreadGrass(
                      j, 
                      k, 
                      0, 
                      num10, 
                      false
                    );
                    if (num10 === 23) {
                      $thisType.SpreadGrass(
                        j, 
                        k, 
                        2, 
                        num10, 
                        false
                      );
                    }
                    if (($T00().tile.Get(j, k).type | 0) === num10) {
                      $thisType.SquareTileFrame(j, k, true);
                      flag2 = true;
                    }
                  }
                }
              }
            }
            if (!((($T00().netMode | 0) !== 2) || !flag2)) {
              $T1B().SendTileSquare(-1, num4, num5, 3);
            }
          } else if (!((($T00().tile.Get(num4, num5).type | 0) !== 20) || 
              $thisType.PlayerLOS(num4, num5) || (($thisType.genRand.Next(5) | 0) !== 0))) {
            $thisType.GrowTree(num4, num5);
          }
          if (!((($T00().tile.Get(num4, num5).type | 0) !== 3) || 
              (($thisType.genRand.Next(10) | 0) !== 0) || (($T00().tile.Get(num4, num5).frameX | 0) >= 144))) {
            $T00().tile.Get(num4, num5).type = 73;
            if (($T00().netMode | 0) === 2) {
              $T1B().SendTileSquare(-1, num4, num5, 3);
            }
          }
          if (!((($T00().tile.Get(num4, num5).type | 0) !== 32) || (($thisType.genRand.Next(3) | 0) !== 0))) {
            var num11 = num4;
            var num12 = num5;
            var num13 = 0;
            if (!(!$T00().tile.Get(((num11 + 1) | 0), num12).active || (($T00().tile.Get(((num11 + 1) | 0), num12).type | 0) !== 32))) {
              num13 = ((num13 + 1) | 0);
            }
            if (!(!$T00().tile.Get(((num11 - 1) | 0), num12).active || (($T00().tile.Get(((num11 - 1) | 0), num12).type | 0) !== 32))) {
              num13 = ((num13 + 1) | 0);
            }
            if (!(!$T00().tile.Get(num11, ((num12 + 1) | 0)).active || (($T00().tile.Get(num11, ((num12 + 1) | 0)).type | 0) !== 32))) {
              num13 = ((num13 + 1) | 0);
            }
            if (!(!$T00().tile.Get(num11, ((num12 - 1) | 0)).active || (($T00().tile.Get(num11, ((num12 - 1) | 0)).type | 0) !== 32))) {
              num13 = ((num13 + 1) | 0);
            }
            if (!((num13 >= 3) && (($T00().tile.Get(num4, num5).type | 0) !== 23))) {
              var num14 = ($thisType.genRand.Next(4) | 0);
              if (num14 === 0) {
                num12 = ((num12 - 1) | 0);
              } else if (num14 === 1) {
                num12 = ((num12 + 1) | 0);
              } else if (num14 === 2) {
                num11 = ((num11 - 1) | 0);
              } else if (num14 === 3) {
                num11 = ((num11 + 1) | 0);
              }
              if (!$T00().tile.Get(num11, num12).active) {
                num13 = 0;
                if (!(!$T00().tile.Get(((num11 + 1) | 0), num12).active || (($T00().tile.Get(((num11 + 1) | 0), num12).type | 0) !== 32))) {
                  num13 = ((num13 + 1) | 0);
                }
                if (!(!$T00().tile.Get(((num11 - 1) | 0), num12).active || (($T00().tile.Get(((num11 - 1) | 0), num12).type | 0) !== 32))) {
                  num13 = ((num13 + 1) | 0);
                }
                if (!(!$T00().tile.Get(num11, ((num12 + 1) | 0)).active || (($T00().tile.Get(num11, ((num12 + 1) | 0)).type | 0) !== 32))) {
                  num13 = ((num13 + 1) | 0);
                }
                if (!(!$T00().tile.Get(num11, ((num12 - 1) | 0)).active || (($T00().tile.Get(num11, ((num12 - 1) | 0)).type | 0) !== 32))) {
                  num13 = ((num13 + 1) | 0);
                }
                if (num13 < 2) {
                  var num16 = ((num11 - 7) | 0);
                  var num17 = ((num11 + 7) | 0);
                  var num18 = ((num12 - 7) | 0);
                  var num19 = ((num12 + 7) | 0);
                  var flag3 = false;

                  for (var l = num16; l < num17; l = ((l + 1) | 0)) {

                  $loop5: 
                    for (var m = num18; m < num19; m = ((m + 1) | 0)) {
                      if (!((((Math.imul((Math.abs(((l - num11) | 0))), 2) + (Math.abs(((m - num12) | 0)))) | 0) >= 9) || 
                          !$T00().tile.Get(l, m).active || 
                          (($T00().tile.Get(l, m).type | 0) !== 23) || 
                          !$T00().tile.Get(l, ((m - 1) | 0)).active || 
                          (($T00().tile.Get(l, ((m - 1) | 0)).type | 0) !== 32) || (($T00().tile.Get(l, ((m - 1) | 0)).liquid | 0) !== 0))) {
                        flag3 = true;
                        break $loop5;
                      }
                    }
                  }
                  if (flag3) {
                    $T00().tile.Get(num11, num12).type = 32;
                    $T00().tile.Get(num11, num12).active = true;
                    $thisType.SquareTileFrame(num11, num12, true);
                    if (($T00().netMode | 0) === 2) {
                      $T1B().SendTileSquare(-1, num11, num12, 3);
                    }
                  }
                }
              }
            }
          }
          if (!(((($T00().tile.Get(num4, num5).type | 0) !== 2) && 
                (($T00().tile.Get(num4, num5).type | 0) !== 52)) || 
              (($thisType.genRand.Next(5) | 0) !== 0) || 
              $T00().tile.Get(num4, ((num5 + 1) | 0)).active || $T00().tile.Get(num4, ((num5 + 1) | 0)).lava)) {
            var flag4 = false;

          $loop6: 
            for (var n = num5; n > ((num5 - 10) | 0); n = ((n - 1) | 0)) {
              if (!(!$T00().tile.Get(num4, n).active || (($T00().tile.Get(num4, n).type | 0) !== 2))) {
                flag4 = true;
                break $loop6;
              }
            }
            if (flag4) {
              var num20 = num4;
              var num21 = ((num5 + 1) | 0);
              $T00().tile.Get(num20, num21).type = 52;
              $T00().tile.Get(num20, num21).active = true;
              $thisType.SquareTileFrame(num20, num21, true);
              if (($T00().netMode | 0) === 2) {
                $T1B().SendTileSquare(-1, num20, num21, 3);
              }
            }
          }
        } else if (!(!flag || (($thisType.spawnNPC | 0) <= 0))) {
          $thisType.SpawnNPC(num4, num5);
        }
      }
    }

    for (var num22 = 0; +num22 < (+(($T00().maxTilesX | 0) * ($T00().maxTilesY | 0)) * num2); num22 = ((num22 + 1) | 0)) {
      var num23 = ($thisType.genRand.Next(10, ((($T00().maxTilesX | 0) - 10) | 0)) | 0);
      var num24 = ($thisType.genRand.Next((((($T00().worldSurface) | 0) + 2) | 0), ((($T00().maxTilesY | 0) - 200) | 0)) | 0);
      var num25 = ((num23 - 1) | 0);
      var num26 = ((num23 + 2) | 0);
      var num27 = ((num24 - 1) | 0);
      var num28 = ((num24 + 2) | 0);
      if (num25 < 10) {
        num25 = 10;
      }
      if (num26 > ((($T00().maxTilesX | 0) - 10) | 0)) {
        num26 = ((($T00().maxTilesX | 0) - 10) | 0);
      }
      if (num27 < 10) {
        num27 = 10;
      }
      if (num28 > ((($T00().maxTilesY | 0) - 10) | 0)) {
        num28 = ((($T00().maxTilesY | 0) - 10) | 0);
      }
      if ($T00().tile.Get(num23, num24) !== null) {
        if (($T00().tile.Get(num23, num24).liquid | 0) > 32) {
          if (!(!$T00().tile.Get(num23, num24).active || ((($T00().tile.Get(num23, num24).type | 0) !== 61) && 
                (($T00().tile.Get(num23, num24).type | 0) !== 74)))) {
            $thisType.KillTile(
              num23, 
              num24, 
              false, 
              false, 
              false
            );
            if (($T00().netMode | 0) === 2) {
              $T1B().SendData(
                17, 
                -1, 
                -1, 
                "", 
                0, 
                +num23, 
                +num24, 
                0
              );
            }
          }
        } else if ($T00().tile.Get(num23, num24).active) {
          if (($T00().tile.Get(num23, num24).type | 0) === 60) {
            var type = ($T00().tile.Get(num23, num24).type | 0);
            if (!($T00().tile.Get(num23, num27).active || (($thisType.genRand.Next(10) | 0) !== 0))) {
              $thisType.PlaceTile(
                num23, 
                num27, 
                61, 
                true, 
                false, 
                -1
              );
              if (!((($T00().netMode | 0) !== 2) || !$T00().tile.Get(num23, num27).active)) {
                $T1B().SendTileSquare(-1, num23, num27, 1);
              }
            }
            var flag5 = false;

            for (var num29 = num25; num29 < num26; num29 = ((num29 + 1) | 0)) {

              for (var num30 = num27; num30 < num28; num30 = ((num30 + 1) | 0)) {
                if (!(((num23 === num29) && 
                      (num24 === num30)) || 
                    !$T00().tile.Get(num29, num30).active || (($T00().tile.Get(num29, num30).type | 0) !== 59))) {
                  $thisType.SpreadGrass(
                    num29, 
                    num30, 
                    59, 
                    type, 
                    false
                  );
                  if (($T00().tile.Get(num29, num30).type | 0) === type) {
                    $thisType.SquareTileFrame(num29, num30, true);
                    flag5 = true;
                  }
                }
              }
            }
            if (!((($T00().netMode | 0) !== 2) || !flag5)) {
              $T1B().SendTileSquare(-1, num23, num24, 3);
            }
          }
          if (!((($T00().tile.Get(num23, num24).type | 0) !== 61) || 
              (($thisType.genRand.Next(3) | 0) !== 0) || (($T00().tile.Get(num23, num24).frameX | 0) >= 144))) {
            $T00().tile.Get(num23, num24).type = 74;
            if (($T00().netMode | 0) === 2) {
              $T1B().SendTileSquare(-1, num23, num24, 3);
            }
          }
          if (!(((($T00().tile.Get(num23, num24).type | 0) !== 60) && 
                (($T00().tile.Get(num23, num24).type | 0) !== 62)) || 
              (($thisType.genRand.Next(5) | 0) !== 0) || 
              $T00().tile.Get(num23, ((num24 + 1) | 0)).active || $T00().tile.Get(num23, ((num24 + 1) | 0)).lava)) {
            var flag6 = false;

          $loop10: 
            for (var num31 = num24; num31 > ((num24 - 10) | 0); num31 = ((num31 - 1) | 0)) {
              if (!(!$T00().tile.Get(num23, num31).active || (($T00().tile.Get(num23, num31).type | 0) !== 60))) {
                flag6 = true;
                break $loop10;
              }
            }
            if (flag6) {
              var num32 = num23;
              var num33 = ((num24 + 1) | 0);
              $T00().tile.Get(num32, num33).type = 62;
              $T00().tile.Get(num32, num33).active = true;
              $thisType.SquareTileFrame(num32, num33, true);
              if (($T00().netMode | 0) === 2) {
                $T1B().SendTileSquare(-1, num32, num33, 3);
              }
            }
          }
          if (!((($T00().tile.Get(num23, num24).type | 0) !== 69) || (($thisType.genRand.Next(3) | 0) !== 0))) {
            var num34 = num23;
            var num35 = num24;
            var num36 = 0;
            if (!(!$T00().tile.Get(((num34 + 1) | 0), num35).active || (($T00().tile.Get(((num34 + 1) | 0), num35).type | 0) !== 69))) {
              num36 = ((num36 + 1) | 0);
            }
            if (!(!$T00().tile.Get(((num34 - 1) | 0), num35).active || (($T00().tile.Get(((num34 - 1) | 0), num35).type | 0) !== 69))) {
              num36 = ((num36 + 1) | 0);
            }
            if (!(!$T00().tile.Get(num34, ((num35 + 1) | 0)).active || (($T00().tile.Get(num34, ((num35 + 1) | 0)).type | 0) !== 69))) {
              num36 = ((num36 + 1) | 0);
            }
            if (!(!$T00().tile.Get(num34, ((num35 - 1) | 0)).active || (($T00().tile.Get(num34, ((num35 - 1) | 0)).type | 0) !== 69))) {
              num36 = ((num36 + 1) | 0);
            }
            if (!((num36 >= 3) && (($T00().tile.Get(num23, num24).type | 0) !== 60))) {
              var num37 = ($thisType.genRand.Next(4) | 0);
              if (num37 === 0) {
                num35 = ((num35 - 1) | 0);
              } else if (num37 === 1) {
                num35 = ((num35 + 1) | 0);
              } else if (num37 === 2) {
                num34 = ((num34 - 1) | 0);
              } else if (num37 === 3) {
                num34 = ((num34 + 1) | 0);
              }
              if (!$T00().tile.Get(num34, num35).active) {
                num36 = 0;
                if (!(!$T00().tile.Get(((num34 + 1) | 0), num35).active || (($T00().tile.Get(((num34 + 1) | 0), num35).type | 0) !== 69))) {
                  num36 = ((num36 + 1) | 0);
                }
                if (!(!$T00().tile.Get(((num34 - 1) | 0), num35).active || (($T00().tile.Get(((num34 - 1) | 0), num35).type | 0) !== 69))) {
                  num36 = ((num36 + 1) | 0);
                }
                if (!(!$T00().tile.Get(num34, ((num35 + 1) | 0)).active || (($T00().tile.Get(num34, ((num35 + 1) | 0)).type | 0) !== 69))) {
                  num36 = ((num36 + 1) | 0);
                }
                if (!(!$T00().tile.Get(num34, ((num35 - 1) | 0)).active || (($T00().tile.Get(num34, ((num35 - 1) | 0)).type | 0) !== 69))) {
                  num36 = ((num36 + 1) | 0);
                }
                if (num36 < 2) {
                  var num39 = ((num34 - 7) | 0);
                  var num40 = ((num34 + 7) | 0);
                  var num41 = ((num35 - 7) | 0);
                  var num42 = ((num35 + 7) | 0);
                  var flag7 = false;

                  for (var num43 = num39; num43 < num40; num43 = ((num43 + 1) | 0)) {

                  $loop12: 
                    for (var num44 = num41; num44 < num42; num44 = ((num44 + 1) | 0)) {
                      if (!((((Math.imul((Math.abs(((num43 - num34) | 0))), 2) + (Math.abs(((num44 - num35) | 0)))) | 0) >= 9) || 
                          !$T00().tile.Get(num43, num44).active || 
                          (($T00().tile.Get(num43, num44).type | 0) !== 60) || 
                          !$T00().tile.Get(num43, ((num44 - 1) | 0)).active || 
                          (($T00().tile.Get(num43, ((num44 - 1) | 0)).type | 0) !== 69) || (($T00().tile.Get(num43, ((num44 - 1) | 0)).liquid | 0) !== 0))) {
                        flag7 = true;
                        break $loop12;
                      }
                    }
                  }
                  if (flag7) {
                    $T00().tile.Get(num34, num35).type = 69;
                    $T00().tile.Get(num34, num35).active = true;
                    $thisType.SquareTileFrame(num34, num35, true);
                    if (($T00().netMode | 0) === 2) {
                      $T1B().SendTileSquare(-1, num34, num35, 3);
                    }
                  }
                }
              }
            }
          }
          if (($T00().tile.Get(num23, num24).type | 0) === 70) {
            var type2 = ($T00().tile.Get(num23, num24).type | 0);
            if (!($T00().tile.Get(num23, num27).active || (($thisType.genRand.Next(10) | 0) !== 0))) {
              $thisType.PlaceTile(
                num23, 
                num27, 
                71, 
                true, 
                false, 
                -1
              );
              if (!((($T00().netMode | 0) !== 2) || !$T00().tile.Get(num23, num27).active)) {
                $T1B().SendTileSquare(-1, num23, num27, 1);
              }
            }
            var flag8 = false;

            for (var num45 = num25; num45 < num26; num45 = ((num45 + 1) | 0)) {

              for (var num46 = num27; num46 < num28; num46 = ((num46 + 1) | 0)) {
                if (!(((num23 === num45) && 
                      (num24 === num46)) || 
                    !$T00().tile.Get(num45, num46).active || (($T00().tile.Get(num45, num46).type | 0) !== 59))) {
                  $thisType.SpreadGrass(
                    num45, 
                    num46, 
                    59, 
                    type2, 
                    false
                  );
                  if (($T00().tile.Get(num45, num46).type | 0) === type2) {
                    $thisType.SquareTileFrame(num45, num46, true);
                    flag8 = true;
                  }
                }
              }
            }
            if (!((($T00().netMode | 0) !== 2) || !flag8)) {
              $T1B().SendTileSquare(-1, num23, num24, 3);
            }
          }
        } else if (!(!flag || (($thisType.spawnNPC | 0) <= 0))) {
          $thisType.SpawnNPC(num23, num24);
        }
      }
    }
    if (!$T00().dayTime) {
      if (+($T00().rand.Next(8000)) < (10 * +((($T00().maxTilesX | 0) / 4200 | 0)))) {
        var num49 = ((($T00().rand.Next(((($T00().maxTilesX | 0) - 50) | 0)) | 0) + 100) | 0);
        num49 = Math.imul(num49, 16);
        var num50 = ($T00().rand.Next(((+($T00().maxTilesY) * 0.05) | 0)) | 0);
        num50 = Math.imul(num50, 16);
        (vector = vector.MemberwiseClone(), 
          $T04().prototype._ctor.call(vector, +num49, +num50));
        var num51 = +($T00().rand.Next(-100, 101));
        var num52 = +(($T00().rand.Next(200) | 0) + 100);
        var num53 = Math.fround(Math.sqrt((num51 * num51) + (num52 * num52)));
        num53 = +((+12 / num53));
        num51 *= num53;
        num52 *= num53;
        $T17().NewProjectile(
          vector.X, 
          vector.Y, 
          num51, 
          num52, 
          12, 
          1000, 
          10, 
          $T00().myPlayer
        );
      }
    }
  }; 

  function WorldGen_WallFrame (i, j, resetFrame) {
    var rectangle = new ($T24())();
    if (!(((i | 0) < 0) || 
        ((j | 0) < 0) || 
        ((i | 0) >= ($T00().maxTilesX | 0)) || 
        ((j | 0) >= ($T00().maxTilesY | 0)) || 
        ($T00().tile.Get(i, j) === null) || (($T00().tile.Get(i, j).wall | 0) <= 0))) {
      var num = -1;
      var num2 = -1;
      var num3 = -1;
      var num4 = -1;
      var num5 = -1;
      var num6 = -1;
      var num7 = -1;
      var num8 = -1;
      var wall = ($T00().tile.Get(i, j).wall | 0);
      if (wall === 0) {
        return;
      }
      var arg_89_0 = ($T00().tile.Get(i, j).wallFrameX | 0);
      var arg_9B_0 = ($T00().tile.Get(i, j).wallFrameY | 0);
      rectangle.X = -1;
      rectangle.Y = -1;
      if ((((i | 0) - 1) | 0) < 0) {
        num = wall;
        num4 = wall;
        num6 = wall;
      }
      if ((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) {
        num3 = wall;
        num5 = wall;
        num8 = wall;
      }
      if ((((j | 0) - 1) | 0) < 0) {
        num = wall;
        num2 = wall;
        num3 = wall;
      }
      if ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) {
        num6 = wall;
        num7 = wall;
        num8 = wall;
      }
      if (!(((((i | 0) - 1) | 0) < 0) || ($T00().tile.Get((((i | 0) - 1) | 0), j) === null))) {
        num4 = ($T00().tile.Get((((i | 0) - 1) | 0), j).wall | 0);
      }
      if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || ($T00().tile.Get((((i | 0) + 1) | 0), j) === null))) {
        num5 = ($T00().tile.Get((((i | 0) + 1) | 0), j).wall | 0);
      }
      if (!(((((j | 0) - 1) | 0) < 0) || ($T00().tile.Get(i, (((j | 0) - 1) | 0)) === null))) {
        num2 = ($T00().tile.Get(i, (((j | 0) - 1) | 0)).wall | 0);
      }
      if (!(((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || ($T00().tile.Get(i, (((j | 0) + 1) | 0)) === null))) {
        num7 = ($T00().tile.Get(i, (((j | 0) + 1) | 0)).wall | 0);
      }
      if (!(((((i | 0) - 1) | 0) < 0) || 
          ((((j | 0) - 1) | 0) < 0) || ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)) === null))) {
        num = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) - 1) | 0)).wall | 0);
      }
      if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
          ((((j | 0) - 1) | 0) < 0) || ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)) === null))) {
        num3 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) - 1) | 0)).wall | 0);
      }
      if (!(((((i | 0) - 1) | 0) < 0) || 
          ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)) === null))) {
        num6 = ($T00().tile.Get((((i | 0) - 1) | 0), (((j | 0) + 1) | 0)).wall | 0);
      }
      if (!(((((i | 0) + 1) | 0) >= ($T00().maxTilesX | 0)) || 
          ((((j | 0) + 1) | 0) >= ($T00().maxTilesY | 0)) || ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)) === null))) {
        num8 = ($T00().tile.Get((((i | 0) + 1) | 0), (((j | 0) + 1) | 0)).wall | 0);
      }
      if (wall === 2) {
        if ((j | 0) === (($T00().worldSurface) | 0)) {
          num7 = wall;
          num6 = wall;
          num8 = wall;
        } else if ((j | 0) >= (($T00().worldSurface) | 0)) {
          num7 = wall;
          num6 = wall;
          num8 = wall;
          num2 = wall;
          num = wall;
          num3 = wall;
          num4 = wall;
          num5 = wall;
        }
      }
      if (resetFrame) {
        var num9 = ($thisType.genRand.Next(0, 3) | 0);
        $T00().tile.Get(i, j).wallFrameNumber = (num9 & 0xFF);
      } else {
        num9 = ($T00().tile.Get(i, j).wallFrameNumber | 0);
      }
      if (!(((rectangle.X | 0) >= 0) && ((rectangle.Y | 0) >= 0))) {
        if (!((num2 !== wall) || 
            (num7 !== wall) || !((num4 === wall) & (num5 === wall)))) {
          if (!((num === wall) || (num3 === wall))) {
            if (num9 === 0) {
              rectangle.X = 108;
              rectangle.Y = 18;
            }
            if (num9 === 1) {
              rectangle.X = 126;
              rectangle.Y = 18;
            }
            if (num9 === 2) {
              rectangle.X = 144;
              rectangle.Y = 18;
            }
          } else if (!((num6 === wall) || (num8 === wall))) {
            if (num9 === 0) {
              rectangle.X = 108;
              rectangle.Y = 36;
            }
            if (num9 === 1) {
              rectangle.X = 126;
              rectangle.Y = 36;
            }
            if (num9 === 2) {
              rectangle.X = 144;
              rectangle.Y = 36;
            }
          } else if (!((num === wall) || (num6 === wall))) {
            if (num9 === 0) {
              rectangle.X = 180;
              rectangle.Y = 0;
            }
            if (num9 === 1) {
              rectangle.X = 180;
              rectangle.Y = 18;
            }
            if (num9 === 2) {
              rectangle.X = 180;
              rectangle.Y = 36;
            }
          } else if (!((num3 === wall) || (num8 === wall))) {
            if (num9 === 0) {
              rectangle.X = 198;
              rectangle.Y = 0;
            }
            if (num9 === 1) {
              rectangle.X = 198;
              rectangle.Y = 18;
            }
            if (num9 === 2) {
              rectangle.X = 198;
              rectangle.Y = 36;
            }
          } else {
            if (num9 === 0) {
              rectangle.X = 18;
              rectangle.Y = 18;
            }
            if (num9 === 1) {
              rectangle.X = 36;
              rectangle.Y = 18;
            }
            if (num9 === 2) {
              rectangle.X = 54;
              rectangle.Y = 18;
            }
          }
        } else if (!((num2 === wall) || 
            (num7 !== wall) || !((num4 === wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 18;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 36;
            rectangle.Y = 0;
          }
          if (num9 === 2) {
            rectangle.X = 54;
            rectangle.Y = 0;
          }
        } else if (!((num2 !== wall) || 
            (num7 === wall) || !((num4 === wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 18;
            rectangle.Y = 36;
          }
          if (num9 === 1) {
            rectangle.X = 36;
            rectangle.Y = 36;
          }
          if (num9 === 2) {
            rectangle.X = 54;
            rectangle.Y = 36;
          }
        } else if (!((num2 !== wall) || 
            (num7 !== wall) || !((num4 !== wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 0;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 0;
            rectangle.Y = 18;
          }
          if (num9 === 2) {
            rectangle.X = 0;
            rectangle.Y = 36;
          }
        } else if (!((num2 !== wall) || 
            (num7 !== wall) || !((num4 === wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 72;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 72;
            rectangle.Y = 18;
          }
          if (num9 === 2) {
            rectangle.X = 72;
            rectangle.Y = 36;
          }
        } else if (!((num2 === wall) || 
            (num7 !== wall) || !((num4 !== wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 0;
            rectangle.Y = 54;
          }
          if (num9 === 1) {
            rectangle.X = 36;
            rectangle.Y = 54;
          }
          if (num9 === 2) {
            rectangle.X = 72;
            rectangle.Y = 54;
          }
        } else if (!((num2 === wall) || 
            (num7 !== wall) || !((num4 === wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 18;
            rectangle.Y = 54;
          }
          if (num9 === 1) {
            rectangle.X = 54;
            rectangle.Y = 54;
          }
          if (num9 === 2) {
            rectangle.X = 90;
            rectangle.Y = 54;
          }
        } else if (!((num2 !== wall) || 
            (num7 === wall) || !((num4 !== wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 0;
            rectangle.Y = 72;
          }
          if (num9 === 1) {
            rectangle.X = 36;
            rectangle.Y = 72;
          }
          if (num9 === 2) {
            rectangle.X = 72;
            rectangle.Y = 72;
          }
        } else if (!((num2 !== wall) || 
            (num7 === wall) || !((num4 === wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 18;
            rectangle.Y = 72;
          }
          if (num9 === 1) {
            rectangle.X = 54;
            rectangle.Y = 72;
          }
          if (num9 === 2) {
            rectangle.X = 90;
            rectangle.Y = 72;
          }
        } else if (!((num2 !== wall) || 
            (num7 !== wall) || !((num4 !== wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 90;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 90;
            rectangle.Y = 18;
          }
          if (num9 === 2) {
            rectangle.X = 90;
            rectangle.Y = 36;
          }
        } else if (!((num2 === wall) || 
            (num7 === wall) || !((num4 === wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 108;
            rectangle.Y = 72;
          }
          if (num9 === 1) {
            rectangle.X = 126;
            rectangle.Y = 72;
          }
          if (num9 === 2) {
            rectangle.X = 144;
            rectangle.Y = 72;
          }
        } else if (!((num2 === wall) || 
            (num7 !== wall) || !((num4 !== wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 108;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 126;
            rectangle.Y = 0;
          }
          if (num9 === 2) {
            rectangle.X = 144;
            rectangle.Y = 0;
          }
        } else if (!((num2 !== wall) || 
            (num7 === wall) || !((num4 !== wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 108;
            rectangle.Y = 54;
          }
          if (num9 === 1) {
            rectangle.X = 126;
            rectangle.Y = 54;
          }
          if (num9 === 2) {
            rectangle.X = 144;
            rectangle.Y = 54;
          }
        } else if (!((num2 === wall) || 
            (num7 === wall) || !((num4 !== wall) & (num5 === wall)))) {
          if (num9 === 0) {
            rectangle.X = 162;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 162;
            rectangle.Y = 18;
          }
          if (num9 === 2) {
            rectangle.X = 162;
            rectangle.Y = 36;
          }
        } else if (!((num2 === wall) || 
            (num7 === wall) || !((num4 === wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 216;
            rectangle.Y = 0;
          }
          if (num9 === 1) {
            rectangle.X = 216;
            rectangle.Y = 18;
          }
          if (num9 === 2) {
            rectangle.X = 216;
            rectangle.Y = 36;
          }
        } else if (!((num2 === wall) || 
            (num7 === wall) || !((num4 !== wall) & (num5 !== wall)))) {
          if (num9 === 0) {
            rectangle.X = 162;
            rectangle.Y = 54;
          }
          if (num9 === 1) {
            rectangle.X = 180;
            rectangle.Y = 54;
          }
          if (num9 === 2) {
            rectangle.X = 198;
            rectangle.Y = 54;
          }
        }
      }
      if (!(((rectangle.X | 0) > -1) && ((rectangle.Y | 0) > -1))) {
        if (num9 <= 0) {
          rectangle.X = 18;
          rectangle.Y = 18;
        }
        if (num9 === 1) {
          rectangle.X = 36;
          rectangle.Y = 18;
        }
        if (num9 >= 2) {
          rectangle.X = 54;
          rectangle.Y = 18;
        }
      }
      $T00().tile.Get(i, j).wallFrameX = (rectangle.X & 0xFF);
      $T00().tile.Get(i, j).wallFrameY = (rectangle.Y & 0xFF);
    }
  }; 

  function WorldGen_WaterCheck () {
    $T13().numLiquid = 0;
    $T14().numLiquidBuffer = 0;

    for (var i = 1; i < ((($T00().maxTilesX | 0) - 1) | 0); i = ((i + 1) | 0)) {

      for (var j = ((($T00().maxTilesY | 0) - 2) | 0); j > 0; j = ((j - 1) | 0)) {
        $T00().tile.Get(i, j).checkingLiquid = false;
        if (!((($T00().tile.Get(i, j).liquid | 0) <= 0) || 
            !$T00().tile.Get(i, j).active || 
            !$T00().tileSolid[$T00().tile.Get(i, j).type] || $T00().tileSolidTop[$T00().tile.Get(i, j).type])) {
          $T00().tile.Get(i, j).liquid = 0;
        } else if (($T00().tile.Get(i, j).liquid | 0) > 0) {
          if ($T00().tile.Get(i, j).active) {
            if ($T00().tileWaterDeath[$T00().tile.Get(i, j).type]) {
              $thisType.KillTile(
                i, 
                j, 
                false, 
                false, 
                false
              );
            }
            if (!(!$T00().tile.Get(i, j).lava || !$T00().tileLavaDeath[$T00().tile.Get(i, j).type])) {
              $thisType.KillTile(
                i, 
                j, 
                false, 
                false, 
                false
              );
            }
          }
          if (!(($T00().tile.Get(i, ((j + 1) | 0)).active && 
                $T00().tileSolid[$T00().tile.Get(i, ((j + 1) | 0)).type] && 
                !$T00().tileSolidTop[$T00().tile.Get(i, ((j + 1) | 0)).type]) || (($T00().tile.Get(i, ((j + 1) | 0)).liquid | 0) >= 255))) {
            if (($T00().tile.Get(i, ((j + 1) | 0)).liquid | 0) > 250) {
              $T00().tile.Get(i, ((j + 1) | 0)).liquid = 255;
            } else {
              $T13().AddWater(i, j);
            }
          }
          if (!(($T00().tile.Get(((i - 1) | 0), j).active && 
                $T00().tileSolid[$T00().tile.Get(((i - 1) | 0), j).type] && 
                !$T00().tileSolidTop[$T00().tile.Get(((i - 1) | 0), j).type]) || (($T00().tile.Get(((i - 1) | 0), j).liquid | 0) === ($T00().tile.Get(i, j).liquid | 0)))) {
            $T13().AddWater(i, j);
          } else if (!(($T00().tile.Get(((i + 1) | 0), j).active && 
                $T00().tileSolid[$T00().tile.Get(((i + 1) | 0), j).type] && 
                !$T00().tileSolidTop[$T00().tile.Get(((i + 1) | 0), j).type]) || (($T00().tile.Get(((i + 1) | 0), j).liquid | 0) === ($T00().tile.Get(i, j).liquid | 0)))) {
            $T13().AddWater(i, j);
          }
          if ($T00().tile.Get(i, j).lava) {
            if (!((($T00().tile.Get(((i - 1) | 0), j).liquid | 0) <= 0) || $T00().tile.Get(((i - 1) | 0), j).lava)) {
              $T13().AddWater(i, j);
            } else if (!((($T00().tile.Get(((i + 1) | 0), j).liquid | 0) <= 0) || $T00().tile.Get(((i + 1) | 0), j).lava)) {
              $T13().AddWater(i, j);
            } else if (!((($T00().tile.Get(i, ((j - 1) | 0)).liquid | 0) <= 0) || $T00().tile.Get(i, ((j - 1) | 0)).lava)) {
              $T13().AddWater(i, j);
            } else if (!((($T00().tile.Get(i, ((j + 1) | 0)).liquid | 0) <= 0) || $T00().tile.Get(i, ((j + 1) | 0)).lava)) {
              $T13().AddWater(i, j);
            }
          }
        }
      }
    }
  }; 

  function WorldGen_worldGenCallBack (threadContext) {
    $T00().PlaySound(10, -1, -1, 1);
    $thisType.clearWorld();
    $thisType.generateWorld(-1);
    $thisType.saveWorld(true);
    $T00().LoadWorlds();
    if (($T00().menuMode | 0) === 10) {
      $T00().menuMode = 6;
    }
    $T00().PlaySound(10, -1, -1, 1);
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.WorldGen", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WorldGen__ctor
    );

    $.Method({Static:true , Public:true }, "AddBuriedChest", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_AddBuriedChest
    );

    $.Method({Static:true , Public:true }, "AddHellHouses", 
      JSIL.MethodSignature.Void, 
      WorldGen_AddHellHouses
    );

    $.Method({Static:true , Public:true }, "AddLifeCrystal", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      WorldGen_AddLifeCrystal
    );

    $.Method({Static:true , Public:true }, "AddPlants", 
      JSIL.MethodSignature.Void, 
      WorldGen_AddPlants
    );

    $.Method({Static:true , Public:true }, "AddShadowOrb", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_AddShadowOrb
    );

    $.Method({Static:true , Public:true }, "AddTrees", 
      JSIL.MethodSignature.Void, 
      WorldGen_AddTrees
    );

    $.Method({Static:true , Public:true }, "CaveOpenater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_CaveOpenater
    );

    $.Method({Static:true , Public:true }, "Cavinator", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Cavinator
    );

    $.Method({Static:true , Public:true }, "ChasmRunner", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Boolean
        ]), 
      WorldGen_ChasmRunner
    );

    $.Method({Static:true , Public:true }, "Check1x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Byte
        ]), 
      WorldGen_Check1x2
    );

    $.Method({Static:true , Public:true }, "Check1x2Top", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Byte
        ]), 
      WorldGen_Check1x2Top
    );

    $.Method({Static:true , Public:true }, "Check2x1", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Byte
        ]), 
      WorldGen_Check2x1
    );

    $.Method({Static:true , Public:true }, "Check3x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Check3x2
    );

    $.Method({Static:true , Public:true }, "Check3x3", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Check3x3
    );

    $.Method({Static:true , Public:true }, "Check4x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Check4x2
    );

    $.Method({Static:true , Public:true }, "CheckChest", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_CheckChest
    );

    $.Method({Static:true , Public:true }, "CheckOnTable1x1", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_CheckOnTable1x1
    );

    $.Method({Static:true , Public:true }, "CheckPot", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_CheckPot
    );

    $.Method({Static:true , Public:true }, "CheckRoom", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_CheckRoom
    );

    $.Method({Static:true , Public:true }, "CheckSign", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_CheckSign
    );

    $.Method({Static:true , Public:true }, "CheckSunflower", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_CheckSunflower
    );

    $.Method({Static:true , Public:true }, "clearWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_clearWorld
    );

    $.Method({Static:true , Public:true }, "CloseDoor", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_CloseDoor
    );

    $.Method({Static:true , Public:true }, "CreateNewWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_CreateNewWorld
    );

    $.Method({Static:true , Public:true }, "dropMeteor", 
      JSIL.MethodSignature.Void, 
      WorldGen_dropMeteor
    );

    $.Method({Static:true , Public:true }, "DungeonEnt", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_DungeonEnt
    );

    $.Method({Static:true , Public:true }, "DungeonHalls", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_DungeonHalls
    );

    $.Method({Static:true , Public:true }, "DungeonRoom", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_DungeonRoom
    );

    $.Method({Static:true , Public:true }, "DungeonStairs", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_DungeonStairs
    );

    $.Method({Static:true , Public:true }, "EmptyTileCheck", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_EmptyTileCheck
    );

    $.Method({Static:true , Public:true }, "EveryTileFrame", 
      JSIL.MethodSignature.Void, 
      WorldGen_EveryTileFrame
    );

    $.Method({Static:true , Public:true }, "FloatingIsland", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_FloatingIsland
    );

    $.Method({Static:true , Public:true }, "generateWorld", 
      JSIL.MethodSignature.Action($.Int32), 
      WorldGen_generateWorld
    );

    $.Method({Static:true , Public:true }, "GrowEpicTree", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_GrowEpicTree
    );

    $.Method({Static:true , Public:true }, "GrowShroom", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_GrowShroom
    );

    $.Method({Static:true , Public:true }, "GrowTree", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_GrowTree
    );

    $.Method({Static:true , Public:true }, "HellHouse", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_HellHouse
    );

    $.Method({Static:true , Public:true }, "HellRoom", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_HellRoom
    );

    $.Method({Static:true , Public:true }, "IslandHouse", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_IslandHouse
    );

    $.Method({Static:true , Public:true }, "KillTile", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean, $.Boolean, 
          $.Boolean
        ]), 
      WorldGen_KillTile
    );

    $.Method({Static:true , Public:true }, "KillWall", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_KillWall
    );

    $.Method({Static:true , Public:true }, "Lakinater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_Lakinater
    );

    $.Method({Static:true , Public:true }, "loadWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_loadWorld
    );

    $.Method({Static:true , Public:true }, "MakeDungeon", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_MakeDungeon
    );

    $.Method({Static:true , Public:true }, "meteor", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      WorldGen_meteor
    );

    $.Method({Static:true , Public:true }, "Mountinater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_Mountinater
    );

    $.Method({Static:true , Public:true }, "OpenDoor", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_OpenDoor
    );

    $.Method({Static:true , Public:true }, "Place1x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Place1x2
    );

    $.Method({Static:true , Public:true }, "Place1x2Top", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Place1x2Top
    );

    $.Method({Static:true , Public:true }, "Place2x1", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Place2x1
    );

    $.Method({Static:true , Public:true }, "Place3x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Place3x2
    );

    $.Method({Static:true , Public:true }, "Place3x3", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_Place3x3
    );

    $.Method({Static:true , Public:true }, "Place4x2", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_Place4x2
    );

    $.Method({Static:true , Public:true }, "PlaceChest", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlaceChest
    );

    $.Method({Static:true , Public:true }, "PlaceDoor", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlaceDoor
    );

    $.Method({Static:true , Public:true }, "PlaceOnTable1x1", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlaceOnTable1x1
    );

    $.Method({Static:true , Public:true }, "PlacePot", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlacePot
    );

    $.Method({Static:true , Public:true }, "PlaceSign", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlaceSign
    );

    $.Method({Static:true , Public:true }, "PlaceSunflower", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      WorldGen_PlaceSunflower
    );

    $.Method({Static:true , Public:true }, "PlaceTile", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Boolean, 
          $.Boolean, $.Int32
        ]), 
      WorldGen_PlaceTile
    );

    $.Method({Static:true , Public:true }, "PlaceWall", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Boolean
        ]), 
      WorldGen_PlaceWall
    );

    $.Method({Static:true , Public:true }, "PlantCheck", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_PlantCheck
    );

    $.Method({Static:true , Public:true }, "PlayerLOS", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      WorldGen_PlayerLOS
    );

    $.Method({Static:true , Public:true }, "playWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_playWorld
    );

    $.Method({Static:true , Public:true }, "playWorldCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_playWorldCallBack
    );

    $.Method({Static:true , Public:true }, "QuickFindHome", 
      JSIL.MethodSignature.Action($.Int32), 
      WorldGen_QuickFindHome
    );

    $.Method({Static:true , Public:true }, "RangeFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_RangeFrame
    );

    $.Method({Static:true , Public:true }, "RoomNeeds", 
      new JSIL.MethodSignature($.Boolean, [$.Int32]), 
      WorldGen_RoomNeeds
    );

    $.Method({Static:true , Public:true }, "saveAndPlay", 
      JSIL.MethodSignature.Void, 
      WorldGen_saveAndPlay
    );

    $.Method({Static:true , Public:true }, "saveAndPlayCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_saveAndPlayCallBack
    );

    $.Method({Static:true , Public:true }, "SaveAndQuit", 
      JSIL.MethodSignature.Void, 
      WorldGen_SaveAndQuit
    );

    $.Method({Static:true , Public:true }, "SaveAndQuitCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_SaveAndQuitCallBack
    );

    $.Method({Static:true , Public:true }, "saveToonWhilePlaying", 
      JSIL.MethodSignature.Void, 
      WorldGen_saveToonWhilePlaying
    );

    $.Method({Static:true , Public:true }, "saveToonWhilePlayingCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_saveToonWhilePlayingCallBack
    );

    $.Method({Static:true , Public:true }, "saveWorld", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorldGen_saveWorld
    );

    $.Method({Static:true , Public:true }, "ScoreRoom", 
      JSIL.MethodSignature.Action($.Int32), 
      WorldGen_ScoreRoom
    );

    $.Method({Static:true , Public:true }, "SectionTileFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      WorldGen_SectionTileFrame
    );

    $.Method({Static:true , Public:true }, "serverLoadWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_serverLoadWorld
    );

    $.Method({Static:true , Public:true }, "serverLoadWorldCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_serverLoadWorldCallBack
    );

    $.Method({Static:true , Public:true }, "setWorldSize", 
      JSIL.MethodSignature.Void, 
      WorldGen_setWorldSize
    );

    $.Method({Static:true , Public:true }, "ShroomPatch", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_ShroomPatch
    );

    $.Method({Static:true , Public:true }, "SpawnNPC", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      WorldGen_SpawnNPC
    );

    $.Method({Static:true , Public:true }, "SpreadGrass", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_SpreadGrass
    );

    $.Method({Static:true , Public:true }, "SquareTileFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_SquareTileFrame
    );

    $.Method({Static:true , Public:true }, "SquareWallFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_SquareWallFrame
    );

    $.Method({Static:true , Public:true }, "StartRoomCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      WorldGen_StartRoomCheck
    );

    $.Method({Static:true , Public:true }, "TileFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean, $.Boolean
        ]), 
      WorldGen_TileFrame
    );

    $.Method({Static:true , Public:true }, "TileRunner", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Double, $.Int32, 
          $.Int32, $.Boolean, 
          $.Single, $.Single, 
          $.Boolean, $.Boolean
        ]), 
      WorldGen_TileRunner
    );

    $.Method({Static:true , Public:true }, "UpdateWorld", 
      JSIL.MethodSignature.Void, 
      WorldGen_UpdateWorld
    );

    $.Method({Static:true , Public:true }, "WallFrame", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      WorldGen_WallFrame
    );

    $.Method({Static:true , Public:true }, "WaterCheck", 
      JSIL.MethodSignature.Void, 
      WorldGen_WaterCheck
    );

    $.Method({Static:true , Public:true }, "worldGenCallBack", 
      JSIL.MethodSignature.Action($.Object), 
      WorldGen_worldGenCallBack
    );

    $.Field({Static:true , Public:true }, "lavaLine", $.Int32);

    $.Field({Static:true , Public:true }, "waterLine", $.Int32);

    $.Field({Static:true , Public:true }, "spawnEye", $.Boolean, false);

    $.Field({Static:true , Public:true }, "gen", $.Boolean, false);

    $.Field({Static:true , Public:true }, "shadowOrbSmashed", $.Boolean, false);

    $.Field({Static:true , Public:true }, "shadowOrbCount", $.Int32, 0);

    $.Field({Static:true , Public:true }, "spawnMeteor", $.Boolean, false);

    $.Field({Static:true , Public:true }, "loadFailed", $.Boolean, false);

    $.Field({Static:true , Public:true }, "worldCleared", $.Boolean, false);

    $.Field({Static:true , Public:false}, "lastMaxTilesX", $.Int32, 0);

    $.Field({Static:true , Public:false}, "lastMaxTilesY", $.Int32, 0);

    $.Field({Static:true , Public:true }, "saveLock", $.Boolean, false);

    $.Field({Static:true , Public:false}, "mergeUp", $.Boolean, false);

    $.Field({Static:true , Public:false}, "mergeDown", $.Boolean, false);

    $.Field({Static:true , Public:false}, "mergeLeft", $.Boolean, false);

    $.Field({Static:true , Public:false}, "mergeRight", $.Boolean, false);

    $.Field({Static:true , Public:false}, "tempMoonPhase", $.Int32, function ($pi) {
        return $asm0F.Terraria.Main.moonPhase;
      });

    $.Field({Static:true , Public:false}, "tempDayTime", $.Boolean, function ($pi) {
        return $asm0F.Terraria.Main.dayTime;
      });

    $.Field({Static:true , Public:false}, "tempBloodMoon", $.Boolean, function ($pi) {
        return $asm0F.Terraria.Main.bloodMoon;
      });

    $.Field({Static:true , Public:false}, "tempTime", $.Double, function ($pi) {
        return $asm0F.Terraria.Main.time;
      });

    $.Field({Static:true , Public:false}, "stopDrops", $.Boolean, false);

    $.Field({Static:true , Public:true }, "noLiquidCheck", $.Boolean, false);

    $.Field({Static:true , Public:true }, "genRand", $asm06.TypeRef("System.Random"))
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute"));

    $.Field({Static:true , Public:true }, "statusText", $.String, "");

    $.Field({Static:true , Public:false}, "destroyObject", $.Boolean, false);

    $.Field({Static:true , Public:true }, "spawnDelay", $.Int32, 0);

    $.Field({Static:true , Public:true }, "spawnNPC", $.Int32, 0);

    $.Field({Static:true , Public:true }, "maxRoomTiles", $.Int32, 1900);

    $.Field({Static:true , Public:true }, "numRoomTiles", $.Int32);

    $.Field({Static:true , Public:true }, "roomX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxRoomTiles);
      });

    $.Field({Static:true , Public:true }, "roomY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxRoomTiles);
      });

    $.Field({Static:true , Public:true }, "roomX1", $.Int32);

    $.Field({Static:true , Public:true }, "roomX2", $.Int32);

    $.Field({Static:true , Public:true }, "roomY1", $.Int32);

    $.Field({Static:true , Public:true }, "roomY2", $.Int32);

    $.Field({Static:true , Public:true }, "canSpawn", $.Boolean);

    $.Field({Static:true , Public:true }, "houseTile", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, 80);
      });

    $.Field({Static:true , Public:true }, "bestX", $.Int32, 0);

    $.Field({Static:true , Public:true }, "bestY", $.Int32, 0);

    $.Field({Static:true , Public:true }, "hiScore", $.Int32, 0);

    $.Field({Static:true , Public:true }, "dungeonX", $.Int32);

    $.Field({Static:true , Public:true }, "dungeonY", $.Int32);

    $.Field({Static:true , Public:true }, "lastDungeonHall", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:true , Public:true }, "maxDRooms", $.Int32, 100);

    $.Field({Static:true , Public:true }, "numDRooms", $.Int32, 0);

    $.Field({Static:true , Public:true }, "dRoomX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:true }, "dRoomY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:true }, "dRoomSize", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "dRoomTreasure", $jsilcore.TypeRef("System.Array", [$.Boolean]), function ($pi) {
        return JSIL.Array.New($asm06.System.Boolean, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "dRoomL", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "dRoomR", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "dRoomT", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "dRoomB", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxDRooms);
      });

    $.Field({Static:true , Public:false}, "numDDoors", $.Int32);

    $.Field({Static:true , Public:false}, "DDoorX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "DDoorY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "DDoorPos", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "numDPlats", $.Int32);

    $.Field({Static:true , Public:false}, "DPlatX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "DPlatY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "JChestX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 100);
      });

    $.Field({Static:true , Public:false}, "JChestY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 100);
      });

    $.Field({Static:true , Public:false}, "numJChests", $.Int32, 0);

    $.Field({Static:true , Public:true }, "dEnteranceX", $.Int32, 0);

    $.Field({Static:true , Public:true }, "dSurface", $.Boolean, false);

    $.Field({Static:true , Public:false}, "dxStrength1", $.Double);

    $.Field({Static:true , Public:false}, "dyStrength1", $.Double);

    $.Field({Static:true , Public:false}, "dxStrength2", $.Double);

    $.Field({Static:true , Public:false}, "dyStrength2", $.Double);

    $.Field({Static:true , Public:false}, "dMinX", $.Int32);

    $.Field({Static:true , Public:false}, "dMaxX", $.Int32);

    $.Field({Static:true , Public:false}, "dMinY", $.Int32);

    $.Field({Static:true , Public:false}, "dMaxY", $.Int32);

    $.Field({Static:true , Public:false}, "numIslandHouses", $.Int32, 0);

    $.Field({Static:true , Public:false}, "houseCount", $.Int32, 0);

    $.Field({Static:true , Public:false}, "fihX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "fihY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "numMCaves", $.Int32, 0);

    $.Field({Static:true , Public:false}, "mCaveX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });

    $.Field({Static:true , Public:false}, "mCaveY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 300);
      });


    function WorldGen__cctor () {
      $thisType.lastDungeonHall = new $asm00.Microsoft.Xna.Framework.Vector2();
      $thisType.spawnEye = false;
      $thisType.gen = false;
      $thisType.shadowOrbSmashed = false;
      $thisType.shadowOrbCount = 0;
      $thisType.spawnMeteor = false;
      $thisType.loadFailed = false;
      $thisType.worldCleared = false;
      $thisType.lastMaxTilesX = 0;
      $thisType.lastMaxTilesY = 0;
      $thisType.saveLock = false;
      $thisType.mergeUp = false;
      $thisType.mergeDown = false;
      $thisType.mergeLeft = false;
      $thisType.mergeRight = false;
      $thisType.tempMoonPhase = ($T00().moonPhase | 0);
      $thisType.tempDayTime = $T00().dayTime;
      $thisType.tempBloodMoon = $T00().bloodMoon;
      $thisType.tempTime = +$T00().time;
      $thisType.stopDrops = false;
      $thisType.noLiquidCheck = false;
      $thisType.genRand = $S00().Construct();
      $thisType.statusText = "";
      $thisType.destroyObject = false;
      $thisType.spawnDelay = 0;
      $thisType.spawnNPC = 0;
      $thisType.maxRoomTiles = 1900;
      $thisType.roomX = JSIL.Array.New($T02(), $thisType.maxRoomTiles);
      $thisType.roomY = JSIL.Array.New($T02(), $thisType.maxRoomTiles);
      $thisType.houseTile = JSIL.Array.New($T03(), 80);
      $thisType.bestX = 0;
      $thisType.bestY = 0;
      $thisType.hiScore = 0;
      $thisType.lastDungeonHall = new ($T04())();
      $thisType.maxDRooms = 100;
      $thisType.numDRooms = 0;
      $thisType.dRoomX = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomY = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomSize = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomTreasure = JSIL.Array.New($T03(), $thisType.maxDRooms);
      $thisType.dRoomL = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomR = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomT = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.dRoomB = JSIL.Array.New($T02(), $thisType.maxDRooms);
      $thisType.DDoorX = JSIL.Array.New($T02(), 300);
      $thisType.DDoorY = JSIL.Array.New($T02(), 300);
      $thisType.DDoorPos = JSIL.Array.New($T02(), 300);
      $thisType.DPlatX = JSIL.Array.New($T02(), 300);
      $thisType.DPlatY = JSIL.Array.New($T02(), 300);
      $thisType.JChestX = JSIL.Array.New($T02(), 100);
      $thisType.JChestY = JSIL.Array.New($T02(), 100);
      $thisType.numJChests = 0;
      $thisType.dEnteranceX = 0;
      $thisType.dSurface = false;
      $thisType.numIslandHouses = 0;
      $thisType.houseCount = 0;
      $thisType.fihX = JSIL.Array.New($T02(), 300);
      $thisType.fihY = JSIL.Array.New($T02(), 300);
      $thisType.numMCaves = 0;
      $thisType.mCaveX = JSIL.Array.New($T02(), 300);
      $thisType.mCaveY = JSIL.Array.New($T02(), 300);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WorldGen__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Sign */ 

(function Sign$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };


  function Sign__ctor () {
  }; 

  function Sign_KillSign (x, y) {

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(($T01().sign[i] === null) || 
          (($T01().sign[i].x | 0) !== (x | 0)) || (($T01().sign[i].y | 0) !== (y | 0)))) {
        $T01().sign[i] = null;
      }
    }
  }; 

  function Sign_ReadSign (i, j) {
    var k = (((($T01().tile.Get(i, j).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);
    var num = (((($T01().tile.Get(i, j).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);

    while (k > 1) {
      k = ((k - 2) | 0);
    }
    var num2 = (((i | 0) - k) | 0);
    var num3 = (((j | 0) - num) | 0);
    if (($T01().tile.Get(num2, num3).type | 0) !== 55) {
      $thisType.KillSign(num2, num3);
      return -1;
    }
    var num4 = -1;

  $loop1: 
    for (var l = 0; l < 1000; l = ((l + 1) | 0)) {
      if (!(($T01().sign[l] === null) || 
          (($T01().sign[l].x | 0) !== num2) || (($T01().sign[l].y | 0) !== num3))) {
        num4 = l;
        break $loop1;
      }
    }
    if (num4 < 0) {

    $loop2: 
      for (var m = 0; m < 1000; m = ((m + 1) | 0)) {
        if ($T01().sign[m] === null) {
          num4 = m;
          $T01().sign[m] = new $thisType();
          $T01().sign[m].x = num2;
          $T01().sign[m].y = num3;
          $T01().sign[m].text = "";
          break $loop2;
        }
      }
    }
    return num4;
  }; 

  function Sign_TextSign (i, text) {
    if (!(($T01().tile.Get($T01().sign[i].x, $T01().sign[i].y) !== null) && 
        $T01().tile.Get($T01().sign[i].x, $T01().sign[i].y).active && (($T01().tile.Get($T01().sign[i].x, $T01().sign[i].y).type | 0) === 55))) {
      $T01().sign[i] = null;
      return;
    }
    $T01().sign[i].text = text;
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Sign", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Sign__ctor
    );

    $.Method({Static:true , Public:true }, "KillSign", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Sign_KillSign
    );

    $.Method({Static:true , Public:true }, "ReadSign", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32]), 
      Sign_ReadSign
    );

    $.Method({Static:true , Public:true }, "TextSign", 
      new JSIL.MethodSignature(null, [$.Int32, $.String]), 
      Sign_TextSign
    );

    $.Constant({Static:true , Public:true }, "maxSigns", $.Int32, 1000);

    $.Field({Static:false, Public:true }, "x", $.Int32);

    $.Field({Static:false, Public:true }, "y", $.Int32);

    $.Field({Static:false, Public:true }, "text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.LiquidBuffer */ 

(function LiquidBuffer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };


  function LiquidBuffer__ctor () {
  }; 

  function LiquidBuffer_AddBuffer (x, y) {
    if (($thisType.numLiquidBuffer | 0) === 9999) {
      return;
    }
    if ($T02().tile.Get(x, y).checkingLiquid) {
      return;
    }
    $T02().tile.Get(x, y).checkingLiquid = true;
    $T02().liquidBuffer[$thisType.numLiquidBuffer].x = (x | 0);
    $T02().liquidBuffer[$thisType.numLiquidBuffer].y = (y | 0);
    $thisType.numLiquidBuffer = ((($thisType.numLiquidBuffer | 0) + 1) | 0);
  }; 

  function LiquidBuffer_DelBuffer (l) {
    $thisType.numLiquidBuffer = ((($thisType.numLiquidBuffer | 0) - 1) | 0);
    $T02().liquidBuffer[l].x = ($T02().liquidBuffer[$thisType.numLiquidBuffer].x | 0);
    $T02().liquidBuffer[l].y = ($T02().liquidBuffer[$thisType.numLiquidBuffer].y | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.LiquidBuffer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LiquidBuffer__ctor
    );

    $.Method({Static:true , Public:true }, "AddBuffer", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      LiquidBuffer_AddBuffer
    );

    $.Method({Static:true , Public:true }, "DelBuffer", 
      JSIL.MethodSignature.Action($.Int32), 
      LiquidBuffer_DelBuffer
    );

    $.Constant({Static:true , Public:true }, "maxLiquidBuffer", $.Int32, 10000);

    $.Field({Static:true , Public:true }, "numLiquidBuffer", $.Int32);

    $.Field({Static:false, Public:true }, "x", $.Int32);

    $.Field({Static:false, Public:true }, "y", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Liquid */ 

(function Liquid$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.LiquidBuffer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm06.System.Boolean, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };


  function Liquid__ctor () {
  }; 

  function Liquid_AddWater (x, y) {
    if ($T02().tile.Get(x, y).checkingLiquid) {
      return;
    }
    if (!(((x | 0) < ((($T02().maxTilesX | 0) - 5) | 0)) && ((y | 0) < ((($T02().maxTilesY | 0) - 5) | 0)))) {
      return;
    }
    if (!(((x | 0) >= 5) && ((y | 0) >= 5))) {
      return;
    }
    if ($T02().tile.Get(x, y) === null) {
      return;
    }
    if (($T02().tile.Get(x, y).liquid | 0) === 0) {
      return;
    }
    if (($thisType.numLiquid | 0) >= ((($thisType.maxLiquid | 0) - 1) | 0)) {
      $T05().AddBuffer(x, y);
      return;
    }
    $T02().tile.Get(x, y).checkingLiquid = true;
    $T02().liquid[$thisType.numLiquid].kill = 0;
    $T02().liquid[$thisType.numLiquid].x = (x | 0);
    $T02().liquid[$thisType.numLiquid].y = (y | 0);
    $T02().liquid[$thisType.numLiquid].delay = 0;
    $T02().tile.Get(x, y).skipLiquid = false;
    $thisType.numLiquid = ((($thisType.numLiquid | 0) + 1) | 0);
    if (($T02().netMode | 0) === 2) {
      $T06().sendWater(x, y);
    }
    if (!(!$T02().tile.Get(x, y).active || (!$T02().tileWaterDeath[$T02().tile.Get(x, y).type] && 
          (!$T02().tile.Get(x, y).lava || 
            !$T02().tileLavaDeath[$T02().tile.Get(x, y).type])))) {
      if ($T07().gen) {
        $T02().tile.Get(x, y).active = false;
        return;
      }
      $T07().KillTile(
        x, 
        y, 
        false, 
        false, 
        false
      );
      if (($T02().netMode | 0) === 2) {
        $T06().SendData(
          17, 
          -1, 
          -1, 
          "", 
          0, 
          +x, 
          +y, 
          0
        );
      }
    }
  }; 

  function Liquid_DelWater (l) {
    var num = ($T02().liquid[l].x | 0);
    var num2 = ($T02().liquid[l].y | 0);
    if (($T02().tile.Get(num, num2).liquid | 0) < 2) {
      $T02().tile.Get(num, num2).liquid = 0;
    } else if (($T02().tile.Get(num, num2).liquid | 0) < 20) {
      if (!(!((($T02().tile.Get(((num - 1) | 0), num2).liquid | 0) < ($T02().tile.Get(num, num2).liquid | 0)) && 
            (!$T02().tile.Get(((num - 1) | 0), num2).active || 
              !$T02().tileSolid[$T02().tile.Get(((num - 1) | 0), num2).type] || 
              $T02().tileSolidTop[$T02().tile.Get(((num - 1) | 0), num2).type])) && 
          !((($T02().tile.Get(((num + 1) | 0), num2).liquid | 0) < ($T02().tile.Get(num, num2).liquid | 0)) && 
            (!$T02().tile.Get(((num + 1) | 0), num2).active || 
              !$T02().tileSolid[$T02().tile.Get(((num + 1) | 0), num2).type] || 
              $T02().tileSolidTop[$T02().tile.Get(((num + 1) | 0), num2).type])) && ((($T02().tile.Get(num, ((num2 + 1) | 0)).liquid | 0) >= 255) || 
            ($T02().tile.Get(num, ((num2 + 1) | 0)).active && 
              $T02().tileSolid[$T02().tile.Get(num, ((num2 + 1) | 0)).type] && 
              !$T02().tileSolidTop[$T02().tile.Get(num, ((num2 + 1) | 0)).type])))) {
        $T02().tile.Get(num, num2).liquid = 0;
      }
    } else if (!((($T02().tile.Get(num, ((num2 + 1) | 0)).liquid | 0) >= 255) || 
        ($T02().tile.Get(num, ((num2 + 1) | 0)).active && 
          $T02().tileSolid[$T02().tile.Get(num, ((num2 + 1) | 0)).type] && 
          !$T02().tileSolidTop[$T02().tile.Get(num, ((num2 + 1) | 0)).type]) || $thisType.stuck)) {
      $T02().liquid[l].kill = 0;
      return;
    }
    if (($T02().tile.Get(num, num2).liquid | 0) === 0) {
      $T02().tile.Get(num, num2).lava = false;
    } else if ($T02().tile.Get(num, num2).lava) {
      $thisType.LavaCheck(num, num2);
    }
    if (($T02().netMode | 0) === 2) {
      $T06().sendWater(num, num2);
    }
    $thisType.numLiquid = ((($thisType.numLiquid | 0) - 1) | 0);
    $T02().tile.Get($T02().liquid[l].x, $T02().liquid[l].y).checkingLiquid = false;
    $T02().liquid[l].x = ($T02().liquid[$thisType.numLiquid].x | 0);
    $T02().liquid[l].y = ($T02().liquid[$thisType.numLiquid].y | 0);
    $T02().liquid[l].kill = ($T02().liquid[$thisType.numLiquid].kill | 0);
  }; 

  function Liquid_LavaCheck (x, y) {
    if (!(!((($T02().tile.Get((((x | 0) - 1) | 0), y).liquid | 0) > 0) && 
          !$T02().tile.Get((((x | 0) - 1) | 0), y).lava) && 
        !((($T02().tile.Get((((x | 0) + 1) | 0), y).liquid | 0) > 0) && 
          !$T02().tile.Get((((x | 0) + 1) | 0), y).lava) && ((($T02().tile.Get(x, (((y | 0) - 1) | 0)).liquid | 0) <= 0) || 
          $T02().tile.Get(x, (((y | 0) - 1) | 0)).lava))) {
      var num = 0;
      if (!$T02().tile.Get((((x | 0) - 1) | 0), y).lava) {
        num = ((num + ($T02().tile.Get((((x | 0) - 1) | 0), y).liquid | 0)) | 0);
        $T02().tile.Get((((x | 0) - 1) | 0), y).liquid = 0;
      }
      if (!$T02().tile.Get((((x | 0) + 1) | 0), y).lava) {
        num = ((num + ($T02().tile.Get((((x | 0) + 1) | 0), y).liquid | 0)) | 0);
        $T02().tile.Get((((x | 0) + 1) | 0), y).liquid = 0;
      }
      if (!$T02().tile.Get(x, (((y | 0) - 1) | 0)).lava) {
        num = ((num + ($T02().tile.Get(x, (((y | 0) - 1) | 0)).liquid | 0)) | 0);
        $T02().tile.Get(x, (((y | 0) - 1) | 0)).liquid = 0;
      }
      if (num >= 128) {
        $T02().tile.Get(x, y).liquid = 0;
        $T02().tile.Get(x, y).lava = false;
        $T07().PlaceTile(
          x, 
          y, 
          56, 
          true, 
          true, 
          -1
        );
        $T07().SquareTileFrame(x, y, true);
        if (($T02().netMode | 0) === 2) {
          $T06().SendTileSquare(-1, (((x | 0) - 1) | 0), (((y | 0) - 1) | 0), 3);
          return;
        }
      }
    } else if (!((($T02().tile.Get(x, (((y | 0) + 1) | 0)).liquid | 0) <= 0) || $T02().tile.Get(x, (((y | 0) + 1) | 0)).lava)) {
      $T02().tile.Get(x, y).liquid = 0;
      $T02().tile.Get(x, y).lava = false;
      $T07().PlaceTile(
        x, 
        (((y | 0) + 1) | 0), 
        56, 
        true, 
        true, 
        -1
      );
      $T07().SquareTileFrame(x, y, true);
      if (($T02().netMode | 0) === 2) {
        $T06().SendTileSquare(-1, (((x | 0) - 1) | 0), y, 3);
      }
    }
  }; 

  function Liquid_NetAddWater (x, y) {
    if (!(((x | 0) < ((($T02().maxTilesX | 0) - 5) | 0)) && ((y | 0) < ((($T02().maxTilesY | 0) - 5) | 0)))) {
      return;
    }
    if (!(((x | 0) >= 5) && ((y | 0) >= 5))) {
      return;
    }
    if ($T02().tile.Get(x, y) === null) {
      return;
    }
    if (($T02().tile.Get(x, y).liquid | 0) === 0) {
      return;
    }

    for (var i = 0; i < ($thisType.numLiquid | 0); i = ((i + 1) | 0)) {
      if (!((($T02().liquid[i].x | 0) !== (x | 0)) || (($T02().liquid[i].y | 0) !== (y | 0)))) {
        $T02().liquid[i].kill = 0;
        $T02().tile.Get(x, y).skipLiquid = true;
        return;
      }
    }
    if (($thisType.numLiquid | 0) >= ((($thisType.maxLiquid | 0) - 1) | 0)) {
      $T05().AddBuffer(x, y);
      return;
    }
    $T02().tile.Get(x, y).checkingLiquid = true;
    $T02().tile.Get(x, y).skipLiquid = true;
    $T02().liquid[$thisType.numLiquid].kill = 0;
    $T02().liquid[$thisType.numLiquid].x = (x | 0);
    $T02().liquid[$thisType.numLiquid].y = (y | 0);
    $thisType.numLiquid = ((($thisType.numLiquid | 0) + 1) | 0);
    if (($T02().netMode | 0) === 2) {
      $T06().sendWater(x, y);
    }
    if (!(!$T02().tile.Get(x, y).active || (!$T02().tileWaterDeath[$T02().tile.Get(x, y).type] && 
          (!$T02().tile.Get(x, y).lava || 
            !$T02().tileLavaDeath[$T02().tile.Get(x, y).type])))) {
      $T07().KillTile(
        x, 
        y, 
        false, 
        false, 
        false
      );
      if (($T02().netMode | 0) === 2) {
        $T06().SendData(
          17, 
          -1, 
          -1, 
          "", 
          0, 
          +x, 
          +y, 
          0
        );
      }
    }
  }; 

  function Liquid_QuickWater (verbose, minY, maxY) {
    var num = 0;
    if ((minY | 0) === -1) {
      minY = 3;
    }
    if ((maxY | 0) === -1) {
      maxY = ((($T02().maxTilesY | 0) - 3) | 0);
    }

    for (var i = (maxY | 0); i >= (minY | 0); i = ((i - 1) | 0)) {
      if ((verbose | 0) > 0) {
        var num2 = +((+((maxY | 0) - i) / +((((maxY | 0) - (minY | 0)) | 0) + 1)));
        num2 = +((num2 / +verbose));
        $T02().statusText = (JSIL.ConcatString("Settling liquids: ", $T00().$Box((((num2 * 100) + 1) | 0)), "%"));
      } else if ((verbose | 0) < 0) {
        var num3 = +((+((maxY | 0) - i) / +((((maxY | 0) - (minY | 0)) | 0) + 1)));
        num3 = +((num3 / +(-+verbose)));
        $T02().statusText = (JSIL.ConcatString("Creating underworld: ", $T00().$Box((((num3 * 100) + 1) | 0)), "%"));
      }

      for (var j = 0; j < 2; j = ((j + 1) | 0)) {
        var num4 = 2;
        var num5 = ((($T02().maxTilesX | 0) - 2) | 0);
        var num6 = 1;
        if (j === 1) {
          num4 = ((($T02().maxTilesX | 0) - 2) | 0);
          num5 = 2;
          num6 = -1;
        }

        for (var num7 = num4; num7 !== num5; num7 = ((num7 + num6) | 0)) {
          if (($T02().tile.Get(num7, i).liquid | 0) > 0) {
            var num8 = (-num6 | 0);
            var flag = false;
            var num9 = num7;
            var num10 = i;
            var flag2 = $T02().tile.Get(num7, i).lava;
            var b = ($T02().tile.Get(num7, i).liquid | 0);
            $T02().tile.Get(num7, i).liquid = 0;
            var flag3 = true;
            var num11 = 0;

          $loop3: 
            while (flag3 && 
              (num9 > 3) && 
              (num9 < ((($T02().maxTilesX | 0) - 3) | 0)) && (num10 < ((($T02().maxTilesY | 0) - 3) | 0))) {
              flag3 = false;

              while ((($T02().tile.Get(num9, ((num10 + 1) | 0)).liquid | 0) === 0) && 
                (num10 < ((($T02().maxTilesY | 0) - 5) | 0)) && (!$T02().tile.Get(num9, ((num10 + 1) | 0)).active || 
                  !$T02().tileSolid[$T02().tile.Get(num9, ((num10 + 1) | 0)).type] || 
                  $T02().tileSolidTop[$T02().tile.Get(num9, ((num10 + 1) | 0)).type])) {
                flag = true;
                num8 = num6;
                num11 = 0;
                flag3 = true;
                num10 = ((num10 + 1) | 0);
                if (num10 > ($T07().waterLine | 0)) {
                  flag2 = true;
                }
              }
              if (!((($T02().tile.Get(num9, ((num10 + 1) | 0)).liquid | 0) <= 0) || 
                  (($T02().tile.Get(num9, ((num10 + 1) | 0)).liquid | 0) >= 255) || ($T02().tile.Get(num9, ((num10 + 1) | 0)).lava !== flag2))) {
                var num12 = ((255 - ($T02().tile.Get(num9, ((num10 + 1) | 0)).liquid | 0)) & 0xFF);
                if (num12 > b) {
                  num12 = b;
                }
                var expr_25A = $T02().tile.Get(num9, ((num10 + 1) | 0));
                expr_25A.liquid = (((expr_25A.liquid | 0) + (num12 & 0xFF)) & 0xFF);
                b = ((b - (num12 & 0xFF)) & 0xFF);
                if (b <= 0) {
                  num = ((num + 1) | 0);
                  break $loop3;
                }
              }
              if (num11 === 0) {
                if (!((($T02().tile.Get(((num9 + num8) | 0), num10).liquid | 0) !== 0) || ($T02().tile.Get(((num9 + num8) | 0), num10).active && 
                      $T02().tileSolid[$T02().tile.Get(((num9 + num8) | 0), num10).type] && 
                      !$T02().tileSolidTop[$T02().tile.Get(((num9 + num8) | 0), num10).type]))) {
                  num11 = num8;
                } else if (!((($T02().tile.Get(((num9 - num8) | 0), num10).liquid | 0) !== 0) || ($T02().tile.Get(((num9 - num8) | 0), num10).active && 
                      $T02().tileSolid[$T02().tile.Get(((num9 - num8) | 0), num10).type] && 
                      !$T02().tileSolidTop[$T02().tile.Get(((num9 - num8) | 0), num10).type]))) {
                  num11 = (-num8 | 0);
                }
              }
              if (!((num11 === 0) || 
                  (($T02().tile.Get(((num9 + num11) | 0), num10).liquid | 0) !== 0) || ($T02().tile.Get(((num9 + num11) | 0), num10).active && 
                    $T02().tileSolid[$T02().tile.Get(((num9 + num11) | 0), num10).type] && 
                    !$T02().tileSolidTop[$T02().tile.Get(((num9 + num11) | 0), num10).type]))) {
                flag3 = true;
                num9 = ((num9 + num11) | 0);
              }
              if (!(!flag || flag3)) {
                flag = false;
                flag3 = true;
                num8 = (-num6 | 0);
                num11 = 0;
              }
            }
            if (!((num7 === num9) || (i === num10))) {
              num = ((num + 1) | 0);
            }
            $T02().tile.Get(num9, num10).liquid = b;
            $T02().tile.Get(num9, num10).lava = flag2;
            if (!((($T02().tile.Get(((num9 - 1) | 0), num10).liquid | 0) <= 0) || ($T02().tile.Get(((num9 - 1) | 0), num10).lava === flag2))) {
              if (flag2) {
                $thisType.LavaCheck(num9, num10);
              } else {
                $thisType.LavaCheck(((num9 - 1) | 0), num10);
              }
            } else if (!((($T02().tile.Get(((num9 + 1) | 0), num10).liquid | 0) <= 0) || ($T02().tile.Get(((num9 + 1) | 0), num10).lava === flag2))) {
              if (flag2) {
                $thisType.LavaCheck(num9, num10);
              } else {
                $thisType.LavaCheck(((num9 + 1) | 0), num10);
              }
            } else if (!((($T02().tile.Get(num9, ((num10 - 1) | 0)).liquid | 0) <= 0) || ($T02().tile.Get(num9, ((num10 - 1) | 0)).lava === flag2))) {
              if (flag2) {
                $thisType.LavaCheck(num9, num10);
              } else {
                $thisType.LavaCheck(num9, ((num10 - 1) | 0));
              }
            } else if (!((($T02().tile.Get(num9, ((num10 + 1) | 0)).liquid | 0) <= 0) || ($T02().tile.Get(num9, ((num10 + 1) | 0)).lava === flag2))) {
              if (flag2) {
                $thisType.LavaCheck(num9, num10);
              } else {
                $thisType.LavaCheck(num9, ((num10 + 1) | 0));
              }
            }
          }
        }
      }
    }
    return +num;
  }; 

  function Liquid_Update () {
    if (!(!$T02().tile.Get(this.x, this.y).active || 
        !$T02().tileSolid[$T02().tile.Get(this.x, this.y).type] || $T02().tileSolidTop[$T02().tile.Get(this.x, this.y).type])) {
      if (($T02().tile.Get(this.x, this.y).type | 0) !== 10) {
        $T02().tile.Get(this.x, this.y).liquid = 0;
      }
      this.kill = 9;
      return;
    }
    var liquid = ($T02().tile.Get(this.x, this.y).liquid | 0);
    if (($T02().tile.Get(this.x, this.y).liquid | 0) === 0) {
      this.kill = 9;
      return;
    }
    if ($T02().tile.Get(this.x, this.y).lava) {
      $thisType.LavaCheck(this.x, this.y);
      if (!$thisType.quickFall) {
        if ((this.delay | 0) < 5) {
          this.delay = (((this.delay | 0) + 1) | 0);
          return;
        }
        this.delay = 0;
      }
    } else {
      if ($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava) {
        $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
      }
      if ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava) {
        $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
      }
      if ($T02().tile.Get(this.x, (((this.y | 0) - 1) | 0)).lava) {
        $thisType.AddWater(this.x, (((this.y | 0) - 1) | 0));
      }
      if ($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).lava) {
        $thisType.AddWater(this.x, (((this.y | 0) + 1) | 0));
      }
    }
    if (!(($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).active && 
          $T02().tileSolid[$T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).type] && 
          !$T02().tileSolidTop[$T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).type]) || 
        ((($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).liquid | 0) > 0) && 
          ($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).lava !== $T02().tile.Get(this.x, this.y).lava)) || (($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).liquid | 0) >= 255))) {
      var num = +(255 - ($T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).liquid | 0));
      if (num > +($T02().tile.Get(this.x, this.y).liquid)) {
        num = +($T02().tile.Get(this.x, this.y).liquid);
      }
      var expr_37D = $T02().tile.Get(this.x, this.y);
      expr_37D.liquid = (((expr_37D.liquid | 0) - ((num) | 0)) & 0xFF);
      var expr_3A4 = $T02().tile.Get(this.x, (((this.y | 0) + 1) | 0));
      expr_3A4.liquid = (((expr_3A4.liquid | 0) + ((num) | 0)) & 0xFF);
      $T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).lava = $T02().tile.Get(this.x, this.y).lava;
      $thisType.AddWater(this.x, (((this.y | 0) + 1) | 0));
      $T02().tile.Get(this.x, (((this.y | 0) + 1) | 0)).skipLiquid = true;
      $T02().tile.Get(this.x, this.y).skipLiquid = true;
      if (($T02().tile.Get(this.x, this.y).liquid | 0) > 250) {
        $T02().tile.Get(this.x, this.y).liquid = 255;
      } else {
        $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
        $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
      }
    }
    if (($T02().tile.Get(this.x, this.y).liquid | 0) > 0) {
      var flag = true;
      var flag2 = true;
      var flag3 = true;
      var flag4 = true;
      if (!(!$T02().tile.Get((((this.x | 0) - 1) | 0), this.y).active || 
          !$T02().tileSolid[$T02().tile.Get((((this.x | 0) - 1) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) - 1) | 0), this.y).type])) {
        flag = false;
      } else if (!((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) <= 0) || ($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava === $T02().tile.Get(this.x, this.y).lava))) {
        flag = false;
      } else if (!(!$T02().tile.Get((((this.x | 0) - 2) | 0), this.y).active || 
          !$T02().tileSolid[$T02().tile.Get((((this.x | 0) - 2) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) - 2) | 0), this.y).type])) {
        flag3 = false;
      } else if (($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) === 0) {
        flag3 = false;
      } else if (!((($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) <= 0) || ($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).lava === $T02().tile.Get(this.x, this.y).lava))) {
        flag3 = false;
      }
      if (!(!$T02().tile.Get((((this.x | 0) + 1) | 0), this.y).active || 
          !$T02().tileSolid[$T02().tile.Get((((this.x | 0) + 1) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) + 1) | 0), this.y).type])) {
        flag2 = false;
      } else if (!((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) <= 0) || ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava === $T02().tile.Get(this.x, this.y).lava))) {
        flag2 = false;
      } else if (!(!$T02().tile.Get((((this.x | 0) + 2) | 0), this.y).active || 
          !$T02().tileSolid[$T02().tile.Get((((this.x | 0) + 2) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) + 2) | 0), this.y).type])) {
        flag4 = false;
      } else if (($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) === 0) {
        flag4 = false;
      } else if (!((($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) <= 0) || ($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).lava === $T02().tile.Get(this.x, this.y).lava))) {
        flag4 = false;
      }
      var num2 = 0;
      if (($T02().tile.Get(this.x, this.y).liquid | 0) < 3) {
        num2 = -1;
      }
      if (!(!flag || !flag2)) {
        if (!(!flag3 || !flag4)) {
          var flag5 = true;
          var flag6 = true;
          if (!(!$T02().tile.Get((((this.x | 0) - 3) | 0), this.y).active || 
              !$T02().tileSolid[$T02().tile.Get((((this.x | 0) - 3) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) - 3) | 0), this.y).type])) {
            flag5 = false;
          } else if (($T02().tile.Get((((this.x | 0) - 3) | 0), this.y).liquid | 0) === 0) {
            flag5 = false;
          } else if ($T02().tile.Get((((this.x | 0) - 3) | 0), this.y).lava !== $T02().tile.Get(this.x, this.y).lava) {
            flag5 = false;
          }
          if (!(!$T02().tile.Get((((this.x | 0) + 3) | 0), this.y).active || 
              !$T02().tileSolid[$T02().tile.Get((((this.x | 0) + 3) | 0), this.y).type] || $T02().tileSolidTop[$T02().tile.Get((((this.x | 0) + 3) | 0), this.y).type])) {
            flag6 = false;
          } else if (($T02().tile.Get((((this.x | 0) + 3) | 0), this.y).liquid | 0) === 0) {
            flag6 = false;
          } else if ($T02().tile.Get((((this.x | 0) + 3) | 0), this.y).lava !== $T02().tile.Get(this.x, this.y).lava) {
            flag6 = false;
          }
          if (!(!flag5 || !flag6)) {
            num = +(((((((((((((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) - 3) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) + 3) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
            num = Math.fround(Math.round(+(num / 7)));
            var num3 = 0;
            if (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
              $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
              $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) - 2) | 0), this.y);
              $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) + 2) | 0), this.y);
              $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) - 3) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) - 3) | 0), this.y);
              $T02().tile.Get((((this.x | 0) - 3) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) - 3) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) + 3) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) + 3) | 0), this.y);
              $T02().tile.Get((((this.x | 0) + 3) | 0), this.y).liquid = ((num) | 0);
            } else {
              num3 = ((num3 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) + 3) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (!((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) - 2) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) + 2) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) - 3) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) - 3) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) + 3) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) + 3) | 0), this.y);
            }
            if (!((num3 === 6) && (($T02().tile.Get(this.x, (((this.y | 0) - 1) | 0)).liquid | 0) > 0))) {
              $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
            }
          } else {
            var num4 = 0;
            num = +(((((((((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
            num = Math.fround(Math.round(+(num / 5)));
            if (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
              $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
            } else {
              num4 = ((num4 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
              $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
            } else {
              num4 = ((num4 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) - 2) | 0), this.y);
              $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid = ((num) | 0);
            } else {
              num4 = ((num4 + 1) | 0);
            }
            $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) !== ((num) | 0)) {
              $thisType.AddWater((((this.x | 0) + 2) | 0), this.y);
              $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid = ((num) | 0);
            } else {
              num4 = ((num4 + 1) | 0);
            }
            if (!((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) - 2) | 0), this.y);
            }
            if (!((($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
              $thisType.AddWater((((this.x | 0) + 2) | 0), this.y);
            }
            $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
            if (!((num4 === 4) && (($T02().tile.Get(this.x, (((this.y | 0) - 1) | 0)).liquid | 0) > 0))) {
              $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
            }
          }
        } else if (flag3) {
          num = +(((((((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
          num = Math.fround(Math.round((+(num / 4) + 0.001)));
          if (!((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
            $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
          }
          $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          if (!((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
            $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
          }
          $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          if (!((($T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).liquid = ((num) | 0);
            $thisType.AddWater((((this.x | 0) - 2) | 0), this.y);
          }
          $T02().tile.Get((((this.x | 0) - 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
        } else if (flag4) {
          num = +(((((((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
          num = Math.fround(Math.round((+(num / 4) + 0.001)));
          if (!((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
            $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
          }
          $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          if (!((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
            $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
          }
          $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          if (!((($T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)))) {
            $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).liquid = ((num) | 0);
            $thisType.AddWater((((this.x | 0) + 2) | 0), this.y);
          }
          $T02().tile.Get((((this.x | 0) + 2) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
        } else {
          num = +(((((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0)) & 0xFF) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
          num = Math.fround(Math.round((+(num / 3) + 0.001)));
          if (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
            $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
          }
          if (!((($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
          }
          $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          if (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
            $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
          }
          if (!((($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)))) {
            $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
          }
          $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
          $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
        }
      } else if (flag) {
        num = +(((($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
        num = Math.fround(Math.round((+(num / 2) + 0.001)));
        if (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
          $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid = ((num) | 0);
        }
        if (!((($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get((((this.x | 0) - 1) | 0), this.y).liquid | 0) === ((num) | 0)))) {
          $thisType.AddWater((((this.x | 0) - 1) | 0), this.y);
        }
        $T02().tile.Get((((this.x | 0) - 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
        $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
      } else if (flag2) {
        num = +(((($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) + ($T02().tile.Get(this.x, this.y).liquid | 0)) & 0xFF) + num2);
        num = Math.fround(Math.round((+(num / 2) + 0.001)));
        if (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) !== ((num) | 0)) {
          $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid = ((num) | 0);
        }
        if (!((($T02().tile.Get(this.x, this.y).liquid | 0) === ((num) | 0)) && (($T02().tile.Get((((this.x | 0) + 1) | 0), this.y).liquid | 0) === ((num) | 0)))) {
          $thisType.AddWater((((this.x | 0) + 1) | 0), this.y);
        }
        $T02().tile.Get((((this.x | 0) + 1) | 0), this.y).lava = $T02().tile.Get(this.x, this.y).lava;
        $T02().tile.Get(this.x, this.y).liquid = ((num) | 0);
      }
    }
    if (($T02().tile.Get(this.x, this.y).liquid | 0) === liquid) {
      this.kill = (((this.kill | 0) + 1) | 0);
      return;
    }
    if (!((($T02().tile.Get(this.x, this.y).liquid | 0) !== 254) || (liquid !== 255))) {
      $T02().tile.Get(this.x, this.y).liquid = 255;
      this.kill = (((this.kill | 0) + 1) | 0);
      return;
    }
    $thisType.AddWater(this.x, (((this.y | 0) - 1) | 0));
    this.kill = 0;
  }; 

  function Liquid_UpdateLiquid () {
    if (($T02().netMode | 0) === 2) {
      $thisType.cycles = 25;
      $thisType.maxLiquid = 5000;
    }
    if (!$T07().gen) {
      if (!$thisType.panicMode) {
        if (((($thisType.numLiquid | 0) + ($T05().numLiquidBuffer | 0)) | 0) > 4000) {
          $thisType.panicCounter = ((($thisType.panicCounter | 0) + 1) | 0);
          if (!((($thisType.panicCounter | 0) <= 1800) && (((($thisType.numLiquid | 0) + ($T05().numLiquidBuffer | 0)) | 0) <= 13500))) {
            $T07().waterLine = ($T02().maxTilesY | 0);
            $thisType.numLiquid = 0;
            $T05().numLiquidBuffer = 0;
            $thisType.panicCounter = 0;
            $thisType.panicMode = true;
            $thisType.panicY = ((($T02().maxTilesY | 0) - 3) | 0);
          }
        } else {
          $thisType.panicCounter = 0;
        }
      }
      if ($thisType.panicMode) {

        for (var num = 0; (($thisType.panicY | 0) >= 3) && (num < 5); ) {
          num = ((num + 1) | 0);
          $thisType.QuickWater(0, $thisType.panicY, $thisType.panicY);
          $thisType.panicY = ((($thisType.panicY | 0) - 1) | 0);
          if (($thisType.panicY | 0) < 3) {
            $thisType.panicCounter = 0;
            $thisType.panicMode = false;
            $T07().WaterCheck();
            if (($T02().netMode | 0) === 2) {

              for (var i = 0; i < 8; i = ((i + 1) | 0)) {

                for (var j = 0; j < ($T02().maxSectionsX | 0); j = ((j + 1) | 0)) {

                  for (var k = 0; k < ($T02().maxSectionsY | 0); k = ((k + 1) | 0)) {
                    ($T0E().serverSock[i].tileSection).Set(j, k, false);
                  }
                }
              }
            }
          }
        }
        return;
      }
    }
    if (!(!$thisType.quickSettle && (($thisType.numLiquid | 0) <= 2000))) {
      $thisType.quickFall = true;
    } else {
      $thisType.quickFall = false;
    }
    $thisType.wetCounter = ((($thisType.wetCounter | 0) + 1) | 0);
    var num3 = Math.imul(((($thisType.maxLiquid | 0) / ($thisType.cycles | 0)) | 0), ((($thisType.wetCounter | 0) - 1) | 0));
    var num4 = Math.imul(((($thisType.maxLiquid | 0) / ($thisType.cycles | 0)) | 0), $thisType.wetCounter);
    if (($thisType.wetCounter | 0) === ($thisType.cycles | 0)) {
      num4 = ($thisType.numLiquid | 0);
    }
    if (num4 > ($thisType.numLiquid | 0)) {
      num4 = ($thisType.numLiquid | 0);
      var arg_1B7_0 = ($T02().netMode | 0);
      $thisType.wetCounter = ($thisType.cycles | 0);
    }
    if ($thisType.quickFall) {

      for (var l = num3; l < num4; l = ((l + 1) | 0)) {
        $T02().liquid[l].delay = 10;
        ($T02().liquid[l]).Update();
        $T02().tile.Get($T02().liquid[l].x, $T02().liquid[l].y).skipLiquid = false;
      }
    } else {

      for (var m = num3; m < num4; m = ((m + 1) | 0)) {
        if (!$T02().tile.Get($T02().liquid[m].x, $T02().liquid[m].y).skipLiquid) {
          ($T02().liquid[m]).Update();
        } else {
          $T02().tile.Get($T02().liquid[m].x, $T02().liquid[m].y).skipLiquid = false;
        }
      }
    }
    if (($thisType.wetCounter | 0) >= ($thisType.cycles | 0)) {
      $thisType.wetCounter = 0;

      for (var n = ((($thisType.numLiquid | 0) - 1) | 0); n >= 0; n = ((n - 1) | 0)) {
        if (($T02().liquid[n].kill | 0) > 3) {
          $thisType.DelWater(n);
        }
      }
      var num5 = ((($thisType.maxLiquid | 0) - ((($thisType.maxLiquid | 0) - ($thisType.numLiquid | 0)) | 0)) | 0);
      if (num5 > ($T05().numLiquidBuffer | 0)) {
        num5 = ($T05().numLiquidBuffer | 0);
      }

      for (var num6 = 0; num6 < num5; num6 = ((num6 + 1) | 0)) {
        $T02().tile.Get($T02().liquidBuffer[0].x, $T02().liquidBuffer[0].y).checkingLiquid = false;
        $thisType.AddWater($T02().liquidBuffer[0].x, $T02().liquidBuffer[0].y);
        $T05().DelBuffer(0);
      }
      if (!((($thisType.numLiquid | 0) <= 0) || 
          (($thisType.numLiquid | 0) <= ((($thisType.stuckAmount | 0) - 50) | 0)) || (($thisType.numLiquid | 0) >= ((($thisType.stuckAmount | 0) + 50) | 0)))) {
        $thisType.stuckCount = ((($thisType.stuckCount | 0) + 1) | 0);
        if (($thisType.stuckCount | 0) >= 10000) {
          $thisType.stuck = true;

          for (var num7 = ((($thisType.numLiquid | 0) - 1) | 0); num7 >= 0; num7 = ((num7 - 1) | 0)) {
            $thisType.DelWater(num7);
          }
          $thisType.stuck = false;
          $thisType.stuckCount = 0;
          return;
        }
      } else {
        $thisType.stuckCount = 0;
        $thisType.stuckAmount = ($thisType.numLiquid | 0);
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Liquid", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Liquid__ctor
    );

    $.Method({Static:true , Public:true }, "AddWater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Liquid_AddWater
    );

    $.Method({Static:true , Public:true }, "DelWater", 
      JSIL.MethodSignature.Action($.Int32), 
      Liquid_DelWater
    );

    $.Method({Static:true , Public:true }, "LavaCheck", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Liquid_LavaCheck
    );

    $.Method({Static:true , Public:true }, "NetAddWater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Liquid_NetAddWater
    );

    $.Method({Static:true , Public:true }, "QuickWater", 
      new JSIL.MethodSignature($.Double, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      Liquid_QuickWater
    );

    $.Method({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Void, 
      Liquid_Update
    );

    $.Method({Static:true , Public:true }, "UpdateLiquid", 
      JSIL.MethodSignature.Void, 
      Liquid_UpdateLiquid
    );

    $.Field({Static:true , Public:true }, "skipCount", $.Int32, 0);

    $.Field({Static:true , Public:true }, "stuckCount", $.Int32, 0);

    $.Field({Static:true , Public:true }, "stuckAmount", $.Int32, 0);

    $.Field({Static:true , Public:true }, "cycles", $.Int32, 10);

    $.Field({Static:true , Public:true }, "resLiquid", $.Int32, 5000);

    $.Field({Static:true , Public:true }, "maxLiquid", $.Int32, 5000);

    $.Field({Static:true , Public:true }, "numLiquid", $.Int32);

    $.Field({Static:true , Public:true }, "stuck", $.Boolean, false);

    $.Field({Static:true , Public:true }, "quickFall", $.Boolean, false);

    $.Field({Static:true , Public:true }, "quickSettle", $.Boolean, false);

    $.Field({Static:true , Public:false}, "wetCounter", $.Int32);

    $.Field({Static:true , Public:true }, "panicCounter", $.Int32, 0);

    $.Field({Static:true , Public:true }, "panicMode", $.Boolean, false);

    $.Field({Static:true , Public:true }, "panicY", $.Int32, 0);

    $.Field({Static:false, Public:true }, "x", $.Int32);

    $.Field({Static:false, Public:true }, "y", $.Int32);

    $.Field({Static:false, Public:true }, "kill", $.Int32);

    $.Field({Static:false, Public:true }, "delay", $.Int32);


    function Liquid__cctor () {
      $thisType.skipCount = 0;
      $thisType.stuckCount = 0;
      $thisType.stuckAmount = 0;
      $thisType.cycles = 10;
      $thisType.resLiquid = 5000;
      $thisType.maxLiquid = 5000;
      $thisType.stuck = false;
      $thisType.quickFall = false;
      $thisType.quickSettle = false;
      $thisType.panicCounter = 0;
      $thisType.panicMode = false;
      $thisType.panicY = 0;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Liquid__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Lighting */ 

(function Lighting$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize(System.Array.Of($asm06.System.Single, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };


  function Lighting__ctor () {
  }; 

  function Lighting_addLight (i, j, Lightness) {
    if (($thisType.tempLightCount | 0) === ($thisType.maxTempLights | 0)) {
      return;
    }
    if (!(((((((i | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0) < 0) || 
        ((((((i | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0) >= ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) || 
        ((((((j | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0) < 0) || ((((((j | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0) >= ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {

      for (var k = 0; k < ($thisType.tempLightCount | 0); k = ((k + 1) | 0)) {
        if (!((($thisType.tempLightX[k] | 0) !== (i | 0)) || 
            (($thisType.tempLightY[k] | 0) !== (j | 0)) || (+Lightness > +$thisType.tempLight[k]))) {
          return;
        }
      }
      $thisType.tempLightX[$thisType.tempLightCount] = (i | 0);
      $thisType.tempLightY[$thisType.tempLightCount] = (j | 0);
      $thisType.tempLight[$thisType.tempLightCount] = +Lightness;
      $thisType.tempLightCount = ((($thisType.tempLightCount | 0) + 1) | 0);
    }
  }; 

  function Lighting_Brightness (x, y) {
    var num = (((((x | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0);
    var num2 = (((((y | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0);
    if (!((num >= 0) && 
        (num2 >= 0) && 
        (num < ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) && (num2 < ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {
      return 0;
    }
    return $thisType.color.Get(num, num2);
  }; 

  function Lighting_GetBlackness (x, y) {
    var num = (((((x | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0);
    var num2 = (((((y | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0);
    if (!((num >= 0) && 
        (num2 >= 0) && 
        (num < ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) && (num2 < ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {
      return $T04().get_Black();
    }
    var result = $S00().Construct(0, 0, 0, ((255 - (255 * +$thisType.color.Get(num, num2))) | 0));
    return result;
  }; 

  function Lighting_GetColor$00 (x, y, oldColor) {
    var num = (((((x | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0);
    var num2 = (((((y | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0);
    if ($T01().gameMenu) {
      return oldColor;
    }
    if (!((num >= 0) && 
        (num2 >= 0) && 
        (num < ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) && (num2 < ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {
      return $T04().get_Black();
    }
    var white = $T04().get_White().MemberwiseClone();
    white.set_R(((+(oldColor.get_R()) * +$thisType.color.Get(num, num2)) | 0));
    white.set_G(((+(oldColor.get_G()) * +$thisType.color.Get(num, num2)) | 0));
    white.set_B(((+(oldColor.get_B()) * +$thisType.color.Get(num, num2)) | 0));
    return white;
  }; 

  function Lighting_GetColor$01 (x, y) {
    var num = (((((x | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0);
    var num2 = (((((y | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0);
    if (!((num >= 0) && 
        (num2 >= 0) && 
        (num < ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) && (num2 < ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {
      return $T04().get_Black();
    }
    var result = $S00().Construct(((255 * +$thisType.color.Get(num, num2)) | 0), ((255 * +$thisType.color.Get(num, num2)) | 0), ((255 * +$thisType.color.Get(num, num2)) | 0), 255);
    return result;
  }; 

  function Lighting_LightColor (i, j, $exception) {
    var num = (((i | 0) - ($thisType.firstToLightX | 0)) | 0);
    var num2 = (((j | 0) - ($thisType.firstToLightY | 0)) | 0);
    try {
      if (+$thisType.color.Get(num, num2) > +$thisType.lightColor) {
        $thisType.lightColor = +$thisType.color.Get(num, num2);
      } else {
        if (+$thisType.lightColor === 0) {
          return;
        }
        $thisType.color.Set(num, num2, $thisType.lightColor);
      }
      var num3 = 0.04;
      if (!(!$T01().tile.Get(i, j).active || !$T01().tileBlockLight[$T01().tile.Get(i, j).type])) {
        num3 = 0.16;
      }
      var num4 = +$thisType.lightColor - num3;
      if (num4 < 0) {
        $thisType.lightColor = 0;
      } else {
        $thisType.lightColor = +$thisType.lightColor - num3;
        if (!((+$thisType.lightColor <= 0) || 
            ($T01().tile.Get(i, j).active && 
              $T01().tileSolid[$T01().tile.Get(i, j).type]) || (+j >= +$T01().worldSurface))) {
          $T01().tile.Get(i, j).lighted = true;
        }
      }
    } catch ($exception) {
    }
  }; 

  function Lighting_LightingX (lightX) {
    if ((lightX | 0) < 0) {
      return 0;
    }
    if ((lightX | 0) >= ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) {
      return ((((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0) - 1) | 0);
    }
    return lightX;
  }; 

  function Lighting_LightingY (lightY) {
    if ((lightY | 0) < 0) {
      return 0;
    }
    if ((lightY | 0) >= ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)) {
      return ((((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0) - 1) | 0);
    }
    return lightY;
  }; 

  function Lighting_LightTiles (firstX, lastX, firstY, lastY) {
    $thisType.firstTileX = (firstX | 0);
    $thisType.lastTileX = (lastX | 0);
    $thisType.firstTileY = (firstY | 0);
    $thisType.lastTileY = (lastY | 0);
    $thisType.lightCounter = ((($thisType.lightCounter | 0) + 1) | 0);
    if (($thisType.lightCounter | 0) > ($thisType.lightSkip | 0)) {
      $thisType.lightCounter = 0;
      $thisType.firstToLightX = ((($thisType.firstTileX | 0) - 21) | 0);
      $thisType.firstToLightY = ((($thisType.firstTileY | 0) - 21) | 0);
      $thisType.lastToLightX = ((($thisType.lastTileX | 0) + 21) | 0);
      $thisType.lastToLightY = ((($thisType.lastTileY | 0) + 21) | 0);

      for (var i = 0; i < ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0); i = ((i + 1) | 0)) {

        for (var j = 0; j < ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0); j = ((j + 1) | 0)) {
          $thisType.color.Set(i, j, 0);
        }
      }

      for (var k = 0; k < ($thisType.tempLightCount | 0); k = ((k + 1) | 0)) {
        if (!((((((($thisType.tempLightX[k] | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0) < 0) || 
            (((((($thisType.tempLightX[k] | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0) >= ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0)) || 
            (((((($thisType.tempLightY[k] | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0) < 0) || (((((($thisType.tempLightY[k] | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0) >= ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)))) {
          $thisType.color.Set(((((($thisType.tempLightX[k] | 0) - ($thisType.firstTileX | 0)) | 0) + 21) | 0), ((((($thisType.tempLightY[k] | 0) - ($thisType.firstTileY | 0)) | 0) + 21) | 0), $thisType.tempLight[k]);
        }
      }
      $thisType.tempLightCount = 0;
      $T01().evilTiles = 0;
      $T01().meteorTiles = 0;
      $T01().jungleTiles = 0;
      $T01().dungeonTiles = 0;

      for (var l = ($thisType.firstToLightX | 0); l < ($thisType.lastToLightX | 0); l = ((l + 1) | 0)) {

        for (var m = ($thisType.firstToLightY | 0); m < ($thisType.lastToLightY | 0); m = ((m + 1) | 0)) {
          if (!((l < 0) || 
              (l >= ($T01().maxTilesX | 0)) || 
              (m < 0) || (m >= ($T01().maxTilesY | 0)))) {
            if ($T01().tile.Get(l, m) === null) {
              $T01().tile.Set(l, m, new ($T07())());
            }
            if ($T01().tile.Get(l, m).active) {
              if (!((($T01().tile.Get(l, m).type | 0) !== 23) && 
                  (($T01().tile.Get(l, m).type | 0) !== 24) && 
                  (($T01().tile.Get(l, m).type | 0) !== 25) && (($T01().tile.Get(l, m).type | 0) !== 32))) {
                $T01().evilTiles = ((($T01().evilTiles | 0) + 1) | 0);
              } else if (($T01().tile.Get(l, m).type | 0) === 27) {
                $T01().evilTiles = ((($T01().evilTiles | 0) - 5) | 0);
              } else if (($T01().tile.Get(l, m).type | 0) === 37) {
                $T01().meteorTiles = ((($T01().meteorTiles | 0) + 1) | 0);
              } else if ($T01().tileDungeon[$T01().tile.Get(l, m).type]) {
                $T01().dungeonTiles = ((($T01().dungeonTiles | 0) + 1) | 0);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 60) && (($T01().tile.Get(l, m).type | 0) !== 61))) {
                $T01().jungleTiles = ((($T01().jungleTiles | 0) + 1) | 0);
              }
            }
            if ($T01().tile.Get(l, m) === null) {
              $T01().tile.Set(l, m, new ($T07())());
            }
            if ($T01().lightTiles) {
              $thisType.color.Set(((((l - ($thisType.firstTileX | 0)) | 0) + 21) | 0), ((((m - ($thisType.firstTileY | 0)) | 0) + 21) | 0), +((+($T01().tileColor.get_R()) / 255)));
            }
            if ($T01().tile.Get(l, m).lava) {
              var num = (+((($T01().tile.Get(l, m).liquid | 0) / 255 | 0)) * 0.6) + 0.1;
              if (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) < num) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), num);
              }
            }
            if (!(($T01().tile.Get(l, m).active && 
                  $T01().tileSolid[$T01().tile.Get(l, m).type] && 
                  (($T01().tile.Get(l, m).type | 0) !== 37) && 
                  (($T01().tile.Get(l, m).type | 0) !== 58) && 
                  (($T01().tile.Get(l, m).type | 0) !== 70) && 
                  (($T01().tile.Get(l, m).type | 0) !== 76)) || (!$T01().tile.Get(l, m).lighted && 
                  (($T01().tile.Get(l, m).type | 0) !== 4) && 
                  (($T01().tile.Get(l, m).type | 0) !== 17) && 
                  (($T01().tile.Get(l, m).type | 0) !== 31) && 
                  (($T01().tile.Get(l, m).type | 0) !== 33) && 
                  (($T01().tile.Get(l, m).type | 0) !== 34) && 
                  (($T01().tile.Get(l, m).type | 0) !== 35) && 
                  (($T01().tile.Get(l, m).type | 0) !== 36) && 
                  (($T01().tile.Get(l, m).type | 0) !== 37) && 
                  (($T01().tile.Get(l, m).type | 0) !== 42) && 
                  (($T01().tile.Get(l, m).type | 0) !== 49) && 
                  (($T01().tile.Get(l, m).type | 0) !== 58) && 
                  (($T01().tile.Get(l, m).type | 0) !== 61) && 
                  (($T01().tile.Get(l, m).type | 0) !== 70) && 
                  (($T01().tile.Get(l, m).type | 0) !== 71) && 
                  (($T01().tile.Get(l, m).type | 0) !== 72) && 
                  (($T01().tile.Get(l, m).type | 0) !== 76) && 
                  (($T01().tile.Get(l, m).type | 0) !== 77) && 
                  (($T01().tile.Get(l, m).type | 0) !== 19) && 
                  (($T01().tile.Get(l, m).type | 0) !== 26)))) {
              if (!(((+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) * 255) >= +($T01().tileColor.get_R())) || 
                  (+($T01().tileColor.get_R()) <= (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) * 255)) || 
                  (($T01().tile.Get(l, m).wall | 0) !== 0) || 
                  (+m >= +$T01().worldSurface) || (($T01().tile.Get(l, m).liquid | 0) >= 255))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), +((+($T01().tileColor.get_R()) / 255)));
              }
              if (!((($T01().tile.Get(l, m).type | 0) !== 4) && 
                  (($T01().tile.Get(l, m).type | 0) !== 33) && 
                  (($T01().tile.Get(l, m).type | 0) !== 34) && 
                  (($T01().tile.Get(l, m).type | 0) !== 35) && (($T01().tile.Get(l, m).type | 0) !== 36))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 1);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 17) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.8))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.8);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 77) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.8))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.8);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 37) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.6))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.6);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 58) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.6))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.6);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 76) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.6))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.6);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 42) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.75))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.75);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 49) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.75))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.75);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 70) && 
                  (($T01().tile.Get(l, m).type | 0) !== 71) && (($T01().tile.Get(l, m).type | 0) !== 72))) {
                var num2 = +($T01().rand.Next(48, 52)) * 0.01;
                if (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) < num2) {
                  $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), num2);
                }
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 61) || 
                  (($T01().tile.Get(l, m).frameX | 0) !== 144) || (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) >= 0.75))) {
                $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.75);
              } else if (!((($T01().tile.Get(l, m).type | 0) !== 31) && (($T01().tile.Get(l, m).type | 0) !== 26))) {
                var num3 = +($T01().rand.Next(-5, 6)) * 0.01;
                if (+$thisType.color.Get(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0)) < (0.4 + num3)) {
                  $thisType.color.Set(((l - ($thisType.firstToLightX | 0)) | 0), ((m - ($thisType.firstToLightY | 0)) | 0), 0.4 + num3);
                }
              }
            }
          }
        }
      }

      for (var n = 0; n < ($thisType.lightPasses | 0); n = ((n + 1) | 0)) {

        for (var num4 = ($thisType.firstToLightX | 0); num4 < ($thisType.lastToLightX | 0); num4 = ((num4 + 1) | 0)) {
          $thisType.lightColor = 0;

          for (var num5 = ($thisType.firstToLightY | 0); num5 < ($thisType.lastToLightY | 0); num5 = ((num5 + 1) | 0)) {
            $thisType.LightColor(num4, num5);
          }
        }

        for (var num6 = ($thisType.firstToLightX | 0); num6 < ($thisType.lastToLightX | 0); num6 = ((num6 + 1) | 0)) {
          $thisType.lightColor = 0;

          for (var num7 = ($thisType.lastToLightY | 0); num7 >= ($thisType.firstToLightY | 0); num7 = ((num7 - 1) | 0)) {
            $thisType.LightColor(num6, num7);
          }
        }

        for (var num8 = ($thisType.firstToLightY | 0); num8 < ($thisType.lastToLightY | 0); num8 = ((num8 + 1) | 0)) {
          $thisType.lightColor = 0;

          for (var num9 = ($thisType.firstToLightX | 0); num9 < ($thisType.lastToLightX | 0); num9 = ((num9 + 1) | 0)) {
            $thisType.LightColor(num9, num8);
          }
        }

        for (var num10 = ($thisType.firstToLightY | 0); num10 < ($thisType.lastToLightY | 0); num10 = ((num10 + 1) | 0)) {
          $thisType.lightColor = 0;

          for (var num11 = ($thisType.lastToLightX | 0); num11 >= ($thisType.firstToLightX | 0); num11 = ((num11 - 1) | 0)) {
            $thisType.LightColor(num11, num10);
          }
        }
      }
      return;
    }
    $thisType.tempLightCount = 0;
    var num12 = ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0);
    var num13 = ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0);
    if (((+(+$T01().screenPosition.X / 16)) | 0) < ((+(+$T01().screenLastPosition.X / 16)) | 0)) {

      for (var num14 = ((num12 - 1) | 0); num14 > 1; num14 = ((num14 - 1) | 0)) {

        for (var num15 = 0; num15 < num13; num15 = ((num15 + 1) | 0)) {
          $thisType.color.Set(num14, num15, $thisType.color.Get(((num14 - 1) | 0), num15));
        }
      }
    } else if (((+(+$T01().screenPosition.X / 16)) | 0) > ((+(+$T01().screenLastPosition.X / 16)) | 0)) {

      for (var num16 = 0; num16 < ((num12 - 1) | 0); num16 = ((num16 + 1) | 0)) {

        for (var num17 = 0; num17 < num13; num17 = ((num17 + 1) | 0)) {
          $thisType.color.Set(num16, num17, $thisType.color.Get(((num16 + 1) | 0), num17));
        }
      }
    }
    if (((+(+$T01().screenPosition.Y / 16)) | 0) < ((+(+$T01().screenLastPosition.Y / 16)) | 0)) {

      for (var num18 = ((num13 - 1) | 0); num18 > 1; num18 = ((num18 - 1) | 0)) {

        for (var num19 = 0; num19 < num12; num19 = ((num19 + 1) | 0)) {
          $thisType.color.Set(num19, num18, $thisType.color.Get(num19, ((num18 - 1) | 0)));
        }
      }
      return;
    }
    if (((+(+$T01().screenPosition.Y / 16)) | 0) > ((+(+$T01().screenLastPosition.Y / 16)) | 0)) {

      for (var num20 = 0; num20 < ((num13 - 1) | 0); num20 = ((num20 + 1) | 0)) {

        for (var num21 = 0; num21 < num12; num21 = ((num21 + 1) | 0)) {
          $thisType.color.Set(num21, num20, $thisType.color.Get(num21, ((num20 + 1) | 0)));
        }
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Lighting", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Lighting__ctor
    );

    $.Method({Static:true , Public:true }, "addLight", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Single
        ]), 
      Lighting_addLight
    );

    $.Method({Static:true , Public:true }, "Brightness", 
      new JSIL.MethodSignature($.Single, [$.Int32, $.Int32]), 
      Lighting_Brightness
    );

    $.Method({Static:true , Public:true }, "GetBlackness", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$.Int32, $.Int32]), 
      Lighting_GetBlackness
    );

    $.Method({Static:true , Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Microsoft.Xna.Framework.Color")
        ]), 
      Lighting_GetColor$00
    );

    $.Method({Static:true , Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$.Int32, $.Int32]), 
      Lighting_GetColor$01
    );

    $.Method({Static:true , Public:false}, "LightColor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Lighting_LightColor
    );

    $.Method({Static:true , Public:true }, "LightingX", 
      new JSIL.MethodSignature($.Int32, [$.Int32]), 
      Lighting_LightingX
    );

    $.Method({Static:true , Public:true }, "LightingY", 
      new JSIL.MethodSignature($.Int32, [$.Int32]), 
      Lighting_LightingY
    );

    $.Method({Static:true , Public:true }, "LightTiles", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      Lighting_LightTiles
    );

    $.Constant({Static:true , Public:true }, "offScreenTiles", $.Int32, 21);

    $.Field({Static:true , Public:true }, "lightPasses", $.Int32, 2);

    $.Field({Static:true , Public:true }, "lightSkip", $.Int32, 1);

    $.Field({Static:true , Public:false}, "lightColor", $.Single, 0);

    $.Field({Static:true , Public:true }, "lightCounter", $.Int32, 0);

    $.Field({Static:true , Public:false}, "firstTileX", $.Int32);

    $.Field({Static:true , Public:false}, "lastTileX", $.Int32);

    $.Field({Static:true , Public:false}, "firstTileY", $.Int32);

    $.Field({Static:true , Public:false}, "lastTileY", $.Int32);

    $.Field({Static:true , Public:true }, "color", $jsilcore.TypeRef("System.Array", [$.Single, JSIL.ArrayDimensionParameter(2)]), function ($pi) {
        return JSIL.MultidimensionalArray.New($asm06.System.Single, [0, ((((((($asm0F.Terraria.Main.screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0), 0, ((((((($asm0F.Terraria.Main.screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)]);
      });

    $.Field({Static:true , Public:false}, "maxTempLights", $.Int32, 100);

    $.Field({Static:true , Public:false}, "tempLightX", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxTempLights);
      });

    $.Field({Static:true , Public:false}, "tempLightY", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, $pi.maxTempLights);
      });

    $.Field({Static:true , Public:false}, "tempLight", $jsilcore.TypeRef("System.Array", [$.Single]), function ($pi) {
        return JSIL.Array.New($asm06.System.Single, $pi.maxTempLights);
      });

    $.Field({Static:true , Public:false}, "tempLightCount", $.Int32);

    $.Field({Static:true , Public:false}, "firstToLightX", $.Int32);

    $.Field({Static:true , Public:false}, "firstToLightY", $.Int32);

    $.Field({Static:true , Public:false}, "lastToLightX", $.Int32);

    $.Field({Static:true , Public:false}, "lastToLightY", $.Int32);


    function Lighting__cctor () {
      $thisType.lightPasses = 2;
      $thisType.lightSkip = 1;
      $thisType.lightColor = 0;
      $thisType.lightCounter = 0;
      $thisType.color = JSIL.MultidimensionalArray.New($T00(), [0, ((((((($T01().screenWidth | 0) / 16) | 0) + 42) | 0) + 10) | 0), 0, ((((((($T01().screenHeight | 0) / 16) | 0) + 42) | 0) + 10) | 0)]);
      $thisType.maxTempLights = 100;
      $thisType.tempLightX = JSIL.Array.New($T02(), $thisType.maxTempLights);
      $thisType.tempLightY = JSIL.Array.New($T02(), $thisType.maxTempLights);
      $thisType.tempLight = JSIL.Array.New($T00(), $thisType.maxTempLights);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Lighting__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Recipe */ 

(function Recipe$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };


  function Recipe__ctor () {
    this.createItem = new ($T00())();
    this.requiredItem = JSIL.Array.New($T00(), $thisType.maxRequirements);
    this.requiredTile = JSIL.Array.New($T01(), $thisType.maxRequirements);

    for (var i = 0; i < ($thisType.maxRequirements | 0); i = ((i + 1) | 0)) {
      this.requiredItem[i] = new ($T00())();
      this.requiredTile[i] = -1;
    }
  }; 

  function Recipe_addRecipe () {
    $T02().recipe[$thisType.numRecipes] = $thisType.newRecipe;
    $thisType.newRecipe = new $thisType();
    $thisType.numRecipes = ((($thisType.numRecipes | 0) + 1) | 0);
  }; 

  function Recipe_Create () {

    for (var num = 0; !((num >= ($thisType.maxRequirements | 0)) || ((this.requiredItem[num].type | 0) === 0)); num = ((num + 1) | 0)) {
      var num2 = (this.requiredItem[num].stack | 0);

    $loop1: 
      for (var i = 0; i < 44; i = ((i + 1) | 0)) {
        if (($T02().player[$T02().myPlayer].inventory[i]).IsTheSameAs(this.requiredItem[num])) {
          if (($T02().player[$T02().myPlayer].inventory[i].stack | 0) > num2) {
            $T02().player[$T02().myPlayer].inventory[i].stack = ((($T02().player[$T02().myPlayer].inventory[i].stack | 0) - num2) | 0);
            num2 = 0;
          } else {
            num2 = ((num2 - ($T02().player[$T02().myPlayer].inventory[i].stack | 0)) | 0);
            $T02().player[$T02().myPlayer].inventory[i] = new ($T00())();
          }
        }
        if (num2 <= 0) {
          break $loop1;
        }
      }
    }
    $thisType.FindRecipes();
  }; 

  function Recipe_FindRecipes () {
    var num = ($T02().availableRecipe[$T02().focusRecipe] | 0);
    var num2 = +$T02().availableRecipeY[$T02().focusRecipe];

    for (var i = 0; i < ($thisType.maxRecipes | 0); i = ((i + 1) | 0)) {
      $T02().availableRecipe[i] = 0;
    }
    $T02().numAvailableRecipes = 0;

    for (var num3 = 0; !((num3 >= ($thisType.maxRecipes | 0)) || (($T02().recipe[num3].createItem.type | 0) === 0)); num3 = ((num3 + 1) | 0)) {
      var flag = true;

    $loop2: 
      for (var num4 = 0; !((num4 >= ($thisType.maxRequirements | 0)) || (($T02().recipe[num3].requiredItem[num4].type | 0) === 0)); num4 = ((num4 + 1) | 0)) {
        var num5 = ($T02().recipe[num3].requiredItem[num4].stack | 0);

      $loop3: 
        for (var j = 0; j < 44; j = ((j + 1) | 0)) {
          if (($T02().player[$T02().myPlayer].inventory[j]).IsTheSameAs($T02().recipe[num3].requiredItem[num4])) {
            num5 = ((num5 - ($T02().player[$T02().myPlayer].inventory[j].stack | 0)) | 0);
          }
          if (num5 <= 0) {
            break $loop3;
          }
        }
        if (num5 > 0) {
          flag = false;
          break $loop2;
        }
      }
      if (flag) {
        var flag2 = true;

      $loop4: 
        for (var num6 = 0; !((num6 >= ($thisType.maxRequirements | 0)) || (($T02().recipe[num3].requiredTile[num6] | 0) === -1)); num6 = ((num6 + 1) | 0)) {
          if (!$T02().player[$T02().myPlayer].adjTile[$T02().recipe[num3].requiredTile[num6]]) {
            flag2 = false;
            break $loop4;
          }
        }
        if (flag2) {
          $T02().availableRecipe[$T02().numAvailableRecipes] = num3;
          $T02().numAvailableRecipes = ((($T02().numAvailableRecipes | 0) + 1) | 0);
        }
      }
    }

  $loop5: 
    for (var k = 0; k < ($T02().numAvailableRecipes | 0); k = ((k + 1) | 0)) {
      if (num === ($T02().availableRecipe[k] | 0)) {
        $T02().focusRecipe = k;
        break $loop5;
      }
    }
    if (($T02().focusRecipe | 0) >= ($T02().numAvailableRecipes | 0)) {
      $T02().focusRecipe = ((($T02().numAvailableRecipes | 0) - 1) | 0);
    }
    if (($T02().focusRecipe | 0) < 0) {
      $T02().focusRecipe = 0;
    }
    var num7 = +$T02().availableRecipeY[$T02().focusRecipe] - num2;

    for (var l = 0; l < ($thisType.maxRecipes | 0); l = ((l + 1) | 0)) {
      $T02().availableRecipeY[l] -= num7;
    }
  }; 

  function Recipe_SetupRecipes () {
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 28);
    $thisType.newRecipe.createItem.stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 5);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 23);
    $thisType.newRecipe.requiredItem[1].stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 31);
    $thisType.newRecipe.requiredItem[2].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Healing Potion");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 28);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 183);
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 110);
    $thisType.newRecipe.createItem.stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 75);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 23);
    $thisType.newRecipe.requiredItem[1].stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 31);
    $thisType.newRecipe.requiredItem[2].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Mana Potion");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 110);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 183);
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 226);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 28);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 110);
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 227);
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Healing Potion");
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Mana Potion");
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 67);
    $thisType.newRecipe.createItem.stack = 5;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 60);
    $thisType.newRecipe.requiredTile[0] = 13;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Bottle");
    $thisType.newRecipe.createItem.stack = 2;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Glass");
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 8);
    $thisType.newRecipe.createItem.stack = 3;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 23);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Glass");
    $thisType.newRecipe.createItem.stack = 1;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 169);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Clay Pot");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 133);
    $thisType.newRecipe.requiredItem[0].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gray Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gray Brick Wall");
    $thisType.newRecipe.createItem.stack = 4;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Gray Brick");
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Red Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 133);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Red Brick Wall");
    $thisType.newRecipe.createItem.stack = 4;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Red Brick");
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Copper Ore");
    $thisType.newRecipe.requiredItem[1].stack = 1;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Brick Wall");
    $thisType.newRecipe.createItem.stack = 4;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Copper Brick");
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Brick Wall");
    $thisType.newRecipe.createItem.stack = 4;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Silver Brick");
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Silver Ore");
    $thisType.newRecipe.requiredItem[1].stack = 1;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Brick Wall");
    $thisType.newRecipe.createItem.stack = 4;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Gold Brick");
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Gold Ore");
    $thisType.newRecipe.requiredItem[1].stack = 1;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Hellstone Brick");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 174);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 1);
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 192);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 173);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 30);
    $thisType.newRecipe.createItem.stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 2);
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 26);
    $thisType.newRecipe.createItem.stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 93);
    $thisType.newRecipe.createItem.stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 94);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 25);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 34);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Sign");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 48);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 22);
    $thisType.newRecipe.requiredItem[1].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 32);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 36);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 24);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 196);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 40);
    $thisType.newRecipe.createItem.stack = 3;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 3);
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 39);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Bed");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 9);
    $thisType.newRecipe.requiredItem[0].stack = 15;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Silk");
    $thisType.newRecipe.requiredItem[1].stack = 5;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silk");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 150);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Flaming Arrow");
    $thisType.newRecipe.createItem.stack = 5;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 40);
    $thisType.newRecipe.requiredItem[0].stack = 5;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 8);
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 33);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 3);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 8);
    $thisType.newRecipe.requiredItem[2].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 20);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 12);
    $thisType.newRecipe.requiredItem[0].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Pickaxe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 12;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Axe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 9;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Hammer");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Broadsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Shortsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Bow");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 15;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Chainmail");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Greaves");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Watch");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 85);
    $thisType.newRecipe.requiredTile[0] = 14;
    $thisType.newRecipe.requiredTile[1] = 15;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Copper Chandelier");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 8);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 85);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 22);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 11);
    $thisType.newRecipe.requiredItem[0].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 35);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 5;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 205);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 1);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 12;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 10);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 9;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 7);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 4);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 6);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Iron Bow");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Iron Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Iron Chainmail");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Iron Greaves");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Iron Chain");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 22);
    $thisType.newRecipe.requiredItem[0].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 21);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 14);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Pickaxe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 12;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Axe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 9;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Hammer");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Broadsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Bow");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Chainmail");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Greaves");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Watch");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 85);
    $thisType.newRecipe.requiredTile[0] = 14;
    $thisType.newRecipe.requiredTile[1] = 15;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Silver Chandelier");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 21);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 8);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 85);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 19);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 13);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Pickaxe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 12;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Axe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 9;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Hammer");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 9);
    $thisType.newRecipe.requiredItem[1].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Broadsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Shortsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Bow");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 7;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Chainmail");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Greaves");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Watch");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 85);
    $thisType.newRecipe.requiredTile[0] = 14;
    $thisType.newRecipe.requiredTile[1] = 15;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Gold Chandelier");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 8);
    $thisType.newRecipe.requiredItem[1].stack = 4;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 85);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Candle");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 19);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 8);
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 57);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 56);
    $thisType.newRecipe.requiredItem[0].stack = 4;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 44);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 8;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Unholy Arrow");
    $thisType.newRecipe.createItem.stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 40);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 69);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 45);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 46);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Shadow Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 15;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 86);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Shadow Scalemail");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 86);
    $thisType.newRecipe.requiredItem[1].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Shadow Greaves");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 86);
    $thisType.newRecipe.requiredItem[1].stack = 15;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Nightmare Pickaxe");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 12;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 86);
    $thisType.newRecipe.requiredItem[1].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "The Breaker");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 57);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 86);
    $thisType.newRecipe.requiredItem[1].stack = 5;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Grappling Hook");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 85);
    $thisType.newRecipe.requiredItem[0].stack = 3;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 118);
    $thisType.newRecipe.requiredItem[1].stack = 1;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 117);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 116);
    $thisType.newRecipe.requiredItem[0].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 198);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 177);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 199);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 178);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 200);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 179);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 201);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 181);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 202);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 182);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 203);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 180);
    $thisType.newRecipe.requiredItem[1].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 204);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 127);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 95);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 117);
    $thisType.newRecipe.requiredItem[1].stack = 30;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 75);
    $thisType.newRecipe.requiredItem[2].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 197);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 98);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 117);
    $thisType.newRecipe.requiredItem[1].stack = 20;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 75);
    $thisType.newRecipe.requiredItem[2].stack = 5;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Meteor Helmet");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Meteor Suit");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Meteor Leggings");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Meteor Shot");
    $thisType.newRecipe.createItem.stack = 100;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 117);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 151);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 154);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 150);
    $thisType.newRecipe.requiredItem[1].stack = 40;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 152);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 154);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 150);
    $thisType.newRecipe.requiredItem[1].stack = 50;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 153);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 154);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 150);
    $thisType.newRecipe.requiredItem[1].stack = 45;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 175);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 174);
    $thisType.newRecipe.requiredItem[0].stack = 6;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 173);
    $thisType.newRecipe.requiredItem[1].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 77;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 119);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 15;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 55);
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 120);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 25;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 121);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 122);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 217);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 219);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], "Handgun");
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 231);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 232);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 40;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 233);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 175);
    $thisType.newRecipe.requiredItem[0].stack = 35;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 190);
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], "Silver Broadsword");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 208);
    $thisType.newRecipe.requiredItem[1].stack = 40;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 209);
    $thisType.newRecipe.requiredItem[2].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 191);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 208);
    $thisType.newRecipe.requiredItem[0].stack = 40;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 209);
    $thisType.newRecipe.requiredItem[1].stack = 30;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 185);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 84);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 208);
    $thisType.newRecipe.requiredItem[1].stack = 30;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 210);
    $thisType.newRecipe.requiredItem[2].stack = 3;
    $thisType.newRecipe.requiredTile[0] = 16;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Depth Meter");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 20);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 21);
    $thisType.newRecipe.requiredItem[1].stack = 8;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[2], 19);
    $thisType.newRecipe.requiredItem[2].stack = 6;
    $thisType.newRecipe.requiredTile[0] = 14;
    $thisType.newRecipe.requiredTile[1] = 15;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 193);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 173);
    $thisType.newRecipe.requiredItem[0].stack = 20;
    $thisType.newRecipe.requiredTile[0] = 17;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Goggles");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 38);
    $thisType.newRecipe.requiredItem[0].stack = 2;
    $thisType.newRecipe.requiredTile[0] = 18;
    $thisType.newRecipe.requiredTile[1] = 15;
    $thisType.addRecipe();
    $S01().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, "Mana Crystal");
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 75);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 43);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 38);
    $thisType.newRecipe.requiredItem[0].stack = 10;
    $thisType.newRecipe.requiredTile[0] = 26;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 70);
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 67);
    $thisType.newRecipe.requiredItem[0].stack = 30;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[1], 68);
    $thisType.newRecipe.requiredItem[1].stack = 15;
    $thisType.newRecipe.requiredTile[0] = 26;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 71);
    $thisType.newRecipe.createItem.stack = 100;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 72);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 72);
    $thisType.newRecipe.createItem.stack = 1;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 71);
    $thisType.newRecipe.requiredItem[0].stack = 100;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 72);
    $thisType.newRecipe.createItem.stack = 100;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 73);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 73);
    $thisType.newRecipe.createItem.stack = 1;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 72);
    $thisType.newRecipe.requiredItem[0].stack = 100;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 73);
    $thisType.newRecipe.createItem.stack = 100;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 74);
    $thisType.newRecipe.requiredItem[0].stack = 1;
    $thisType.addRecipe();
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.createItem, 74);
    $thisType.newRecipe.createItem.stack = 1;
    $S00().CallVirtual("SetDefaults", null, $thisType.newRecipe.requiredItem[0], 73);
    $thisType.newRecipe.requiredItem[0].stack = 100;
    $thisType.addRecipe();
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Recipe", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Recipe__ctor
    );

    $.Method({Static:true , Public:false}, "addRecipe", 
      JSIL.MethodSignature.Void, 
      Recipe_addRecipe
    );

    $.Method({Static:false, Public:true }, "Create", 
      JSIL.MethodSignature.Void, 
      Recipe_Create
    );

    $.Method({Static:true , Public:true }, "FindRecipes", 
      JSIL.MethodSignature.Void, 
      Recipe_FindRecipes
    );

    $.Method({Static:true , Public:true }, "SetupRecipes", 
      JSIL.MethodSignature.Void, 
      Recipe_SetupRecipes
    );

    $.Field({Static:true , Public:true }, "maxRequirements", $.Int32, 10);

    $.Field({Static:true , Public:true }, "maxRecipes", $.Int32, 200);

    $.Field({Static:true , Public:true }, "numRecipes", $.Int32, 0);

    $.Field({Static:true , Public:false}, "newRecipe", $.Type);

    $.Field({Static:false, Public:true }, "createItem", $asm0F.TypeRef("Terraria.Item"));

    $.Field({Static:false, Public:true }, "requiredItem", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]));

    $.Field({Static:false, Public:true }, "requiredTile", $jsilcore.TypeRef("System.Array", [$.Int32]));


    function Recipe__cctor () {
      $thisType.maxRequirements = 10;
      $thisType.maxRecipes = 200;
      $thisType.numRecipes = 0;
      $thisType.newRecipe = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Recipe__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.NPC */ 

(function NPC$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.Terraria.CombatText)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };


  function NPC__ctor () {
    this.immune = JSIL.Array.New($T01(), 9);
    this.direction = 1;
    this.directionY = 1;
    this.ai = JSIL.Array.New($T02(), $thisType.maxAI);
    this.target = -1;
    this.scale = 1;
    this.knockBackResist = 1;
    this.spriteDirection = -1;
    this.homeTileX = -1;
    this.homeTileY = -1;
  }; 

  function NPC_AI () {
    var $hoisted00 = new ($T03())(), $hoisted01 = new ($T03())(), $hoisted02 = new ($T03())(), $hoisted03 = new ($T03())(), $hoisted04 = new ($T03())(), $hoisted05 = new ($T03())(), $hoisted06 = new ($T03())(), $hoisted07 = new ($T03())(), $hoisted08 = new ($T03())(), $hoisted09 = new ($T03())();
    var vector = new ($T03())(), vector3 = new ($T03())(), vector4 = new ($T03())(), vector5 = new ($T03())(), vector6 = new ($T03())(), vector7 = new ($T03())(), vector8 = new ($T03())(), vector9 = new ($T03())(), rectangle = new ($T04())(), rectangle2 = new ($T04())(), vector10 = new ($T03())(), vector11 = new ($T03())(), vector12 = new ($T03())(), vector13 = new ($T03())(), vector14 = new ($T03())(), vector15 = new ($T03())(), vector16 = new ($T03())();
    if ((this.aiStyle | 0) === 0) {
      this.velocity.X = +this.velocity.X * 0.93;
      if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
        this.velocity.X = 0;
        return;
      }
    } else if ((this.aiStyle | 0) === 1) {
      this.aiAction = 0;
      if (+this.ai[2] === 0) {
        this.ai[0] = -100;
        this.ai[2] = 1;
        this.TargetClosest();
      }
      if (+this.velocity.Y === 0) {
        if (+this.ai[3] === +this.position.X) {
          this.direction = Math.imul(this.direction, -1);
        }
        this.ai[3] = 0;
        this.velocity.X = +this.velocity.X * 0.8;
        if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
          this.velocity.X = 0;
        }
        if (!($T00().dayTime && 
            ((this.life | 0) === (this.lifeMax | 0)) && (this.position.Y <= (+$T00().worldSurface * 16)))) {
          this.ai[0] += 1;
        }
        this.ai[0] += 1;
        if (+this.ai[0] >= 0) {
          if (!($T00().dayTime && 
              ((this.life | 0) === (this.lifeMax | 0)) && (this.position.Y <= (+$T00().worldSurface * 16)))) {
            this.TargetClosest();
          }
          if (+this.ai[1] === 2) {
            this.velocity.Y = -8;
            this.velocity.X = +this.velocity.X + +(3 * (this.direction | 0));
            this.ai[0] = -200;
            this.ai[1] = 0;
            this.ai[3] = +this.position.X;
            return;
          }
          this.velocity.Y = -6;
          this.velocity.X = +this.velocity.X + +(2 * (this.direction | 0));
          this.ai[0] = -120;
          this.ai[1] += 1;
          return;
        } else if (+this.ai[0] >= -30) {
          this.aiAction = 1;
          return;
        }
      } else if (!(((this.target | 0) >= 8) || (!(((this.direction | 0) === 1) && 
              (+this.velocity.X < 3)) && 
            (((this.direction | 0) !== -1) || 
              (+this.velocity.X <= -3))))) {
        if (!(!(((this.direction | 0) === -1) && 
              (this.velocity.X < 0.1)) && (((this.direction | 0) !== 1) || 
              (this.velocity.X <= -0.1)))) {
          this.velocity.X = +this.velocity.X + (0.2 * +(this.direction));
          return;
        }
        this.velocity.X = +this.velocity.X * 0.93;
        return;
      }
    } else if ((this.aiStyle | 0) === 2) {
      this.noGravity = true;
      if (this.collideX) {
        this.velocity.X = +this.oldVelocity.X * -0.5;
        if (!(((this.direction | 0) !== -1) || 
            (+this.velocity.X <= 0) || (+this.velocity.X >= 2))) {
          this.velocity.X = 2;
        }
        if (!(((this.direction | 0) !== 1) || 
            (+this.velocity.X >= 0) || (+this.velocity.X <= -2))) {
          this.velocity.X = -2;
        }
      }
      if (this.collideY) {
        this.velocity.Y = +this.oldVelocity.Y * -0.5;
        if (!((+this.velocity.Y <= 0) || (+this.velocity.Y >= 1))) {
          this.velocity.Y = 1;
        }
        if (!((+this.velocity.Y >= 0) || (+this.velocity.Y <= -1))) {
          this.velocity.Y = -1;
        }
      }
      if (!(!$T00().dayTime || 
          (this.position.Y > (+$T00().worldSurface * 16)) || ((this.type | 0) !== 2))) {
        if ((this.timeLeft | 0) > 10) {
          this.timeLeft = 10;
        }
        this.directionY = -1;
        if (+this.velocity.Y > 0) {
          this.direction = 1;
        }
        this.direction = -1;
        if (+this.velocity.X > 0) {
          this.direction = 1;
        }
      } else {
        this.TargetClosest();
      }
      if (!(((this.direction | 0) !== -1) || (+this.velocity.X <= -4))) {
        this.velocity.X = +this.velocity.X - 0.1;
        if (+this.velocity.X > 4) {
          this.velocity.X = +this.velocity.X - 0.1;
        } else if (+this.velocity.X > 0) {
          this.velocity.X = +this.velocity.X + 0.05;
        }
        if (+this.velocity.X < -4) {
          this.velocity.X = -4;
        }
      } else if (!(((this.direction | 0) !== 1) || (+this.velocity.X >= 4))) {
        this.velocity.X = +this.velocity.X + 0.1;
        if (+this.velocity.X < -4) {
          this.velocity.X = +this.velocity.X + 0.1;
        } else if (+this.velocity.X < 0) {
          this.velocity.X = +this.velocity.X - 0.05;
        }
        if (+this.velocity.X > 4) {
          this.velocity.X = 4;
        }
      }
      if (!(((this.directionY | 0) !== -1) || (this.velocity.Y <= -1.5))) {
        this.velocity.Y = +this.velocity.Y - 0.04;
        if (this.velocity.Y > 1.5) {
          this.velocity.Y = +this.velocity.Y - 0.05;
        } else if (+this.velocity.Y > 0) {
          this.velocity.Y = +this.velocity.Y + 0.03;
        }
        if (this.velocity.Y < -1.5) {
          this.velocity.Y = -1.5;
        }
      } else if (!(((this.directionY | 0) !== 1) || (this.velocity.Y >= 1.5))) {
        this.velocity.Y = +this.velocity.Y + 0.04;
        if (this.velocity.Y < -1.5) {
          this.velocity.Y = +this.velocity.Y + 0.05;
        } else if (+this.velocity.Y < 0) {
          this.velocity.Y = +this.velocity.Y - 0.03;
        }
        if (this.velocity.Y > 1.5) {
          this.velocity.Y = 1.5;
        }
      }
      if (!(((this.type | 0) !== 2) || (($T00().rand.Next(40) | 0) !== 0))) {
        var num = ($T06().NewDust(
          $S00().Construct(this.position.X, (+this.position.Y + (+(this.height) * 0.25))), 
          this.width, 
          ((+(this.height) * 0.5) | 0), 
          5, 
          this.velocity.X, 
          2, 
          0, 
          new ($T07())(), 
          1
        ) | 0);
        var expr_8CB_cp_0 = $T00().dust[num];
        expr_8CB_cp_0.velocity.X = +expr_8CB_cp_0.velocity.X * 0.5;
        var expr_8E8_cp_0 = $T00().dust[num];
        expr_8E8_cp_0.velocity.Y = +expr_8E8_cp_0.velocity.Y * 0.1;
        return;
      }
    } else if ((this.aiStyle | 0) === 3) {
      var flag = false;
      if (!((+this.velocity.Y !== 0) || (!((+this.velocity.X > 0) && 
              ((this.direction | 0) < 0)) && 
            ((+this.velocity.X >= 0) || 
              ((this.direction | 0) <= 0))))) {
        flag = true;
      }
      if (!((+this.position.X !== +this.oldPosition.X) && 
          (+this.ai[3] < +60) && !flag)) {
        this.ai[3] += 1;
      } else if (!((Math.abs(this.velocity.X) <= 0.9) || (+this.ai[3] <= 0))) {
        this.ai[3] -= 1;
      }
      if (+this.ai[3] > +(60 * 10)) {
        this.ai[3] = 0;
      }
      if (+this.ai[3] === +60) {
        this.netUpdate = true;
      }
      if (!(($T00().dayTime && 
            (this.position.Y <= (+$T00().worldSurface * 16)) && 
            ((this.type | 0) !== 26) && 
            ((this.type | 0) !== 27) && 
            ((this.type | 0) !== 28) && 
            ((this.type | 0) !== 31)) || (+this.ai[3] >= +60))) {
        if (!((((this.type | 0) !== 3) && 
              ((this.type | 0) !== 21) && 
              ((this.type | 0) !== 31)) || (($T00().rand.Next(1000) | 0) !== 0))) {
          $T00().PlaySound(14, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        }
        this.TargetClosest();
      } else {
        if ((this.timeLeft | 0) > 10) {
          this.timeLeft = 10;
        }
        if (+this.velocity.X === 0) {
          if (+this.velocity.Y === 0) {
            this.ai[0] += 1;
            if (+this.ai[0] >= 2) {
              this.direction = Math.imul(this.direction, -1);
              this.spriteDirection = (this.direction | 0);
              this.ai[0] = 0;
            }
          }
        } else {
          this.ai[0] = 0;
        }
        if ((this.direction | 0) === 0) {
          this.direction = 1;
        }
      }
      if ((this.type | 0) === 27) {
        if (!((+this.velocity.X >= -2) && (+this.velocity.X <= 2))) {
          if (+this.velocity.Y === 0) {
            this.velocity = $S01().CallStatic($T03(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.8).MemberwiseClone();
          }
        } else if (!((+this.velocity.X >= 2) || ((this.direction | 0) !== 1))) {
          this.velocity.X = +this.velocity.X + 0.07;
          if (+this.velocity.X > 2) {
            this.velocity.X = 2;
          }
        } else if (!((+this.velocity.X <= -2) || ((this.direction | 0) !== -1))) {
          this.velocity.X = +this.velocity.X - 0.07;
          if (+this.velocity.X < -2) {
            this.velocity.X = -2;
          }
        }
      } else if (!(((this.type | 0) !== 21) && 
          ((this.type | 0) !== 26) && ((this.type | 0) !== 31))) {
        if (!((+this.velocity.X >= -1.5) && (+this.velocity.X <= 1.5))) {
          if (+this.velocity.Y === 0) {
            this.velocity = $S01().CallStatic($T03(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.8).MemberwiseClone();
          }
        } else if (!((+this.velocity.X >= 1.5) || ((this.direction | 0) !== 1))) {
          this.velocity.X = +this.velocity.X + 0.07;
          if (+this.velocity.X > 1.5) {
            this.velocity.X = 1.5;
          }
        } else if (!((+this.velocity.X <= -1.5) || ((this.direction | 0) !== -1))) {
          this.velocity.X = +this.velocity.X - 0.07;
          if (+this.velocity.X < -1.5) {
            this.velocity.X = -1.5;
          }
        }
      } else if (!((+this.velocity.X >= -1) && (+this.velocity.X <= 1))) {
        if (+this.velocity.Y === 0) {
          this.velocity = $S01().CallStatic($T03(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.8).MemberwiseClone();
        }
      } else if (!((+this.velocity.X >= 1) || ((this.direction | 0) !== 1))) {
        this.velocity.X = +this.velocity.X + 0.07;
        if (+this.velocity.X > 1) {
          this.velocity.X = 1;
        }
      } else if (!((+this.velocity.X <= -1) || ((this.direction | 0) !== -1))) {
        this.velocity.X = +this.velocity.X - 0.07;
        if (+this.velocity.X < -1) {
          this.velocity.X = -1;
        }
      }
      if (+this.velocity.Y !== 0) {
        this.ai[1] = 0;
        this.ai[2] = 0;
        return;
      }
      var num3 = ((+(((+this.position.X + +(((this.width | 0) / 2 | 0))) + +(15 * (this.direction | 0))) / 16)) | 0);
      var num4 = ((+(((+this.position.Y + +(this.height)) - 16) / 16)) | 0);
      if ($T00().tile.Get(num3, num4) === null) {
        $T00().tile.Set(num3, num4, new ($T0B())());
      }
      if ($T00().tile.Get(num3, ((num4 - 1) | 0)) === null) {
        $T00().tile.Set(num3, ((num4 - 1) | 0), new ($T0B())());
      }
      if ($T00().tile.Get(num3, ((num4 - 2) | 0)) === null) {
        $T00().tile.Set(num3, ((num4 - 2) | 0), new ($T0B())());
      }
      if ($T00().tile.Get(num3, ((num4 - 3) | 0)) === null) {
        $T00().tile.Set(num3, ((num4 - 3) | 0), new ($T0B())());
      }
      if ($T00().tile.Get(num3, ((num4 + 1) | 0)) === null) {
        $T00().tile.Set(num3, ((num4 + 1) | 0), new ($T0B())());
      }
      if ($T00().tile.Get(((num3 + (this.direction | 0)) | 0), ((num4 - 1) | 0)) === null) {
        $T00().tile.Set(((num3 + (this.direction | 0)) | 0), ((num4 - 1) | 0), new ($T0B())());
      }
      if ($T00().tile.Get(((num3 + (this.direction | 0)) | 0), ((num4 + 1) | 0)) === null) {
        $T00().tile.Set(((num3 + (this.direction | 0)) | 0), ((num4 + 1) | 0), new ($T0B())());
      }
      if (!(!$T00().tile.Get(num3, ((num4 - 1) | 0)).active || (($T00().tile.Get(num3, ((num4 - 1) | 0)).type | 0) !== 10))) {
        this.ai[2] += 1;
        this.ai[3] = 0;
        if (+this.ai[2] >= 60) {
          if (!($T00().bloodMoon || ((this.type | 0) !== 3))) {
            this.ai[1] = 0;
          }
          this.velocity.X = 0.5 * +(-+(this.direction));
          this.ai[1] += 1;
          if ((this.type | 0) === 27) {
            this.ai[1] += 1;
          }
          if ((this.type | 0) === 31) {
            this.ai[1] += 6;
          }
          this.ai[2] = 0;
          var flag2 = false;
          if (+this.ai[1] >= 10) {
            flag2 = true;
            this.ai[1] = 10;
          }
          $T0C().KillTile(
            num3, 
            ((num4 - 1) | 0), 
            true, 
            false, 
            false
          );
          if (!(((($T00().netMode | 0) === 1) && 
                flag2) || 
              !flag2 || (($T00().netMode | 0) === 1))) {
            if ((this.type | 0) === 26) {
              $T0C().KillTile(
                num3, 
                ((num4 - 1) | 0), 
                false, 
                false, 
                false
              );
              if (($T00().netMode | 0) === 2) {
                $T0D().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num3, 
                  +(num4 - 1), 
                  0
                );
                return;
              }
            } else {
              var flag3 = $T0C().OpenDoor(num3, num4, this.direction);
              if (!flag3) {
                this.ai[3] = +60;
                this.netUpdate = true;
              }
              if (!((($T00().netMode | 0) !== 2) || !flag3)) {
                $T0D().SendData(
                  19, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num3, 
                  +num4, 
                  +(this.direction)
                );
                return;
              }
            }
          }
        }
      } else {
        if (!(!((+this.velocity.X < 0) && 
              ((this.spriteDirection | 0) === -1)) && ((+this.velocity.X <= 0) || 
              ((this.spriteDirection | 0) !== 1)))) {
          if (!(!$T00().tile.Get(num3, ((num4 - 2) | 0)).active || !$T00().tileSolid[$T00().tile.Get(num3, ((num4 - 2) | 0)).type])) {
            if (!(!$T00().tile.Get(num3, ((num4 - 3) | 0)).active || !$T00().tileSolid[$T00().tile.Get(num3, ((num4 - 3) | 0)).type])) {
              this.velocity.Y = -8;
              this.netUpdate = true;
            } else {
              this.velocity.Y = -7;
              this.netUpdate = true;
            }
          } else if (!(!$T00().tile.Get(num3, ((num4 - 1) | 0)).active || !$T00().tileSolid[$T00().tile.Get(num3, ((num4 - 1) | 0)).type])) {
            this.velocity.Y = -6;
            this.netUpdate = true;
          } else if (!(!$T00().tile.Get(num3, num4).active || !$T00().tileSolid[$T00().tile.Get(num3, num4).type])) {
            this.velocity.Y = -5;
            this.netUpdate = true;
          } else if (!(((this.directionY | 0) >= 0) || 
              ($T00().tile.Get(num3, ((num4 + 1) | 0)).active && 
                $T00().tileSolid[$T00().tile.Get(num3, ((num4 + 1) | 0)).type]) || ($T00().tile.Get(((num3 + (this.direction | 0)) | 0), ((num4 + 1) | 0)).active && 
                $T00().tileSolid[$T00().tile.Get(((num3 + (this.direction | 0)) | 0), ((num4 + 1) | 0)).type]))) {
            this.velocity.Y = -8;
            this.velocity.X = +this.velocity.X * 1.5;
            this.netUpdate = true;
          } else {
            this.ai[1] = 0;
            this.ai[2] = 0;
          }
        }
        if (!(((this.type | 0) !== 31) || 
            (+this.velocity.Y !== 0) || 
            ((Math.abs(((+this.position.X + +(((this.width | 0) / 2 | 0))) - (+$T00().player[this.target].position.X - +((($T00().player[this.target].width | 0) / 2 | 0)))))) >= 100) || 
            ((Math.abs(((+this.position.Y + +(((this.height | 0) / 2 | 0))) - (+$T00().player[this.target].position.Y - +((($T00().player[this.target].height | 0) / 2 | 0)))))) >= 50) || (!(((this.direction | 0) > 0) && 
                (+this.velocity.X > 1)) && 
              (((this.direction | 0) >= 0) || 
                (+this.velocity.X >= -1))))) {
          this.velocity.X = +this.velocity.X * 2;
          if (+this.velocity.X > 3) {
            this.velocity.X = 3;
          }
          if (+this.velocity.X < -3) {
            this.velocity.X = -3;
          }
          this.velocity.Y = -4;
          this.netUpdate = true;
          return;
        }
      }
    } else if ((this.aiStyle | 0) === 4) {
      if (!(((this.target | 0) >= 0) && 
          ((this.target | 0) !== 8) && 
          !$T00().player[this.target].dead && $T00().player[this.target].active)) {
        this.TargetClosest();
      }
      var dead = $T00().player[this.target].dead;
      var num7 = Math.fround(Math.atan2((((+this.position.Y + +(this.height)) - 59) - +$T00().player[this.target].position.Y) - +((($T00().player[this.target].height | 0) / 2 | 0)), ((+this.position.X + +(((this.width | 0) / 2 | 0))) - +$T00().player[this.target].position.X) - +((($T00().player[this.target].width | 0) / 2 | 0)))) + 1.57;
      if (num7 < 0) {
        num7 += 6.283;
      } else if (num7 > 6.283) {
        num7 -= 6.283;
      }
      var num8 = 0;
      if (!((+this.ai[0] !== 0) || (+this.ai[1] !== 0))) {
        num8 = 0.02;
      }
      if (!((+this.ai[0] !== 0) || 
          (+this.ai[1] !== 2) || (+this.ai[2] <= 40))) {
        num8 = 0.05;
      }
      if (!((+this.ai[0] !== 3) || (+this.ai[1] !== 0))) {
        num8 = 0.05;
      }
      if (!((+this.ai[0] !== 3) || 
          (+this.ai[1] !== 2) || (+this.ai[2] <= 40))) {
        num8 = 0.08;
      }
      if (+this.rotation < num7) {
        if (num7 - +this.rotation > 3.1415) {
          this.rotation = +this.rotation - num8;
        } else {
          this.rotation = +this.rotation + num8;
        }
      } else if (+this.rotation > num7) {
        if (+this.rotation - num7 > 3.1415) {
          this.rotation = +this.rotation + num8;
        } else {
          this.rotation = +this.rotation - num8;
        }
      }
      if (!((+this.rotation <= (num7 - num8)) || (+this.rotation >= (num7 + num8)))) {
        this.rotation = num7;
      }
      if (+this.rotation < 0) {
        this.rotation = +this.rotation + 6.283;
      } else if (this.rotation > 6.283) {
        this.rotation = +this.rotation - 6.283;
      }
      if (!((+this.rotation <= (num7 - num8)) || (+this.rotation >= (num7 + num8)))) {
        this.rotation = num7;
      }
      if (($T00().rand.Next(5) | 0) === 0) {
        var num9 = ($T06().NewDust(
          $S00().Construct(this.position.X, (+this.position.Y + (+(this.height) * 0.25))), 
          this.width, 
          ((+(this.height) * 0.5) | 0), 
          5, 
          this.velocity.X, 
          2, 
          0, 
          new ($T07())(), 
          1
        ) | 0);
        var expr_1966_cp_0 = $T00().dust[num9];
        expr_1966_cp_0.velocity.X = +expr_1966_cp_0.velocity.X * 0.5;
        var expr_1984_cp_0 = $T00().dust[num9];
        expr_1984_cp_0.velocity.Y = +expr_1984_cp_0.velocity.Y * 0.1;
      }
      if (!(!$T00().dayTime && !dead)) {
        this.velocity.Y = +this.velocity.Y - 0.04;
        if ((this.timeLeft | 0) > 10) {
          this.timeLeft = 10;
          return;
        }
      } else if (+this.ai[0] === 0) {
        if (+this.ai[1] === 0) {
          (vector = vector.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num12 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector.X;
          var num13 = ((+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - 200) - +vector.Y;
          var num14 = Math.fround(Math.sqrt((num12 * num12) + (num13 * num13)));
          var num15 = num14;
          num14 = +((5 / num14));
          num12 *= num14;
          num13 *= num14;
          if (+this.velocity.X < num12) {
            this.velocity.X = +this.velocity.X + 0.04;
            if (!((+this.velocity.X >= 0) || (num12 <= 0))) {
              this.velocity.X = +this.velocity.X + 0.04;
            }
          } else if (+this.velocity.X > num12) {
            this.velocity.X = +this.velocity.X - 0.04;
            if (!((+this.velocity.X <= 0) || (num12 >= 0))) {
              this.velocity.X = +this.velocity.X - 0.04;
            }
          }
          if (+this.velocity.Y < num13) {
            this.velocity.Y = +this.velocity.Y + 0.04;
            if (!((+this.velocity.Y >= 0) || (num13 <= 0))) {
              this.velocity.Y = +this.velocity.Y + 0.04;
            }
          } else if (+this.velocity.Y > num13) {
            this.velocity.Y = +this.velocity.Y - 0.04;
            if (!((+this.velocity.Y <= 0) || (num13 >= 0))) {
              this.velocity.Y = +this.velocity.Y - 0.04;
            }
          }
          this.ai[2] += 1;
          if (+this.ai[2] >= 600) {
            this.ai[1] = 1;
            this.ai[2] = 0;
            this.ai[3] = 0;
            this.target = 8;
            this.netUpdate = true;
          } else if (!(((+this.position.Y + +(this.height)) >= +$T00().player[this.target].position.Y) || (num15 >= 500))) {
            if (!$T00().player[this.target].dead) {
              this.ai[3] += 1;
            }
            if (+this.ai[3] >= 90) {
              this.ai[3] = 0;
              this.rotation = num7;
              var num17 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector.X;
              var num18 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector.Y;
              var num19 = Math.fround(Math.sqrt((num17 * num17) + (num18 * num18)));
              num19 = +((5 / num19));
              var vector2 = vector.MemberwiseClone();
              vector3.X = num17 * num19;
              vector3.Y = num18 * num19;
              vector2.X = +vector2.X + (+vector3.X * 10);
              vector2.Y = +vector2.Y + (+vector3.Y * 10);
              if (($T00().netMode | 0) !== 1) {
                var num20 = ($thisType.NewNPC(((vector2.X) | 0), ((vector2.Y) | 0), 5, 0) | 0);
                $T00().npc[num20].velocity.X = +vector3.X;
                $T00().npc[num20].velocity.Y = +vector3.Y;
                if (!((($T00().netMode | 0) !== 2) || (num20 >= 1000))) {
                  $T0D().SendData(
                    23, 
                    -1, 
                    -1, 
                    "", 
                    num20, 
                    0, 
                    0, 
                    0
                  );
                }
              }
              $T00().PlaySound(3, ((vector2.X) | 0), ((vector2.Y) | 0), 1);

              for (var i = 0; i < 10; i = ((i + 1) | 0)) {
                $T06().NewDust(
                  vector2, 
                  20, 
                  20, 
                  5, 
                  +vector3.X * 0.4, 
                  +vector3.Y * 0.4, 
                  0, 
                  new ($T07())(), 
                  1
                );
              }
            }
          }
        } else if (+this.ai[1] === 1) {
          this.rotation = num7;
          (vector4 = vector4.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector4, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num22 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector4.X;
          var num23 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector4.Y;
          var num24 = Math.fround(Math.sqrt((num22 * num22) + (num23 * num23)));
          num24 = +((7 / num24));
          this.velocity.X = num22 * num24;
          this.velocity.Y = num23 * num24;
          this.ai[1] = 2;
        } else if (+this.ai[1] === 2) {
          this.ai[2] += 1;
          if (+this.ai[2] >= 40) {
            this.velocity.X = +this.velocity.X * 0.98;
            this.velocity.Y = +this.velocity.Y * 0.98;
            if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
              this.velocity.X = 0;
            }
            if (!((this.velocity.Y <= -0.1) || (this.velocity.Y >= 0.1))) {
              this.velocity.Y = 0;
            }
          } else {
            this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) - 1.57;
          }
          if (+this.ai[2] >= 120) {
            this.ai[3] += 1;
            this.ai[2] = 0;
            this.target = 8;
            this.rotation = num7;
            if (+this.ai[3] >= 3) {
              this.ai[1] = 0;
              this.ai[3] = 0;
            } else {
              this.ai[1] = 1;
            }
          }
        }
        if (+(this.life) < (+(this.lifeMax) * 0.5)) {
          this.ai[0] = 1;
          this.ai[1] = 0;
          this.ai[2] = 0;
          this.ai[3] = 0;
          this.netUpdate = true;
          return;
        }
      } else if (!((+this.ai[0] !== 1) && (+this.ai[0] !== 2))) {
        if (+this.ai[0] === 1) {
          this.ai[2] += 0.005;
          if (this.ai[2] > 0.5) {
            this.ai[2] = 0.5;
          }
        } else {
          this.ai[2] -= 0.005;
          if (+this.ai[2] < 0) {
            this.ai[2] = 0;
          }
        }
        this.rotation = +this.rotation + +this.ai[2];
        this.ai[1] += 1;
        if (+this.ai[1] === 100) {
          this.ai[0] += 1;
          this.ai[1] = 0;
          if (+this.ai[0] === 3) {
            this.ai[2] = 0;
          } else {
            $T00().PlaySound(3, ((this.position.X) | 0), ((this.position.Y) | 0), 1);

            for (var j = 0; j < 2; j = ((j + 1) | 0)) {
              $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 8);
              $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 7);
              $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 6);
            }

            for (var k = 0; k < 20; k = ((k + 1) | 0)) {
              $T06().NewDust(
                this.position, 
                this.width, 
                this.height, 
                5, 
                +($T00().rand.Next(-30, 31)) * 0.2, 
                +($T00().rand.Next(-30, 31)) * 0.2, 
                0, 
                new ($T07())(), 
                1
              );
            }
            $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
          }
        }
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          +($T00().rand.Next(-30, 31)) * 0.2, 
          +($T00().rand.Next(-30, 31)) * 0.2, 
          0, 
          new ($T07())(), 
          1
        );
        this.velocity.X = +this.velocity.X * 0.98;
        this.velocity.Y = +this.velocity.Y * 0.98;
        if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
          this.velocity.X = 0;
        }
        if (!((this.velocity.Y <= -0.1) || (this.velocity.Y >= 0.1))) {
          this.velocity.Y = 0;
          return;
        }
      } else {
        this.damage = 30;
        this.defense = 6;
        if (+this.ai[1] === 0) {
          (vector5 = vector5.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector5, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num27 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector5.X;
          var num28 = ((+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - 120) - +vector5.Y;
          var num29 = Math.fround(Math.sqrt((num27 * num27) + (num28 * num28)));
          num29 = +((6 / num29));
          num27 *= num29;
          num28 *= num29;
          if (+this.velocity.X < num27) {
            this.velocity.X = +this.velocity.X + 0.07;
            if (!((+this.velocity.X >= 0) || (num27 <= 0))) {
              this.velocity.X = +this.velocity.X + 0.07;
            }
          } else if (+this.velocity.X > num27) {
            this.velocity.X = +this.velocity.X - 0.07;
            if (!((+this.velocity.X <= 0) || (num27 >= 0))) {
              this.velocity.X = +this.velocity.X - 0.07;
            }
          }
          if (+this.velocity.Y < num28) {
            this.velocity.Y = +this.velocity.Y + 0.07;
            if (!((+this.velocity.Y >= 0) || (num28 <= 0))) {
              this.velocity.Y = +this.velocity.Y + 0.07;
            }
          } else if (+this.velocity.Y > num28) {
            this.velocity.Y = +this.velocity.Y - 0.07;
            if (!((+this.velocity.Y <= 0) || (num28 >= 0))) {
              this.velocity.Y = +this.velocity.Y - 0.07;
            }
          }
          this.ai[2] += 1;
          if (+this.ai[2] >= 200) {
            this.ai[1] = 1;
            this.ai[2] = 0;
            this.ai[3] = 0;
            this.target = 8;
            this.netUpdate = true;
            return;
          }
        } else {
          if (+this.ai[1] === 1) {
            $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
            this.rotation = num7;
            (vector6 = vector6.MemberwiseClone(), 
              $T03().prototype._ctor.call(vector6, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            var num31 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector6.X;
            var num32 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector6.Y;
            var num33 = Math.fround(Math.sqrt((num31 * num31) + (num32 * num32)));
            num33 = +((8 / num33));
            this.velocity.X = num31 * num33;
            this.velocity.Y = num32 * num33;
            this.ai[1] = 2;
            return;
          }
          if (+this.ai[1] === 2) {
            this.ai[2] += 1;
            if (+this.ai[2] >= 40) {
              this.velocity.X = +this.velocity.X * 0.97;
              this.velocity.Y = +this.velocity.Y * 0.97;
              if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
                this.velocity.X = 0;
              }
              if (!((this.velocity.Y <= -0.1) || (this.velocity.Y >= 0.1))) {
                this.velocity.Y = 0;
              }
            } else {
              this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) - 1.57;
            }
            if (+this.ai[2] >= 100) {
              this.ai[3] += 1;
              this.ai[2] = 0;
              this.target = 8;
              this.rotation = num7;
              if (+this.ai[3] >= 3) {
                this.ai[1] = 0;
                this.ai[3] = 0;
                return;
              }
              this.ai[1] = 1;
              return;
            }
          }
        }
      }
    } else if ((this.aiStyle | 0) === 5) {
      if (!(((this.target | 0) >= 0) && 
          ((this.target | 0) !== 8) && !$T00().player[this.target].dead)) {
        this.TargetClosest();
      }
      var num34 = 6;
      var num35 = 0.05;
      if ((this.type | 0) === 6) {
        num34 = 4;
        num35 = 0.02;
      } else if ((this.type | 0) === 23) {
        num34 = 2.5;
        num35 = 0.02;
      }
      (vector7 = vector7.MemberwiseClone(), 
        $T03().prototype._ctor.call(vector7, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
      var num36 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector7.X;
      var num37 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector7.Y;
      var num38 = Math.fround(Math.sqrt((num36 * num36) + (num37 * num37)));
      num38 = +((num34 / num38));
      num36 *= num38;
      num37 *= num38;
      if ($T00().player[this.target].dead) {
        num36 = +(((+(this.direction) * num34) / 2));
        num37 = +((-num34 / 2));
      }
      if (+this.velocity.X < num36) {
        this.velocity.X = +this.velocity.X + num35;
        if (!((+this.velocity.X >= 0) || (num36 <= 0))) {
          this.velocity.X = +this.velocity.X + num35;
        }
      } else if (+this.velocity.X > num36) {
        this.velocity.X = +this.velocity.X - num35;
        if (!((+this.velocity.X <= 0) || (num36 >= 0))) {
          this.velocity.X = +this.velocity.X - num35;
        }
      }
      if (+this.velocity.Y < num37) {
        this.velocity.Y = +this.velocity.Y + num35;
        if (!((+this.velocity.Y >= 0) || (num37 <= 0))) {
          this.velocity.Y = +this.velocity.Y + num35;
        }
      } else if (+this.velocity.Y > num37) {
        this.velocity.Y = +this.velocity.Y - num35;
        if (!((+this.velocity.Y <= 0) || (num37 >= 0))) {
          this.velocity.Y = +this.velocity.Y - num35;
        }
      }
      if ((this.type | 0) === 23) {
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X));
      } else {
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) - 1.57;
      }
      if (!(((this.type | 0) !== 6) && ((this.type | 0) !== 23))) {
        if (this.collideX) {
          this.netUpdate = true;
          this.velocity.X = +this.oldVelocity.X * -0.7;
          if (!(((this.direction | 0) !== -1) || 
              (+this.velocity.X <= 0) || (+this.velocity.X >= 2))) {
            this.velocity.X = 2;
          }
          if (!(((this.direction | 0) !== 1) || 
              (+this.velocity.X >= 0) || (+this.velocity.X <= -2))) {
            this.velocity.X = -2;
          }
        }
        if (this.collideY) {
          this.netUpdate = true;
          this.velocity.Y = +this.oldVelocity.Y * -0.7;
          if (!((+this.velocity.Y <= 0) || (+this.velocity.Y >= 2))) {
            this.velocity.Y = 2;
          }
          if (!((+this.velocity.Y >= 0) || (+this.velocity.Y <= -2))) {
            this.velocity.Y = -2;
          }
        }
        if ((this.type | 0) === 23) {
          var num39 = ($T06().NewDust(
            $S00().Construct((+this.position.X - +this.velocity.X), (+this.position.Y - +this.velocity.Y)), 
            this.width, 
            this.height, 
            6, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num39].noGravity = true;
          var expr_300E_cp_0 = $T00().dust[num39];
          expr_300E_cp_0.velocity.X = +expr_300E_cp_0.velocity.X * 0.3;
          var expr_302C_cp_0 = $T00().dust[num39];
          expr_302C_cp_0.velocity.Y = +expr_302C_cp_0.velocity.Y * 0.3;
        } else if (($T00().rand.Next(20) | 0) === 0) {
          var num40 = ($T06().NewDust(
            $S00().Construct(this.position.X, (+this.position.Y + (+(this.height) * 0.25))), 
            this.width, 
            ((+(this.height) * 0.5) | 0), 
            18, 
            this.velocity.X, 
            2, 
            this.alpha, 
            this.color.MemberwiseClone(), 
            this.scale
          ) | 0);
          var expr_30C8_cp_0 = $T00().dust[num40];
          expr_30C8_cp_0.velocity.X = +expr_30C8_cp_0.velocity.X * 0.5;
          var expr_30E6_cp_0 = $T00().dust[num40];
          expr_30E6_cp_0.velocity.Y = +expr_30E6_cp_0.velocity.Y * 0.1;
        }
      } else if (($T00().rand.Next(40) | 0) === 0) {
        var num41 = ($T06().NewDust(
          $S00().Construct(this.position.X, (+this.position.Y + (+(this.height) * 0.25))), 
          this.width, 
          ((+(this.height) * 0.5) | 0), 
          5, 
          this.velocity.X, 
          2, 
          0, 
          new ($T07())(), 
          1
        ) | 0);
        var expr_317F_cp_0 = $T00().dust[num41];
        expr_317F_cp_0.velocity.X = +expr_317F_cp_0.velocity.X * 0.5;
        var expr_319D_cp_0 = $T00().dust[num41];
        expr_319D_cp_0.velocity.Y = +expr_319D_cp_0.velocity.Y * 0.1;
      }
      if (!(!($T00().dayTime && 
            ((this.type | 0) !== 6) && 
            ((this.type | 0) !== 23)) && !$T00().player[this.target].dead)) {
        this.velocity.Y = +this.velocity.Y - (num35 * 2);
        if ((this.timeLeft | 0) > 10) {
          this.timeLeft = 10;
          return;
        }
      }
    } else if ((this.aiStyle | 0) === 6) {
      if (!(((this.target | 0) >= 0) && 
          ((this.target | 0) !== 8) && !$T00().player[this.target].dead)) {
        this.TargetClosest();
      }
      if (!(!$T00().player[this.target].dead || ((this.timeLeft | 0) <= 10))) {
        this.timeLeft = 10;
      }
      if (($T00().netMode | 0) !== 1) {
        if (!((((this.type | 0) !== 7) && 
              ((this.type | 0) !== 8) && 
              ((this.type | 0) !== 10) && 
              ((this.type | 0) !== 11) && 
              ((this.type | 0) !== 13) && 
              ((this.type | 0) !== 14) && 
              ((this.type | 0) !== 39) && 
              ((this.type | 0) !== 40)) || (+this.ai[0] !== 0))) {
          if (!(((this.type | 0) !== 7) && 
              ((this.type | 0) !== 10) && 
              ((this.type | 0) !== 13) && ((this.type | 0) !== 39))) {
            this.ai[2] = 10;
            if ((this.type | 0) === 10) {
              this.ai[2] = 5;
            }
            if ((this.type | 0) === 13) {
              this.ai[2] = 50;
            }
            if ((this.type | 0) === 39) {
              this.ai[2] = 15;
            }
            this.ai[0] = +($thisType.NewNPC(((this.position.X) | 0), ((this.position.Y) | 0), (((this.type | 0) + 1) | 0), this.whoAmI));
          } else if (!((((this.type | 0) !== 8) && 
                ((this.type | 0) !== 11) && 
                ((this.type | 0) !== 14) && 
                ((this.type | 0) !== 40)) || (+this.ai[2] <= 0))) {
            this.ai[0] = +($thisType.NewNPC(((this.position.X) | 0), ((this.position.Y) | 0), this.type, this.whoAmI));
          } else {
            this.ai[0] = +($thisType.NewNPC(((this.position.X) | 0), ((this.position.Y) | 0), (((this.type | 0) + 1) | 0), this.whoAmI));
          }
          $T00().npc[((this.ai[0]) | 0)].ai[1] = +(this.whoAmI);
          $T00().npc[((this.ai[0]) | 0)].ai[2] = +this.ai[2] - 1;
          this.netUpdate = true;
        }
        if (!((((this.type | 0) !== 8) && 
              ((this.type | 0) !== 9) && 
              ((this.type | 0) !== 11) && 
              ((this.type | 0) !== 12) && 
              ((this.type | 0) !== 40) && 
              ((this.type | 0) !== 41)) || $T00().npc[((this.ai[1]) | 0)].active)) {
          this.life = 0;
          this.HitEffect(0, 10);
          this.active = false;
        }
        if (!((((this.type | 0) !== 7) && 
              ((this.type | 0) !== 8) && 
              ((this.type | 0) !== 10) && 
              ((this.type | 0) !== 11) && 
              ((this.type | 0) !== 39) && 
              ((this.type | 0) !== 40)) || $T00().npc[((this.ai[0]) | 0)].active)) {
          this.life = 0;
          this.HitEffect(0, 10);
          this.active = false;
        }
        if (!(((this.type | 0) !== 13) && 
            ((this.type | 0) !== 14) && ((this.type | 0) !== 15))) {
          if (!($T00().npc[((this.ai[1]) | 0)].active || $T00().npc[((this.ai[0]) | 0)].active)) {
            this.life = 0;
            this.HitEffect(0, 10);
            this.active = false;
          }
          if (!(((this.type | 0) !== 13) || $T00().npc[((this.ai[0]) | 0)].active)) {
            this.life = 0;
            this.HitEffect(0, 10);
            this.active = false;
          }
          if (!(((this.type | 0) !== 15) || $T00().npc[((this.ai[1]) | 0)].active)) {
            this.life = 0;
            this.HitEffect(0, 10);
            this.active = false;
          }
          if (!(((this.type | 0) !== 14) || $T00().npc[((this.ai[1]) | 0)].active)) {
            this.type = 13;
            var num42 = (this.whoAmI | 0);
            var num43 = (this.life | 0);
            var num44 = +this.ai[0];
            $S02().CallVirtual("SetDefaults", null, this, this.type);
            this.life = num43;
            if ((this.life | 0) > (this.lifeMax | 0)) {
              this.life = (this.lifeMax | 0);
            }
            this.ai[0] = num44;
            this.TargetClosest();
            this.netUpdate = true;
            this.whoAmI = num42;
          }
          if (!(((this.type | 0) !== 14) || $T00().npc[((this.ai[0]) | 0)].active)) {
            var num45 = (this.life | 0);
            var num46 = (this.whoAmI | 0);
            var num47 = +this.ai[1];
            $S02().CallVirtual("SetDefaults", null, this, this.type);
            this.life = num45;
            if ((this.life | 0) > (this.lifeMax | 0)) {
              this.life = (this.lifeMax | 0);
            }
            this.ai[1] = num47;
            this.TargetClosest();
            this.netUpdate = true;
            this.whoAmI = num46;
          }
          if ((this.life | 0) === 0) {
            var flag4 = true;

          $loop10: 
            for (var l = 0; l < 1000; l = ((l + 1) | 0)) {
              if (!(!$T00().npc[l].active || ((($T00().npc[l].type | 0) !== 13) && 
                    (($T00().npc[l].type | 0) !== 14) && 
                    (($T00().npc[l].type | 0) !== 15)))) {
                flag4 = false;
                break $loop10;
              }
            }
            if (flag4) {
              this.boss = true;
              this.NPCLoot();
            }
          }
        }
        if (!(this.active || (($T00().netMode | 0) !== 2))) {
          $T0D().SendData(
            28, 
            -1, 
            -1, 
            "", 
            this.whoAmI, 
            -1, 
            0, 
            0
          );
        }
      }
      var num48 = ((((+(+this.position.X / 16)) | 0) - 1) | 0);
      var num49 = ((((+((+this.position.X + +(this.width)) / 16)) | 0) + 2) | 0);
      var num50 = ((((+(+this.position.Y / 16)) | 0) - 1) | 0);
      var num51 = ((((+((+this.position.Y + +(this.height)) / 16)) | 0) + 2) | 0);
      if (num48 < 0) {
        num48 = 0;
      }
      if (num49 > ($T00().maxTilesX | 0)) {
        num49 = ($T00().maxTilesX | 0);
      }
      if (num50 < 0) {
        num50 = 0;
      }
      if (num51 > ($T00().maxTilesY | 0)) {
        num51 = ($T00().maxTilesY | 0);
      }
      var flag5 = false;

      for (var m = num48; m < num49; m = ((m + 1) | 0)) {

        for (var n = num50; n < num51; n = ((n + 1) | 0)) {
          if (!(($T00().tile.Get(m, n) === null) || (!($T00().tile.Get(m, n).active && 
                  ($T00().tileSolid[$T00().tile.Get(m, n).type] || 
                    ($T00().tileSolidTop[$T00().tile.Get(m, n).type] && 
                      (($T00().tile.Get(m, n).frameY | 0) === 0)))) && 
                (($T00().tile.Get(m, n).liquid | 0) <= 64)))) {
            vector8.X = +(m * 16);
            vector8.Y = +(n * 16);
            if (!(((+this.position.X + +(this.width)) <= +vector8.X) || 
                (+this.position.X >= (+vector8.X + 16)) || 
                ((+this.position.Y + +(this.height)) <= +vector8.Y) || (+this.position.Y >= (+vector8.Y + 16)))) {
              flag5 = true;
              if (!((($T00().rand.Next(40) | 0) !== 0) || !$T00().tile.Get(m, n).active)) {
                $T0C().KillTile(
                  m, 
                  n, 
                  true, 
                  true, 
                  false
                );
              }
              if (!((($T00().netMode | 0) === 1) || (($T00().tile.Get(m, n).type | 0) !== 2))) {
                var arg_3A2B_0 = ($T00().tile.Get(m, ((n - 1) | 0)).type | 0);
              }
            }
          }
        }
      }
      var num52 = 8;
      var num53 = 0.07;
      if ((this.type | 0) === 10) {
        num52 = 6;
        num53 = 0.05;
      }
      if ((this.type | 0) === 13) {
        num52 = 11;
        num53 = 0.08;
      }
      (vector9 = vector9.MemberwiseClone(), 
        $T03().prototype._ctor.call(vector9, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
      var num54 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector9.X;
      var num55 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector9.Y;
      var num56 = Math.fround(Math.sqrt((num54 * num54) + (num55 * num55)));
      if (+this.ai[1] > 0) {
        num54 = (+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - +vector9.X;
        num55 = (+$T00().npc[((this.ai[1]) | 0)].position.Y + +((($T00().npc[((this.ai[1]) | 0)].height | 0) / 2 | 0))) - +vector9.Y;
        this.rotation = Math.fround(Math.atan2(num55, num54)) + 1.57;
        num56 = Math.fround(Math.sqrt((num54 * num54) + (num55 * num55)));
        num56 = +(((num56 - +(this.width)) / num56));
        num54 *= num56;
        num55 *= num56;
        this.velocity = new ($T03())();
        this.position.X = +this.position.X + num54;
        this.position.Y = +this.position.Y + num55;
        return;
      }
      if (!flag5) {
        this.TargetClosest();
        this.velocity.Y = +this.velocity.Y + 0.11;
        if (+this.velocity.Y > num52) {
          this.velocity.Y = num52;
        }
        if ((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y)) < (num52 * 0.4)) {
          if (+this.velocity.X < 0) {
            this.velocity.X = +this.velocity.X - (num53 * 1.1);
          } else {
            this.velocity.X = +this.velocity.X + (num53 * 1.1);
          }
        } else if (+this.velocity.Y === num52) {
          if (+this.velocity.X < num54) {
            this.velocity.X = +this.velocity.X + num53;
          } else if (+this.velocity.X > num54) {
            this.velocity.X = +this.velocity.X - num53;
          }
        } else if (+this.velocity.Y > 4) {
          if (+this.velocity.X < 0) {
            this.velocity.X = +this.velocity.X + (num53 * 0.9);
          } else {
            this.velocity.X = +this.velocity.X - (num53 * 0.9);
          }
        }
      } else {
        if ((this.soundDelay | 0) === 0) {
          var num57 = +((num56 / 40));
          if (num57 < 10) {
            num57 = 10;
          }
          if (num57 > 20) {
            num57 = 20;
          }
          this.soundDelay = ((num57) | 0);
          $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        }
        num56 = Math.fround(Math.sqrt((num54 * num54) + (num55 * num55)));
        var num58 = (Math.abs(num54));
        var num59 = (Math.abs(num55));
        num56 = +((num52 / num56));
        num54 *= num56;
        num55 *= num56;
        if (!(!((+this.velocity.X > 0) && 
              (num54 > 0)) && 
            !((+this.velocity.X < 0) && 
              (num54 < 0)) && 
            !((+this.velocity.Y > 0) && 
              (num55 > 0)) && ((+this.velocity.Y >= 0) || 
              (num55 >= 0)))) {
          if (+this.velocity.X < num54) {
            this.velocity.X = +this.velocity.X + num53;
          } else if (+this.velocity.X > num54) {
            this.velocity.X = +this.velocity.X - num53;
          }
          if (+this.velocity.Y < num55) {
            this.velocity.Y = +this.velocity.Y + num53;
          } else if (+this.velocity.Y > num55) {
            this.velocity.Y = +this.velocity.Y - num53;
          }
        } else if (num58 > num59) {
          if (+this.velocity.X < num54) {
            this.velocity.X = +this.velocity.X + (num53 * 1.1);
          } else if (+this.velocity.X > num54) {
            this.velocity.X = +this.velocity.X - (num53 * 1.1);
          }
          if ((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y)) < (num52 * 0.5)) {
            if (+this.velocity.Y > 0) {
              this.velocity.Y = +this.velocity.Y + num53;
            } else {
              this.velocity.Y = +this.velocity.Y - num53;
            }
          }
        } else {
          if (+this.velocity.Y < num55) {
            this.velocity.Y = +this.velocity.Y + (num53 * 1.1);
          } else if (+this.velocity.Y > num55) {
            this.velocity.Y = +this.velocity.Y - (num53 * 1.1);
          }
          if ((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y)) < (num52 * 0.5)) {
            if (+this.velocity.X > 0) {
              this.velocity.X = +this.velocity.X + num53;
            } else {
              this.velocity.X = +this.velocity.X - num53;
            }
          }
        }
      }
      this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 1.57;
      return;
    } else if ((this.aiStyle | 0) === 7) {
      var num60 = ((((+this.position.X + +(((this.width | 0) / 2 | 0))) | 0) / 16) | 0);
      var num61 = (((((+this.position.Y + +(this.height)) + 1) | 0) / 16) | 0);
      var flag6 = false;
      this.directionY = -1;
      if ((this.direction | 0) === 0) {
        this.direction = 1;
      }

      for (var num62 = 0; num62 < 8; num62 = ((num62 + 1) | 0)) {
        if (!(!$T00().player[num62].active || (($T00().player[num62].talkNPC | 0) !== (this.whoAmI | 0)))) {
          flag6 = true;
          if (+this.ai[0] !== 0) {
            this.netUpdate = true;
          }
          this.ai[0] = 0;
          this.ai[1] = 300;
          this.ai[2] = 100;
          if ((+$T00().player[num62].position.X + +((($T00().player[num62].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
            this.direction = -1;
          } else {
            this.direction = 1;
          }
        }
      }
      if (+this.ai[3] > 0) {
        this.life = -1;
        this.HitEffect(0, 10);
        this.active = false;
        if ((this.type | 0) === 37) {
          $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
        }
      }
      if (!(((this.type | 0) !== 37) || (($T00().netMode | 0) === 1))) {
        this.homeless = false;
        this.homeTileX = ($T00().dungeonX | 0);
        this.homeTileY = ($T00().dungeonY | 0);
        if ($thisType.downedBoss3) {
          this.ai[3] = 1;
          this.netUpdate = true;
        }
        if (!($T00().dayTime || 
            !flag6 || (+this.ai[3] !== 0))) {
          var flag7 = true;

        $loop7: 
          for (var num63 = 0; num63 < 1000; num63 = ((num63 + 1) | 0)) {
            if (!(!$T00().npc[num63].active || (($T00().npc[num63].type | 0) !== 35))) {
              flag7 = false;
              break $loop7;
            }
          }
          if (flag7) {
            var num64 = ($thisType.NewNPC(((((this.position.X) | 0) + (((this.width | 0) / 2) | 0)) | 0), ((((this.position.Y) | 0) + (((this.height | 0) / 2) | 0)) | 0), 35, 0) | 0);
            $T00().npc[num64].netUpdate = true;
            if (($T00().netMode | 0) === 0) {
              $T00().NewText(JSIL.ConcatString("Skeletron", " has awoken!"), 175, 75, 255);
            } else if (($T00().netMode | 0) === 2) {
              $T0D().SendData(
                25, 
                -1, 
                -1, 
                JSIL.ConcatString("Skeletron", " has awoken!"), 
                8, 
                175, 
                75, 
                255
              );
            }
          }
          this.ai[3] = 1;
          this.netUpdate = true;
        }
      }
      if (!((($T00().netMode | 0) === 1) || 
          $T00().dayTime || 
          ((num60 === (this.homeTileX | 0)) && 
            (num61 === (this.homeTileY | 0))) || this.homeless)) {
        var flag8 = true;

        for (var num65 = 0; num65 < 2; num65 = ((num65 + 1) | 0)) {
          (rectangle = rectangle.MemberwiseClone(), 
            $T04().prototype._ctor.call(rectangle, ((((+this.position.X + +(((this.width | 0) / 2 | 0))) - +((($T00().screenWidth | 0) / 2 | 0))) - +($thisType.safeRangeX)) | 0), ((((+this.position.Y + +(((this.height | 0) / 2 | 0))) - +((($T00().screenHeight | 0) / 2 | 0))) - +($thisType.safeRangeY)) | 0), ((($T00().screenWidth | 0) + Math.imul($thisType.safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($thisType.safeRangeY, 2)) | 0)));
          if (num65 === 1) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T04().prototype._ctor.call(rectangle, ((((((Math.imul(this.homeTileX, 16) + 8) | 0) - ((($T00().screenWidth | 0) / 2) | 0)) | 0) - ($thisType.safeRangeX | 0)) | 0), ((((((Math.imul(this.homeTileY, 16) + 8) | 0) - ((($T00().screenHeight | 0) / 2) | 0)) | 0) - ($thisType.safeRangeY | 0)) | 0), ((($T00().screenWidth | 0) + Math.imul($thisType.safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($thisType.safeRangeY, 2)) | 0)));
          }

        $loop9: 
          for (var num66 = 0; num66 < 8; num66 = ((num66 + 1) | 0)) {
            if ($T00().player[num66].active) {
              (rectangle2 = rectangle2.MemberwiseClone(), 
                $T04().prototype._ctor.call(rectangle2, (($T00().player[num66].position.X) | 0), (($T00().player[num66].position.Y) | 0), $T00().player[num66].width, $T00().player[num66].height));
              if (rectangle2.Intersects(rectangle.MemberwiseClone())) {
                flag8 = false;
                break $loop9;
              }
            }
            if (!flag8) {
              break $loop9;
            }
          }
        }
        if (flag8) {
          if (!(((this.type | 0) !== 37) && $T13().SolidTiles((((this.homeTileX | 0) - 1) | 0), (((this.homeTileX | 0) + 1) | 0), (((this.homeTileY | 0) - 3) | 0), (((this.homeTileY | 0) - 1) | 0)))) {
            this.velocity.X = 0;
            this.velocity.Y = 0;
            this.position.X = +(((Math.imul(this.homeTileX, 16) + 8) | 0) - (((this.width | 0) / 2) | 0));
            this.position.Y = +(Math.imul(this.homeTileY, 16) - (this.height | 0)) - 0.1;
            this.netUpdate = true;
          } else {
            this.homeless = true;
            $T0C().QuickFindHome(this.whoAmI);
          }
        }
      }
      if (+this.ai[0] === 0) {
        if (+this.ai[2] > 0) {
          this.ai[2] -= 1;
        }
        if (!($T00().dayTime || flag6)) {
          if (($T00().netMode | 0) !== 1) {
            if (!((num60 !== (this.homeTileX | 0)) || (num61 !== (this.homeTileY | 0)))) {
              if (+this.velocity.X !== 0) {
                this.netUpdate = true;
              }
              if (this.velocity.X > 0.1) {
                this.velocity.X = +this.velocity.X - 0.1;
              } else if (this.velocity.X < -0.1) {
                this.velocity.X = +this.velocity.X + 0.1;
              } else {
                this.velocity.X = 0;
              }
            } else if (!flag6) {
              if (num60 > (this.homeTileX | 0)) {
                this.direction = -1;
              } else {
                this.direction = 1;
              }
              this.ai[0] = 1;
              this.ai[1] = +(200 + ($T00().rand.Next(200) | 0));
              this.ai[2] = 0;
              this.netUpdate = true;
            }
          }
        } else {
          if (this.velocity.X > 0.1) {
            this.velocity.X = +this.velocity.X - 0.1;
          } else if (this.velocity.X < -0.1) {
            this.velocity.X = +this.velocity.X + 0.1;
          } else {
            this.velocity.X = 0;
          }
          if (+this.ai[1] > 0) {
            this.ai[1] -= 1;
          }
          if (+this.ai[1] <= 0) {
            this.ai[0] = 1;
            this.ai[1] = +(200 + ($T00().rand.Next(200) | 0));
            this.ai[2] = 0;
            this.netUpdate = true;
          }
        }
        if (!((($T00().netMode | 0) === 1) || (!$T00().dayTime && 
              ((num60 !== (this.homeTileX | 0)) || 
                (num61 !== (this.homeTileY | 0)))))) {
          if (!((num60 >= (((this.homeTileX | 0) - 25) | 0)) && (num60 <= (((this.homeTileX | 0) + 25) | 0)))) {
            if (+this.ai[2] === 0) {
              if (!((num60 >= (((this.homeTileX | 0) - 50) | 0)) || ((this.direction | 0) !== -1))) {
                this.direction = 1;
                this.netUpdate = true;
                return;
              }
              if (!((num60 <= (((this.homeTileX | 0) + 50) | 0)) || ((this.direction | 0) !== 1))) {
                this.direction = -1;
                this.netUpdate = true;
                return;
              }
            }
          } else if (!((($T00().rand.Next(80) | 0) !== 0) || (+this.ai[2] !== 0))) {
            this.ai[2] = 200;
            this.direction = Math.imul(this.direction, -1);
            this.netUpdate = true;
            return;
          }
        }
      } else if (+this.ai[0] === 1) {
        if (!((($T00().netMode | 0) === 1) || 
            $T00().dayTime || 
            (num60 !== (this.homeTileX | 0)) || (num61 !== (this.homeTileY | 0)))) {
          this.ai[0] = 0;
          this.ai[1] = +(200 + ($T00().rand.Next(200) | 0));
          this.ai[2] = 60;
          this.netUpdate = true;
          return;
        }
        if (!((($T00().netMode | 0) === 1) || 
            this.homeless || ((num60 >= (((this.homeTileX | 0) - 35) | 0)) && 
              (num60 <= (((this.homeTileX | 0) + 35) | 0))))) {
          if (!((+this.position.X >= +((this.homeTileX | 0) * 16)) || ((this.direction | 0) !== -1))) {
            this.direction = 1;
            this.velocity.X = 0.1;
            this.netUpdate = true;
          } else if (!((+this.position.X <= +((this.homeTileX | 0) * 16)) || ((this.direction | 0) !== 1))) {
            this.direction = -1;
            this.velocity.X = -0.1;
            this.netUpdate = true;
          }
        }
        this.ai[1] -= 1;
        if (+this.ai[1] <= 0) {
          this.ai[0] = 0;
          this.ai[1] = +(300 + ($T00().rand.Next(300) | 0));
          this.ai[2] = 60;
          this.netUpdate = true;
        }
        if (!(!this.closeDoor || ((+(((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) <= +((this.doorX | 0) + 2)) && 
              (+(((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) >= +((this.doorX | 0) - 2))))) {
          var flag9 = $T0C().CloseDoor(this.doorX, this.doorY, false);
          if (flag9) {
            this.closeDoor = false;
            $T0D().SendData(
              19, 
              -1, 
              -1, 
              "", 
              1, 
              +(this.doorX), 
              +(this.doorY), 
              +(this.direction)
            );
          }
          if (!((+(((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) <= +((this.doorX | 0) + 4)) && 
              (+(((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) >= +((this.doorX | 0) - 4)) && 
              (+(((+this.position.Y + +(((this.height | 0) / 2 | 0))) / 16)) <= +((this.doorY | 0) + 4)) && (+(((+this.position.Y + +(((this.height | 0) / 2 | 0))) / 16)) >= +((this.doorY | 0) - 4)))) {
            this.closeDoor = false;
          }
        }
        if (!((+this.velocity.X >= -1) && (+this.velocity.X <= 1))) {
          if (+this.velocity.Y === 0) {
            this.velocity = $S01().CallStatic($T03(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.8).MemberwiseClone();
          }
        } else if (!((this.velocity.X >= 1.15) || ((this.direction | 0) !== 1))) {
          this.velocity.X = +this.velocity.X + 0.07;
          if (+this.velocity.X > 1) {
            this.velocity.X = 1;
          }
        } else if (!((+this.velocity.X <= -1) || ((this.direction | 0) !== -1))) {
          this.velocity.X = +this.velocity.X - 0.07;
          if (+this.velocity.X > 1) {
            this.velocity.X = 1;
          }
        }
        if (+this.velocity.Y === 0) {
          if (+this.position.X === +this.ai[2]) {
            this.direction = Math.imul(this.direction, -1);
          }
          this.ai[2] = -1;
          var num67 = ((+(((+this.position.X + +(((this.width | 0) / 2 | 0))) + +(15 * (this.direction | 0))) / 16)) | 0);
          var num68 = ((+(((+this.position.Y + +(this.height)) - 16) / 16)) | 0);
          if ($T00().tile.Get(num67, num68) === null) {
            $T00().tile.Set(num67, num68, new ($T0B())());
          }
          if ($T00().tile.Get(num67, ((num68 - 1) | 0)) === null) {
            $T00().tile.Set(num67, ((num68 - 1) | 0), new ($T0B())());
          }
          if ($T00().tile.Get(num67, ((num68 - 2) | 0)) === null) {
            $T00().tile.Set(num67, ((num68 - 2) | 0), new ($T0B())());
          }
          if ($T00().tile.Get(num67, ((num68 - 3) | 0)) === null) {
            $T00().tile.Set(num67, ((num68 - 3) | 0), new ($T0B())());
          }
          if ($T00().tile.Get(num67, ((num68 + 1) | 0)) === null) {
            $T00().tile.Set(num67, ((num68 + 1) | 0), new ($T0B())());
          }
          if ($T00().tile.Get(((num67 + (this.direction | 0)) | 0), ((num68 - 1) | 0)) === null) {
            $T00().tile.Set(((num67 + (this.direction | 0)) | 0), ((num68 - 1) | 0), new ($T0B())());
          }
          if ($T00().tile.Get(((num67 + (this.direction | 0)) | 0), ((num68 + 1) | 0)) === null) {
            $T00().tile.Set(((num67 + (this.direction | 0)) | 0), ((num68 + 1) | 0), new ($T0B())());
          }
          if (!(!$T00().tile.Get(num67, ((num68 - 2) | 0)).active || 
              (($T00().tile.Get(num67, ((num68 - 2) | 0)).type | 0) !== 10) || ((($T00().rand.Next(10) | 0) !== 0) && 
                $T00().dayTime))) {
            if (($T00().netMode | 0) !== 1) {
              var flag10 = $T0C().OpenDoor(num67, ((num68 - 2) | 0), this.direction);
              if (flag10) {
                this.closeDoor = true;
                this.doorX = num67;
                this.doorY = ((num68 - 2) | 0);
                $T0D().SendData(
                  19, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num67, 
                  +(num68 - 2), 
                  +(this.direction)
                );
                this.netUpdate = true;
                this.ai[1] += 80;
                return;
              }
              if ($T0C().OpenDoor(num67, ((num68 - 2) | 0), -this.direction)) {
                this.closeDoor = true;
                this.doorX = num67;
                this.doorY = ((num68 - 2) | 0);
                $T0D().SendData(
                  19, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num67, 
                  +(num68 - 2), 
                  +(-+(this.direction))
                );
                this.netUpdate = true;
                this.ai[1] += 80;
                return;
              }
              this.direction = Math.imul(this.direction, -1);
              this.netUpdate = true;
              return;
            }
          } else {
            if (!(!((+this.velocity.X < 0) && 
                  ((this.spriteDirection | 0) === -1)) && ((+this.velocity.X <= 0) || 
                  ((this.spriteDirection | 0) !== 1)))) {
              if (!(!$T00().tile.Get(num67, ((num68 - 2) | 0)).active || 
                  !$T00().tileSolid[$T00().tile.Get(num67, ((num68 - 2) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get(num67, ((num68 - 2) | 0)).type])) {
                if (!(!(((this.direction | 0) === 1) && 
                      !$T13().SolidTiles(((num67 - 2) | 0), ((num67 - 1) | 0), ((num68 - 5) | 0), ((num68 - 1) | 0))) && (((this.direction | 0) !== -1) || 
                      $T13().SolidTiles(((num67 + 1) | 0), ((num67 + 2) | 0), ((num68 - 5) | 0), ((num68 - 1) | 0))))) {
                  if (!$T13().SolidTiles(num67, num67, ((num68 - 5) | 0), ((num68 - 3) | 0))) {
                    this.velocity.Y = -6;
                    this.netUpdate = true;
                  } else {
                    this.direction = Math.imul(this.direction, -1);
                    this.netUpdate = true;
                  }
                } else {
                  this.direction = Math.imul(this.direction, -1);
                  this.netUpdate = true;
                }
              } else if (!(!$T00().tile.Get(num67, ((num68 - 1) | 0)).active || 
                  !$T00().tileSolid[$T00().tile.Get(num67, ((num68 - 1) | 0)).type] || $T00().tileSolidTop[$T00().tile.Get(num67, ((num68 - 1) | 0)).type])) {
                if (!(!(((this.direction | 0) === 1) && 
                      !$T13().SolidTiles(((num67 - 2) | 0), ((num67 - 1) | 0), ((num68 - 4) | 0), ((num68 - 1) | 0))) && (((this.direction | 0) !== -1) || 
                      $T13().SolidTiles(((num67 + 1) | 0), ((num67 + 2) | 0), ((num68 - 4) | 0), ((num68 - 1) | 0))))) {
                  if (!$T13().SolidTiles(num67, num67, ((num68 - 4) | 0), ((num68 - 2) | 0))) {
                    this.velocity.Y = -5;
                    this.netUpdate = true;
                  } else {
                    this.direction = Math.imul(this.direction, -1);
                    this.netUpdate = true;
                  }
                } else {
                  this.direction = Math.imul(this.direction, -1);
                  this.netUpdate = true;
                }
              } else if (!(!$T00().tile.Get(num67, num68).active || 
                  !$T00().tileSolid[$T00().tile.Get(num67, num68).type] || $T00().tileSolidTop[$T00().tile.Get(num67, num68).type])) {
                if (!(!(((this.direction | 0) === 1) && 
                      !$T13().SolidTiles(((num67 - 2) | 0), num67, ((num68 - 3) | 0), ((num68 - 1) | 0))) && (((this.direction | 0) !== -1) || 
                      $T13().SolidTiles(num67, ((num67 + 2) | 0), ((num68 - 3) | 0), ((num68 - 1) | 0))))) {
                  this.velocity.Y = -3.6;
                  this.netUpdate = true;
                } else {
                  this.direction = Math.imul(this.direction, -1);
                  this.netUpdate = true;
                }
              } else if (!((($T00().netMode | 0) === 1) || 
                  (num60 < (((this.homeTileX | 0) - 35) | 0)) || 
                  (num60 > (((this.homeTileX | 0) + 35) | 0)) || 
                  ($T00().tile.Get(num67, ((num68 + 1) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(num67, ((num68 + 1) | 0)).type]) || 
                  ($T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 1) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 1) | 0)).type]) || 
                  ($T00().tile.Get(num67, ((num68 + 2) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(num67, ((num68 + 2) | 0)).type]) || 
                  ($T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 2) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 2) | 0)).type]) || 
                  ($T00().tile.Get(num67, ((num68 + 3) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(num67, ((num68 + 3) | 0)).type]) || 
                  ($T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 3) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 3) | 0)).type]) || 
                  ($T00().tile.Get(num67, ((num68 + 4) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(num67, ((num68 + 4) | 0)).type]) || ($T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 4) | 0)).active && 
                    $T00().tileSolid[$T00().tile.Get(((num67 - (this.direction | 0)) | 0), ((num68 + 4) | 0)).type]))) {
                this.direction = Math.imul(this.direction, -1);
                this.velocity.X = +this.velocity.X * -1;
                this.netUpdate = true;
              }
              if (+this.velocity.Y < 0) {
                this.ai[2] = +this.position.X;
              }
            }
            if (!((+this.velocity.Y >= 0) || !this.wet)) {
              this.velocity.Y = +this.velocity.Y * 1.2;
              return;
            }
          }
        }
      }
    } else if ((this.aiStyle | 0) === 8) {
      this.TargetClosest();
      this.velocity.X = +this.velocity.X * 0.93;
      if (!((this.velocity.X <= -0.1) || (this.velocity.X >= 0.1))) {
        this.velocity.X = 0;
      }
      if (+this.ai[0] === 0) {
        this.ai[0] = 500;
      }
      if (!((+this.ai[2] === 0) || (+this.ai[3] === 0))) {
        $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 8);

        for (var num69 = 0; num69 < 50; num69 = ((num69 + 1) | 0)) {
          if ((this.type | 0) === 29) {
            var num70 = ($T06().NewDust(
              ($hoisted00._ctor(this.position.X, this.position.Y), 
                $hoisted00), 
              this.width, 
              this.height, 
              27, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              +($T00().rand.Next(1, 3))
            ) | 0);
            $T00().dust[num70].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num70].velocity.MemberwiseClone(), 3).MemberwiseClone();
            if (+$T00().dust[num70].scale > 1) {
              $T00().dust[num70].noGravity = true;
            }
          } else if ((this.type | 0) === 32) {
            var num71 = ($T06().NewDust(
              ($hoisted01._ctor(this.position.X, this.position.Y), 
                $hoisted01), 
              this.width, 
              this.height, 
              29, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              2.5
            ) | 0);
            $T00().dust[num71].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num71].velocity.MemberwiseClone(), 3).MemberwiseClone();
            $T00().dust[num71].noGravity = true;
          } else {
            var num72 = ($T06().NewDust(
              ($hoisted02._ctor(this.position.X, this.position.Y), 
                $hoisted02), 
              this.width, 
              this.height, 
              6, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              2.5
            ) | 0);
            $T00().dust[num72].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num72].velocity.MemberwiseClone(), 3).MemberwiseClone();
            $T00().dust[num72].noGravity = true;
          }
        }
        this.position.X = ((+this.ai[2] * 16) - +(((this.width | 0) / 2 | 0))) + 8;
        this.position.Y = (+this.ai[3] * 16) - +(this.height);
        this.velocity.X = 0;
        this.velocity.Y = 0;
        this.ai[2] = 0;
        this.ai[3] = 0;
        $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 8);

        for (var num73 = 0; num73 < 50; num73 = ((num73 + 1) | 0)) {
          if ((this.type | 0) === 29) {
            var num74 = ($T06().NewDust(
              ($hoisted03._ctor(this.position.X, this.position.Y), 
                $hoisted03), 
              this.width, 
              this.height, 
              27, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              +($T00().rand.Next(1, 3))
            ) | 0);
            $T00().dust[num74].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num74].velocity.MemberwiseClone(), 3).MemberwiseClone();
            if (+$T00().dust[num74].scale > 1) {
              $T00().dust[num74].noGravity = true;
            }
          } else if ((this.type | 0) === 32) {
            var num75 = ($T06().NewDust(
              ($hoisted04._ctor(this.position.X, this.position.Y), 
                $hoisted04), 
              this.width, 
              this.height, 
              29, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              2.5
            ) | 0);
            $T00().dust[num75].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num75].velocity.MemberwiseClone(), 3).MemberwiseClone();
            $T00().dust[num75].noGravity = true;
          } else {
            var num76 = ($T06().NewDust(
              ($hoisted05._ctor(this.position.X, this.position.Y), 
                $hoisted05), 
              this.width, 
              this.height, 
              6, 
              0, 
              0, 
              100, 
              new ($T07())(), 
              2.5
            ) | 0);
            $T00().dust[num76].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num76].velocity.MemberwiseClone(), 3).MemberwiseClone();
            $T00().dust[num76].noGravity = true;
          }
        }
      }
      this.ai[0] += 1;
      if (!((+this.ai[0] !== 75) && 
          (+this.ai[0] !== 150) && (+this.ai[0] !== 225))) {
        this.ai[1] = 30;
        this.netUpdate = true;
      } else if (!((+this.ai[0] < 450) || (($T00().netMode | 0) === 1))) {
        this.ai[0] = 1;
        var num77 = (((($T00().player[this.target].position.X) | 0) / 16) | 0);
        var num78 = (((($T00().player[this.target].position.Y) | 0) / 16) | 0);
        var num79 = ((((this.position.X) | 0) / 16) | 0);
        var num80 = ((((this.position.Y) | 0) / 16) | 0);
        var num81 = 20;
        var num82 = 0;
        var flag11 = false;
        if (((Math.abs((+this.position.X - +$T00().player[this.target].position.X))) + (Math.abs((+this.position.Y - +$T00().player[this.target].position.Y)))) > 2000) {
          num82 = 100;
          flag11 = true;
        }

        while (!flag11 && (num82 < 100)) {
          num82 = ((num82 + 1) | 0);
          var num83 = ($T00().rand.Next(((num77 - num81) | 0), ((num77 + num81) | 0)) | 0);
          var num84 = ($T00().rand.Next(((num78 - num81) | 0), ((num78 + num81) | 0)) | 0);

        $loop5: 
          for (var num85 = num84; num85 < ((num78 + num81) | 0); num85 = ((num85 + 1) | 0)) {
            if (!(((num85 >= ((num78 - 4) | 0)) && 
                  (num85 <= ((num78 + 4) | 0)) && 
                  (num83 >= ((num77 - 4) | 0)) && 
                  (num83 <= ((num77 + 4) | 0))) || 
                ((num85 >= ((num80 - 1) | 0)) && 
                  (num85 <= ((num80 + 1) | 0)) && 
                  (num83 >= ((num79 - 1) | 0)) && 
                  (num83 <= ((num79 + 1) | 0))) || !$T00().tile.Get(num83, num85).active)) {
              var flag12 = true;
              if (!(((this.type | 0) !== 32) || (($T00().tile.Get(num83, ((num85 - 1) | 0)).wall | 0) !== 0))) {
                flag12 = false;
              } else if ($T00().tile.Get(num83, ((num85 - 1) | 0)).lava) {
                flag12 = false;
              }
              if (!(!flag12 || 
                  !$T00().tileSolid[$T00().tile.Get(num83, num85).type] || $T13().SolidTiles(((num83 - 1) | 0), ((num83 + 1) | 0), ((num85 - 4) | 0), ((num85 - 1) | 0)))) {
                this.ai[1] = 20;
                this.ai[2] = +num83;
                this.ai[3] = +num85;
                flag11 = true;
                break $loop5;
              }
            }
          }
        }
        this.netUpdate = true;
      }
      if (+this.ai[1] > 0) {
        this.ai[1] -= 1;
        if (+this.ai[1] === 25) {
          $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 8);
          if (($T00().netMode | 0) !== 1) {
            if ((this.type | 0) === 29) {
              $thisType.NewNPC(((((this.position.X) | 0) + (((this.width | 0) / 2) | 0)) | 0), ((((this.position.Y) | 0) - 8) | 0), 30, 0);
            } else if ((this.type | 0) === 32) {
              $thisType.NewNPC(((((this.position.X) | 0) + (((this.width | 0) / 2) | 0)) | 0), ((((this.position.Y) | 0) - 8) | 0), 33, 0);
            } else {
              $thisType.NewNPC(((((((this.position.X) | 0) + (((this.width | 0) / 2) | 0)) | 0) + Math.imul(this.direction, 8)) | 0), ((((this.position.Y) | 0) + 20) | 0), 25, 0);
            }
          }
        }
      }
      if ((this.type | 0) === 29) {
        if (($T00().rand.Next(5) | 0) === 0) {
          var num86 = ($T06().NewDust(
            $S00().Construct(this.position.X, (+this.position.Y + 2)), 
            this.width, 
            this.height, 
            27, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            1.5
          ) | 0);
          $T00().dust[num86].noGravity = true;
          var expr_5F4B_cp_0 = $T00().dust[num86];
          expr_5F4B_cp_0.velocity.X = +expr_5F4B_cp_0.velocity.X * 0.5;
          $T00().dust[num86].velocity.Y = -2;
          return;
        }
      } else if ((this.type | 0) === 32) {
        if (($T00().rand.Next(2) | 0) === 0) {
          var num87 = ($T06().NewDust(
            $S00().Construct(this.position.X, (+this.position.Y + 2)), 
            this.width, 
            this.height, 
            29, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num87].noGravity = true;
          var expr_6015_cp_0 = $T00().dust[num87];
          expr_6015_cp_0.velocity.X = +expr_6015_cp_0.velocity.X * 1;
          var expr_6033_cp_0 = $T00().dust[num87];
          expr_6033_cp_0.velocity.Y = +expr_6033_cp_0.velocity.Y * 1;
          return;
        }
      } else if (($T00().rand.Next(2) | 0) === 0) {
        var num88 = ($T06().NewDust(
          $S00().Construct(this.position.X, (+this.position.Y + 2)), 
          this.width, 
          this.height, 
          6, 
          +this.velocity.X * 0.2, 
          +this.velocity.Y * 0.2, 
          100, 
          new ($T07())(), 
          2
        ) | 0);
        $T00().dust[num88].noGravity = true;
        var expr_60D8_cp_0 = $T00().dust[num88];
        expr_60D8_cp_0.velocity.X = +expr_60D8_cp_0.velocity.X * 1;
        var expr_60F6_cp_0 = $T00().dust[num88];
        expr_60F6_cp_0.velocity.Y = +expr_60F6_cp_0.velocity.Y * 1;
        return;
      }
    } else {
      if ((this.aiStyle | 0) === 9) {
        if ((this.target | 0) === 8) {
          this.TargetClosest();
          if ((this.type | 0) === 30) {
            $thisType.maxSpawns = 8;
          }
          (vector10 = vector10.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector10, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num90 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector10.X;
          var num91 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector10.Y;
          var num92 = Math.fround(Math.sqrt((num90 * num90) + (num91 * num91)));
          num92 = +((6 / num92));
          this.velocity.X = num90 * num92;
          this.velocity.Y = num91 * num92;
        }
        if ((this.timeLeft | 0) > 100) {
          this.timeLeft = 100;
        }

        for (var num93 = 0; num93 < 2; num93 = ((num93 + 1) | 0)) {
          if ((this.type | 0) === 30) {
            var num94 = ($T06().NewDust(
              ($hoisted06._ctor(this.position.X, +this.position.Y + 2), 
                $hoisted06), 
              this.width, 
              this.height, 
              27, 
              +this.velocity.X * 0.2, 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T07())(), 
              2
            ) | 0);
            $T00().dust[num94].noGravity = true;
            $T00().dust[num94].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num94].velocity.MemberwiseClone(), 0.3).MemberwiseClone();
            var expr_62E4_cp_0 = $T00().dust[num94];
            expr_62E4_cp_0.velocity.X = +expr_62E4_cp_0.velocity.X - (+this.velocity.X * 0.2);
            var expr_630E_cp_0 = $T00().dust[num94];
            expr_630E_cp_0.velocity.Y = +expr_630E_cp_0.velocity.Y - (+this.velocity.Y * 0.2);
          } else if ((this.type | 0) === 33) {
            var num95 = ($T06().NewDust(
              ($hoisted07._ctor(this.position.X, +this.position.Y + 2), 
                $hoisted07), 
              this.width, 
              this.height, 
              29, 
              +this.velocity.X * 0.2, 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T07())(), 
              2
            ) | 0);
            $T00().dust[num95].noGravity = true;
            var expr_63C1_cp_0 = $T00().dust[num95];
            expr_63C1_cp_0.velocity.X = +expr_63C1_cp_0.velocity.X * 0.3;
            var expr_63DF_cp_0 = $T00().dust[num95];
            expr_63DF_cp_0.velocity.Y = +expr_63DF_cp_0.velocity.Y * 0.3;
          } else {
            var num96 = ($T06().NewDust(
              ($hoisted08._ctor(this.position.X, +this.position.Y + 2), 
                $hoisted08), 
              this.width, 
              this.height, 
              6, 
              +this.velocity.X * 0.2, 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T07())(), 
              2
            ) | 0);
            $T00().dust[num96].noGravity = true;
            var expr_6478_cp_0 = $T00().dust[num96];
            expr_6478_cp_0.velocity.X = +expr_6478_cp_0.velocity.X * 0.3;
            var expr_6496_cp_0 = $T00().dust[num96];
            expr_6496_cp_0.velocity.Y = +expr_6496_cp_0.velocity.Y * 0.3;
          }
        }
        this.rotation = +this.rotation + (0.4 * +(this.direction));
        return;
      }
      if ((this.aiStyle | 0) === 10) {
        if (this.collideX) {
          this.velocity.X = +this.oldVelocity.X * -0.5;
          if (!(((this.direction | 0) !== -1) || 
              (+this.velocity.X <= 0) || (+this.velocity.X >= 2))) {
            this.velocity.X = 2;
          }
          if (!(((this.direction | 0) !== 1) || 
              (+this.velocity.X >= 0) || (+this.velocity.X <= -2))) {
            this.velocity.X = -2;
          }
        }
        if (this.collideY) {
          this.velocity.Y = +this.oldVelocity.Y * -0.5;
          if (!((+this.velocity.Y <= 0) || (+this.velocity.Y >= 1))) {
            this.velocity.Y = 1;
          }
          if (!((+this.velocity.Y >= 0) || (+this.velocity.Y <= -1))) {
            this.velocity.Y = -1;
          }
        }
        this.TargetClosest();
        if (!(((this.direction | 0) !== -1) || (+this.velocity.X <= -4))) {
          this.velocity.X = +this.velocity.X - 0.1;
          if (+this.velocity.X > 4) {
            this.velocity.X = +this.velocity.X - 0.1;
          } else if (+this.velocity.X > 0) {
            this.velocity.X = +this.velocity.X + 0.05;
          }
          if (+this.velocity.X < -4) {
            this.velocity.X = -4;
          }
        } else if (!(((this.direction | 0) !== 1) || (+this.velocity.X >= 4))) {
          this.velocity.X = +this.velocity.X + 0.1;
          if (+this.velocity.X < -4) {
            this.velocity.X = +this.velocity.X + 0.1;
          } else if (+this.velocity.X < 0) {
            this.velocity.X = +this.velocity.X - 0.05;
          }
          if (+this.velocity.X > 4) {
            this.velocity.X = 4;
          }
        }
        if (!(((this.directionY | 0) !== -1) || (this.velocity.Y <= -1.5))) {
          this.velocity.Y = +this.velocity.Y - 0.04;
          if (this.velocity.Y > 1.5) {
            this.velocity.Y = +this.velocity.Y - 0.05;
          } else if (+this.velocity.Y > 0) {
            this.velocity.Y = +this.velocity.Y + 0.03;
          }
          if (this.velocity.Y < -1.5) {
            this.velocity.Y = -1.5;
          }
        } else if (!(((this.directionY | 0) !== 1) || (this.velocity.Y >= 1.5))) {
          this.velocity.Y = +this.velocity.Y + 0.04;
          if (this.velocity.Y < -1.5) {
            this.velocity.Y = +this.velocity.Y + 0.05;
          } else if (+this.velocity.Y < 0) {
            this.velocity.Y = +this.velocity.Y - 0.03;
          }
          if (this.velocity.Y > 1.5) {
            this.velocity.Y = 1.5;
          }
        }
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) - 1.57;
        var num97 = ($T06().NewDust(
          $S00().Construct((+this.position.X - +this.velocity.X), (+this.position.Y - +this.velocity.Y)), 
          this.width, 
          this.height, 
          6, 
          +this.velocity.X * 0.2, 
          +this.velocity.Y * 0.2, 
          100, 
          new ($T07())(), 
          2
        ) | 0);
        $T00().dust[num97].noGravity = true;
        $T00().dust[num97].noLight = true;
        var expr_69C6_cp_0 = $T00().dust[num97];
        expr_69C6_cp_0.velocity.X = +expr_69C6_cp_0.velocity.X * 0.3;
        var expr_69E4_cp_0 = $T00().dust[num97];
        expr_69E4_cp_0.velocity.Y = +expr_69E4_cp_0.velocity.Y * 0.3;
        return;
      }
      if ((this.aiStyle | 0) === 11) {
        if (!((+this.ai[0] !== 0) || (($T00().netMode | 0) === 1))) {
          this.TargetClosest();
          this.ai[0] = 1;
          var num98 = ($thisType.NewNPC(((+this.position.X + +(((this.width | 0) / 2 | 0))) | 0), ((((this.position.Y) | 0) + (((this.height | 0) / 2) | 0)) | 0), 36, this.whoAmI) | 0);
          $T00().npc[num98].ai[0] = -1;
          $T00().npc[num98].ai[1] = +(this.whoAmI);
          $T00().npc[num98].target = (this.target | 0);
          $T00().npc[num98].netUpdate = true;
          num98 = ($thisType.NewNPC(((+this.position.X + +(((this.width | 0) / 2 | 0))) | 0), ((((this.position.Y) | 0) + (((this.height | 0) / 2) | 0)) | 0), 36, this.whoAmI) | 0);
          $T00().npc[num98].ai[0] = 1;
          $T00().npc[num98].ai[1] = +(this.whoAmI);
          $T00().npc[num98].ai[3] = 150;
          $T00().npc[num98].target = (this.target | 0);
          $T00().npc[num98].netUpdate = true;
        }
        if (!(!$T00().player[this.target].dead && 
            ((Math.abs((+this.position.X - +$T00().player[this.target].position.X))) <= 2000) && ((Math.abs((+this.position.Y - +$T00().player[this.target].position.Y))) <= 2000))) {
          this.TargetClosest();
          if (!(!$T00().player[this.target].dead && 
              ((Math.abs((+this.position.X - +$T00().player[this.target].position.X))) <= 2000) && ((Math.abs((+this.position.Y - +$T00().player[this.target].position.Y))) <= 2000))) {
            this.ai[1] = 3;
          }
        }
        if (!(!$T00().dayTime || 
            (+this.ai[1] === 3) || (+this.ai[1] === 2))) {
          this.ai[1] = 2;
          $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
        }
        if (+this.ai[1] === 0) {
          this.ai[2] += 1;
          if (+this.ai[2] >= 800) {
            this.ai[2] = 0;
            this.ai[1] = 1;
            this.TargetClosest();
            this.netUpdate = true;
          }
          this.rotation = +((+this.velocity.X / 15));
          if (+this.position.Y > (+$T00().player[this.target].position.Y - 250)) {
            if (+this.velocity.Y > 0) {
              this.velocity.Y = +this.velocity.Y * 0.98;
            }
            this.velocity.Y = +this.velocity.Y - 0.02;
            if (+this.velocity.Y > 2) {
              this.velocity.Y = 2;
            }
          } else if (+this.position.Y < (+$T00().player[this.target].position.Y - 250)) {
            if (+this.velocity.Y < 0) {
              this.velocity.Y = +this.velocity.Y * 0.98;
            }
            this.velocity.Y = +this.velocity.Y + 0.02;
            if (+this.velocity.Y < -2) {
              this.velocity.Y = -2;
            }
          }
          if ((+this.position.X + +(((this.width | 0) / 2 | 0))) > (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0)))) {
            if (+this.velocity.X > 0) {
              this.velocity.X = +this.velocity.X * 0.98;
            }
            this.velocity.X = +this.velocity.X - 0.05;
            if (+this.velocity.X > 8) {
              this.velocity.X = 8;
            }
          }
          if ((+this.position.X + +(((this.width | 0) / 2 | 0))) < (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0)))) {
            if (+this.velocity.X < 0) {
              this.velocity.X = +this.velocity.X * 0.98;
            }
            this.velocity.X = +this.velocity.X + 0.05;
            if (+this.velocity.X < -8) {
              this.velocity.X = -8;
            }
          }
        } else if (+this.ai[1] === 1) {
          this.ai[2] += 1;
          if (+this.ai[2] === 2) {
            $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
          }
          if (+this.ai[2] >= 400) {
            this.ai[2] = 0;
            this.ai[1] = 0;
          }
          this.rotation = +this.rotation + (+(this.direction) * 0.3);
          (vector11 = vector11.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector11, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num99 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector11.X;
          var num100 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector11.Y;
          var num101 = Math.fround(Math.sqrt((num99 * num99) + (num100 * num100)));
          num101 = +((2.5 / num101));
          this.velocity.X = num99 * num101;
          this.velocity.Y = num100 * num101;
        } else if (+this.ai[1] === 2) {
          this.damage = 9999;
          this.defense = 9999;
          this.rotation = +this.rotation + (+(this.direction) * 0.3);
          (vector12 = vector12.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector12, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num102 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector12.X;
          var num103 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector12.Y;
          var num104 = Math.fround(Math.sqrt((num102 * num102) + (num103 * num103)));
          num104 = +((8 / num104));
          this.velocity.X = num102 * num104;
          this.velocity.Y = num103 * num104;
        } else if (+this.ai[1] === 3) {
          this.velocity.Y = +this.velocity.Y - 0.1;
          if (+this.velocity.Y > 0) {
            this.velocity.Y = +this.velocity.Y * 0.95;
          }
          this.velocity.X = +this.velocity.X * 0.95;
          if ((this.timeLeft | 0) > 50) {
            this.timeLeft = 50;
          }
        }
        if (!((+this.ai[1] === 2) || (+this.ai[1] === 3))) {
          var num105 = ($T06().NewDust(
            $S00().Construct((((+this.position.X + +(((this.width | 0) / 2 | 0))) - 15) - (+this.velocity.X * 5)), ((+this.position.Y + +(this.height)) - 2)), 
            30, 
            10, 
            5, 
            -this.velocity.X * 0.2, 
            3, 
            0, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num105].noGravity = true;
          var expr_7365_cp_0 = $T00().dust[num105];
          expr_7365_cp_0.velocity.X = +expr_7365_cp_0.velocity.X * 1.3;
          var expr_7383_cp_0 = $T00().dust[num105];
          expr_7383_cp_0.velocity.X = +expr_7383_cp_0.velocity.X + (+this.velocity.X * 0.4);
          var expr_73AD_cp_0 = $T00().dust[num105];
          expr_73AD_cp_0.velocity.Y = +expr_73AD_cp_0.velocity.Y + (2 + +this.velocity.Y);

          for (var num106 = 0; num106 < 2; num106 = ((num106 + 1) | 0)) {
            num105 = ($T06().NewDust(
              ($hoisted09._ctor(this.position.X, +this.position.Y + 120), 
                $hoisted09), 
              this.width, 
              60, 
              5, 
              this.velocity.X, 
              this.velocity.Y, 
              0, 
              new ($T07())(), 
              2
            ) | 0);
            $T00().dust[num105].noGravity = true;
            $T00().dust[num105].velocity = $T03().op_Subtraction($T00().dust[num105].velocity.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
            var expr_7462_cp_0 = $T00().dust[num105];
            expr_7462_cp_0.velocity.Y = +expr_7462_cp_0.velocity.Y + 5;
          }
          return;
        }
      } else if ((this.aiStyle | 0) === 12) {
        this.spriteDirection = -((this.ai[0]) | 0);
        if (!($T00().npc[((this.ai[1]) | 0)].active && (($T00().npc[((this.ai[1]) | 0)].aiStyle | 0) === 11))) {
          this.ai[2] += 10;
          if (!((+this.ai[2] <= 50) && (($T00().netMode | 0) === 2))) {
            this.life = -1;
            this.HitEffect(0, 10);
            this.active = false;
          }
        }
        if (!((+this.ai[2] !== 0) && (+this.ai[2] !== 3))) {
          if (!((+$T00().npc[((this.ai[1]) | 0)].ai[1] !== 3) || ((this.timeLeft | 0) <= 10))) {
            this.timeLeft = 10;
          }
          if (+$T00().npc[((this.ai[1]) | 0)].ai[1] !== 0) {
            if (+this.position.Y > (+$T00().npc[((this.ai[1]) | 0)].position.Y - 100)) {
              if (+this.velocity.Y > 0) {
                this.velocity.Y = +this.velocity.Y * 0.96;
              }
              this.velocity.Y = +this.velocity.Y - 0.07;
              if (+this.velocity.Y > 6) {
                this.velocity.Y = 6;
              }
            } else if (+this.position.Y < (+$T00().npc[((this.ai[1]) | 0)].position.Y - 100)) {
              if (+this.velocity.Y < 0) {
                this.velocity.Y = +this.velocity.Y * 0.96;
              }
              this.velocity.Y = +this.velocity.Y + 0.07;
              if (+this.velocity.Y < -6) {
                this.velocity.Y = -6;
              }
            }
            if ((+this.position.X + +(((this.width | 0) / 2 | 0))) > ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (120 * +this.ai[0]))) {
              if (+this.velocity.X > 0) {
                this.velocity.X = +this.velocity.X * 0.96;
              }
              this.velocity.X = +this.velocity.X - 0.1;
              if (+this.velocity.X > 8) {
                this.velocity.X = 8;
              }
            }
            if ((+this.position.X + +(((this.width | 0) / 2 | 0))) < ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (120 * +this.ai[0]))) {
              if (+this.velocity.X < 0) {
                this.velocity.X = +this.velocity.X * 0.96;
              }
              this.velocity.X = +this.velocity.X + 0.1;
              if (+this.velocity.X < -8) {
                this.velocity.X = -8;
              }
            }
          } else {
            this.ai[3] += 1;
            if (+this.ai[3] >= 300) {
              this.ai[2] += 1;
              this.ai[3] = 0;
              this.netUpdate = true;
            }
            if (+this.position.Y > (+$T00().npc[((this.ai[1]) | 0)].position.Y + 230)) {
              if (+this.velocity.Y > 0) {
                this.velocity.Y = +this.velocity.Y * 0.96;
              }
              this.velocity.Y = +this.velocity.Y - 0.04;
              if (+this.velocity.Y > 3) {
                this.velocity.Y = 3;
              }
            } else if (+this.position.Y < (+$T00().npc[((this.ai[1]) | 0)].position.Y + 230)) {
              if (+this.velocity.Y < 0) {
                this.velocity.Y = +this.velocity.Y * 0.96;
              }
              this.velocity.Y = +this.velocity.Y + 0.04;
              if (+this.velocity.Y < -3) {
                this.velocity.Y = -3;
              }
            }
            if ((+this.position.X + +(((this.width | 0) / 2 | 0))) > ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (200 * +this.ai[0]))) {
              if (+this.velocity.X > 0) {
                this.velocity.X = +this.velocity.X * 0.96;
              }
              this.velocity.X = +this.velocity.X - 0.07;
              if (+this.velocity.X > 8) {
                this.velocity.X = 8;
              }
            }
            if ((+this.position.X + +(((this.width | 0) / 2 | 0))) < ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (200 * +this.ai[0]))) {
              if (+this.velocity.X < 0) {
                this.velocity.X = +this.velocity.X * 0.96;
              }
              this.velocity.X = +this.velocity.X + 0.07;
              if (+this.velocity.X < -8) {
                this.velocity.X = -8;
              }
            }
          }
          (vector13 = vector13.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector13, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num107 = ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (200 * +this.ai[0])) - +vector13.X;
          var num108 = (+$T00().npc[((this.ai[1]) | 0)].position.Y + 230) - +vector13.Y;
          Math.sqrt((num107 * num107) + (num108 * num108));
          this.rotation = Math.fround(Math.atan2(num108, num107)) + 1.57;
          return;
        }
        if (+this.ai[2] === 1) {
          (vector14 = vector14.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector14, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num109 = ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (200 * +this.ai[0])) - +vector14.X;
          var num110 = (+$T00().npc[((this.ai[1]) | 0)].position.Y + 230) - +vector14.Y;
          var num111 = Math.fround(Math.sqrt((num109 * num109) + (num110 * num110)));
          this.rotation = Math.fround(Math.atan2(num110, num109)) + 1.57;
          this.velocity.X = +this.velocity.X * 0.95;
          this.velocity.Y = +this.velocity.Y - 0.1;
          if (+this.velocity.Y < -8) {
            this.velocity.Y = -8;
          }
          if (+this.position.Y < (+$T00().npc[((this.ai[1]) | 0)].position.Y - 200)) {
            this.TargetClosest();
            this.ai[2] = 2;
            (vector14 = vector14.MemberwiseClone(), 
              $T03().prototype._ctor.call(vector14, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            num109 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector14.X;
            num110 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector14.Y;
            num111 = Math.fround(Math.sqrt((num109 * num109) + (num110 * num110)));
            num111 = +((20 / num111));
            this.velocity.X = num109 * num111;
            this.velocity.Y = num110 * num111;
            this.netUpdate = true;
            return;
          }
        } else if (+this.ai[2] === 2) {
          if (!((+this.position.Y <= +$T00().player[this.target].position.Y) && (+this.velocity.Y >= 0))) {
            this.ai[2] = 3;
            return;
          }
        } else if (+this.ai[2] === 4) {
          (vector15 = vector15.MemberwiseClone(), 
            $T03().prototype._ctor.call(vector15, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num112 = ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - (200 * +this.ai[0])) - +vector15.X;
          var num113 = (+$T00().npc[((this.ai[1]) | 0)].position.Y + 230) - +vector15.Y;
          var num114 = Math.fround(Math.sqrt((num112 * num112) + (num113 * num113)));
          this.rotation = Math.fround(Math.atan2(num113, num112)) + 1.57;
          this.velocity.Y = +this.velocity.Y * 0.95;
          this.velocity.X = +this.velocity.X + (0.1 * -this.ai[0]);
          if (+this.velocity.X < -8) {
            this.velocity.X = -8;
          }
          if (+this.velocity.X > 8) {
            this.velocity.X = 8;
          }
          if (!(((+this.position.X + +(((this.width | 0) / 2 | 0))) >= ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) - 500)) && ((+this.position.X + +(((this.width | 0) / 2 | 0))) <= ((+$T00().npc[((this.ai[1]) | 0)].position.X + +((($T00().npc[((this.ai[1]) | 0)].width | 0) / 2 | 0))) + 500)))) {
            this.TargetClosest();
            this.ai[2] = 5;
            (vector15 = vector15.MemberwiseClone(), 
              $T03().prototype._ctor.call(vector15, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
            num112 = (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +vector15.X;
            num113 = (+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +vector15.Y;
            num114 = Math.fround(Math.sqrt((num112 * num112) + (num113 * num113)));
            num114 = +((20 / num114));
            this.velocity.X = num112 * num114;
            this.velocity.Y = num113 * num114;
            this.netUpdate = true;
            return;
          }
        } else if (!((+this.ai[2] !== 5) || (!((+this.velocity.X > 0) && 
                ((+this.position.X + +(((this.width | 0) / 2 | 0))) > (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))))) && 
              ((+this.velocity.X >= 0) || 
                ((+this.position.X + +(((this.width | 0) / 2 | 0))) >= (+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0)))))))) {
          this.ai[2] = 0;
          return;
        }
      } else if ((this.aiStyle | 0) === 13) {
        if ($T00().tile.Get(((this.ai[0]) | 0), ((this.ai[1]) | 0)) === null) {
          $T00().tile.Set(((this.ai[0]) | 0), ((this.ai[1]) | 0), new ($T0B())());
        }
        if (!$T00().tile.Get(((this.ai[0]) | 0), ((this.ai[1]) | 0)).active) {
          this.life = -1;
          this.HitEffect(0, 10);
          this.active = false;
          return;
        }
        this.TargetClosest();
        (vector16 = vector16.MemberwiseClone(), 
          $T03().prototype._ctor.call(vector16, (+this.ai[0] * 16) + 8, (+this.ai[1] * 16) + 8));
        var num116 = ((+$T00().player[this.target].position.X + +((($T00().player[this.target].width | 0) / 2 | 0))) - +(((this.width | 0) / 2 | 0))) - +vector16.X;
        var num117 = ((+$T00().player[this.target].position.Y + +((($T00().player[this.target].height | 0) / 2 | 0))) - +(((this.height | 0) / 2 | 0))) - +vector16.Y;
        var num118 = Math.fround(Math.sqrt((num116 * num116) + (num117 * num117)));
        if (num118 > 150) {
          num118 = +((150 / num118));
          num116 *= num118;
          num117 *= num118;
        }
        if (+this.position.X < (((+this.ai[0] * 16) + 8) + num116)) {
          this.velocity.X = +this.velocity.X + 0.05;
          if (!((+this.velocity.X >= 0) || (num116 <= 0))) {
            this.velocity.X = +this.velocity.X + (0.05 * 2);
          }
        } else if (+this.position.X > (((+this.ai[0] * 16) + 8) + num116)) {
          this.velocity.X = +this.velocity.X - 0.05;
          if (!((+this.velocity.X <= 0) || (num116 >= 0))) {
            this.velocity.X = +this.velocity.X - (0.05 * 2);
          }
        }
        if (+this.position.Y < (((+this.ai[1] * 16) + 8) + num117)) {
          this.velocity.Y = +this.velocity.Y + 0.05;
          if (!((+this.velocity.Y >= 0) || (num117 <= 0))) {
            this.velocity.Y = +this.velocity.Y + (0.05 * 2);
          }
        } else if (+this.position.Y > (((+this.ai[1] * 16) + 8) + num117)) {
          this.velocity.Y = +this.velocity.Y - 0.05;
          if (!((+this.velocity.Y <= 0) || (num117 >= 0))) {
            this.velocity.Y = +this.velocity.Y - (0.05 * 2);
          }
        }
        if (+this.velocity.X > 2) {
          this.velocity.X = 2;
        }
        if (+this.velocity.X < -2) {
          this.velocity.X = -2;
        }
        if (+this.velocity.Y > 2) {
          this.velocity.Y = 2;
        }
        if (+this.velocity.Y < -2) {
          this.velocity.Y = -2;
        }
        if (num116 > 0) {
          this.spriteDirection = 1;
          this.rotation = Math.fround(Math.atan2(num117, num116));
        }
        if (num116 < 0) {
          this.spriteDirection = -1;
          this.rotation = Math.fround(Math.atan2(num117, num116)) + 3.14;
        }
        if (this.collideX) {
          this.netUpdate = true;
          this.velocity.X = +this.oldVelocity.X * -0.7;
          if (!((+this.velocity.X <= 0) || (+this.velocity.X >= 2))) {
            this.velocity.X = 2;
          }
          if (!((+this.velocity.X >= 0) || (+this.velocity.X <= -2))) {
            this.velocity.X = -2;
          }
        }
        if (this.collideY) {
          this.netUpdate = true;
          this.velocity.Y = +this.oldVelocity.Y * -0.7;
          if (!((+this.velocity.Y <= 0) || (+this.velocity.Y >= 2))) {
            this.velocity.Y = 2;
          }
          if (!((+this.velocity.Y >= 0) || (+this.velocity.Y <= -2))) {
            this.velocity.Y = -2;
          }
        }
      }
    }
  }; 

  function NPC_CheckActive () {
    var rectangle = new ($T04())(), rectangle2 = new ($T04())(), rectangle3 = new ($T04())();
    if (this.active) {
      if (!(((this.type | 0) !== 8) && 
          ((this.type | 0) !== 9) && 
          ((this.type | 0) !== 11) && 
          ((this.type | 0) !== 12) && 
          ((this.type | 0) !== 14) && 
          ((this.type | 0) !== 15) && 
          ((this.type | 0) !== 40) && ((this.type | 0) !== 41))) {
        return;
      }
      if (this.townNPC) {
        if (this.position.Y < (+$T00().worldSurface * 18)) {
          (rectangle = rectangle.MemberwiseClone(), 
            $T04().prototype._ctor.call(rectangle, (((+this.position.X + +(((this.width | 0) / 2 | 0))) - +($thisType.townRangeX)) | 0), (((+this.position.Y + +(((this.height | 0) / 2 | 0))) - +($thisType.townRangeY)) | 0), Math.imul($thisType.townRangeX, 2), Math.imul($thisType.townRangeY, 2)));

          for (var i = 0; i < 8; i = ((i + 1) | 0)) {
            if (!(!$T00().player[i].active || !rectangle.Intersects(new ($T04())((($T00().player[i].position.X) | 0), (($T00().player[i].position.Y) | 0), $T00().player[i].width, $T00().player[i].height)))) {
              $T00().player[i].townNPCs = ((($T00().player[i].townNPCs | 0) + 1) | 0);
            }
          }
        }
        return;
      }
      var flag = false;
      (rectangle2 = rectangle2.MemberwiseClone(), 
        $T04().prototype._ctor.call(rectangle2, (((+this.position.X + +(((this.width | 0) / 2 | 0))) - +($thisType.activeRangeX)) | 0), (((+this.position.Y + +(((this.height | 0) / 2 | 0))) - +($thisType.activeRangeY)) | 0), Math.imul($thisType.activeRangeX, 2), Math.imul($thisType.activeRangeY, 2)));
      (rectangle3 = rectangle3.MemberwiseClone(), 
        $T04().prototype._ctor.call(rectangle3, (((+this.position.X + +(((this.width | 0) / 2 | 0)) - (+($T00().screenWidth) * 0.5)) - +(this.width)) | 0), (((+this.position.Y + +(((this.height | 0) / 2 | 0)) - (+($T00().screenHeight) * 0.5)) - +(this.height)) | 0), ((($T00().screenWidth | 0) + Math.imul(this.width, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul(this.height, 2)) | 0)));

      for (var j = 0; j < 8; j = ((j + 1) | 0)) {
        if ($T00().player[j].active) {
          if (rectangle2.Intersects(new ($T04())((($T00().player[j].position.X) | 0), (($T00().player[j].position.Y) | 0), $T00().player[j].width, $T00().player[j].height))) {
            flag = true;
            if (!(((this.type | 0) === 25) || 
                ((this.type | 0) === 30) || ((this.type | 0) === 33))) {
              $T00().player[j].activeNPCs = ((($T00().player[j].activeNPCs | 0) + 1) | 0);
            }
          }
          if (rectangle3.Intersects(new ($T04())((($T00().player[j].position.X) | 0), (($T00().player[j].position.Y) | 0), $T00().player[j].width, $T00().player[j].height))) {
            this.timeLeft = ($thisType.activeTime | 0);
          }
          if (!(((this.type | 0) !== 7) && 
              ((this.type | 0) !== 10) && ((this.type | 0) !== 13))) {
            flag = true;
          }
          if (!(!this.boss && 
              ((this.type | 0) !== 35) && ((this.type | 0) !== 36))) {
            flag = true;
          }
        }
      }
      this.timeLeft = (((this.timeLeft | 0) - 1) | 0);
      if ((this.timeLeft | 0) <= 0) {
        flag = false;
      }
      if (!(flag || (($T00().netMode | 0) === 1))) {
        this.active = false;
        if (($T00().netMode | 0) === 2) {
          this.life = 0;
          $T0D().SendData(
            23, 
            -1, 
            -1, 
            "", 
            this.whoAmI, 
            0, 
            0, 
            0
          );
        }
      }
    }
  }; 

  function NPC_FindFrame () {
    var num = (((($T00().npcTexture[this.type]).get_Height() | 0) / ($T00().npcFrameCount[this.type] | 0)) | 0);
    var num2 = 0;
    if ((this.aiAction | 0) === 0) {
      if (+this.velocity.Y < 0) {
        num2 = 2;
      } else if (+this.velocity.Y > 0) {
        num2 = 3;
      } else if (+this.velocity.X !== 0) {
        num2 = 1;
      } else {
        num2 = 0;
      }
    } else if ((this.aiAction | 0) === 1) {
      num2 = 4;
    }
    if (!(((this.type | 0) !== 1) && ((this.type | 0) !== 16))) {
      this.frameCounter = +this.frameCounter + 1;
      if (num2 > 0) {
        this.frameCounter = +this.frameCounter + 1;
      }
      if (num2 === 4) {
        this.frameCounter = +this.frameCounter + 1;
      }
      if (+this.frameCounter >= 8) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
        this.frameCounter = 0;
      }
      if ((this.frame.Y | 0) >= Math.imul(num, $T00().npcFrameCount[this.type])) {
        this.frame.Y = 0;
      }
    }
    if (!(((this.type | 0) !== 2) && ((this.type | 0) !== 23))) {
      if (+this.velocity.X > 0) {
        this.spriteDirection = 1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X));
      }
      if (+this.velocity.X < 0) {
        this.spriteDirection = -1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 3.14;
      }
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter >= 8) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
        this.frameCounter = 0;
      }
      if ((this.frame.Y | 0) >= Math.imul(num, $T00().npcFrameCount[this.type])) {
        this.frame.Y = 0;
      }
    }
    if ((this.type | 0) === 42) {
      if (+this.velocity.X > 0) {
        this.spriteDirection = 1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X));
      }
      if (+this.velocity.X < 0) {
        this.spriteDirection = -1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 3.14;
      }
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter < 4) {
        this.frame.Y = 0;
      } else if (+this.frameCounter < 8) {
        this.frame.Y = num;
      } else if (+this.frameCounter < 12) {
        this.frame.Y = Math.imul(num, 2);
      } else if (+this.frameCounter < 16) {
        this.frame.Y = num;
      }
      if (+this.frameCounter === 15) {
        this.frameCounter = 0;
      }
    }
    if ((this.type | 0) === 43) {
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter < 6) {
        this.frame.Y = 0;
      } else if (+this.frameCounter < 12) {
        this.frame.Y = num;
      } else if (+this.frameCounter < 18) {
        this.frame.Y = Math.imul(num, 2);
      } else if (+this.frameCounter < 24) {
        this.frame.Y = num;
      }
      if (+this.frameCounter === 23) {
        this.frameCounter = 0;
      }
    }
    if (!(((this.type | 0) !== 17) && 
        ((this.type | 0) !== 18) && 
        ((this.type | 0) !== 19) && 
        ((this.type | 0) !== 20) && 
        ((this.type | 0) !== 22) && 
        ((this.type | 0) !== 38) && 
        ((this.type | 0) !== 26) && 
        ((this.type | 0) !== 27) && 
        ((this.type | 0) !== 28) && 
        ((this.type | 0) !== 31) && ((this.type | 0) !== 21))) {
      if (+this.velocity.Y === 0) {
        if ((this.direction | 0) === 1) {
          this.spriteDirection = 1;
        }
        if ((this.direction | 0) === -1) {
          this.spriteDirection = -1;
        }
        if (+this.velocity.X === 0) {
          this.frame.Y = 0;
          this.frameCounter = 0;
        } else {
          this.frameCounter = +this.frameCounter + (Math.abs(this.velocity.X)) * 2;
          this.frameCounter = +this.frameCounter + 1;
          if (+this.frameCounter > 6) {
            this.frame.Y = (((this.frame.Y | 0) + num) | 0);
            this.frameCounter = 0;
          }
          if ((((this.frame.Y | 0) / num) | 0) >= ($T00().npcFrameCount[this.type] | 0)) {
            this.frame.Y = Math.imul(num, 2);
          }
        }
      } else {
        this.frameCounter = 0;
        this.frame.Y = num;
      }
    } else if (!(((this.type | 0) !== 3) && 
        !this.townNPC && 
        ((this.type | 0) !== 21) && 
        ((this.type | 0) !== 26) && 
        ((this.type | 0) !== 27) && 
        ((this.type | 0) !== 28) && ((this.type | 0) !== 31))) {
      if (+this.velocity.Y === 0) {
        if ((this.direction | 0) === 1) {
          this.spriteDirection = 1;
        }
        if ((this.direction | 0) === -1) {
          this.spriteDirection = -1;
        }
      }
      if (!(!((+this.velocity.Y !== 0) || 
            (((this.direction | 0) === -1) && 
              (+this.velocity.X > 0))) && (((this.direction | 0) !== 1) || 
            (+this.velocity.X >= 0)))) {
        this.frameCounter = 0;
        this.frame.Y = Math.imul(num, 2);
      } else if (+this.velocity.X === 0) {
        this.frameCounter = 0;
        this.frame.Y = 0;
      } else {
        this.frameCounter = +this.frameCounter + Math.abs(this.velocity.X);
        if (+this.frameCounter < 8) {
          this.frame.Y = 0;
        } else if (+this.frameCounter < 16) {
          this.frame.Y = num;
        } else if (+this.frameCounter < 24) {
          this.frame.Y = Math.imul(num, 2);
        } else if (+this.frameCounter < 32) {
          this.frame.Y = num;
        } else {
          this.frameCounter = 0;
        }
      }
    } else if ((this.type | 0) === 4) {
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter < 7) {
        this.frame.Y = 0;
      } else if (+this.frameCounter < 14) {
        this.frame.Y = num;
      } else if (+this.frameCounter < 21) {
        this.frame.Y = Math.imul(num, 2);
      } else {
        this.frameCounter = 0;
        this.frame.Y = 0;
      }
      if (+this.ai[0] > 1) {
        this.frame.Y = (((this.frame.Y | 0) + Math.imul(num, 3)) | 0);
      }
    } else if ((this.type | 0) === 5) {
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter >= 8) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
        this.frameCounter = 0;
      }
      if ((this.frame.Y | 0) >= Math.imul(num, $T00().npcFrameCount[this.type])) {
        this.frame.Y = 0;
      }
    } else if ((this.type | 0) === 6) {
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter >= 8) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
        this.frameCounter = 0;
      }
      if ((this.frame.Y | 0) >= Math.imul(num, $T00().npcFrameCount[this.type])) {
        this.frame.Y = 0;
      }
    } else if ((this.type | 0) === 24) {
      if (+this.velocity.Y === 0) {
        if ((this.direction | 0) === 1) {
          this.spriteDirection = 1;
        }
        if ((this.direction | 0) === -1) {
          this.spriteDirection = -1;
        }
      }
      if (+this.ai[1] > 0) {
        if ((this.frame.Y | 0) < 4) {
          this.frameCounter = 0;
        }
        this.frameCounter = +this.frameCounter + 1;
        if (+this.frameCounter <= 4) {
          this.frame.Y = Math.imul(num, 4);
        } else if (+this.frameCounter <= 8) {
          this.frame.Y = Math.imul(num, 5);
        } else if (+this.frameCounter <= 12) {
          this.frame.Y = Math.imul(num, 6);
        } else if (+this.frameCounter <= 16) {
          this.frame.Y = Math.imul(num, 7);
        } else if (+this.frameCounter <= 20) {
          this.frame.Y = Math.imul(num, 8);
        } else {
          this.frame.Y = Math.imul(num, 9);
          this.frameCounter = 100;
        }
      } else {
        this.frameCounter = +this.frameCounter + 1;
        if (+this.frameCounter <= 4) {
          this.frame.Y = 0;
        } else if (+this.frameCounter <= 8) {
          this.frame.Y = num;
        } else if (+this.frameCounter <= 12) {
          this.frame.Y = Math.imul(num, 2);
        } else {
          this.frame.Y = Math.imul(num, 3);
          if (+this.frameCounter >= 16) {
            this.frameCounter = 0;
          }
        }
      }
    } else if (!(((this.type | 0) !== 29) && ((this.type | 0) !== 32))) {
      if (+this.velocity.Y === 0) {
        if ((this.direction | 0) === 1) {
          this.spriteDirection = 1;
        }
        if ((this.direction | 0) === -1) {
          this.spriteDirection = -1;
        }
      }
      this.frame.Y = 0;
      if (+this.velocity.Y !== 0) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
      } else if (+this.ai[1] > 0) {
        this.frame.Y = (((this.frame.Y | 0) + Math.imul(num, 2)) | 0);
      }
    }
    if ((this.type | 0) === 34) {
      if (+this.velocity.X > 0) {
        this.spriteDirection = -1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X));
      }
      if (+this.velocity.X < 0) {
        this.spriteDirection = 1;
        this.rotation = Math.fround(Math.atan2(this.velocity.Y, this.velocity.X)) + 3.14;
      }
      this.frameCounter = +this.frameCounter + 1;
      if (+this.frameCounter >= 4) {
        this.frame.Y = (((this.frame.Y | 0) + num) | 0);
        this.frameCounter = 0;
      }
      if ((this.frame.Y | 0) >= Math.imul(num, $T00().npcFrameCount[this.type])) {
        this.frame.Y = 0;
      }
    }
  }; 

  function NPC_GetAlpha (newColor) {
    var r = (((newColor.get_R() | 0) - (this.alpha | 0)) | 0);
    var g = (((newColor.get_G() | 0) - (this.alpha | 0)) | 0);
    var b = (((newColor.get_B() | 0) - (this.alpha | 0)) | 0);
    var num = (((newColor.get_A() | 0) - (this.alpha | 0)) | 0);
    if (!(((this.type | 0) !== 25) && 
        ((this.type | 0) !== 30) && ((this.type | 0) !== 33))) {
      r = (newColor.get_R() | 0);
      g = (newColor.get_G() | 0);
      b = (newColor.get_B() | 0);
    }
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    return $S03().Construct(r, g, b, num);
  }; 

  function NPC_GetChat () {
    var flag = false;
    var flag2 = false;
    var flag3 = false;
    var flag4 = false;
    var flag5 = false;
    var flag6 = false;

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (($T00().npc[i].type | 0) === 17) {
        flag = true;
      } else if (($T00().npc[i].type | 0) === 18) {
        flag2 = true;
      } else if (($T00().npc[i].type | 0) === 19) {
        flag3 = true;
      } else if (($T00().npc[i].type | 0) === 20) {
        flag4 = true;
      } else if (($T00().npc[i].type | 0) === 37) {
        flag5 = true;
      } else if (($T00().npc[i].type | 0) === 38) {
        flag6 = true;
      }
    }
    var result = "";
    if ((this.type | 0) === 17) {
      if ($T00().dayTime) {
        if (+$T00().time < 16200) {
          if (($T00().rand.Next(2) | 0) === 0) {
            result = "Sword beats paper, get one today.";
          } else {
            result = "Lovely morning, wouldn't you say? Was there something you needed?";
          }
        } else if (+$T00().time > 37800) {
          if (($T00().rand.Next(2) | 0) === 0) {
            result = "Night be upon us soon, friend. Make your choices while you can.";
          } else {
            result = (("Ah, they will tell tales of " + $T00().player[$T00().myPlayer].$name + " some day... good ones I'm sure."));
          }
        } else {
          var num = ($T00().rand.Next(3) | 0);
          if (num === 0) {
          }
          if (num === 1) {
            result = "Boy, that sun is hot! I do have some perfectly ventilated armor.";
          } else {
            result = "The sun is high, but my prices are not.";
          }
        }
      } else if ($T00().bloodMoon) {
        if (($T00().rand.Next(2) | 0) === 0) {
          result = "Have you seen Chith...Shith.. Chat... The big eye?";
        } else {
          result = "Keep your eye on the prize, buy a lense!";
        }
      } else if (+$T00().time < 9720) {
        if (($T00().rand.Next(2) | 0) === 0) {
          result = "Kosh, kapleck Mog. Oh sorry, thats klingon for 'Buy something or die.'";
        } else {
          result = (JSIL.ConcatString($T00().player[$T00().myPlayer].$name, " is it? I've heard good things, friend!"));
        }
      } else if (+$T00().time > 22680) {
        if (($T00().rand.Next(2) | 0) === 0) {
          result = "I hear there's a secret treasure... oh never mind.";
        } else {
          result = "Angel Statue you say? I'm sorry, I'm not a junk dealer.";
        }
      } else {
        var num2 = ($T00().rand.Next(3) | 0);
        if (num2 === 0) {
        }
        if (num2 === 1) {
          result = "I wonder if the moon is made of cheese...huh, what? Oh yes, buy something!";
        } else {
          result = "Did you say gold?  I'll take that off of ya'.";
        }
      }
    } else if ((this.type | 0) === 18) {
      if (!(!flag6 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "I wish that bomb maker would be more careful.  I'm getting tired of having to sew his limbs back on every day.";
      } else if (+($T00().player[$T00().myPlayer].statLife) < (+($T00().player[$T00().myPlayer].statLifeMax) * 0.33)) {
        var num3 = ($T00().rand.Next(5) | 0);
        if (num3 === 0) {
          result = "I think you look better this way.";
        } else if (num3 === 1) {
          result = "Eww.. What happened to your face?";
        } else if (num3 === 2) {
          result = "MY GOODNESS! I'm good but I'm not THAT good.";
        } else if (num3 === 3) {
          result = "Dear friends we are gathered here today to bid farewell... oh, you'll be fine.";
        } else {
          result = "You left your arm over there. Let me get that for you..";
        }
      } else if (+($T00().player[$T00().myPlayer].statLife) < (+($T00().player[$T00().myPlayer].statLifeMax) * 0.66)) {
        var num4 = ($T00().rand.Next(4) | 0);
        if (num4 === 0) {
          result = "Quit being such a baby! I've seen worse.";
        } else if (num4 === 1) {
          result = "That's gonna need stitches!";
        } else if (num4 === 2) {
          result = "Trouble with those bullies again?";
        } else {
          result = "You look half digested. Have you been chasing slimes again?";
        }
      } else {
        var num5 = ($T00().rand.Next(3) | 0);
        if (num5 === 0) {
          result = "Turn your head and cough.";
        } else if (num5 === 1) {
          result = "Thats not the biggest I've ever seen... Yes, I've seen bigger wounds for sure.";
        } else {
          result = "Show me where it hurts.";
        }
      }
    } else if ((this.type | 0) === 19) {
      if (!(!flag2 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "Make it quick! I've got a date with the nurse in an hour.";
      } else if (!(!flag4 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "That dryad is a looker.  Too bad she's such a prude.";
      } else if (!(!flag6 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "Don't bother with that firework vendor, I've got all you need right here.";
      } else if ($T00().bloodMoon) {
        result = "I love nights like tonight.  There is never a shortage of things to kill!";
      } else {
        var num6 = ($T00().rand.Next(2) | 0);
        if (num6 === 0) {
          result = "I see you're eyeballin' the Minishark.. You really don't want to know how it was made.";
        } else if (num6 === 1) {
          result = "Keep your hands off my gun, buddy!";
        }
      }
    } else if ((this.type | 0) === 20) {
      if (!(!flag3 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "I wish that gun seller would stop talking to me. Doesn't he realize I'm 500 years old?";
      } else if (!(!flag || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "That merchant keeps trying to sell me an angel statue. Everyone knows that they don't do anything.";
      } else if (!(!flag5 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "Have you seen the old man walking around the dungeon? He doesn't look well at all...";
      } else if ($T00().bloodMoon) {
        result = "It is an evil moon tonight. Be careful.";
      } else {
        var num7 = ($T00().rand.Next(6) | 0);
        if (num7 === 0) {
          result = "You must cleanse the world of this corruption.";
        } else if (num7 === 1) {
          result = "Be safe; Terraria needs you!";
        } else if (num7 === 2) {
          result = "The sands of time are flowing. And well, you are not aging very gracefully.";
        } else if (num7 === 3) {
          result = "Whats this about me having more 'bark' than bite?";
        } else if (num7 === 4) {
          result = "So two goblins walk into a bar, and one says to the other, 'Want to get a Gobblet of beer?!'";
        } else {
          result = "Be safe; Terraria needs you!";
        }
      }
    } else if ((this.type | 0) === 22) {
      if ($T00().bloodMoon) {
        result = "You can tell a Blood Moon is out when the sky turns red. There is something about it that causes monsters to swarm.";
      } else if (!$T00().dayTime) {
        result = "You should stay indoors at night. It is very dangerous to be wandering around in the dark.";
      } else {
        var num8 = ($T00().rand.Next(3) | 0);
        if (num8 === 0) {
          result = (("Greetings, " + $T00().player[$T00().myPlayer].$name + ". Is there something I can help you with?"));
        } else if (num8 === 1) {
          result = "I am here to give you advice on what to do next.  It is recommended that you talk with me anytime you get stuck.";
        } else if (num8 === 2) {
          result = "They say there is a person who will tell you how to survive in this land... oh wait. Thats me.";
        }
      }
    } else if ((this.type | 0) === 37) {
      if ($T00().dayTime) {
        var num9 = ($T00().rand.Next(2) | 0);
        if (num9 === 0) {
          result = "I cannot let you enter until you free me of my curse.";
        } else if (num9 === 1) {
          result = "Come back at night if you wish to enter.";
        }
      }
    } else if ((this.type | 0) === 38) {
      if ($T00().bloodMoon) {
        result = "I've got something for them zombies alright!";
      } else if (!(!flag3 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "Even the gun dealer wants what I'm selling!";
      } else if (!(!flag2 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "I'm sure the nurse will help if you accidentally lose a limb to these.";
      } else if (!(!flag4 || (($T00().rand.Next(4) | 0) !== 0))) {
        result = "Why purify the world when you can just blow it up?";
      } else {
        var num10 = ($T00().rand.Next(4) | 0);
        if (num10 === 0) {
          result = "Explosives are da' bomb these days.  Buy some now!";
        } else if (num10 === 1) {
          result = "It's a good day to die!";
        } else if (num10 === 2) {
          result = "I wonder what happens if I... (BOOM!)... Oh, sorry, did you need that leg?";
        } else if (num10 === 3) {
          result = "Dynamite, my own special cure-all for what ails ya.";
        } else {
          result = "Check out my goods; they have explosive prices!";
        }
      }
    }
    return result;
  }; 

  function NPC_GetColor (newColor) {
    var num = ((((this.color).get_R() | 0) - ((255 - (newColor.get_R() | 0)) | 0)) & 0xFF);
    var num2 = ((((this.color).get_G() | 0) - ((255 - (newColor.get_G() | 0)) | 0)) & 0xFF);
    var num3 = ((((this.color).get_B() | 0) - ((255 - (newColor.get_B() | 0)) | 0)) & 0xFF);
    var num4 = ((((this.color).get_A() | 0) - ((255 - (newColor.get_A() | 0)) | 0)) & 0xFF);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    if (num2 < 0) {
      num2 = 0;
    }
    if (num2 > 255) {
      num2 = 255;
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num3 > 255) {
      num3 = 255;
    }
    if (num4 < 0) {
      num4 = 0;
    }
    if (num4 > 255) {
      num4 = 255;
    }
    return $S03().Construct(num, num2, num3, num4);
  }; 

  function NPC_HitEffect (hitDirection, dmg) {
    var $hoisted00 = new ($T03())(), $hoisted01 = new ($T03())(), $hoisted02 = new ($T03())(), $hoisted03 = new ($T03())(), $hoisted04 = new ($T03())(), $hoisted05 = new ($T03())(), $hoisted06 = new ($T03())(), $hoisted07 = new ($T03())(), $hoisted08 = new ($T03())(), $hoisted09 = new ($T03())(), $hoisted0A = new ($T03())(), $hoisted0B = new ($T03())(), $hoisted0C = new ($T03())(), $hoisted0D = new ($T03())();
    if (!(((this.type | 0) !== 1) && ((this.type | 0) !== 16))) {
      if ((this.life | 0) > 0) {

        for (var num = 0; +num < (+((+dmg / +(this.lifeMax))) * 100); num = ((num + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            4, 
            +hitDirection, 
            -1, 
            this.alpha, 
            this.color.MemberwiseClone(), 
            1
          );
        }
        return;
      }

      for (var i = 0; i < 50; i = ((i + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          4, 
          +(2 * (hitDirection | 0)), 
          -2, 
          this.alpha, 
          this.color.MemberwiseClone(), 
          1
        );
      }
      if (!((($T00().netMode | 0) === 1) || ((this.type | 0) !== 16))) {
        var num2 = ((($T00().rand.Next(2) | 0) + 2) | 0);

        for (var j = 0; j < num2; j = ((j + 1) | 0)) {
          var num3 = ($thisType.NewNPC(((+this.position.X + +(((this.width | 0) / 2 | 0))) | 0), ((+this.position.Y + +(this.height)) | 0), 1, 0) | 0);
          $S04().CallVirtual("SetDefaults", null, $T00().npc[num3], "Baby Slime");
          $T00().npc[num3].velocity.X = +this.velocity.X * 2;
          $T00().npc[num3].velocity.Y = +this.velocity.Y;
          var expr_16F_cp_0 = $T00().npc[num3];
          expr_16F_cp_0.velocity.X = +expr_16F_cp_0.velocity.X + ((+($T00().rand.Next(-20, 20)) * 0.1) + (+(j * (this.direction | 0)) * 0.3));
          var expr_1AD_cp_0 = $T00().npc[num3];
          expr_1AD_cp_0.velocity.Y = +expr_1AD_cp_0.velocity.Y - ((+($T00().rand.Next(0, 10)) * 0.1) + +j);
          $T00().npc[num3].ai[1] = +j;
          if (!((($T00().netMode | 0) !== 2) || (num3 >= 1000))) {
            $T0D().SendData(
              23, 
              -1, 
              -1, 
              "", 
              num3, 
              0, 
              0, 
              0
            );
          }
        }
        return;
      }
    } else if ((this.type | 0) === 2) {
      if ((this.life | 0) > 0) {

        for (var num4 = 0; +num4 < (+((+dmg / +(this.lifeMax))) * 100); num4 = ((num4 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var k = 0; k < 50; k = ((k + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 1);
      $T0F().NewGore($S00().Construct((+this.position.X + 14), this.position.Y), this.velocity.MemberwiseClone(), 2);
      return;
    } else if ((this.type | 0) === 3) {
      if ((this.life | 0) > 0) {

        for (var num5 = 0; +num5 < (+((+dmg / +(this.lifeMax))) * 100); num5 = ((num5 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var l = 0; l < 50; l = ((l + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 3);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 4);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 4);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 5);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 5);
      return;
    } else if ((this.type | 0) === 4) {
      if ((this.life | 0) > 0) {

        for (var num6 = 0; +num6 < (+((+dmg / +(this.lifeMax))) * 100); num6 = ((num6 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var m = 0; m < 150; m = ((m + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T07())(), 
          1
        );
      }

      for (var n = 0; n < 2; n = ((n + 1) | 0)) {
        $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 2);
        $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 7);
        $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 9);
        $T0F().NewGore(this.position.MemberwiseClone(), $S00().Construct((+($T00().rand.Next(-30, 31)) * 0.2), (+($T00().rand.Next(-30, 31)) * 0.2)), 10);
      }
      $T00().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
      return;
    } else if ((this.type | 0) === 5) {
      if ((this.life | 0) > 0) {

        for (var num7 = 0; +num7 < (+((+dmg / +(this.lifeMax))) * 50); num7 = ((num7 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num8 = 0; num8 < 20; num8 = ((num8 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 6);
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 7);
      return;
    } else if ((this.type | 0) === 6) {
      if ((this.life | 0) > 0) {

        for (var num9 = 0; +num9 < (+((+dmg / +(this.lifeMax))) * 100); num9 = ((num9 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            18, 
            +hitDirection, 
            -1, 
            this.alpha, 
            this.color.MemberwiseClone(), 
            this.scale
          );
        }
        return;
      }

      for (var num10 = 0; num10 < 50; num10 = ((num10 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          18, 
          +hitDirection, 
          -2, 
          this.alpha, 
          this.color.MemberwiseClone(), 
          this.scale
        );
      }
      var num11 = ($T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 14) | 0);
      $T00().gore[num11].alpha = (this.alpha | 0);
      num11 = ($T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 15) | 0);
      $T00().gore[num11].alpha = (this.alpha | 0);
      return;
    } else if (!(((this.type | 0) !== 7) && 
        ((this.type | 0) !== 8) && ((this.type | 0) !== 9))) {
      if ((this.life | 0) > 0) {

        for (var num12 = 0; +num12 < (+((+dmg / +(this.lifeMax))) * 100); num12 = ((num12 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            18, 
            +hitDirection, 
            -1, 
            this.alpha, 
            this.color.MemberwiseClone(), 
            this.scale
          );
        }
        return;
      }

      for (var num13 = 0; num13 < 50; num13 = ((num13 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          18, 
          +hitDirection, 
          -2, 
          this.alpha, 
          this.color.MemberwiseClone(), 
          this.scale
        );
      }
      var num14 = ($T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), (((((this.type | 0) - 7) | 0) + 18) | 0)) | 0);
      $T00().gore[num14].alpha = (this.alpha | 0);
      return;
    } else if (!(((this.type | 0) !== 10) && 
        ((this.type | 0) !== 11) && ((this.type | 0) !== 12))) {
      if ((this.life | 0) > 0) {

        for (var num15 = 0; +num15 < (+((+dmg / +(this.lifeMax))) * 50); num15 = ((num15 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num16 = 0; num16 < 10; num16 = ((num16 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), (((((this.type | 0) - 7) | 0) + 18) | 0));
      return;
    } else if (!(((this.type | 0) !== 13) && 
        ((this.type | 0) !== 14) && ((this.type | 0) !== 15))) {
      if ((this.life | 0) > 0) {

        for (var num17 = 0; +num17 < (+((+dmg / +(this.lifeMax))) * 100); num17 = ((num17 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            18, 
            +hitDirection, 
            -1, 
            this.alpha, 
            this.color.MemberwiseClone(), 
            this.scale
          );
        }
        return;
      }

      for (var num18 = 0; num18 < 50; num18 = ((num18 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          18, 
          +hitDirection, 
          -2, 
          this.alpha, 
          this.color.MemberwiseClone(), 
          this.scale
        );
      }
      if ((this.type | 0) === 13) {
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 24);
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 25);
        return;
      }
      if ((this.type | 0) === 14) {
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 26);
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 27);
        return;
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 28);
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 29);
      return;
    } else if ((this.type | 0) === 17) {
      if ((this.life | 0) > 0) {

        for (var num19 = 0; +num19 < (+((+dmg / +(this.lifeMax))) * 100); num19 = ((num19 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num20 = 0; num20 < 50; num20 = ((num20 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 30);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 31);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 31);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 32);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 32);
      return;
    } else if ((this.type | 0) === 37) {
      if ((this.life | 0) > 0) {

        for (var num21 = 0; +num21 < (+((+dmg / +(this.lifeMax))) * 100); num21 = ((num21 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num22 = 0; num22 < 50; num22 = ((num22 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 58);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 59);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 59);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 60);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 60);
      return;
    } else if ((this.type | 0) === 18) {
      if ((this.life | 0) > 0) {

        for (var num23 = 0; +num23 < (+((+dmg / +(this.lifeMax))) * 100); num23 = ((num23 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num24 = 0; num24 < 50; num24 = ((num24 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 33);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 34);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 34);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 35);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 35);
      return;
    } else if ((this.type | 0) === 19) {
      if ((this.life | 0) > 0) {

        for (var num25 = 0; +num25 < (+((+dmg / +(this.lifeMax))) * 100); num25 = ((num25 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num26 = 0; num26 < 50; num26 = ((num26 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 36);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 37);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 37);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 38);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 38);
      return;
    } else if ((this.type | 0) === 38) {
      if ((this.life | 0) > 0) {

        for (var num27 = 0; +num27 < (+((+dmg / +(this.lifeMax))) * 100); num27 = ((num27 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num28 = 0; num28 < 50; num28 = ((num28 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 64);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 65);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 65);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 66);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 66);
      return;
    } else if ((this.type | 0) === 20) {
      if ((this.life | 0) > 0) {

        for (var num29 = 0; +num29 < (+((+dmg / +(this.lifeMax))) * 100); num29 = ((num29 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num30 = 0; num30 < 50; num30 = ((num30 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 39);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 40);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 40);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 41);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 41);
      return;
    } else if (!(((this.type | 0) !== 21) && 
        ((this.type | 0) !== 31) && ((this.type | 0) !== 32))) {
      if ((this.life | 0) > 0) {

        for (var num31 = 0; +num31 < (+((+dmg / +(this.lifeMax))) * 50); num31 = ((num31 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            26, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num32 = 0; num32 < 20; num32 = ((num32 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          26, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 42);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 43);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 43);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 44);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 44);
      return;
    } else if (!(((this.type | 0) !== 39) && 
        ((this.type | 0) !== 40) && ((this.type | 0) !== 41))) {
      if ((this.life | 0) > 0) {

        for (var num33 = 0; +num33 < (+((+dmg / +(this.lifeMax))) * 50); num33 = ((num33 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            26, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num34 = 0; num34 < 20; num34 = ((num34 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          26, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), (((((this.type | 0) - 39) | 0) + 67) | 0));
      return;
    } else if ((this.type | 0) === 34) {
      if ((this.life | 0) > 0) {

        for (var num35 = 0; +num35 < (+((+dmg / +(this.lifeMax))) * 50); num35 = ((num35 + 1) | 0)) {
          var num36 = ($T06().NewDust(
            ($hoisted00._ctor(this.position.X, this.position.Y), 
              $hoisted00), 
            this.width, 
            this.height, 
            6, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            3
          ) | 0);
          $T00().dust[num36].noLight = true;
          $T00().dust[num36].noGravity = true;
          $T00().dust[num36].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num36].velocity.MemberwiseClone(), 2).MemberwiseClone();
          num36 = ($T06().NewDust(
            ($hoisted01._ctor(this.position.X, this.position.Y), 
              $hoisted01), 
            this.width, 
            this.height, 
            6, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num36].noLight = true;
          $T00().dust[num36].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num36].velocity.MemberwiseClone(), 2).MemberwiseClone();
        }
        return;
      }

      for (var num37 = 0; num37 < 20; num37 = ((num37 + 1) | 0)) {
        var num38 = ($T06().NewDust(
          ($hoisted02._ctor(this.position.X, this.position.Y), 
            $hoisted02), 
          this.width, 
          this.height, 
          6, 
          -this.velocity.X * 0.2, 
          -this.velocity.Y * 0.2, 
          100, 
          new ($T07())(), 
          3
        ) | 0);
        $T00().dust[num38].noLight = true;
        $T00().dust[num38].noGravity = true;
        $T00().dust[num38].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num38].velocity.MemberwiseClone(), 2).MemberwiseClone();
        num38 = ($T06().NewDust(
          ($hoisted03._ctor(this.position.X, this.position.Y), 
            $hoisted03), 
          this.width, 
          this.height, 
          6, 
          -this.velocity.X * 0.2, 
          -this.velocity.Y * 0.2, 
          100, 
          new ($T07())(), 
          2
        ) | 0);
        $T00().dust[num38].noLight = true;
        $T00().dust[num38].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num38].velocity.MemberwiseClone(), 2).MemberwiseClone();
      }
      return;
    } else if (!(((this.type | 0) !== 35) && ((this.type | 0) !== 36))) {
      if ((this.life | 0) > 0) {

        for (var num39 = 0; +num39 < (+((+dmg / +(this.lifeMax))) * 100); num39 = ((num39 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            26, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
        }
        return;
      }

      for (var num40 = 0; num40 < 150; num40 = ((num40 + 1) | 0)) {
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          26, 
          2.5 * +hitDirection, 
          -2.5, 
          0, 
          new ($T07())(), 
          1
        );
      }
      if ((this.type | 0) === 35) {
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 54);
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 55);
        return;
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 56);
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 57);
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 57);
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 57);
      return;
    } else if ((this.type | 0) === 23) {
      if ((this.life | 0) > 0) {

        for (var num41 = 0; +num41 < (+((+dmg / +(this.lifeMax))) * 100); num41 = ((num41 + 1) | 0)) {
          var num42 = 25;
          if (($T00().rand.Next(2) | 0) === 0) {
            num42 = 6;
          }
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            num42, 
            +hitDirection, 
            -1, 
            0, 
            new ($T07())(), 
            1
          );
          var num43 = ($T06().NewDust(
            ($hoisted04._ctor(this.position.X, this.position.Y), 
              $hoisted04), 
            this.width, 
            this.height, 
            6, 
            +this.velocity.X * 0.2, 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num43].noGravity = true;
        }
        return;
      }

      for (var num44 = 0; num44 < 50; num44 = ((num44 + 1) | 0)) {
        var num45 = 25;
        if (($T00().rand.Next(2) | 0) === 0) {
          num45 = 6;
        }
        $T06().NewDust(
          this.position, 
          this.width, 
          this.height, 
          num45, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T07())(), 
          1
        );
      }

      for (var num46 = 0; num46 < 50; num46 = ((num46 + 1) | 0)) {
        var num47 = ($T06().NewDust(
          ($hoisted05._ctor(this.position.X, this.position.Y), 
            $hoisted05), 
          this.width, 
          this.height, 
          6, 
          +this.velocity.X * 0.2, 
          +this.velocity.Y * 0.2, 
          100, 
          new ($T07())(), 
          2.5
        ) | 0);
        $T00().dust[num47].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num47].velocity.MemberwiseClone(), 6).MemberwiseClone();
        $T00().dust[num47].noGravity = true;
      }
      return;
    } else if ((this.type | 0) === 24) {
      if ((this.life | 0) > 0) {

        for (var num48 = 0; +num48 < (+((+dmg / +(this.lifeMax))) * 100); num48 = ((num48 + 1) | 0)) {
          var num49 = ($T06().NewDust(
            ($hoisted06._ctor(this.position.X, this.position.Y), 
              $hoisted06), 
            this.width, 
            this.height, 
            6, 
            this.velocity.X, 
            this.velocity.Y, 
            100, 
            new ($T07())(), 
            2.5
          ) | 0);
          $T00().dust[num49].noGravity = true;
        }
        return;
      }

      for (var num50 = 0; num50 < 50; num50 = ((num50 + 1) | 0)) {
        var num51 = ($T06().NewDust(
          ($hoisted07._ctor(this.position.X, this.position.Y), 
            $hoisted07), 
          this.width, 
          this.height, 
          6, 
          this.velocity.X, 
          this.velocity.Y, 
          100, 
          new ($T07())(), 
          2.5
        ) | 0);
        $T00().dust[num51].noGravity = true;
        $T00().dust[num51].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num51].velocity.MemberwiseClone(), 2).MemberwiseClone();
      }
      $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 45);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 46);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 46);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 47);
      $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 47);
      return;
    } else {
      if ((this.type | 0) === 25) {
        $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

        for (var num52 = 0; num52 < 20; num52 = ((num52 + 1) | 0)) {
          var num53 = ($T06().NewDust(
            ($hoisted08._ctor(this.position.X, this.position.Y), 
              $hoisted08), 
            this.width, 
            this.height, 
            6, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num53].noGravity = true;
          $T00().dust[num53].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num53].velocity.MemberwiseClone(), 2).MemberwiseClone();
          num53 = ($T06().NewDust(
            ($hoisted09._ctor(this.position.X, this.position.Y), 
              $hoisted09), 
            this.width, 
            this.height, 
            6, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            1
          ) | 0);
          $T00().dust[num53].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num53].velocity.MemberwiseClone(), 2).MemberwiseClone();
        }
        return;
      }
      if ((this.type | 0) === 33) {
        $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

        for (var num54 = 0; num54 < 20; num54 = ((num54 + 1) | 0)) {
          var num55 = ($T06().NewDust(
            ($hoisted0A._ctor(this.position.X, this.position.Y), 
              $hoisted0A), 
            this.width, 
            this.height, 
            29, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            2
          ) | 0);
          $T00().dust[num55].noGravity = true;
          $T00().dust[num55].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num55].velocity.MemberwiseClone(), 2).MemberwiseClone();
          num55 = ($T06().NewDust(
            ($hoisted0B._ctor(this.position.X, this.position.Y), 
              $hoisted0B), 
            this.width, 
            this.height, 
            29, 
            -this.velocity.X * 0.2, 
            -this.velocity.Y * 0.2, 
            100, 
            new ($T07())(), 
            1
          ) | 0);
          $T00().dust[num55].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num55].velocity.MemberwiseClone(), 2).MemberwiseClone();
        }
        return;
      }
      if (!(((this.type | 0) !== 26) && 
          ((this.type | 0) !== 27) && 
          ((this.type | 0) !== 28) && ((this.type | 0) !== 29))) {
        if ((this.life | 0) > 0) {

          for (var num56 = 0; +num56 < (+((+dmg / +(this.lifeMax))) * 100); num56 = ((num56 + 1) | 0)) {
            $T06().NewDust(
              this.position, 
              this.width, 
              this.height, 
              5, 
              +hitDirection, 
              -1, 
              0, 
              new ($T07())(), 
              1
            );
          }
          return;
        }

        for (var num57 = 0; num57 < 50; num57 = ((num57 + 1) | 0)) {
          $T06().NewDust(
            this.position, 
            this.width, 
            this.height, 
            5, 
            2.5 * +hitDirection, 
            -2.5, 
            0, 
            new ($T07())(), 
            1
          );
        }
        $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 48);
        $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 49);
        $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 20)), this.velocity.MemberwiseClone(), 49);
        $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 50);
        $T0F().NewGore($S00().Construct(this.position.X, (+this.position.Y + 34)), this.velocity.MemberwiseClone(), 50);
        return;
      } else {
        if ((this.type | 0) === 30) {
          $T00().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 10);

          for (var num58 = 0; num58 < 20; num58 = ((num58 + 1) | 0)) {
            var num59 = ($T06().NewDust(
              ($hoisted0C._ctor(this.position.X, this.position.Y), 
                $hoisted0C), 
              this.width, 
              this.height, 
              27, 
              -this.velocity.X * 0.2, 
              -this.velocity.Y * 0.2, 
              100, 
              new ($T07())(), 
              2
            ) | 0);
            $T00().dust[num59].noGravity = true;
            $T00().dust[num59].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num59].velocity.MemberwiseClone(), 2).MemberwiseClone();
            num59 = ($T06().NewDust(
              ($hoisted0D._ctor(this.position.X, this.position.Y), 
                $hoisted0D), 
              this.width, 
              this.height, 
              27, 
              -this.velocity.X * 0.2, 
              -this.velocity.Y * 0.2, 
              100, 
              new ($T07())(), 
              1
            ) | 0);
            $T00().dust[num59].velocity = $S01().CallStatic($T03(), "op_Multiply", null, $T00().dust[num59].velocity.MemberwiseClone(), 2).MemberwiseClone();
          }
          return;
        }
        if ((this.type | 0) === 42) {
          if ((this.life | 0) > 0) {

            for (var num60 = 0; +num60 < (+((+dmg / +(this.lifeMax))) * 100); num60 = ((num60 + 1) | 0)) {
              $T06().NewDust(
                this.position, 
                this.width, 
                this.height, 
                18, 
                +hitDirection, 
                -1, 
                this.alpha, 
                this.color.MemberwiseClone(), 
                this.scale
              );
            }
            return;
          }

          for (var num61 = 0; num61 < 50; num61 = ((num61 + 1) | 0)) {
            $T06().NewDust(
              this.position, 
              this.width, 
              this.height, 
              18, 
              +hitDirection, 
              -2, 
              this.alpha, 
              this.color.MemberwiseClone(), 
              this.scale
            );
          }
          $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 70);
          $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 71);
          return;
        } else if ((this.type | 0) === 43) {
          if ((this.life | 0) > 0) {

            for (var num62 = 0; +num62 < (+((+dmg / +(this.lifeMax))) * 100); num62 = ((num62 + 1) | 0)) {
              $T06().NewDust(
                this.position, 
                this.width, 
                this.height, 
                40, 
                +hitDirection, 
                -1, 
                this.alpha, 
                this.color.MemberwiseClone(), 
                1.2
              );
            }
            return;
          }

          for (var num63 = 0; num63 < 50; num63 = ((num63 + 1) | 0)) {
            $T06().NewDust(
              this.position, 
              this.width, 
              this.height, 
              40, 
              +hitDirection, 
              -2, 
              this.alpha, 
              this.color.MemberwiseClone(), 
              1.2
            );
          }
          $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 72);
          $T0F().NewGore(this.position.MemberwiseClone(), this.velocity.MemberwiseClone(), 72);
        }
      }
    }
  }; 

  function NPC_NewNPC (X, Y, Type, Start) {
    var num = -1;

  $loop0: 
    for (var i = (Start | 0); i < 1000; i = ((i + 1) | 0)) {
      if (!$T00().npc[i].active) {
        num = i;
        break $loop0;
      }
    }
    if (num >= 0) {
      $T00().npc[num] = new $thisType();
      $S02().CallVirtual("SetDefaults", null, $T00().npc[num], Type);
      $T00().npc[num].position.X = +((X | 0) - ((($T00().npc[num].width | 0) / 2) | 0));
      $T00().npc[num].position.Y = +((Y | 0) - ($T00().npc[num].height | 0));
      $T00().npc[num].active = true;
      $T00().npc[num].timeLeft = ((+($thisType.activeTime) * 1.25) | 0);
      $T00().npc[num].wet = $T13().WetCollision($T00().npc[num].position, $T00().npc[num].width, $T00().npc[num].height);
      return num;
    }
    return 1000;
  }; 

  function NPC_NPCLoot () {
    if (!(((this.type | 0) !== 1) && ((this.type | 0) !== 16))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        23, 
        $T00().rand.Next(1, 3), 
        false
      );
    }
    if (!(((this.type | 0) !== 2) || (($T00().rand.Next(3) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        38, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 3) || (($T00().rand.Next(50) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        216, 
        1, 
        false
      );
    }
    if ((this.type | 0) === 4) {
      var stack = ((($T00().rand.Next(30) | 0) + 20) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        47, 
        stack, 
        false
      );
      stack = ((($T00().rand.Next(20) | 0) + 10) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        56, 
        stack, 
        false
      );
      stack = ((($T00().rand.Next(20) | 0) + 10) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        56, 
        stack, 
        false
      );
      stack = ((($T00().rand.Next(20) | 0) + 10) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        56, 
        stack, 
        false
      );
      stack = ((($T00().rand.Next(3) | 0) + 1) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        59, 
        stack, 
        false
      );
    }
    if (!(((this.type | 0) !== 6) || (($T00().rand.Next(3) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        68, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 7) && 
        ((this.type | 0) !== 8) && ((this.type | 0) !== 9))) {
      if (($T00().rand.Next(3) | 0) === 0) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          68, 
          $T00().rand.Next(1, 3), 
          false
        );
      }
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        69, 
        $T00().rand.Next(3, 9), 
        false
      );
    }
    if (!((((this.type | 0) !== 10) && 
          ((this.type | 0) !== 11) && 
          ((this.type | 0) !== 12)) || (($T00().rand.Next(500) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        215, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 39) && 
        ((this.type | 0) !== 40) && ((this.type | 0) !== 41))) {
      if (($T00().rand.Next(100) | 0) === 0) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          220, 
          1, 
          false
        );
      } else if (($T00().rand.Next(100) | 0) === 0) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          218, 
          1, 
          false
        );
      }
    }
    if (!(((this.type | 0) !== 13) && 
        ((this.type | 0) !== 14) && ((this.type | 0) !== 15))) {
      var stack2 = ($T00().rand.Next(1, 4) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        86, 
        stack2, 
        false
      );
      if (($T00().rand.Next(2) | 0) === 0) {
        stack2 = ($T00().rand.Next(2, 6) | 0);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          56, 
          stack2, 
          false
        );
      }
      if (this.boss) {
        stack2 = ($T00().rand.Next(15, 30) | 0);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          56, 
          stack2, 
          false
        );
        stack2 = ($T00().rand.Next(15, 31) | 0);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          56, 
          stack2, 
          false
        );
        var num = ($T00().rand.Next(100, 103) | 0);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          num, 
          1, 
          false
        );
      }
    }
    if (!(((this.type | 0) !== 21) || (($T00().rand.Next(30) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        118, 
        1, 
        false
      );
    }
    if ((this.type | 0) === 23) {
      $T00().rand.Next(3);
    }
    if (!(((this.type | 0) !== 24) || (($T00().rand.Next(50) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        112, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 31) && ((this.type | 0) !== 32))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        154, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 26) && 
        ((this.type | 0) !== 27) && 
        ((this.type | 0) !== 28) && ((this.type | 0) !== 29))) {
      if (($T00().rand.Next(400) | 0) === 0) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          128, 
          1, 
          false
        );
      } else if (($T00().rand.Next(200) | 0) === 0) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          160, 
          1, 
          false
        );
      } else if (($T00().rand.Next(2) | 0) === 0) {
        var stack3 = ($T00().rand.Next(1, 6) | 0);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          161, 
          stack3, 
          false
        );
      }
    }
    if ((this.type | 0) === 42) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        209, 
        1, 
        false
      );
    }
    if (!(((this.type | 0) !== 43) || (($T00().rand.Next(5) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        210, 
        1, 
        false
      );
    }
    if (!((((this.type | 0) !== 42) && 
          ((this.type | 0) !== 43)) || (($T00().rand.Next(150) | 0) !== 0))) {
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        $T00().rand.Next(228, 231), 
        1, 
        false
      );
    }
    if (this.boss) {
      if ((this.type | 0) === 4) {
        $thisType.downedBoss1 = true;
      }
      if (!(((this.type | 0) !== 13) && 
          ((this.type | 0) !== 14) && ((this.type | 0) !== 15))) {
        $thisType.downedBoss2 = true;
        this.$name = "Eater of Worlds";
      }
      if ((this.type | 0) === 35) {
        $thisType.downedBoss3 = true;
        this.$name = "Skeletron";
      }
      var stack4 = ($T00().rand.Next(5, 16) | 0);
      $T15().NewItem(
        ((this.position.X) | 0), 
        ((this.position.Y) | 0), 
        this.width, 
        this.height, 
        28, 
        stack4, 
        false
      );
      var num2 = ((($T00().rand.Next(5) | 0) + 5) | 0);

      for (var i = 0; i < num2; i = ((i + 1) | 0)) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          58, 
          1, 
          false
        );
      }
      if (($T00().netMode | 0) === 0) {
        $T00().NewText(JSIL.ConcatString(this.$name, " has been defeated!"), 175, 75, 255);
      } else if (($T00().netMode | 0) === 2) {
        $T0D().SendData(
          25, 
          -1, 
          -1, 
          JSIL.ConcatString(this.$name, " has been defeated!"), 
          8, 
          175, 
          75, 
          255
        );
      }
    }
    if (($T00().rand.Next(7) | 0) === 0) {
      if (!((($T00().rand.Next(2) | 0) !== 0) || (($T00().player[$T16().FindClosest(this.position.MemberwiseClone(), this.width, this.height)].statMana | 0) >= ($T00().player[$T16().FindClosest(this.position.MemberwiseClone(), this.width, this.height)].statManaMax | 0)))) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          184, 
          1, 
          false
        );
      } else if (!((($T00().rand.Next(2) | 0) !== 0) || (($T00().player[$T16().FindClosest(this.position.MemberwiseClone(), this.width, this.height)].statLife | 0) >= ($T00().player[$T16().FindClosest(this.position.MemberwiseClone(), this.width, this.height)].statLifeMax | 0)))) {
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          58, 
          1, 
          false
        );
      }
    }
    var num3 = +this.value;
    num3 *= 1 + (+($T00().rand.Next(-20, 21)) * 0.01);
    if (($T00().rand.Next(5) | 0) === 0) {
      num3 *= 1 + (+($T00().rand.Next(5, 11)) * 0.01);
    }
    if (($T00().rand.Next(10) | 0) === 0) {
      num3 *= 1 + (+($T00().rand.Next(10, 21)) * 0.01);
    }
    if (($T00().rand.Next(15) | 0) === 0) {
      num3 *= 1 + (+($T00().rand.Next(15, 31)) * 0.01);
    }
    if (($T00().rand.Next(20) | 0) === 0) {
      num3 *= 1 + (+($T00().rand.Next(20, 41)) * 0.01);
    }

    while (((num3) | 0) > 0) {
      if (num3 > 1000000) {
        var num4 = ((+(num3 / 1000000)) | 0);
        if (!((num4 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
          num4 = ((num4 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        if (($T00().rand.Next(2) | 0) === 0) {
          num4 = ((num4 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        num3 -= +(1000000 * num4);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          74, 
          num4, 
          false
        );
      } else if (num3 > 10000) {
        var num5 = ((+(num3 / 10000)) | 0);
        if (!((num5 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
          num5 = ((num5 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        if (($T00().rand.Next(2) | 0) === 0) {
          num5 = ((num5 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        num3 -= +(10000 * num5);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          73, 
          num5, 
          false
        );
      } else if (num3 > 100) {
        var num6 = ((+(num3 / 100)) | 0);
        if (!((num6 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
          num6 = ((num6 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        if (($T00().rand.Next(2) | 0) === 0) {
          num6 = ((num6 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        num3 -= +(100 * num6);
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          72, 
          num6, 
          false
        );
      } else {
        var num7 = ((num3) | 0);
        if (!((num7 <= 50) || (($T00().rand.Next(2) | 0) !== 0))) {
          num7 = ((num7 / ((($T00().rand.Next(3) | 0) + 1) | 0)) | 0);
        }
        if (($T00().rand.Next(2) | 0) === 0) {
          num7 = ((num7 / ((($T00().rand.Next(4) | 0) + 1) | 0)) | 0);
        }
        if (num7 < 1) {
          num7 = 1;
        }
        num3 -= +num7;
        $T15().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          71, 
          num7, 
          false
        );
      }
    }
  }; 

  function NPC_SetDefaults$00 (Name) {
    $S02().CallVirtual("SetDefaults", null, this, 0);
    if (Name == "Green Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.scale = 0.9;
      this.damage = 8;
      this.defense = 2;
      this.life = 15;
      this.knockBackResist = 1.1;
      this.color = $S03().Construct(0, 220, 40, 100);
      this.value = 3;
    } else if (Name == "Pinky") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.scale = 0.6;
      this.damage = 5;
      this.defense = 5;
      this.life = 150;
      this.knockBackResist = 1.4;
      this.color = $S03().Construct(250, 30, 90, 90);
      this.value = 10000;
    } else if (Name == "Baby Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.scale = 0.9;
      this.damage = 13;
      this.defense = 4;
      this.life = 30;
      this.knockBackResist = 0.95;
      this.alpha = 120;
      this.color = $S03().Construct(0, 0, 0, 50);
      this.value = 10;
    } else if (Name == "Black Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.damage = 15;
      this.defense = 4;
      this.life = 45;
      this.color = $S03().Construct(0, 0, 0, 50);
      this.value = 20;
    } else if (Name == "Purple Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.scale = 1.2;
      this.damage = 12;
      this.defense = 6;
      this.life = 40;
      this.knockBackResist = 0.9;
      this.color = $S03().Construct(200, 0, 255, 150);
      this.value = 10;
    } else if (Name == "Red Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.damage = 12;
      this.defense = 4;
      this.life = 35;
      this.color = $S03().Construct(255, 30, 0, 100);
      this.value = 8;
    } else if (Name == "Yellow Slime") {
      $S02().CallVirtual("SetDefaults", null, this, 1);
      this.$name = Name;
      this.scale = 1.2;
      this.damage = 15;
      this.defense = 7;
      this.life = 45;
      this.color = $S03().Construct(255, 255, 0, 100);
      this.value = 10;
    } else if (Name != "") {

    $loop0: 
      for (var i = 1; i < 44; i = ((i + 1) | 0)) {
        $S02().CallVirtual("SetDefaults", null, this, i);
        if (this.$name == Name) {
          break $loop0;
        }
        if (i === 43) {
          $S02().CallVirtual("SetDefaults", null, this, 0);
          this.active = false;
        }
      }
    } else {
      this.active = false;
    }
    this.lifeMax = (this.life | 0);
  }; 

  function NPC_SetDefaults$01 (Type) {
    this.lavaWet = false;
    this.wetCount = 0;
    this.wet = false;
    this.townNPC = false;
    this.homeless = false;
    this.homeTileX = -1;
    this.homeTileY = -1;
    this.friendly = false;
    this.behindTiles = false;
    this.boss = false;
    this.noTileCollide = false;
    this.rotation = 0;
    this.active = true;
    this.alpha = 0;
    this.color = new ($T07())();
    this.collideX = false;
    this.collideY = false;
    this.direction = 0;
    this.oldDirection = (this.direction | 0);
    this.frameCounter = 0;
    this.netUpdate = false;
    this.knockBackResist = 1;
    this.$name = "";
    this.noGravity = false;
    this.scale = 1;
    this.soundHit = 0;
    this.soundKilled = 0;
    this.spriteDirection = -1;
    this.target = 8;
    this.oldTarget = (this.target | 0);
    this.targetRect = new ($T04())();
    this.timeLeft = ($thisType.activeTime | 0);
    this.type = (Type | 0);
    this.value = 0;

    for (var i = 0; i < ($thisType.maxAI | 0); i = ((i + 1) | 0)) {
      this.ai[i] = 0;
    }
    if ((this.type | 0) === 1) {
      this.$name = "Blue Slime";
      this.width = 24;
      this.height = 18;
      this.aiStyle = 1;
      this.damage = 7;
      this.defense = 2;
      this.lifeMax = 25;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.alpha = 175;
      this.color = $S03().Construct(0, 80, 255, 100);
      this.value = 25;
    }
    if ((this.type | 0) === 2) {
      this.$name = "Demon Eye";
      this.width = 30;
      this.height = 32;
      this.aiStyle = 2;
      this.damage = 18;
      this.defense = 2;
      this.lifeMax = 60;
      this.soundHit = 1;
      this.knockBackResist = 0.8;
      this.soundKilled = 1;
      this.value = 75;
    }
    if ((this.type | 0) === 3) {
      this.$name = "Zombie";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 14;
      this.defense = 6;
      this.lifeMax = 45;
      this.soundHit = 1;
      this.soundKilled = 2;
      this.knockBackResist = 0.5;
      this.value = 60;
    }
    if ((this.type | 0) === 4) {
      this.$name = "Eye of Cthulhu";
      this.width = 100;
      this.height = 110;
      this.aiStyle = 4;
      this.damage = 18;
      this.defense = 12;
      this.lifeMax = 3000;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0;
      this.noGravity = true;
      this.noTileCollide = true;
      this.timeLeft = Math.imul($thisType.activeTime, 30);
      this.boss = true;
      this.value = 30000;
    }
    if ((this.type | 0) === 5) {
      this.$name = "Servant of Cthulhu";
      this.width = 20;
      this.height = 20;
      this.aiStyle = 5;
      this.damage = 23;
      this.defense = 0;
      this.lifeMax = 8;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
    }
    if ((this.type | 0) === 6) {
      this.$name = "Eater of Souls";
      this.width = 30;
      this.height = 30;
      this.aiStyle = 5;
      this.damage = 15;
      this.defense = 8;
      this.lifeMax = 40;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.knockBackResist = 0.5;
      this.value = 90;
    }
    if ((this.type | 0) === 7) {
      this.$name = "Devourer Head";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 28;
      this.defense = 2;
      this.lifeMax = 40;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 8) {
      this.$name = "Devourer Body";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 18;
      this.defense = 6;
      this.lifeMax = 60;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 9) {
      this.$name = "Devourer Tail";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 13;
      this.defense = 10;
      this.lifeMax = 100;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 10) {
      this.$name = "Giant Worm Head";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 6;
      this.damage = 8;
      this.defense = 0;
      this.lifeMax = 10;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 200;
    }
    if ((this.type | 0) === 11) {
      this.$name = "Giant Worm Body";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 6;
      this.damage = 4;
      this.defense = 4;
      this.lifeMax = 15;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 200;
    }
    if ((this.type | 0) === 12) {
      this.$name = "Giant Worm Tail";
      this.width = 14;
      this.height = 14;
      this.aiStyle = 6;
      this.damage = 4;
      this.defense = 6;
      this.lifeMax = 20;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 200;
    }
    if ((this.type | 0) === 13) {
      this.$name = "Eater of Worlds Head";
      this.width = 38;
      this.height = 38;
      this.aiStyle = 6;
      this.damage = 40;
      this.defense = 0;
      this.lifeMax = 120;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 14) {
      this.$name = "Eater of Worlds Body";
      this.width = 38;
      this.height = 38;
      this.aiStyle = 6;
      this.damage = 15;
      this.defense = 4;
      this.lifeMax = 200;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 15) {
      this.$name = "Eater of Worlds Tail";
      this.width = 38;
      this.height = 38;
      this.aiStyle = 6;
      this.damage = 10;
      this.defense = 8;
      this.lifeMax = 300;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 300;
    }
    if ((this.type | 0) === 16) {
      this.$name = "Mother Slime";
      this.width = 36;
      this.height = 24;
      this.aiStyle = 1;
      this.damage = 20;
      this.defense = 7;
      this.lifeMax = 90;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.alpha = 120;
      this.color = $S03().Construct(0, 0, 0, 50);
      this.value = 75;
      this.scale = 1.25;
      this.knockBackResist = 0.6;
    }
    if ((this.type | 0) === 17) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Merchant";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 15;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 18) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Nurse";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 15;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 19) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Arms Dealer";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 15;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 20) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Dryad";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 15;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 21) {
      this.$name = "Skeleton";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 20;
      this.defense = 8;
      this.lifeMax = 60;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.knockBackResist = 0.5;
      this.value = 250;
    }
    if ((this.type | 0) === 22) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Guide";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 100;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 23) {
      this.$name = "Meteor Head";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 5;
      this.damage = 25;
      this.defense = 10;
      this.lifeMax = 50;
      this.soundHit = 3;
      this.soundKilled = 3;
      this.noGravity = true;
      this.noTileCollide = true;
      this.value = 300;
      this.knockBackResist = 0.8;
    } else if ((this.type | 0) === 24) {
      this.$name = "Fire Imp";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 8;
      this.damage = 30;
      this.defense = 20;
      this.lifeMax = 80;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
      this.value = 800;
    }
    if ((this.type | 0) === 25) {
      this.$name = "Burning Sphere";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 9;
      this.damage = 25;
      this.defense = 0;
      this.lifeMax = 1;
      this.soundHit = 3;
      this.soundKilled = 3;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.alpha = 100;
    }
    if ((this.type | 0) === 26) {
      this.$name = "Goblin Peon";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 12;
      this.defense = 4;
      this.lifeMax = 60;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.8;
      this.value = 250;
    }
    if ((this.type | 0) === 27) {
      this.$name = "Goblin Thief";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 20;
      this.defense = 6;
      this.lifeMax = 80;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.7;
      this.value = 600;
    }
    if ((this.type | 0) === 28) {
      this.$name = "Goblin Warrior";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 25;
      this.defense = 8;
      this.lifeMax = 110;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
      this.value = 500;
    } else if ((this.type | 0) === 29) {
      this.$name = "Goblin Sorcerer";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 8;
      this.damage = 20;
      this.defense = 2;
      this.lifeMax = 40;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.6;
      this.value = 800;
    } else if ((this.type | 0) === 30) {
      this.$name = "Chaos Ball";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 9;
      this.damage = 20;
      this.defense = 0;
      this.lifeMax = 1;
      this.soundHit = 3;
      this.soundKilled = 3;
      this.noGravity = true;
      this.noTileCollide = true;
      this.alpha = 100;
      this.knockBackResist = 0;
    } else if ((this.type | 0) === 31) {
      this.$name = "Angry Bones";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 3;
      this.damage = 30;
      this.defense = 10;
      this.lifeMax = 100;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.knockBackResist = 0.7;
      this.value = 500;
    } else if ((this.type | 0) === 32) {
      this.$name = "Dark Caster";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 8;
      this.damage = 20;
      this.defense = 4;
      this.lifeMax = 50;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.knockBackResist = 0.6;
      this.value = 800;
    } else if ((this.type | 0) === 33) {
      this.$name = "Water Sphere";
      this.width = 16;
      this.height = 16;
      this.aiStyle = 9;
      this.damage = 20;
      this.defense = 0;
      this.lifeMax = 1;
      this.soundHit = 3;
      this.soundKilled = 3;
      this.noGravity = true;
      this.noTileCollide = true;
      this.alpha = 100;
      this.knockBackResist = 0;
    }
    if ((this.type | 0) === 34) {
      this.$name = "Burning Skull";
      this.width = 26;
      this.height = 28;
      this.aiStyle = 10;
      this.damage = 25;
      this.defense = 30;
      this.lifeMax = 30;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.value = 300;
      this.knockBackResist = 1.2;
    }
    if ((this.type | 0) === 35) {
      this.$name = "Skeletron Head";
      this.width = 80;
      this.height = 102;
      this.aiStyle = 11;
      this.damage = 35;
      this.defense = 12;
      this.lifeMax = 6000;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.noTileCollide = true;
      this.value = 50000;
      this.knockBackResist = 0;
      this.boss = true;
    }
    if ((this.type | 0) === 36) {
      this.$name = "Skeletron Hand";
      this.width = 52;
      this.height = 52;
      this.aiStyle = 12;
      this.damage = 30;
      this.defense = 18;
      this.lifeMax = 1200;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
    }
    if ((this.type | 0) === 37) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Old Man";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 100;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 38) {
      this.townNPC = true;
      this.friendly = true;
      this.$name = "Demolitionist";
      this.width = 18;
      this.height = 40;
      this.aiStyle = 7;
      this.damage = 10;
      this.defense = 15;
      this.lifeMax = 250;
      this.soundHit = 1;
      this.soundKilled = 1;
      this.knockBackResist = 0.5;
    }
    if ((this.type | 0) === 39) {
      this.$name = "Bone Serpent Head";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 40;
      this.defense = 10;
      this.lifeMax = 120;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 1000;
    }
    if ((this.type | 0) === 40) {
      this.$name = "Bone Serpent Body";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 30;
      this.defense = 12;
      this.lifeMax = 150;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 1000;
    }
    if ((this.type | 0) === 41) {
      this.$name = "Bone Serpent Tail";
      this.width = 22;
      this.height = 22;
      this.aiStyle = 6;
      this.damage = 20;
      this.defense = 18;
      this.lifeMax = 200;
      this.soundHit = 2;
      this.soundKilled = 2;
      this.noGravity = true;
      this.noTileCollide = true;
      this.knockBackResist = 0;
      this.behindTiles = true;
      this.value = 1000;
    }
    if ((this.type | 0) === 42) {
      this.$name = "Hornet";
      this.width = 34;
      this.height = 32;
      this.aiStyle = 2;
      this.damage = 40;
      this.defense = 14;
      this.lifeMax = 100;
      this.soundHit = 1;
      this.knockBackResist = 0.8;
      this.soundKilled = 1;
      this.value = 750;
    }
    if ((this.type | 0) === 43) {
      this.noGravity = true;
      this.$name = "Man Eater";
      this.width = 30;
      this.height = 30;
      this.aiStyle = 13;
      this.damage = 60;
      this.defense = 18;
      this.lifeMax = 200;
      this.soundHit = 1;
      this.knockBackResist = 0.7;
      this.soundKilled = 1;
      this.value = 750;
    }
    this.frame = new ($T04())(0, 0, ($T00().npcTexture[this.type]).get_Width(), (((($T00().npcTexture[this.type]).get_Height() | 0) / ($T00().npcFrameCount[this.type] | 0)) | 0));
    this.width = ((+(this.width) * +this.scale) | 0);
    this.height = ((+(this.height) * +this.scale) | 0);
    this.life = (this.lifeMax | 0);
    if ($T00().dumbAI) {
      this.aiStyle = 0;
    }
  }; 

  function NPC_SpawnNPC () {
    var rectangle = new ($T04())(), rectangle2 = new ($T04())();
    if ($T00().stopSpawns) {
      return;
    }
    var num = 0;
    var num2 = 0;
    var num3 = 0;

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if ($T00().player[i].active) {
        num3 = ((num3 + 1) | 0);
      }
    }

  $loop1: 
    for (var j = 0; j < 8; ) {
      var flag = false;
      if (!(!$T00().player[j].active || 
          (($T00().invasionType | 0) <= 0) || 
          (($T00().invasionDelay | 0) !== 0) || 
          (($T00().invasionSize | 0) <= 0) || ($T00().player[j].position.Y >= ((+$T00().worldSurface * 16) + +($T00().screenHeight))))) {
        if (!(($T00().player[j].position.X <= ((+$T00().invasionX * 16) - +3000)) || ($T00().player[j].position.X >= ((+$T00().invasionX * 16) + +3000)))) {
          flag = true;
        }
      }
      var flag2 = false;
      $thisType.spawnRate = ($thisType.defaultSpawnRate | 0);
      $thisType.maxSpawns = ($thisType.defaultMaxSpawns | 0);
      if (+$T00().player[j].position.Y > +(((($T00().maxTilesY | 0) - 200) | 0) * 16)) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 1.5) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 0.5) | 0);
      } else if ($T00().player[j].position.Y > ((+$T00().rockLayer * 16) + +($T00().screenHeight))) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.7) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.35) | 0);
      } else if ($T00().player[j].position.Y > ((+$T00().worldSurface * 16) + +($T00().screenHeight))) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.8) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.1) | 0);
      } else if (!$T00().dayTime) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.6) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.3) | 0);
        if ($T00().bloodMoon) {
          $thisType.spawnRate = ((+($thisType.spawnRate) * 0.3) | 0);
          $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.8) | 0);
        }
      }
      if ($T00().player[j].zoneDungeon) {
        $thisType.spawnRate = ((+($thisType.defaultSpawnRate) * 0.1) | 0);
        $thisType.maxSpawns = ((+($thisType.defaultMaxSpawns) * 2.1) | 0);
      } else if ($T00().player[j].zoneEvil) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.5) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.4) | 0);
      } else if ($T00().player[j].zoneMeteor) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.5) | 0);
      } else if ($T00().player[j].zoneJungle) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.3) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.6) | 0);
      }
      if (+($thisType.spawnRate) < (+($thisType.defaultSpawnRate) * 0.1)) {
        $thisType.spawnRate = ((+($thisType.defaultSpawnRate) * 0.1) | 0);
      }
      if (+($thisType.maxSpawns) > (+($thisType.defaultMaxSpawns) * 2.5)) {
        $thisType.maxSpawns = ((+($thisType.defaultMaxSpawns) * 2.5) | 0);
      }
      if (($T00().player[j].inventory[$T00().player[j].selectedItem].type | 0) === 49) {
        $thisType.spawnRate = ((+($thisType.spawnRate) * 0.75) | 0);
        $thisType.maxSpawns = ((+($thisType.maxSpawns) * 1.5) | 0);
      }
      if (flag) {
        $thisType.maxSpawns = ((+($thisType.defaultMaxSpawns) * (1 + (0.4 * +num3))) | 0);
        $thisType.spawnRate = 30;
      }
      if (!(flag || 
          ($T00().bloodMoon && 
            !$T00().dayTime) || 
          $T00().player[j].zoneDungeon || 
          $T00().player[j].zoneEvil || $T00().player[j].zoneMeteor)) {
        if (($T00().player[j].townNPCs | 0) === 1) {
          $thisType.maxSpawns = ((+($thisType.maxSpawns) * 0.6) | 0);
          $thisType.spawnRate = ((+($thisType.spawnRate) * 2) | 0);
        } else if (($T00().player[j].townNPCs | 0) === 2) {
          $thisType.maxSpawns = ((+($thisType.maxSpawns) * 0.3) | 0);
          $thisType.spawnRate = ((+($thisType.spawnRate) * 3) | 0);
        } else if (($T00().player[j].townNPCs | 0) >= 3) {
          $thisType.maxSpawns = 0;
          $thisType.spawnRate = 99999;
        }
      }
      if (!(!$T00().player[j].active || 
          $T00().player[j].dead || 
          (($T00().player[j].activeNPCs | 0) >= ($thisType.maxSpawns | 0)) || (($T00().rand.Next($thisType.spawnRate) | 0) !== 0))) {
        var num5 = ((((+(+$T00().player[j].position.X / 16)) | 0) - ($thisType.spawnRangeX | 0)) | 0);
        var num6 = ((((+(+$T00().player[j].position.X / 16)) | 0) + ($thisType.spawnRangeX | 0)) | 0);
        var num7 = ((((+(+$T00().player[j].position.Y / 16)) | 0) - ($thisType.spawnRangeY | 0)) | 0);
        var num8 = ((((+(+$T00().player[j].position.Y / 16)) | 0) + ($thisType.spawnRangeY | 0)) | 0);
        var num9 = ((((+(+$T00().player[j].position.X / 16)) | 0) - ($thisType.safeRangeX | 0)) | 0);
        var num10 = ((((+(+$T00().player[j].position.X / 16)) | 0) + ($thisType.safeRangeX | 0)) | 0);
        var num11 = ((((+(+$T00().player[j].position.Y / 16)) | 0) - ($thisType.safeRangeY | 0)) | 0);
        var num12 = ((((+(+$T00().player[j].position.Y / 16)) | 0) + ($thisType.safeRangeY | 0)) | 0);
        if (num5 < 0) {
          num5 = 0;
        }
        if (num6 > ($T00().maxTilesX | 0)) {
          num6 = ($T00().maxTilesX | 0);
        }
        if (num7 < 0) {
          num7 = 0;
        }
        if (num8 > ($T00().maxTilesY | 0)) {
          num8 = ($T00().maxTilesY | 0);
        }
        var k = 0;

      $loop2: 
        while (k < 50) {

          var $label0 = 0;
        $labelgroup0: 
          while (true) {
            switch ($label0) {
              case 0: /* $entry0 */ 
                var num13 = ($T00().rand.Next(num5, num6) | 0);
                var num14 = ($T00().rand.Next(num7, num8) | 0);
                if ($T00().tile.Get(num13, num14).active && $T00().tileSolid[$T00().tile.Get(num13, num14).type]) {
                  $label0 = 2 /* goto IL_840 */ ;
                  continue $labelgroup0;
                }
                if (!$T00().wallHouse[$T00().tile.Get(num13, num14).wall]) {

                $loop3: 
                  for (var l = num14; l < ($T00().maxTilesY | 0); ) {
                    if (!(!$T00().tile.Get(num13, l).active || !$T00().tileSolid[$T00().tile.Get(num13, l).type])) {
                      if (!((num13 >= num9) && 
                          (num13 <= num10) && 
                          (l >= num11) && (l <= num12))) {
                        var arg_754_0 = ($T00().tile.Get(num13, l).type | 0);
                        num = num13;
                        num2 = l;
                        flag2 = true;
                        break $loop3;
                      }
                      break $loop3;
                    } else {
                      l = ((l + 1) | 0);
                    }
                  }
                  if (!flag2) {
                    $label0 = 2 /* goto IL_840 */ ;
                    continue $labelgroup0;
                  }
                  var num15 = ((num - ((($thisType.spawnSpaceX | 0) / 2) | 0)) | 0);
                  var num16 = ((num + ((($thisType.spawnSpaceX | 0) / 2) | 0)) | 0);
                  var num17 = ((num2 - ($thisType.spawnSpaceY | 0)) | 0);
                  var num18 = num2;
                  if (num15 < 0) {
                    flag2 = false;
                  }
                  if (num16 > ($T00().maxTilesX | 0)) {
                    flag2 = false;
                  }
                  if (num17 < 0) {
                    flag2 = false;
                  }
                  if (num18 > ($T00().maxTilesY | 0)) {
                    flag2 = false;
                  }
                  if (flag2) {

                    for (var m = num15; m < num16; m = ((m + 1) | 0)) {

                    $loop5: 
                      for (var n = num17; n < num18; n = ((n + 1) | 0)) {
                        if (!(!$T00().tile.Get(m, n).active || !$T00().tileSolid[$T00().tile.Get(m, n).type])) {
                          flag2 = false;
                          break $loop5;
                        }
                        if (!(!$T00().tile.Get(m, n).lava || (n >= ((($T00().maxTilesY | 0) - 200) | 0)))) {
                          flag2 = false;
                          break $loop5;
                        }
                      }
                    }
                    $label0 = 2 /* goto IL_840 */ ;
                    continue $labelgroup0;
                  }
                  $label0 = 2 /* goto IL_840 */ ;
                  continue $labelgroup0;
                }

                $label0 = 1 /* goto IL_846 */ ;
                continue $labelgroup0;
              case 1: /* IL_846 */ 
                k = ((k + 1) | 0);
                continue $loop2;

              case 2: /* IL_840 */ 
                if (!(flag2 || flag2)) {
                  $label0 = 1 /* goto IL_846 */ ;
                  continue $labelgroup0;
                }
                break $loop2;

            }
          }
        }
      }
      if (flag2) {
        (rectangle = rectangle.MemberwiseClone(), 
          $T04().prototype._ctor.call(rectangle, Math.imul(num, 16), Math.imul(num2, 16), 16, 16));

        for (var num19 = 0; num19 < 8; num19 = ((num19 + 1) | 0)) {
          if ($T00().player[num19].active) {
            (rectangle2 = rectangle2.MemberwiseClone(), 
              $T04().prototype._ctor.call(rectangle2, ((((+$T00().player[num19].position.X + +((($T00().player[num19].width | 0) / 2 | 0))) - +((($T00().screenWidth | 0) / 2 | 0))) - +($thisType.safeRangeX)) | 0), ((((+$T00().player[num19].position.Y + +((($T00().player[num19].height | 0) / 2 | 0))) - +((($T00().screenHeight | 0) / 2 | 0))) - +($thisType.safeRangeY)) | 0), ((($T00().screenWidth | 0) + Math.imul($thisType.safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($thisType.safeRangeY, 2)) | 0)));
            if (rectangle.Intersects(rectangle2.MemberwiseClone())) {
              flag2 = false;
            }
          }
        }
      }
      if (!(!flag2 || 
          !$T00().player[j].zoneDungeon || ($T00().tileDungeon[$T00().tile.Get(num, num2).type] && 
            (($T00().tile.Get(num, ((num2 - 1) | 0)).wall | 0) !== 0)))) {
        flag2 = false;
      }
      if (flag2) {
        var num20 = ($T00().tile.Get(num, num2).type | 0);
        var num21 = 1000;
        if (flag) {
          if (($T00().rand.Next(9) | 0) === 0) {
            $thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 29, 0);
          } else if (($T00().rand.Next(5) | 0) === 0) {
            $thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 26, 0);
          } else if (($T00().rand.Next(3) | 0) === 0) {
            $thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 27, 0);
          } else {
            $thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 28, 0);
          }
        } else if ($T00().player[j].zoneDungeon) {
          if (!$thisType.downedBoss3) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 35, 0) | 0);
            $T00().npc[num21].ai[0] = 1;
            $T00().npc[num21].ai[2] = 2;
          } else if (($T00().rand.Next(4) | 0) === 0) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 34, 0) | 0);
          } else if (($T00().rand.Next(5) | 0) === 0) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 32, 0) | 0);
          } else {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 31, 0) | 0);
          }
        } else if ($T00().player[j].zoneMeteor) {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 23, 0) | 0);
        } else if (!(!$T00().player[j].zoneEvil || (($T00().rand.Next(50) | 0) !== 0))) {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 7, 1) | 0);
        } else if (num20 === 60) {
          if (($T00().rand.Next(3) | 0) === 0) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 43, 0) | 0);
            $T00().npc[num21].ai[0] = +num;
            $T00().npc[num21].ai[1] = +num2;
            $T00().npc[num21].netUpdate = true;
          } else {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 42, 0) | 0);
          }
        } else if (+num2 <= +$T00().worldSurface) {
          if (!((num20 !== 23) && (num20 !== 25))) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 6, 0) | 0);
          } else if ($T00().dayTime) {
            var num22 = (Math.abs(((num - ($T00().spawnTileX | 0)) | 0)));
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 1, 0) | 0);
            if (!((($T00().rand.Next(3) | 0) !== 0) && (num22 >= 200))) {
              $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Green Slime");
            } else if (!((($T00().rand.Next(10) | 0) !== 0) || (num22 <= 400))) {
              $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Purple Slime");
            }
          } else if (!((($T00().rand.Next(6) | 0) !== 0) && ((($T00().moonPhase | 0) !== 4) || 
                (($T00().rand.Next(2) | 0) !== 0)))) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 2, 0) | 0);
          } else {
            $thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 3, 0);
          }
        } else if (+num2 <= +$T00().rockLayer) {
          if (($T00().rand.Next(30) | 0) === 0) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 10, 1) | 0);
          } else {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 1, 0) | 0);
            if (($T00().rand.Next(5) | 0) === 0) {
              $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Yellow Slime");
            } else if (($T00().rand.Next(2) | 0) === 0) {
              $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Blue Slime");
            } else {
              $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Red Slime");
            }
          }
        } else if (num2 > ((($T00().maxTilesY | 0) - 190) | 0)) {
          if (($T00().rand.Next(5) | 0) === 0) {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 39, 1) | 0);
          } else {
            num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 24, 0) | 0);
          }
        } else if (($T00().rand.Next(35) | 0) === 0) {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 10, 1) | 0);
        } else if (($T00().rand.Next(5) | 0) === 0) {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 16, 0) | 0);
        } else if (($T00().rand.Next(2) | 0) === 0) {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 21, 0) | 0);
        } else {
          num21 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), 1, 0) | 0);
          $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Black Slime");
        }
        if (!((($T00().npc[num21].type | 0) !== 1) || (($T00().rand.Next(250) | 0) !== 0))) {
          $S04().CallVirtual("SetDefaults", null, $T00().npc[num21], "Pinky");
        }
        if (!((($T00().netMode | 0) !== 2) || (num21 >= 1000))) {
          $T0D().SendData(
            23, 
            -1, 
            -1, 
            "", 
            num21, 
            0, 
            0, 
            0
          );
          return;
        }
        break $loop1;
      } else {
        j = ((j + 1) | 0);
      }
    }
  }; 

  function NPC_SpawnOnPlayer (plr, Type) {
    var rectangle = new ($T04())(), rectangle2 = new ($T04())();
    var flag = false;
    var num = 0;
    var num2 = 0;
    var num3 = ((((+(+$T00().player[plr].position.X / 16)) | 0) - Math.imul($thisType.spawnRangeX, 3)) | 0);
    var num4 = ((((+(+$T00().player[plr].position.X / 16)) | 0) + Math.imul($thisType.spawnRangeX, 3)) | 0);
    var num5 = ((((+(+$T00().player[plr].position.Y / 16)) | 0) - Math.imul($thisType.spawnRangeY, 3)) | 0);
    var num6 = ((((+(+$T00().player[plr].position.Y / 16)) | 0) + Math.imul($thisType.spawnRangeY, 3)) | 0);
    var num7 = ((((+(+$T00().player[plr].position.X / 16)) | 0) - ($thisType.safeRangeX | 0)) | 0);
    var num8 = ((((+(+$T00().player[plr].position.X / 16)) | 0) + ($thisType.safeRangeX | 0)) | 0);
    var num9 = ((((+(+$T00().player[plr].position.Y / 16)) | 0) - ($thisType.safeRangeY | 0)) | 0);
    var num10 = ((((+(+$T00().player[plr].position.Y / 16)) | 0) + ($thisType.safeRangeY | 0)) | 0);
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T00().maxTilesX | 0)) {
      num4 = ($T00().maxTilesX | 0);
    }
    if (num5 < 0) {
      num5 = 0;
    }
    if (num6 > ($T00().maxTilesY | 0)) {
      num6 = ($T00().maxTilesY | 0);
    }

  $loop0: 
    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      var j = 0;

    $loop1: 
      while (j < 100) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              var num11 = ($T00().rand.Next(num3, num4) | 0);
              var num12 = ($T00().rand.Next(num5, num6) | 0);
              if ($T00().tile.Get(num11, num12).active && $T00().tileSolid[$T00().tile.Get(num11, num12).type]) {
                $label0 = 2 /* goto IL_2D8 */ ;
                continue $labelgroup0;
              }
              if (($T00().tile.Get(num11, num12).wall | 0) !== 1) {

              $loop2: 
                for (var k = num12; k < ($T00().maxTilesY | 0); ) {
                  if (!(!$T00().tile.Get(num11, k).active || !$T00().tileSolid[$T00().tile.Get(num11, k).type])) {
                    if (!((num11 >= num7) && 
                        (num11 <= num8) && 
                        (k >= num9) && (k <= num10))) {
                      var arg_217_0 = ($T00().tile.Get(num11, k).type | 0);
                      num = num11;
                      num2 = k;
                      flag = true;
                      break $loop2;
                    }
                    break $loop2;
                  } else {
                    k = ((k + 1) | 0);
                  }
                }
                if (!flag) {
                  $label0 = 2 /* goto IL_2D8 */ ;
                  continue $labelgroup0;
                }
                var num13 = ((num - ((($thisType.spawnSpaceX | 0) / 2) | 0)) | 0);
                var num14 = ((num + ((($thisType.spawnSpaceX | 0) / 2) | 0)) | 0);
                var num15 = ((num2 - ($thisType.spawnSpaceY | 0)) | 0);
                var num16 = num2;
                if (num13 < 0) {
                  flag = false;
                }
                if (num14 > ($T00().maxTilesX | 0)) {
                  flag = false;
                }
                if (num15 < 0) {
                  flag = false;
                }
                if (num16 > ($T00().maxTilesY | 0)) {
                  flag = false;
                }
                if (flag) {

                  for (var l = num13; l < num14; l = ((l + 1) | 0)) {

                  $loop4: 
                    for (var m = num15; m < num16; m = ((m + 1) | 0)) {
                      if (!(!$T00().tile.Get(l, m).active || !$T00().tileSolid[$T00().tile.Get(l, m).type])) {
                        flag = false;
                        break $loop4;
                      }
                    }
                  }
                  $label0 = 2 /* goto IL_2D8 */ ;
                  continue $labelgroup0;
                }
                $label0 = 2 /* goto IL_2D8 */ ;
                continue $labelgroup0;
              }

              $label0 = 1 /* goto IL_2DE */ ;
              continue $labelgroup0;
            case 1: /* IL_2DE */ 
              j = ((j + 1) | 0);
              continue $loop1;

            case 2: /* IL_2D8 */ 
              if (!(flag || flag)) {
                $label0 = 1 /* goto IL_2DE */ ;
                continue $labelgroup0;
              }
              break $loop1;

          }
        }
      }
      if (flag) {
        (rectangle = rectangle.MemberwiseClone(), 
          $T04().prototype._ctor.call(rectangle, Math.imul(num, 16), Math.imul(num2, 16), 16, 16));

        for (var n = 0; n < 8; n = ((n + 1) | 0)) {
          if ($T00().player[n].active) {
            (rectangle2 = rectangle2.MemberwiseClone(), 
              $T04().prototype._ctor.call(rectangle2, ((((+$T00().player[n].position.X + +((($T00().player[n].width | 0) / 2 | 0))) - +((($T00().screenWidth | 0) / 2 | 0))) - +($thisType.safeRangeX)) | 0), ((((+$T00().player[n].position.Y + +((($T00().player[n].height | 0) / 2 | 0))) - +((($T00().screenHeight | 0) / 2 | 0))) - +($thisType.safeRangeY)) | 0), ((($T00().screenWidth | 0) + Math.imul($thisType.safeRangeX, 2)) | 0), ((($T00().screenHeight | 0) + Math.imul($thisType.safeRangeY, 2)) | 0)));
            if (rectangle.Intersects(rectangle2.MemberwiseClone())) {
              flag = false;
            }
          }
        }
      }
      if (flag) {
        break $loop0;
      }
    }
    if (flag) {
      var num17 = ($thisType.NewNPC(((Math.imul(num, 16) + 8) | 0), Math.imul(num2, 16), Type, 1) | 0);
      $T00().npc[num17].target = (plr | 0);
      var str = $T00().npc[num17].$name;
      if (($T00().npc[num17].type | 0) === 13) {
        str = "Eater of Worlds";
      }
      if (($T00().npc[num17].type | 0) === 35) {
        str = "Skeletron";
      }
      if (!((($T00().netMode | 0) !== 2) || (num17 >= 1000))) {
        $T0D().SendData(
          23, 
          -1, 
          -1, 
          "", 
          num17, 
          0, 
          0, 
          0
        );
      }
      if (($T00().netMode | 0) === 0) {
        $T00().NewText(JSIL.ConcatString(str, " has awoken!"), 175, 75, 255);
        return;
      }
      if (($T00().netMode | 0) === 2) {
        $T0D().SendData(
          25, 
          -1, 
          -1, 
          JSIL.ConcatString(str, " has awoken!"), 
          8, 
          175, 
          75, 
          255
        );
      }
    }
  }; 

  function NPC_StrikeNPC (Damage, knockBack, hitDirection) {
    if (!(this.active && ((this.life | 0) > 0))) {
      return 0;
    }
    var num = +$T00().CalculateDamage(Damage, this.defense);
    if (this.friendly) {
      $T17().NewText(new ($T04())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height), $S03().Construct(255, 80, 90, 255), String($T01().$Box(((num) | 0))));
    } else {
      $T17().NewText(new ($T04())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height), $S03().Construct(255, 160, 80, 255), String($T01().$Box(((num) | 0))));
    }
    if (num >= 1) {
      if (this.townNPC) {
        this.ai[0] = 1;
        this.ai[1] = +(300 + ($T00().rand.Next(300) | 0));
        this.ai[2] = 0;
        this.direction = (hitDirection | 0);
        this.netUpdate = true;
      }
      if (!(((this.aiStyle | 0) !== 8) || (($T00().netMode | 0) === 1))) {
        this.ai[0] = 400;
        this.TargetClosest();
      }
      this.life = (((this.life | 0) - ((num) | 0)) | 0);
      if (!((+knockBack <= 0) || (+this.knockBackResist <= 0))) {
        if (!this.noGravity) {
          this.velocity.Y = (-knockBack * 0.75) * +this.knockBackResist;
        } else {
          this.velocity.Y = (-knockBack * 0.5) * +this.knockBackResist;
        }
        this.velocity.X = (+knockBack * +hitDirection) * +this.knockBackResist;
      }
      this.HitEffect(hitDirection, num);
      if ((this.soundHit | 0) > 0) {
        $T00().PlaySound(3, ((this.position.X) | 0), ((this.position.Y) | 0), this.soundHit);
      }
      if ((this.life | 0) <= 0) {
        if (!(!this.townNPC || ((this.type | 0) === 37))) {
          if (($T00().netMode | 0) === 0) {
            $T00().NewText(JSIL.ConcatString(this.$name, " was slain..."), 255, 25, 25);
          } else if (($T00().netMode | 0) === 2) {
            $T0D().SendData(
              25, 
              -1, 
              -1, 
              JSIL.ConcatString(this.$name, " was slain..."), 
              8, 
              255, 
              25, 
              25
            );
          }
        }
        if (!(!this.townNPC || 
            (($T00().netMode | 0) === 1) || 
            !this.homeless || (($T0C().spawnNPC | 0) !== (this.type | 0)))) {
          $T0C().spawnNPC = 0;
        }
        if ((this.soundKilled | 0) > 0) {
          $T00().PlaySound(4, ((this.position.X) | 0), ((this.position.Y) | 0), this.soundKilled);
        }
        this.NPCLoot();
        this.active = false;
        if (!(((this.type | 0) !== 26) && 
            ((this.type | 0) !== 27) && 
            ((this.type | 0) !== 28) && ((this.type | 0) !== 29))) {
          $T00().invasionSize = ((($T00().invasionSize | 0) - 1) | 0);
        }
      }
      return num;
    }
    return 0;
  }; 

  function NPC_TargetClosest () {
    var num = -1;

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if (!(!$T00().player[i].active || 
          $T00().player[i].dead || ((num !== -1) && 
            (((Math.abs((((+$T00().player[i].position.X + +((($T00().player[i].width | 0) / 2 | 0))) - +this.position.X) + +(((this.width | 0) / 2 | 0))))) + (Math.abs((((+$T00().player[i].position.Y + +((($T00().player[i].height | 0) / 2 | 0))) - +this.position.Y) + +(((this.height | 0) / 2 | 0)))))) >= num)))) {
        num = (Math.abs((((+$T00().player[i].position.X + +((($T00().player[i].width | 0) / 2 | 0))) - +this.position.X) + +(((this.width | 0) / 2 | 0))))) + (Math.abs((((+$T00().player[i].position.Y + +((($T00().player[i].height | 0) / 2 | 0))) - +this.position.Y) + +(((this.height | 0) / 2 | 0)))));
        this.target = i;
      }
    }
    if (!(((this.target | 0) >= 0) && ((this.target | 0) < 8))) {
      this.target = 0;
    }
    this.targetRect = new ($T04())((($T00().player[this.target].position.X) | 0), (($T00().player[this.target].position.Y) | 0), $T00().player[this.target].width, $T00().player[this.target].height);
    this.direction = 1;
    if (+((this.targetRect.X | 0) + (((this.targetRect.Width | 0) / 2) | 0)) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
      this.direction = -1;
    }
    this.directionY = 1;
    if (+((this.targetRect.Y | 0) + (((this.targetRect.Height | 0) / 2) | 0)) < (+this.position.Y + +(((this.height | 0) / 2 | 0)))) {
      this.directionY = -1;
    }
    if (!(((this.direction | 0) === (this.oldDirection | 0)) && 
        ((this.directionY | 0) === (this.oldDirectionY | 0)) && ((this.target | 0) === (this.oldTarget | 0)))) {
      this.netUpdate = true;
    }
  }; 

  function NPC_UpdateNPC (i) {
    var $hoisted00 = new ($T03())(), $hoisted01 = new ($T03())(), $hoisted02 = new ($T03())(), $hoisted03 = new ($T03())();
    var rectangle = new ($T04())(), rectangle2 = new ($T04())();
    this.whoAmI = (i | 0);
    if (this.active) {
      var num = 10;
      var num2 = 0.3;
      if (this.wet) {
        num2 = 0.2;
        num = 7;
      }
      if ((this.soundDelay | 0) > 0) {
        this.soundDelay = (((this.soundDelay | 0) - 1) | 0);
      }
      if ((this.life | 0) <= 0) {
        this.active = false;
      }
      this.oldTarget = (this.target | 0);
      this.oldDirection = (this.direction | 0);
      this.oldDirectionY = (this.directionY | 0);
      this.AI();

      for (var j = 0; j < 9; j = ((j + 1) | 0)) {
        if ((this.immune[j] | 0) > 0) {
          this.immune[j] = (((this.immune[j] | 0) - 1) | 0);
        }
      }
      if (!this.noGravity) {
        this.velocity.Y = +this.velocity.Y + num2;
        if (+this.velocity.Y > num) {
          this.velocity.Y = num;
        }
      }
      if (!((this.velocity.X >= 0.005) || (this.velocity.X <= -0.005))) {
        this.velocity.X = 0;
      }
      if (!((($T00().netMode | 0) === 1) || 
          !this.friendly || 
          ((this.type | 0) === 22) || ((this.type | 0) === 37))) {
        if ((this.life | 0) < (this.lifeMax | 0)) {
          this.friendlyRegen = (((this.friendlyRegen | 0) + 1) | 0);
          if ((this.friendlyRegen | 0) > 300) {
            this.friendlyRegen = 0;
            this.life = (((this.life | 0) + 1) | 0);
            this.netUpdate = true;
          }
        }
        if ((this.immune[8] | 0) === 0) {
          (rectangle = rectangle.MemberwiseClone(), 
            $T04().prototype._ctor.call(rectangle, ((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height));

          for (var k = 0; k < 1000; k = ((k + 1) | 0)) {
            if (!(!$T00().npc[k].active || $T00().npc[k].friendly)) {
              (rectangle2 = rectangle2.MemberwiseClone(), 
                $T04().prototype._ctor.call(rectangle2, (($T00().npc[k].position.X) | 0), (($T00().npc[k].position.Y) | 0), $T00().npc[k].width, $T00().npc[k].height));
              if (rectangle.Intersects(rectangle2.MemberwiseClone())) {
                var num3 = ($T00().npc[k].damage | 0);
                var num5 = 1;
                if ((+$T00().npc[k].position.X + +((($T00().npc[k].width | 0) / 2 | 0))) > (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
                  num5 = -1;
                }
                ($T00().npc[i]).StrikeNPC(num3, +6, num5);
                if (($T00().netMode | 0) !== 0) {
                  $T0D().SendData(
                    28, 
                    -1, 
                    -1, 
                    "", 
                    i, 
                    +num3, 
                    +6, 
                    +num5
                  );
                }
                this.netUpdate = true;
                this.immune[8] = 30;
              }
            }
          }
        }
      }
      if (!this.noTileCollide) {
        var flag = $T13().LavaCollision(this.position, this.width, this.height);
        if (flag) {
          this.lavaWet = true;
          if (!((($T00().netMode | 0) === 1) || ((this.immune[8] | 0) !== 0))) {
            this.immune[8] = 30;
            this.StrikeNPC(50, 0, 0);
            if (!((($T00().netMode | 0) !== 2) || (($T00().netMode | 0) === 0))) {
              $T0D().SendData(
                28, 
                -1, 
                -1, 
                "", 
                this.whoAmI, 
                50, 
                0, 
                0
              );
            }
          }
        }
        var flag2 = $T13().WetCollision(this.position, this.width, this.height);
        if (flag2) {
          if (!(this.wet || ((this.wetCount | 0) !== 0))) {
            this.wetCount = 10;
            if (!flag) {

              for (var l = 0; l < 50; l = ((l + 1) | 0)) {
                var num6 = ($T06().NewDust(
                  ($hoisted00._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                    $hoisted00), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  33, 
                  0, 
                  0, 
                  0, 
                  new ($T07())(), 
                  1
                ) | 0);
                var expr_442_cp_0 = $T00().dust[num6];
                expr_442_cp_0.velocity.Y = +expr_442_cp_0.velocity.Y - 4;
                var expr_460_cp_0 = $T00().dust[num6];
                expr_460_cp_0.velocity.X = +expr_460_cp_0.velocity.X * 2.5;
                $T00().dust[num6].scale = 1.3;
                $T00().dust[num6].alpha = 100;
                $T00().dust[num6].noGravity = true;
              }
              $T00().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
            } else {

              for (var m = 0; m < 20; m = ((m + 1) | 0)) {
                var num7 = ($T06().NewDust(
                  ($hoisted01._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                    $hoisted01), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  35, 
                  0, 
                  0, 
                  0, 
                  new ($T07())(), 
                  1
                ) | 0);
                var expr_548_cp_0 = $T00().dust[num7];
                expr_548_cp_0.velocity.Y = +expr_548_cp_0.velocity.Y - 1.5;
                var expr_566_cp_0 = $T00().dust[num7];
                expr_566_cp_0.velocity.X = +expr_566_cp_0.velocity.X * 2.5;
                $T00().dust[num7].scale = 1.3;
                $T00().dust[num7].alpha = 100;
                $T00().dust[num7].noGravity = true;
              }
              $T00().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
            }
          }
          this.wet = true;
        } else if (this.wet) {
          this.velocity.X = +this.velocity.X * 0.5;
          this.wet = false;
          if ((this.wetCount | 0) === 0) {
            this.wetCount = 10;
            if (!this.lavaWet) {

              for (var n = 0; n < 50; n = ((n + 1) | 0)) {
                var num8 = ($T06().NewDust(
                  ($hoisted02._ctor(+this.position.X - 6, +this.position.Y + +(((this.height | 0) / 2 | 0))), 
                    $hoisted02), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  33, 
                  0, 
                  0, 
                  0, 
                  new ($T07())(), 
                  1
                ) | 0);
                var expr_696_cp_0 = $T00().dust[num8];
                expr_696_cp_0.velocity.Y = +expr_696_cp_0.velocity.Y - 4;
                var expr_6B4_cp_0 = $T00().dust[num8];
                expr_6B4_cp_0.velocity.X = +expr_6B4_cp_0.velocity.X * 2.5;
                $T00().dust[num8].scale = 1.3;
                $T00().dust[num8].alpha = 100;
                $T00().dust[num8].noGravity = true;
              }
              $T00().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
            } else {

              for (var num9 = 0; num9 < 20; num9 = ((num9 + 1) | 0)) {
                var num10 = ($T06().NewDust(
                  ($hoisted03._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                    $hoisted03), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  35, 
                  0, 
                  0, 
                  0, 
                  new ($T07())(), 
                  1
                ) | 0);
                var expr_79C_cp_0 = $T00().dust[num10];
                expr_79C_cp_0.velocity.Y = +expr_79C_cp_0.velocity.Y - 1.5;
                var expr_7BA_cp_0 = $T00().dust[num10];
                expr_7BA_cp_0.velocity.X = +expr_7BA_cp_0.velocity.X * 2.5;
                $T00().dust[num10].scale = 1.3;
                $T00().dust[num10].alpha = 100;
                $T00().dust[num10].noGravity = true;
              }
              $T00().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
            }
          }
        }
        if (!this.wet) {
          this.lavaWet = false;
        }
        if ((this.wetCount | 0) > 0) {
          this.wetCount = ((((this.wetCount | 0) - 1) | 0) & 0xFF);
        }
        var flag3 = false;
        if ((this.aiStyle | 0) === 10) {
          flag3 = true;
        }
        if (!(((this.aiStyle | 0) !== 3) || ((this.directionY | 0) !== 1))) {
          flag3 = true;
        }
        this.oldVelocity = this.velocity.MemberwiseClone();
        this.collideX = false;
        this.collideY = false;
        if (this.wet) {
          var vector = this.velocity.MemberwiseClone();
          this.velocity = $T13().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            flag3, 
            flag3
          ).MemberwiseClone();
          var value = $S01().CallStatic($T03(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.5).MemberwiseClone();
          if (+this.velocity.X !== +vector.X) {
            value.X = +this.velocity.X;
            this.collideX = true;
          }
          if (+this.velocity.Y !== +vector.Y) {
            value.Y = +this.velocity.Y;
            this.collideY = true;
          }
          this.oldPosition = this.position.MemberwiseClone();
          this.position = $T03().op_Addition(this.position.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
        } else {
          this.velocity = $T13().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            flag3, 
            flag3
          ).MemberwiseClone();
          if (+this.oldVelocity.X !== +this.velocity.X) {
            this.collideX = true;
          }
          if (+this.oldVelocity.Y !== +this.velocity.Y) {
            this.collideY = true;
          }
          this.oldPosition = this.position.MemberwiseClone();
          this.position = $T03().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
        }
      } else {
        this.oldPosition = this.position.MemberwiseClone();
        this.position = $T03().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
      }
      if (!this.active) {
        this.netUpdate = true;
      }
      if (!((($T00().netMode | 0) !== 2) || !this.netUpdate)) {
        $T0D().SendData(
          23, 
          -1, 
          -1, 
          "", 
          i, 
          0, 
          0, 
          0
        );
      }
      this.FindFrame();
      this.CheckActive();
      this.netUpdate = false;
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.NPC", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NPC__ctor
    );

    $.Method({Static:false, Public:true }, "AI", 
      JSIL.MethodSignature.Void, 
      NPC_AI
    );

    $.Method({Static:false, Public:true }, "CheckActive", 
      JSIL.MethodSignature.Void, 
      NPC_CheckActive
    );

    $.Method({Static:false, Public:true }, "FindFrame", 
      JSIL.MethodSignature.Void, 
      NPC_FindFrame
    );

    $.Method({Static:false, Public:true }, "GetAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      NPC_GetAlpha
    );

    $.Method({Static:false, Public:true }, "GetChat", 
      JSIL.MethodSignature.Return($.String), 
      NPC_GetChat
    );

    $.Method({Static:false, Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      NPC_GetColor
    );

    $.Method({Static:false, Public:true }, "HitEffect", 
      new JSIL.MethodSignature(null, [$.Int32, $.Double]), 
      NPC_HitEffect
    );

    $.Method({Static:true , Public:true }, "NewNPC", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      NPC_NewNPC
    );

    $.Method({Static:false, Public:true }, "NPCLoot", 
      JSIL.MethodSignature.Void, 
      NPC_NPCLoot
    );

    $.Method({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Action($.String), 
      NPC_SetDefaults$00
    );

    $.Method({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Action($.Int32), 
      NPC_SetDefaults$01
    );

    $.Method({Static:true , Public:true }, "SpawnNPC", 
      JSIL.MethodSignature.Void, 
      NPC_SpawnNPC
    );

    $.Method({Static:true , Public:true }, "SpawnOnPlayer", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      NPC_SpawnOnPlayer
    );

    $.Method({Static:false, Public:true }, "StrikeNPC", 
      new JSIL.MethodSignature($.Double, [
          $.Int32, $.Single, 
          $.Int32
        ]), 
      NPC_StrikeNPC
    );

    $.Method({Static:false, Public:true }, "TargetClosest", 
      JSIL.MethodSignature.Void, 
      NPC_TargetClosest
    );

    $.Method({Static:false, Public:true }, "UpdateNPC", 
      JSIL.MethodSignature.Action($.Int32), 
      NPC_UpdateNPC
    );

    $.Field({Static:true , Public:true }, "immuneTime", $.Int32, 20);

    $.Field({Static:true , Public:true }, "maxAI", $.Int32, 4);

    $.Field({Static:true , Public:false}, "spawnSpaceX", $.Int32, 4);

    $.Field({Static:true , Public:false}, "spawnSpaceY", $.Int32, 4);

    $.Field({Static:true , Public:false}, "spawnRangeX", $.Int32, function ($pi) {
        return ((+((($asm0F.Terraria.Main.screenWidth | 0) / 16 | 0)) * 1.2) | 0);
      });

    $.Field({Static:true , Public:false}, "spawnRangeY", $.Int32, function ($pi) {
        return ((+((($asm0F.Terraria.Main.screenHeight | 0) / 16 | 0)) * 1.2) | 0);
      });

    $.Field({Static:true , Public:true }, "safeRangeX", $.Int32, function ($pi) {
        return ((+((($asm0F.Terraria.Main.screenWidth | 0) / 16 | 0)) * 0.55) | 0);
      });

    $.Field({Static:true , Public:true }, "safeRangeY", $.Int32, function ($pi) {
        return ((+((($asm0F.Terraria.Main.screenHeight | 0) / 16 | 0)) * 0.55) | 0);
      });

    $.Field({Static:true , Public:false}, "activeRangeX", $.Int32, function ($pi) {
        return Math.imul($asm0F.Terraria.Main.screenWidth, 2);
      });

    $.Field({Static:true , Public:false}, "activeRangeY", $.Int32, function ($pi) {
        return Math.imul($asm0F.Terraria.Main.screenHeight, 2);
      });

    $.Field({Static:true , Public:false}, "townRangeX", $.Int32, function ($pi) {
        return Math.imul($asm0F.Terraria.Main.screenWidth, 3);
      });

    $.Field({Static:true , Public:false}, "townRangeY", $.Int32, function ($pi) {
        return Math.imul($asm0F.Terraria.Main.screenHeight, 3);
      });

    $.Field({Static:true , Public:false}, "activeTime", $.Int32, 1000);

    $.Field({Static:true , Public:false}, "defaultSpawnRate", $.Int32, 700);

    $.Field({Static:true , Public:false}, "defaultMaxSpawns", $.Int32, 4);

    $.Field({Static:false, Public:true }, "wet", $.Boolean);

    $.Field({Static:false, Public:true }, "wetCount", $.Byte);

    $.Field({Static:false, Public:true }, "lavaWet", $.Boolean);

    $.Field({Static:true , Public:true }, "downedBoss1", $.Boolean, false);

    $.Field({Static:true , Public:true }, "downedBoss2", $.Boolean, false);

    $.Field({Static:true , Public:true }, "downedBoss3", $.Boolean, false);

    $.Field({Static:true , Public:false}, "spawnRate", $.Int32, function ($pi) {
        return $pi.defaultSpawnRate;
      });

    $.Field({Static:true , Public:false}, "maxSpawns", $.Int32, function ($pi) {
        return $pi.defaultMaxSpawns;
      });

    $.Field({Static:false, Public:true }, "soundDelay", $.Int32);

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "oldPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "oldVelocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "width", $.Int32);

    $.Field({Static:false, Public:true }, "height", $.Int32);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "immune", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:true }, "direction", $.Int32);

    $.Field({Static:false, Public:true }, "directionY", $.Int32);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "ai", $jsilcore.TypeRef("System.Array", [$.Single]));

    $.Field({Static:false, Public:true }, "aiAction", $.Int32);

    $.Field({Static:false, Public:true }, "aiStyle", $.Int32);

    $.Field({Static:false, Public:true }, "timeLeft", $.Int32);

    $.Field({Static:false, Public:true }, "target", $.Int32);

    $.Field({Static:false, Public:true }, "damage", $.Int32);

    $.Field({Static:false, Public:true }, "defense", $.Int32);

    $.Field({Static:false, Public:true }, "soundHit", $.Int32);

    $.Field({Static:false, Public:true }, "soundKilled", $.Int32);

    $.Field({Static:false, Public:true }, "life", $.Int32);

    $.Field({Static:false, Public:true }, "lifeMax", $.Int32);

    $.Field({Static:false, Public:true }, "targetRect", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "frameCounter", $.Double);

    $.Field({Static:false, Public:true }, "frame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "$name", $.String);

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "alpha", $.Int32);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "knockBackResist", $.Single);

    $.Field({Static:false, Public:true }, "oldDirection", $.Int32);

    $.Field({Static:false, Public:true }, "oldDirectionY", $.Int32);

    $.Field({Static:false, Public:true }, "oldTarget", $.Int32);

    $.Field({Static:false, Public:true }, "whoAmI", $.Int32);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "noGravity", $.Boolean);

    $.Field({Static:false, Public:true }, "noTileCollide", $.Boolean);

    $.Field({Static:false, Public:true }, "netUpdate", $.Boolean);

    $.Field({Static:false, Public:true }, "collideX", $.Boolean);

    $.Field({Static:false, Public:true }, "collideY", $.Boolean);

    $.Field({Static:false, Public:true }, "boss", $.Boolean);

    $.Field({Static:false, Public:true }, "spriteDirection", $.Int32);

    $.Field({Static:false, Public:true }, "behindTiles", $.Boolean);

    $.Field({Static:false, Public:true }, "value", $.Single);

    $.Field({Static:false, Public:true }, "townNPC", $.Boolean);

    $.Field({Static:false, Public:true }, "homeless", $.Boolean);

    $.Field({Static:false, Public:true }, "homeTileX", $.Int32);

    $.Field({Static:false, Public:true }, "homeTileY", $.Int32);

    $.Field({Static:false, Public:true }, "friendly", $.Boolean);

    $.Field({Static:false, Public:true }, "closeDoor", $.Boolean);

    $.Field({Static:false, Public:true }, "doorX", $.Int32);

    $.Field({Static:false, Public:true }, "doorY", $.Int32);

    $.Field({Static:false, Public:true }, "friendlyRegen", $.Int32);


    function NPC__cctor () {
      $thisType.immuneTime = 20;
      $thisType.maxAI = 4;
      $thisType.spawnSpaceX = 4;
      $thisType.spawnSpaceY = 4;
      $thisType.spawnRangeX = ((+((($T00().screenWidth | 0) / 16 | 0)) * 1.2) | 0);
      $thisType.spawnRangeY = ((+((($T00().screenHeight | 0) / 16 | 0)) * 1.2) | 0);
      $thisType.safeRangeX = ((+((($T00().screenWidth | 0) / 16 | 0)) * 0.55) | 0);
      $thisType.safeRangeY = ((+((($T00().screenHeight | 0) / 16 | 0)) * 0.55) | 0);
      $thisType.activeRangeX = Math.imul($T00().screenWidth, 2);
      $thisType.activeRangeY = Math.imul($T00().screenHeight, 2);
      $thisType.townRangeX = Math.imul($T00().screenWidth, 3);
      $thisType.townRangeY = Math.imul($T00().screenHeight, 3);
      $thisType.activeTime = 1000;
      $thisType.defaultSpawnRate = 700;
      $thisType.defaultMaxSpawns = 4;
      $thisType.downedBoss1 = false;
      $thisType.downedBoss2 = false;
      $thisType.downedBoss3 = false;
      $thisType.spawnRate = ($thisType.defaultSpawnRate | 0);
      $thisType.maxSpawns = ($thisType.defaultMaxSpawns | 0);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NPC__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Gore */ 

(function Gore$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, null))) ();
  };


  function Gore__ctor () {
    this.sticky = true;
    this.timeLeft = ($thisType.goreTime | 0);
  }; 

  function Gore_GetAlpha (newColor) {
    if (!(((this.type | 0) !== 16) && ((this.type | 0) !== 17))) {
      var r = (((newColor.get_R() | 0) - (((this.alpha | 0) / 2) | 0)) | 0);
      var g = (((newColor.get_G() | 0) - (((this.alpha | 0) / 2) | 0)) | 0);
      var b = (((newColor.get_B() | 0) - (((this.alpha | 0) / 2) | 0)) | 0);
    } else {
      r = (((newColor.get_R() | 0) - (this.alpha | 0)) | 0);
      g = (((newColor.get_G() | 0) - (this.alpha | 0)) | 0);
      b = (((newColor.get_B() | 0) - (this.alpha | 0)) | 0);
    }
    var num = (((newColor.get_A() | 0) - (this.alpha | 0)) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    return $S00().Construct(r, g, b, num);
  }; 

  function Gore_NewGore (Position, Velocity, Type) {
    if ($T03().rand === null) {
      $T03().rand = $S01().Construct();
    }
    if (($T03().netMode | 0) === 2) {
      return 0;
    }
    var num = 200;

  $loop0: 
    for (var i = 0; i < 200; i = ((i + 1) | 0)) {
      if (!$T03().gore[i].active) {
        num = i;
        break $loop0;
      }
    }
    if (num === 200) {
      return num;
    }
    $T03().gore[num].light = 0;
    $T03().gore[num].position = Position.MemberwiseClone();
    $T03().gore[num].velocity = Velocity.MemberwiseClone();
    var expr_84_cp_0 = $T03().gore[num];
    expr_84_cp_0.velocity.Y = +expr_84_cp_0.velocity.Y - (+($T03().rand.Next(10, 31)) * 0.1);
    var expr_B1_cp_0 = $T03().gore[num];
    expr_B1_cp_0.velocity.X = +expr_B1_cp_0.velocity.X + (+($T03().rand.Next(-20, 21)) * 0.1);
    $T03().gore[num].type = (Type | 0);
    $T03().gore[num].active = true;
    $T03().gore[num].alpha = 0;
    $T03().gore[num].rotation = 0;
    $T03().gore[num].scale = 1;
    if (!((($thisType.goreTime | 0) !== 0) && 
        ((Type | 0) !== 11) && 
        ((Type | 0) !== 12) && 
        ((Type | 0) !== 13) && 
        ((Type | 0) !== 16) && 
        ((Type | 0) !== 17) && 
        ((Type | 0) !== 61) && 
        ((Type | 0) !== 62) && ((Type | 0) !== 63))) {
      $T03().gore[num].sticky = false;
    } else {
      $T03().gore[num].sticky = true;
      $T03().gore[num].timeLeft = ($thisType.goreTime | 0);
    }
    if (!(((Type | 0) !== 16) && ((Type | 0) !== 17))) {
      $T03().gore[num].alpha = 100;
      $T03().gore[num].scale = 0.7;
      $T03().gore[num].light = 1;
    }
    return num;
  }; 

  function Gore_Update () {
    if (this.active) {
      if (!(((this.type | 0) !== 11) && 
          ((this.type | 0) !== 12) && 
          ((this.type | 0) !== 13) && 
          ((this.type | 0) !== 61) && 
          ((this.type | 0) !== 62) && ((this.type | 0) !== 63))) {
        this.velocity.Y = +this.velocity.Y * 0.98;
        this.velocity.X = +this.velocity.X * 0.98;
        this.scale = +this.scale - 0.007;
        if (this.scale < 0.1) {
          this.scale = 0.1;
          this.alpha = 255;
        }
      } else if (!(((this.type | 0) !== 16) && ((this.type | 0) !== 17))) {
        this.velocity.Y = +this.velocity.Y * 0.98;
        this.velocity.X = +this.velocity.X * 0.98;
        this.scale = +this.scale - 0.01;
        if (this.scale < 0.1) {
          this.scale = 0.1;
          this.alpha = 255;
        }
      } else {
        this.velocity.Y = +this.velocity.Y + 0.2;
      }
      this.rotation = +this.rotation + (+this.velocity.X * 0.1);
      if (this.sticky) {
        var num = (($T03().goreTexture[this.type]).get_Width() | 0);
        if ((($T03().goreTexture[this.type]).get_Height() | 0) < num) {
          num = (($T03().goreTexture[this.type]).get_Height() | 0);
        }
        num = ((+num * 0.9) | 0);
        this.velocity = $T06().TileCollision(
          this.position.MemberwiseClone(), 
          this.velocity.MemberwiseClone(), 
          ((+num * +this.scale) | 0), 
          ((+num * +this.scale) | 0), 
          false, 
          false
        ).MemberwiseClone();
        if (+this.velocity.Y === 0) {
          this.velocity.X = +this.velocity.X * 0.97;
          if (!((this.velocity.X <= -0.01) || (this.velocity.X >= 0.01))) {
            this.velocity.X = 0;
          }
        }
        if ((this.timeLeft | 0) > 0) {
          this.timeLeft = (((this.timeLeft | 0) - 1) | 0);
        } else {
          this.alpha = (((this.alpha | 0) + 1) | 0);
        }
      } else {
        this.alpha = (((this.alpha | 0) + 2) | 0);
      }
      this.position = $T02().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
      if ((this.alpha | 0) >= 255) {
        this.active = false;
      }
      if (+this.light > 0) {
        $T07().addLight(
          ((+((+this.position.X + +(((+(($T03().goreTexture[this.type]).get_Width()) * +this.scale) / 2))) / 16)) | 0), 
          ((+((+this.position.Y + +(((+(($T03().goreTexture[this.type]).get_Height()) * +this.scale) / 2))) / 16)) | 0), 
          this.light
        );
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Gore", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Gore__ctor
    );

    $.Method({Static:false, Public:true }, "GetAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Gore_GetAlpha
    );

    $.Method({Static:true , Public:true }, "NewGore", 
      new JSIL.MethodSignature($.Int32, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32
        ]), 
      Gore_NewGore
    );

    $.Method({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Void, 
      Gore_Update
    );

    $.Field({Static:true , Public:true }, "goreTime", $.Int32, 600);

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "alpha", $.Int32);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "light", $.Single);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "sticky", $.Boolean);

    $.Field({Static:false, Public:true }, "timeLeft", $.Int32);


    function Gore__cctor () {
      $thisType.goreTime = 600;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Gore__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Tile */ 

(function Tile$Members () {
  var $, $thisType;

  function Tile__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Tile", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tile__ctor
    );

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "lighted", $.Boolean);

    $.Field({Static:false, Public:true }, "type", $.Byte);

    $.Field({Static:false, Public:true }, "wall", $.Byte);

    $.Field({Static:false, Public:true }, "wallFrameX", $.Byte);

    $.Field({Static:false, Public:true }, "wallFrameY", $.Byte);

    $.Field({Static:false, Public:true }, "wallFrameNumber", $.Byte);

    $.Field({Static:false, Public:true }, "liquid", $.Byte);

    $.Field({Static:false, Public:true }, "checkingLiquid", $.Boolean);

    $.Field({Static:false, Public:true }, "skipLiquid", $.Boolean);

    $.Field({Static:false, Public:true }, "lava", $.Boolean);

    $.Field({Static:false, Public:true }, "frameNumber", $.Byte);

    $.Field({Static:false, Public:true }, "frameX", $.Int16);

    $.Field({Static:false, Public:true }, "frameY", $.Int16);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Item */ 

(function Item$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };


  function Item__ctor () {
    this.ownIgnore = -1;
    this.createTile = -1;
    this.createWall = -1;
    this.scale = 1;
    this.headSlot = -1;
    this.bodySlot = -1;
    this.legSlot = -1;
    this.owner = 8;
  }; 

  function Item_Clone () {
    return $T00().prototype.MemberwiseClone.call(this);
  }; 

  function Item_FindOwner (whoAmI) {
    if ((this.keepTime | 0) > 0) {
      return;
    }
    var num = (this.owner | 0);
    this.owner = 8;
    var num2 = -1;

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if (!(((this.ownIgnore | 0) === i) || 
          !$T03().player[i].active || !($T03().player[i]).ItemSpace($T03().item[whoAmI]))) {
        var num3 = (Math.abs((((+$T03().player[i].position.X + +((($T03().player[i].width | 0) / 2 | 0))) - +this.position.X) - +(((this.width | 0) / 2 | 0))))) + (Math.abs((((+$T03().player[i].position.Y + +((($T03().player[i].height | 0) / 2 | 0))) - +this.position.Y) - +(this.height))));
        if (!((num3 >= +(((($T03().screenWidth | 0) / 2) | 0) + ((($T03().screenHeight | 0) / 2) | 0))) || ((num2 !== -1) && 
              (num3 >= num2)))) {
          num2 = num3;
          this.owner = i;
        }
      }
    }
    if (!(((this.owner | 0) === num) || (!((num === ($T03().myPlayer | 0)) && 
            (($T03().netMode | 0) === 1)) && 
          !((num === 8) && 
            (($T03().netMode | 0) === 2)) && 
          $T03().player[num].active))) {
      $T06().SendData(
        21, 
        -1, 
        -1, 
        "", 
        whoAmI, 
        0, 
        0, 
        0
      );
      if (this.active) {
        $T06().SendData(
          22, 
          -1, 
          -1, 
          "", 
          whoAmI, 
          0, 
          0, 
          0
        );
      }
    }
  }; 

  function Item_GetAlpha (newColor) {
    var r = (((newColor.get_R() | 0) - (this.alpha | 0)) | 0);
    var g = (((newColor.get_G() | 0) - (this.alpha | 0)) | 0);
    var b = (((newColor.get_B() | 0) - (this.alpha | 0)) | 0);
    var num = (((newColor.get_A() | 0) - (this.alpha | 0)) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    if (!(((this.type | 0) < 198) || ((this.type | 0) > 203))) {
      return $T07().get_White();
    }
    return $S00().Construct(r, g, b, num);
  }; 

  function Item_GetColor (newColor) {
    var num = ((((this.color).get_R() | 0) - ((255 - (newColor.get_R() | 0)) | 0)) & 0xFF);
    var num2 = ((((this.color).get_G() | 0) - ((255 - (newColor.get_G() | 0)) | 0)) & 0xFF);
    var num3 = ((((this.color).get_B() | 0) - ((255 - (newColor.get_B() | 0)) | 0)) & 0xFF);
    var num4 = ((((this.color).get_A() | 0) - ((255 - (newColor.get_A() | 0)) | 0)) & 0xFF);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    if (num2 < 0) {
      num2 = 0;
    }
    if (num2 > 255) {
      num2 = 255;
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num3 > 255) {
      num3 = 255;
    }
    if (num4 < 0) {
      num4 = 0;
    }
    if (num4 > 255) {
      num4 = 255;
    }
    return $S00().Construct(num, num2, num3, num4);
  }; 

  function Item_IsNotTheSameAs (compareItem) {
    return !(!(this.$name != compareItem.$name) && ((this.stack | 0) === (compareItem.stack | 0)));
  }; 

  function Item_IsTheSameAs (compareItem) {
    return this.$name == compareItem.$name;
  }; 

  function Item_NewItem (X, Y, Width, Height, Type, Stack, noBroadcast) {
    if ($T0A().gen) {
      return 0;
    }
    var num = 200;
    $T03().item[200] = new $thisType();
    if (($T03().netMode | 0) !== 1) {

    $loop0: 
      for (var i = 0; i < 200; i = ((i + 1) | 0)) {
        if (!$T03().item[i].active) {
          num = i;
          break $loop0;
        }
      }
    }
    if (!((num !== 200) || (($T03().netMode | 0) === 1))) {
      var num2 = 0;

      for (var j = 0; j < 200; j = ((j + 1) | 0)) {
        if (($T03().item[j].spawnTime | 0) > num2) {
          num2 = ($T03().item[j].spawnTime | 0);
          num = j;
        }
      }
    }
    $T03().item[num] = new $thisType();
    $S01().CallVirtual("SetDefaults", null, $T03().item[num], Type);
    $T03().item[num].position.X = +((((X | 0) + (((Width | 0) / 2) | 0)) | 0) - ((($T03().item[num].width | 0) / 2) | 0));
    $T03().item[num].position.Y = +((((Y | 0) + (((Height | 0) / 2) | 0)) | 0) - ((($T03().item[num].height | 0) / 2) | 0));
    $T03().item[num].wet = $T0B().WetCollision($T03().item[num].position, $T03().item[num].width, $T03().item[num].height);
    $T03().item[num].velocity.X = +($T03().rand.Next(-20, 21)) * 0.1;
    $T03().item[num].velocity.Y = +($T03().rand.Next(-30, -10)) * 0.1;
    $T03().item[num].active = true;
    $T03().item[num].spawnTime = 0;
    $T03().item[num].stack = (Stack | 0);
    if (!((($T03().netMode | 0) !== 2) || noBroadcast)) {
      $T06().SendData(
        21, 
        -1, 
        -1, 
        "", 
        num, 
        0, 
        0, 
        0
      );
      ($T03().item[num]).FindOwner(num);
    } else if (($T03().netMode | 0) === 0) {
      $T03().item[num].owner = ($T03().myPlayer | 0);
    }
    return num;
  }; 

  function Item_SetDefaults$00 (ItemName) {
    this.$name = "";
    if (ItemName == "Gold Pickaxe") {
      $S01().CallVirtual("SetDefaults", null, this, 1);
      this.color = $S00().Construct(210, 190, 0, 100);
      this.useTime = 17;
      this.pick = 55;
      this.useAnimation = 20;
      this.scale = 1.05;
      this.damage = 6;
      this.value = 10000;
    } else if (ItemName == "Gold Broadsword") {
      $S01().CallVirtual("SetDefaults", null, this, 4);
      this.color = $S00().Construct(210, 190, 0, 100);
      this.useAnimation = 20;
      this.damage = 13;
      this.scale = 1.05;
      this.value = 9000;
    } else if (ItemName == "Gold Shortsword") {
      $S01().CallVirtual("SetDefaults", null, this, 6);
      this.color = $S00().Construct(210, 190, 0, 100);
      this.damage = 11;
      this.useAnimation = 11;
      this.scale = 0.95;
      this.value = 7000;
    } else if (ItemName == "Gold Axe") {
      $S01().CallVirtual("SetDefaults", null, this, 10);
      this.color = $S00().Construct(210, 190, 0, 100);
      this.useTime = 18;
      this.axe = 11;
      this.useAnimation = 26;
      this.scale = 1.15;
      this.damage = 7;
      this.value = 8000;
    } else if (ItemName == "Gold Hammer") {
      $S01().CallVirtual("SetDefaults", null, this, 7);
      this.color = $S00().Construct(210, 190, 0, 100);
      this.useAnimation = 28;
      this.useTime = 23;
      this.scale = 1.25;
      this.damage = 9;
      this.hammer = 55;
      this.value = 8000;
    } else if (ItemName == "Gold Bow") {
      $S01().CallVirtual("SetDefaults", null, this, 99);
      this.useAnimation = 26;
      this.useTime = 26;
      this.color = $S00().Construct(210, 190, 0, 100);
      this.damage = 11;
      this.value = 7000;
    } else if (ItemName == "Silver Pickaxe") {
      $S01().CallVirtual("SetDefaults", null, this, 1);
      this.color = $S00().Construct(180, 180, 180, 100);
      this.useTime = 11;
      this.pick = 45;
      this.useAnimation = 19;
      this.scale = 1.05;
      this.damage = 6;
      this.value = 5000;
    } else if (ItemName == "Silver Broadsword") {
      $S01().CallVirtual("SetDefaults", null, this, 4);
      this.color = $S00().Construct(180, 180, 180, 100);
      this.useAnimation = 21;
      this.damage = 11;
      this.value = 4500;
    } else if (ItemName == "Silver Shortsword") {
      $S01().CallVirtual("SetDefaults", null, this, 6);
      this.color = $S00().Construct(180, 180, 180, 100);
      this.damage = 9;
      this.useAnimation = 12;
      this.scale = 0.95;
      this.value = 3500;
    } else if (ItemName == "Silver Axe") {
      $S01().CallVirtual("SetDefaults", null, this, 10);
      this.color = $S00().Construct(180, 180, 180, 100);
      this.useTime = 18;
      this.axe = 10;
      this.useAnimation = 26;
      this.scale = 1.15;
      this.damage = 6;
      this.value = 4000;
    } else if (ItemName == "Silver Hammer") {
      $S01().CallVirtual("SetDefaults", null, this, 7);
      this.color = $S00().Construct(180, 180, 180, 100);
      this.useAnimation = 29;
      this.useTime = 19;
      this.scale = 1.25;
      this.damage = 9;
      this.hammer = 45;
      this.value = 4000;
    } else if (ItemName == "Silver Bow") {
      $S01().CallVirtual("SetDefaults", null, this, 99);
      this.useAnimation = 27;
      this.useTime = 27;
      this.color = $S00().Construct(180, 180, 180, 100);
      this.damage = 10;
      this.value = 3500;
    } else if (ItemName == "Copper Pickaxe") {
      $S01().CallVirtual("SetDefaults", null, this, 1);
      this.color = $S00().Construct(180, 100, 45, 80);
      this.useTime = 15;
      this.pick = 35;
      this.useAnimation = 23;
      this.scale = 0.9;
      this.tileBoost = -1;
      this.value = 500;
    } else if (ItemName == "Copper Broadsword") {
      $S01().CallVirtual("SetDefaults", null, this, 4);
      this.color = $S00().Construct(180, 100, 45, 80);
      this.useAnimation = 23;
      this.damage = 8;
      this.value = 450;
    } else if (ItemName == "Copper Shortsword") {
      $S01().CallVirtual("SetDefaults", null, this, 6);
      this.color = $S00().Construct(180, 100, 45, 80);
      this.damage = 6;
      this.useAnimation = 13;
      this.scale = 0.8;
      this.value = 350;
    } else if (ItemName == "Copper Axe") {
      $S01().CallVirtual("SetDefaults", null, this, 10);
      this.color = $S00().Construct(180, 100, 45, 80);
      this.useTime = 21;
      this.axe = 8;
      this.useAnimation = 30;
      this.scale = 1;
      this.damage = 3;
      this.tileBoost = -1;
      this.value = 400;
    } else if (ItemName == "Copper Hammer") {
      $S01().CallVirtual("SetDefaults", null, this, 7);
      this.color = $S00().Construct(180, 100, 45, 80);
      this.useAnimation = 33;
      this.useTime = 23;
      this.scale = 1.1;
      this.damage = 4;
      this.hammer = 35;
      this.tileBoost = -1;
      this.value = 400;
    } else if (ItemName == "Copper Bow") {
      $S01().CallVirtual("SetDefaults", null, this, 99);
      this.useAnimation = 29;
      this.useTime = 29;
      this.color = $S00().Construct(180, 100, 45, 80);
      this.damage = 8;
      this.value = 350;
    } else if (ItemName != "") {

    $loop0: 
      for (var i = 0; i < 235; i = ((i + 1) | 0)) {
        $S01().CallVirtual("SetDefaults", null, this, i);
        if (this.$name == ItemName) {
          break $loop0;
        }
        if (i === 234) {
          $S01().CallVirtual("SetDefaults", null, this, 0);
          this.$name = "";
        }
      }
    }
    if ((this.type | 0) !== 0) {
      this.$name = ItemName;
    }
  }; 

  function Item_SetDefaults$01 (Type) {
    if (!((($T03().netMode | 0) !== 1) && (($T03().netMode | 0) !== 2))) {
      this.owner = 8;
    } else {
      this.owner = ($T03().myPlayer | 0);
    }
    this.mana = 0;
    this.wet = false;
    this.wetCount = 0;
    this.lavaWet = false;
    this.channel = false;
    this.manaRegen = 0;
    this.release = 0;
    this.noMelee = false;
    this.noUseGraphic = false;
    this.lifeRegen = 0;
    this.shootSpeed = 0;
    this.active = true;
    this.alpha = 0;
    this.ammo = 0;
    this.useAmmo = 0;
    this.autoReuse = false;
    this.accessory = false;
    this.axe = 0;
    this.healMana = 0;
    this.bodySlot = -1;
    this.legSlot = -1;
    this.headSlot = -1;
    this.potion = false;
    this.color = new ($T07())();
    this.consumable = false;
    this.createTile = -1;
    this.createWall = -1;
    this.damage = -1;
    this.defense = 0;
    this.hammer = 0;
    this.healLife = 0;
    this.holdStyle = 0;
    this.knockBack = 0;
    this.maxStack = 1;
    this.pick = 0;
    this.rare = 0;
    this.scale = 1;
    this.shoot = 0;
    this.stack = 1;
    this.toolTip = null;
    this.tileBoost = 0;
    this.type = (Type | 0);
    this.useStyle = 0;
    this.useSound = 0;
    this.useTime = 100;
    this.useAnimation = 100;
    this.value = 0;
    this.useTurn = false;
    this.buy = false;
    if ((this.type | 0) === 1) {
      this.$name = "Iron Pickaxe";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 20;
      this.useTime = 13;
      this.autoReuse = true;
      this.width = 24;
      this.height = 28;
      this.damage = 5;
      this.pick = 45;
      this.useSound = 1;
      this.knockBack = 2;
      this.value = 2000;
    } else if ((this.type | 0) === 2) {
      this.$name = "Dirt Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 0;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 3) {
      this.$name = "Stone Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 1;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 4) {
      this.$name = "Iron Broadsword";
      this.useStyle = 1;
      this.useTurn = false;
      this.useAnimation = 21;
      this.useTime = 21;
      this.width = 24;
      this.height = 28;
      this.damage = 10;
      this.knockBack = 5;
      this.useSound = 1;
      this.scale = 1;
      this.value = 1800;
    } else if ((this.type | 0) === 5) {
      this.$name = "Mushroom";
      this.useStyle = 2;
      this.useSound = 2;
      this.useTurn = false;
      this.useAnimation = 17;
      this.useTime = 17;
      this.width = 16;
      this.height = 18;
      this.healLife = 20;
      this.maxStack = 99;
      this.consumable = true;
      this.potion = true;
      this.value = 50;
    } else if ((this.type | 0) === 6) {
      this.$name = "Iron Shortsword";
      this.useStyle = 3;
      this.useTurn = false;
      this.useAnimation = 12;
      this.useTime = 12;
      this.width = 24;
      this.height = 28;
      this.damage = 8;
      this.knockBack = 4;
      this.scale = 0.9;
      this.useSound = 1;
      this.useTurn = true;
      this.value = 1400;
    } else if ((this.type | 0) === 7) {
      this.$name = "Iron Hammer";
      this.autoReuse = true;
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 30;
      this.useTime = 20;
      this.hammer = 45;
      this.width = 24;
      this.height = 28;
      this.damage = 7;
      this.knockBack = 5.5;
      this.scale = 1.2;
      this.useSound = 1;
      this.value = 1600;
    } else if ((this.type | 0) === 8) {
      this.$name = "Torch";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.holdStyle = 1;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 4;
      this.width = 10;
      this.height = 12;
      this.toolTip = "Provides light";
      this.value = 50;
    } else if ((this.type | 0) === 9) {
      this.$name = "Wood";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 30;
      this.width = 8;
      this.height = 10;
    } else if ((this.type | 0) === 10) {
      this.$name = "Iron Axe";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 27;
      this.knockBack = 4.5;
      this.useTime = 19;
      this.autoReuse = true;
      this.width = 24;
      this.height = 28;
      this.damage = 5;
      this.axe = 9;
      this.scale = 1.1;
      this.useSound = 1;
      this.value = 1600;
    } else if ((this.type | 0) === 11) {
      this.$name = "Iron Ore";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 6;
      this.width = 12;
      this.height = 12;
      this.value = 500;
    } else if ((this.type | 0) === 12) {
      this.$name = "Copper Ore";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 7;
      this.width = 12;
      this.height = 12;
      this.value = 250;
    } else if ((this.type | 0) === 13) {
      this.$name = "Gold Ore";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 8;
      this.width = 12;
      this.height = 12;
      this.value = 2000;
    } else if ((this.type | 0) === 14) {
      this.$name = "Silver Ore";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 9;
      this.width = 12;
      this.height = 12;
      this.value = 1000;
    } else if ((this.type | 0) === 15) {
      this.$name = "Copper Watch";
      this.width = 24;
      this.height = 28;
      this.accessory = true;
      this.toolTip = "Tells the time";
      this.value = 1000;
    } else if ((this.type | 0) === 16) {
      this.$name = "Silver Watch";
      this.width = 24;
      this.height = 28;
      this.accessory = true;
      this.toolTip = "Tells the time";
      this.value = 5000;
    } else if ((this.type | 0) === 17) {
      this.$name = "Gold Watch";
      this.width = 24;
      this.height = 28;
      this.accessory = true;
      this.rare = 1;
      this.toolTip = "Tells the time";
      this.value = 10000;
    } else if ((this.type | 0) === 18) {
      this.$name = "Depth Meter";
      this.width = 24;
      this.height = 18;
      this.accessory = true;
      this.rare = 1;
      this.toolTip = "Shows depth";
      this.value = 10000;
    } else if ((this.type | 0) === 19) {
      this.$name = "Gold Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.value = 6000;
    } else if ((this.type | 0) === 20) {
      this.$name = "Copper Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.value = 750;
    } else if ((this.type | 0) === 21) {
      this.$name = "Silver Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.value = 3000;
    } else if ((this.type | 0) === 22) {
      this.$name = "Iron Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.value = 1500;
    } else if ((this.type | 0) === 23) {
      this.$name = "Gel";
      this.width = 10;
      this.height = 12;
      this.maxStack = 99;
      this.alpha = 175;
      this.color = $S00().Construct(0, 80, 255, 100);
      this.toolTip = "'Both tasty and flammable'";
      this.value = 5;
    } else if ((this.type | 0) === 24) {
      this.$name = "Wooden Sword";
      this.useStyle = 1;
      this.useTurn = false;
      this.useAnimation = 25;
      this.width = 24;
      this.height = 28;
      this.damage = 7;
      this.knockBack = 4;
      this.scale = 0.95;
      this.useSound = 1;
      this.value = 100;
    } else if ((this.type | 0) === 25) {
      this.$name = "Wooden Door";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 10;
      this.width = 14;
      this.height = 28;
      this.value = 200;
    } else if ((this.type | 0) === 26) {
      this.$name = "Stone Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 1;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 27) {
      this.$name = "Acorn";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 20;
      this.width = 18;
      this.height = 18;
      this.value = 10;
    } else if ((this.type | 0) === 28) {
      this.$name = "Lesser Healing Potion";
      this.useSound = 3;
      this.healLife = 100;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 30;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.potion = true;
      this.value = 200;
    } else if ((this.type | 0) === 29) {
      this.$name = "Life Crystal";
      this.maxStack = 99;
      this.consumable = true;
      this.width = 18;
      this.height = 18;
      this.useStyle = 4;
      this.useTime = 30;
      this.useSound = 4;
      this.useAnimation = 30;
      this.toolTip = "Increases maximum life";
      this.rare = 2;
    } else if ((this.type | 0) === 30) {
      this.$name = "Dirt Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 2;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 31) {
      this.$name = "Bottle";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 13;
      this.width = 16;
      this.height = 24;
      this.value = 100;
    } else if ((this.type | 0) === 32) {
      this.$name = "Wooden Table";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 14;
      this.width = 26;
      this.height = 20;
      this.value = 300;
    } else if ((this.type | 0) === 33) {
      this.$name = "Furnace";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 17;
      this.width = 26;
      this.height = 24;
      this.value = 300;
    } else if ((this.type | 0) === 34) {
      this.$name = "Wooden Chair";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 15;
      this.width = 12;
      this.height = 30;
      this.value = 150;
    } else if ((this.type | 0) === 35) {
      this.$name = "Iron Anvil";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 16;
      this.width = 28;
      this.height = 14;
      this.value = 5000;
    } else if ((this.type | 0) === 36) {
      this.$name = "Work Bench";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 18;
      this.width = 28;
      this.height = 14;
      this.value = 150;
    } else if ((this.type | 0) === 37) {
      this.$name = "Goggles";
      this.width = 28;
      this.height = 12;
      this.defense = 1;
      this.headSlot = 10;
      this.rare = 1;
      this.value = 1000;
    } else if ((this.type | 0) === 38) {
      this.$name = "Lens";
      this.width = 12;
      this.height = 20;
      this.maxStack = 99;
      this.value = 500;
    } else if ((this.type | 0) === 39) {
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 30;
      this.$name = "Wooden Bow";
      this.width = 12;
      this.height = 28;
      this.shoot = 1;
      this.useAmmo = 1;
      this.useSound = 5;
      this.damage = 5;
      this.shootSpeed = 6.1;
      this.noMelee = true;
      this.value = 100;
    } else if ((this.type | 0) === 40) {
      this.$name = "Wooden Arrow";
      this.shootSpeed = 3;
      this.shoot = 1;
      this.damage = 5;
      this.width = 10;
      this.height = 28;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 1;
      this.knockBack = 2;
      this.value = 10;
    } else if ((this.type | 0) === 41) {
      this.$name = "Flaming Arrow";
      this.shootSpeed = 3.5;
      this.shoot = 2;
      this.damage = 7;
      this.width = 10;
      this.height = 28;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 1;
      this.knockBack = 2;
      this.value = 15;
    } else if ((this.type | 0) === 42) {
      this.useStyle = 1;
      this.$name = "Shuriken";
      this.shootSpeed = 9;
      this.shoot = 3;
      this.damage = 10;
      this.width = 18;
      this.height = 20;
      this.maxStack = 250;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noUseGraphic = true;
      this.noMelee = true;
      this.value = 20;
    } else if ((this.type | 0) === 43) {
      this.useStyle = 4;
      this.$name = "Suspicious Looking Eye";
      this.width = 22;
      this.height = 14;
      this.consumable = true;
      this.useAnimation = 45;
      this.useTime = 45;
      this.toolTip = "May cause terrible things to occur";
    } else if ((this.type | 0) === 44) {
      this.useStyle = 5;
      this.useAnimation = 25;
      this.useTime = 25;
      this.$name = "Demon Bow";
      this.width = 12;
      this.height = 28;
      this.shoot = 1;
      this.useAmmo = 1;
      this.useSound = 5;
      this.damage = 13;
      this.shootSpeed = 6.7;
      this.knockBack = 1;
      this.alpha = 30;
      this.rare = 1;
      this.noMelee = true;
      this.value = 18000;
    } else if ((this.type | 0) === 45) {
      this.$name = "War Axe of the Night";
      this.autoReuse = true;
      this.useStyle = 1;
      this.useAnimation = 30;
      this.knockBack = 6;
      this.useTime = 15;
      this.width = 24;
      this.height = 28;
      this.damage = 21;
      this.axe = 15;
      this.scale = 1.2;
      this.useSound = 1;
      this.rare = 1;
      this.value = 13500;
    } else if ((this.type | 0) === 46) {
      this.$name = "Light's Bane";
      this.useStyle = 1;
      this.useAnimation = 20;
      this.knockBack = 5;
      this.width = 24;
      this.height = 28;
      this.damage = 16;
      this.scale = 1.1;
      this.useSound = 1;
      this.rare = 1;
      this.value = 13500;
    } else if ((this.type | 0) === 47) {
      this.$name = "Unholy Arrow";
      this.shootSpeed = 3.4;
      this.shoot = 4;
      this.damage = 8;
      this.width = 10;
      this.height = 28;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 1;
      this.knockBack = 3;
      this.alpha = 30;
      this.rare = 1;
      this.value = 40;
    } else if ((this.type | 0) === 48) {
      this.$name = "Chest";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 21;
      this.width = 26;
      this.height = 22;
      this.value = 500;
    } else if ((this.type | 0) === 49) {
      this.$name = "Band of Regeneration";
      this.width = 22;
      this.height = 22;
      this.accessory = true;
      this.lifeRegen = 1;
      this.rare = 1;
      this.toolTip = "Slowly regenerates life";
      this.value = 50000;
    } else if ((this.type | 0) === 50) {
      this.$name = "Magic Mirror";
      this.useTurn = true;
      this.width = 20;
      this.height = 20;
      this.useStyle = 4;
      this.useTime = 90;
      this.useSound = 6;
      this.useAnimation = 90;
      this.toolTip = "Gaze in the mirror to return home";
      this.rare = 1;
      this.value = 50000;
    } else if ((this.type | 0) === 51) {
      this.$name = "Jester's Arrow";
      this.shootSpeed = 0.5;
      this.shoot = 5;
      this.damage = 9;
      this.width = 10;
      this.height = 28;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 1;
      this.knockBack = 4;
      this.rare = 1;
      this.value = 100;
    } else if ((this.type | 0) === 52) {
      this.$name = "Angel Statue";
      this.width = 24;
      this.height = 28;
      this.toolTip = "It doesn't do anything";
      this.value = 1;
    } else if ((this.type | 0) === 53) {
      this.$name = "Cloud in a Bottle";
      this.width = 16;
      this.height = 24;
      this.accessory = true;
      this.rare = 1;
      this.toolTip = "Allows the holder to double jump";
      this.value = 50000;
    } else if ((this.type | 0) === 54) {
      this.$name = "Hermes Boots";
      this.width = 28;
      this.height = 24;
      this.accessory = true;
      this.rare = 1;
      this.toolTip = "The wearer can run super fast";
      this.value = 50000;
    } else if ((this.type | 0) === 55) {
      this.noMelee = true;
      this.useStyle = 1;
      this.$name = "Enchanted Boomerang";
      this.shootSpeed = 10;
      this.shoot = 6;
      this.damage = 13;
      this.knockBack = 8;
      this.width = 14;
      this.height = 28;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noUseGraphic = true;
      this.rare = 1;
      this.value = 50000;
    } else if ((this.type | 0) === 56) {
      this.$name = "Demonite Ore";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 22;
      this.width = 12;
      this.height = 12;
      this.rare = 1;
      this.toolTip = "Pulsing with dark energy";
      this.value = 4000;
    } else if ((this.type | 0) === 57) {
      this.$name = "Demonite Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.rare = 1;
      this.toolTip = "Pulsing with dark energy";
      this.value = 16000;
    } else if ((this.type | 0) === 58) {
      this.$name = "Heart";
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 59) {
      this.$name = "Corrupt Seeds";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 23;
      this.width = 14;
      this.height = 14;
      this.value = 500;
    } else if ((this.type | 0) === 60) {
      this.$name = "Vile Mushroom";
      this.width = 16;
      this.height = 18;
      this.maxStack = 99;
      this.value = 50;
    } else if ((this.type | 0) === 61) {
      this.$name = "Ebonstone Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 25;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 62) {
      this.$name = "Grass Seeds";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 2;
      this.width = 14;
      this.height = 14;
      this.value = 20;
    } else if ((this.type | 0) === 63) {
      this.$name = "Sunflower";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 27;
      this.width = 26;
      this.height = 26;
      this.value = 200;
    } else if ((this.type | 0) === 64) {
      this.mana = 5;
      this.damage = 8;
      this.useStyle = 1;
      this.$name = "Vilethorn";
      this.shootSpeed = 32;
      this.shoot = 7;
      this.width = 26;
      this.height = 28;
      this.useSound = 8;
      this.useAnimation = 30;
      this.useTime = 30;
      this.rare = 1;
      this.noMelee = true;
      this.toolTip = "Summons a vile thorn";
      this.value = 10000;
    } else if ((this.type | 0) === 65) {
      this.mana = 11;
      this.knockBack = 5;
      this.alpha = 100;
      this.color = $S00().Construct(150, 150, 150, 0);
      this.damage = 15;
      this.useStyle = 1;
      this.scale = 1.15;
      this.$name = "Starfury";
      this.shootSpeed = 12;
      this.shoot = 9;
      this.width = 14;
      this.height = 28;
      this.useSound = 9;
      this.useAnimation = 25;
      this.useTime = 10;
      this.rare = 1;
      this.toolTip = "Forged with the fury of heaven";
      this.value = 50000;
    } else if ((this.type | 0) === 66) {
      this.useStyle = 1;
      this.$name = "Purification Powder";
      this.shootSpeed = 4;
      this.shoot = 10;
      this.width = 16;
      this.height = 24;
      this.maxStack = 99;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noMelee = true;
      this.toolTip = "Cleanses the corruption";
      this.value = 75;
    } else if ((this.type | 0) === 67) {
      this.damage = 8;
      this.useStyle = 1;
      this.$name = "Vile Powder";
      this.shootSpeed = 4;
      this.shoot = 11;
      this.width = 16;
      this.height = 24;
      this.maxStack = 99;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noMelee = true;
      this.value = 100;
    } else if ((this.type | 0) === 68) {
      this.$name = "Rotten Chunk";
      this.width = 18;
      this.height = 20;
      this.maxStack = 99;
      this.toolTip = "Looks tasty!";
      this.value = 10;
    } else if ((this.type | 0) === 69) {
      this.$name = "Worm Tooth";
      this.width = 8;
      this.height = 20;
      this.maxStack = 99;
      this.value = 100;
    } else if ((this.type | 0) === 70) {
      this.useStyle = 4;
      this.consumable = true;
      this.useAnimation = 45;
      this.useTime = 45;
      this.$name = "Worm Food";
      this.width = 28;
      this.height = 28;
      this.toolTip = "May attract giant worms";
    } else if ((this.type | 0) === 71) {
      this.$name = "Copper Coin";
      this.width = 10;
      this.height = 12;
      this.maxStack = 100;
    } else if ((this.type | 0) === 72) {
      this.$name = "Silver Coin";
      this.width = 10;
      this.height = 12;
      this.maxStack = 100;
    } else if ((this.type | 0) === 73) {
      this.$name = "Gold Coin";
      this.width = 10;
      this.height = 12;
      this.maxStack = 100;
    } else if ((this.type | 0) === 74) {
      this.$name = "Platinum Coin";
      this.width = 10;
      this.height = 12;
      this.maxStack = 100;
    } else if ((this.type | 0) === 75) {
      this.$name = "Fallen Star";
      this.width = 18;
      this.height = 20;
      this.maxStack = 100;
      this.alpha = 75;
      this.ammo = 15;
      this.toolTip = "Disappears after the sunrise";
      this.value = 500;
      this.useStyle = 4;
      this.useSound = 4;
      this.useTurn = false;
      this.useAnimation = 17;
      this.useTime = 17;
      this.healMana = 20;
      this.consumable = true;
      this.rare = 1;
      this.potion = true;
    } else if ((this.type | 0) === 76) {
      this.$name = "Copper Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 1;
      this.legSlot = 1;
      this.value = 750;
    } else if ((this.type | 0) === 77) {
      this.$name = "Iron Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 2;
      this.legSlot = 2;
      this.value = 3000;
    } else if ((this.type | 0) === 78) {
      this.$name = "Silver Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 3;
      this.legSlot = 3;
      this.value = 7500;
    } else if ((this.type | 0) === 79) {
      this.$name = "Gold Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 4;
      this.legSlot = 4;
      this.value = 15000;
    } else if ((this.type | 0) === 80) {
      this.$name = "Copper Chainmail";
      this.width = 26;
      this.height = 28;
      this.defense = 2;
      this.bodySlot = 1;
      this.value = 1000;
    } else if ((this.type | 0) === 81) {
      this.$name = "Iron Chainmail";
      this.width = 26;
      this.height = 28;
      this.defense = 3;
      this.bodySlot = 2;
      this.value = 4000;
    } else if ((this.type | 0) === 82) {
      this.$name = "Silver Chainmail";
      this.width = 26;
      this.height = 28;
      this.defense = 4;
      this.bodySlot = 3;
      this.value = 10000;
    } else if ((this.type | 0) === 83) {
      this.$name = "Gold Chainmail";
      this.width = 26;
      this.height = 28;
      this.defense = 5;
      this.bodySlot = 4;
      this.value = 20000;
    } else if ((this.type | 0) === 84) {
      this.noUseGraphic = true;
      this.damage = 0;
      this.knockBack = 7;
      this.useStyle = 5;
      this.$name = "Grappling Hook";
      this.shootSpeed = 11;
      this.shoot = 13;
      this.width = 18;
      this.height = 28;
      this.useSound = 1;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 1;
      this.noMelee = true;
      this.value = 20000;
    } else if ((this.type | 0) === 85) {
      this.$name = "Iron Chain";
      this.width = 14;
      this.height = 20;
      this.maxStack = 99;
      this.value = 1000;
    } else if ((this.type | 0) === 86) {
      this.$name = "Shadow Scale";
      this.width = 14;
      this.height = 18;
      this.maxStack = 99;
      this.rare = 1;
      this.value = 500;
    } else if ((this.type | 0) === 87) {
      this.$name = "Piggy Bank";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 29;
      this.width = 20;
      this.height = 12;
      this.value = 10000;
    } else if ((this.type | 0) === 88) {
      this.$name = "Mining Helmet";
      this.width = 22;
      this.height = 16;
      this.defense = 1;
      this.headSlot = 11;
      this.rare = 1;
      this.value = 80000;
      this.toolTip = "Provides light when worn";
    } else if ((this.type | 0) === 89) {
      this.$name = "Copper Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 1;
      this.headSlot = 1;
      this.value = 1250;
    } else if ((this.type | 0) === 90) {
      this.$name = "Iron Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 2;
      this.headSlot = 2;
      this.value = 5000;
    } else if ((this.type | 0) === 91) {
      this.$name = "Silver Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 3;
      this.headSlot = 3;
      this.value = 12500;
    } else if ((this.type | 0) === 92) {
      this.$name = "Gold Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 4;
      this.headSlot = 4;
      this.value = 25000;
    } else if ((this.type | 0) === 93) {
      this.$name = "Wood Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 4;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 94) {
      this.$name = "Wood Platform";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 19;
      this.width = 8;
      this.height = 10;
    } else if ((this.type | 0) === 95) {
      this.useStyle = 5;
      this.useAnimation = 20;
      this.useTime = 20;
      this.$name = "Flintlock Pistol";
      this.width = 24;
      this.height = 28;
      this.shoot = 14;
      this.useAmmo = 14;
      this.useSound = 11;
      this.damage = 7;
      this.shootSpeed = 5;
      this.noMelee = true;
      this.value = 50000;
      this.scale = 0.9;
      this.rare = 1;
    } else if ((this.type | 0) === 96) {
      this.useStyle = 5;
      this.autoReuse = true;
      this.useAnimation = 45;
      this.useTime = 45;
      this.$name = "Musket";
      this.width = 44;
      this.height = 14;
      this.shoot = 10;
      this.useAmmo = 14;
      this.useSound = 11;
      this.damage = 14;
      this.shootSpeed = 8;
      this.noMelee = true;
      this.value = 100000;
      this.knockBack = 4;
      this.rare = 1;
    } else if ((this.type | 0) === 97) {
      this.$name = "Musket Ball";
      this.shootSpeed = 4;
      this.shoot = 14;
      this.damage = 7;
      this.width = 8;
      this.height = 8;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 14;
      this.knockBack = 2;
      this.value = 8;
    } else if ((this.type | 0) === 98) {
      this.useStyle = 5;
      this.autoReuse = true;
      this.useAnimation = 8;
      this.useTime = 8;
      this.$name = "Minishark";
      this.width = 50;
      this.height = 18;
      this.shoot = 10;
      this.useAmmo = 14;
      this.useSound = 11;
      this.damage = 5;
      this.shootSpeed = 7;
      this.noMelee = true;
      this.value = 500000;
      this.rare = 2;
      this.toolTip = "Half shark, half gun, completely awesome.";
    } else if ((this.type | 0) === 99) {
      this.useStyle = 5;
      this.useAnimation = 28;
      this.useTime = 28;
      this.$name = "Iron Bow";
      this.width = 12;
      this.height = 28;
      this.shoot = 1;
      this.useAmmo = 1;
      this.useSound = 5;
      this.damage = 9;
      this.shootSpeed = 6.6;
      this.noMelee = true;
      this.value = 1400;
    } else if ((this.type | 0) === 100) {
      this.$name = "Shadow Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 6;
      this.legSlot = 5;
      this.rare = 1;
      this.value = 22500;
    } else if ((this.type | 0) === 101) {
      this.$name = "Shadow Scalemail";
      this.width = 26;
      this.height = 28;
      this.defense = 7;
      this.bodySlot = 5;
      this.rare = 1;
      this.value = 30000;
    } else if ((this.type | 0) === 102) {
      this.$name = "Shadow Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 6;
      this.headSlot = 5;
      this.rare = 1;
      this.value = 37500;
    } else if ((this.type | 0) === 103) {
      this.$name = "Nightmare Pickaxe";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 20;
      this.useTime = 15;
      this.autoReuse = true;
      this.width = 24;
      this.height = 28;
      this.damage = 11;
      this.pick = 65;
      this.useSound = 1;
      this.knockBack = 3;
      this.rare = 1;
      this.value = 18000;
      this.scale = 1.15;
    } else if ((this.type | 0) === 104) {
      this.$name = "The Breaker";
      this.autoReuse = true;
      this.useStyle = 1;
      this.useAnimation = 40;
      this.useTime = 19;
      this.hammer = 55;
      this.width = 24;
      this.height = 28;
      this.damage = 28;
      this.knockBack = 6.5;
      this.scale = 1.3;
      this.useSound = 1;
      this.rare = 1;
      this.value = 15000;
    } else if ((this.type | 0) === 105) {
      this.$name = "Candle";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 33;
      this.width = 8;
      this.height = 18;
      this.holdStyle = 1;
    } else if ((this.type | 0) === 106) {
      this.$name = "Copper Chandelier";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 34;
      this.width = 26;
      this.height = 26;
    } else if ((this.type | 0) === 107) {
      this.$name = "Silver Chandelier";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 35;
      this.width = 26;
      this.height = 26;
    } else if ((this.type | 0) === 108) {
      this.$name = "Gold Chandelier";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 36;
      this.width = 26;
      this.height = 26;
    } else if ((this.type | 0) === 109) {
      this.$name = "Mana Crystal";
      this.maxStack = 99;
      this.consumable = true;
      this.width = 18;
      this.height = 18;
      this.useStyle = 4;
      this.useTime = 30;
      this.useSound = 4;
      this.useAnimation = 30;
      this.toolTip = "Increases maximum mana";
      this.rare = 2;
    } else if ((this.type | 0) === 110) {
      this.$name = "Lesser Mana Potion";
      this.useSound = 3;
      this.healMana = 100;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 30;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.potion = true;
      this.value = 1000;
    } else if ((this.type | 0) === 111) {
      this.$name = "Band of Starpower";
      this.width = 22;
      this.height = 22;
      this.accessory = true;
      this.manaRegen = 3;
      this.rare = 1;
      this.toolTip = "Slowly regenerates mana";
      this.value = 50000;
    } else if ((this.type | 0) === 112) {
      this.mana = 10;
      this.damage = 30;
      this.useStyle = 1;
      this.$name = "Flower of Fire";
      this.shootSpeed = 6;
      this.shoot = 15;
      this.width = 26;
      this.height = 28;
      this.useSound = 8;
      this.useAnimation = 30;
      this.useTime = 30;
      this.rare = 3;
      this.noMelee = true;
      this.knockBack = 5;
      this.toolTip = "Throws balls of fire";
      this.value = 10000;
    } else if ((this.type | 0) === 113) {
      this.mana = 18;
      this.channel = true;
      this.damage = 30;
      this.useStyle = 1;
      this.$name = "Magic Missile";
      this.shootSpeed = 6;
      this.shoot = 16;
      this.width = 26;
      this.height = 28;
      this.useSound = 9;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 2;
      this.noMelee = true;
      this.knockBack = 5;
      this.toolTip = "Casts a controllable missile";
      this.value = 10000;
    } else if ((this.type | 0) === 114) {
      this.mana = 5;
      this.channel = true;
      this.damage = 0;
      this.useStyle = 1;
      this.$name = "Dirt Rod";
      this.shoot = 17;
      this.width = 26;
      this.height = 28;
      this.useSound = 8;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 1;
      this.noMelee = true;
      this.knockBack = 5;
      this.toolTip = "Magically move dirt";
      this.value = 200000;
    } else if ((this.type | 0) === 115) {
      this.mana = 40;
      this.channel = true;
      this.damage = 0;
      this.useStyle = 4;
      this.$name = "Orb of Light";
      this.shoot = 18;
      this.width = 24;
      this.height = 24;
      this.useSound = 8;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 1;
      this.noMelee = true;
      this.toolTip = "Creates a magical orb of light";
      this.value = 10000;
    } else if ((this.type | 0) === 116) {
      this.$name = "Meteorite";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 37;
      this.width = 12;
      this.height = 12;
      this.value = 1000;
    } else if ((this.type | 0) === 117) {
      this.$name = "Meteorite Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.rare = 1;
      this.toolTip = "Warm to the touch";
      this.value = 7000;
    } else if ((this.type | 0) === 118) {
      this.$name = "Hook";
      this.maxStack = 99;
      this.width = 18;
      this.height = 18;
      this.value = 1000;
      this.toolTip = "Combine with chains to making a grappling hook";
    } else if ((this.type | 0) === 119) {
      this.noMelee = true;
      this.useStyle = 1;
      this.$name = "Flamarang";
      this.shootSpeed = 11;
      this.shoot = 19;
      this.damage = 32;
      this.knockBack = 8;
      this.width = 14;
      this.height = 28;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noUseGraphic = true;
      this.rare = 3;
      this.value = 100000;
    } else if ((this.type | 0) === 120) {
      this.useStyle = 5;
      this.useAnimation = 25;
      this.useTime = 25;
      this.$name = "Molten Fury";
      this.width = 14;
      this.height = 32;
      this.shoot = 1;
      this.useAmmo = 1;
      this.useSound = 5;
      this.damage = 29;
      this.shootSpeed = 8;
      this.knockBack = 2;
      this.alpha = 30;
      this.rare = 3;
      this.noMelee = true;
      this.scale = 1.1;
      this.value = 27000;
      this.toolTip = "Lights wooden arrows ablaze";
    } else if ((this.type | 0) === 121) {
      this.$name = "Fiery Greatsword";
      this.useStyle = 1;
      this.useAnimation = 35;
      this.knockBack = 6.5;
      this.width = 24;
      this.height = 28;
      this.damage = 34;
      this.scale = 1.3;
      this.useSound = 1;
      this.rare = 3;
      this.value = 27000;
      this.toolTip = "It's made out of fire!";
    }
    if ((this.type | 0) === 122) {
      this.$name = "Molten Pickaxe";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 25;
      this.useTime = 25;
      this.autoReuse = true;
      this.width = 24;
      this.height = 28;
      this.damage = 18;
      this.pick = 100;
      this.scale = 1.15;
      this.useSound = 1;
      this.knockBack = 2;
      this.rare = 3;
      this.value = 27000;
    } else if ((this.type | 0) === 123) {
      this.$name = "Meteor Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 4;
      this.headSlot = 6;
      this.rare = 1;
      this.value = 45000;
      this.manaRegen = 3;
      this.toolTip = "Slowly regenerates mana";
    } else if ((this.type | 0) === 124) {
      this.$name = "Meteor Suit";
      this.width = 26;
      this.height = 28;
      this.defense = 5;
      this.bodySlot = 6;
      this.rare = 1;
      this.value = 30000;
      this.manaRegen = 3;
      this.toolTip = "Slowly regenerates mana";
    } else if ((this.type | 0) === 125) {
      this.$name = "Meteor Leggings";
      this.width = 18;
      this.height = 28;
      this.defense = 4;
      this.legSlot = 6;
      this.rare = 1;
      this.manaRegen = 3;
      this.value = 30000;
      this.toolTip = "Slowly regenerates mana";
    } else if ((this.type | 0) === 126) {
      this.autoReuse = true;
      this.useStyle = 5;
      this.useAnimation = 8;
      this.useTime = 8;
      this.$name = "Zapinator";
      this.width = 24;
      this.height = 28;
      this.shoot = 20;
      this.useSound = 12;
      this.knockBack = 3;
      this.damage = 50;
      this.shootSpeed = 12;
      this.noMelee = true;
      this.scale = 0.8;
      this.rare = 4;
    } else if ((this.type | 0) === 127) {
      this.autoReuse = true;
      this.useStyle = 5;
      this.useAnimation = 18;
      this.useTime = 18;
      this.$name = "Space Gun";
      this.width = 24;
      this.height = 28;
      this.shoot = 20;
      this.mana = 9;
      this.useSound = 12;
      this.knockBack = 1;
      this.damage = 15;
      this.shootSpeed = 10;
      this.noMelee = true;
      this.scale = 0.8;
      this.rare = 1;
    } else if ((this.type | 0) === 128) {
      this.mana = 7;
      this.$name = "Rocket Boots";
      this.width = 28;
      this.height = 24;
      this.accessory = true;
      this.rare = 3;
      this.toolTip = "Allows flight";
      this.value = 50000;
    } else if ((this.type | 0) === 129) {
      this.$name = "Gray Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 38;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 130) {
      this.$name = "Gray Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 5;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 131) {
      this.$name = "Red Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 39;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 132) {
      this.$name = "Red Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 6;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 133) {
      this.$name = "Clay Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 40;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 134) {
      this.$name = "Blue Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 41;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 135) {
      this.$name = "Blue Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 7;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 136) {
      this.$name = "Chain Lantern";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 42;
      this.width = 12;
      this.height = 28;
    } else if ((this.type | 0) === 137) {
      this.$name = "Green Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 43;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 138) {
      this.$name = "Green Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 8;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 139) {
      this.$name = "Pink Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 44;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 140) {
      this.$name = "Pink Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 9;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 141) {
      this.$name = "Gold Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 45;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 142) {
      this.$name = "Gold Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 10;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 143) {
      this.$name = "Silver Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 46;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 144) {
      this.$name = "Silver Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 11;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 145) {
      this.$name = "Copper Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 47;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 146) {
      this.$name = "Copper Brick Wall";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createWall = 12;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 147) {
      this.$name = "Spike";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 48;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 148) {
      this.$name = "Water Candle";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 49;
      this.width = 8;
      this.height = 18;
      this.holdStyle = 1;
      this.toolTip = "Holding this may attract unwanted attention";
    } else if ((this.type | 0) === 149) {
      this.$name = "Book";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 50;
      this.width = 24;
      this.height = 28;
      this.toolTip = "It contains strange symbols";
    } else if ((this.type | 0) === 150) {
      this.$name = "Cobweb";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 51;
      this.width = 20;
      this.height = 24;
      this.alpha = 100;
    } else if ((this.type | 0) === 151) {
      this.$name = "Necro Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 6;
      this.headSlot = 7;
      this.rare = 2;
      this.value = 45000;
    } else if ((this.type | 0) === 152) {
      this.$name = "Necro Breastplate";
      this.width = 26;
      this.height = 28;
      this.defense = 7;
      this.bodySlot = 7;
      this.rare = 2;
      this.value = 30000;
    } else if ((this.type | 0) === 153) {
      this.$name = "Necro Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 6;
      this.legSlot = 7;
      this.rare = 2;
      this.value = 30000;
    } else if ((this.type | 0) === 154) {
      this.$name = "Bone";
      this.maxStack = 99;
      this.consumable = true;
      this.width = 12;
      this.height = 14;
      this.value = 50;
      this.useAnimation = 12;
      this.useTime = 12;
      this.useStyle = 1;
      this.useSound = 1;
      this.shootSpeed = 8;
      this.noUseGraphic = true;
      this.damage = 22;
      this.knockBack = 4;
      this.shoot = 21;
    } else if ((this.type | 0) === 155) {
      this.autoReuse = true;
      this.useTurn = true;
      this.$name = "Muramasa";
      this.useStyle = 1;
      this.useAnimation = 20;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 22;
      this.scale = 1.2;
      this.useSound = 1;
      this.rare = 2;
      this.value = 27000;
    } else if ((this.type | 0) === 156) {
      this.$name = "Cobalt Shield";
      this.width = 24;
      this.height = 28;
      this.rare = 2;
      this.value = 27000;
      this.accessory = true;
      this.defense = 2;
      this.toolTip = "Grants immunity to knockback";
    } else if ((this.type | 0) === 157) {
      this.mana = 12;
      this.autoReuse = true;
      this.$name = "Aqua Scepter";
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 5;
      this.knockBack = 3;
      this.width = 38;
      this.height = 10;
      this.damage = 15;
      this.scale = 1;
      this.shoot = 22;
      this.shootSpeed = 10;
      this.useSound = 13;
      this.rare = 2;
      this.value = 27000;
      this.toolTip = "Sprays out a shower of water";
    } else if ((this.type | 0) === 158) {
      this.$name = "Lucky Horseshoe";
      this.width = 20;
      this.height = 22;
      this.rare = 1;
      this.value = 27000;
      this.accessory = true;
      this.toolTip = "Negate fall damage";
    } else if ((this.type | 0) === 159) {
      this.$name = "Shiny Red Balloon";
      this.width = 14;
      this.height = 28;
      this.rare = 1;
      this.value = 27000;
      this.accessory = true;
      this.toolTip = "Increases jump height";
    } else if ((this.type | 0) === 160) {
      this.autoReuse = true;
      this.$name = "Harpoon";
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 30;
      this.knockBack = 6;
      this.width = 30;
      this.height = 10;
      this.damage = 15;
      this.scale = 1.1;
      this.shoot = 23;
      this.shootSpeed = 10;
      this.useSound = 10;
      this.rare = 2;
      this.value = 27000;
    } else if ((this.type | 0) === 161) {
      this.useStyle = 1;
      this.$name = "Spiky Ball";
      this.shootSpeed = 5;
      this.shoot = 24;
      this.knockBack = 1;
      this.damage = 12;
      this.width = 10;
      this.height = 10;
      this.maxStack = 250;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noUseGraphic = true;
      this.noMelee = true;
      this.value = 20;
    } else if ((this.type | 0) === 162) {
      this.$name = "Ball 'O Hurt";
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 30;
      this.knockBack = 7;
      this.width = 30;
      this.height = 10;
      this.damage = 15;
      this.scale = 1.1;
      this.noUseGraphic = true;
      this.shoot = 25;
      this.shootSpeed = 12;
      this.useSound = 1;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 163) {
      this.$name = "Blue Moon";
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 30;
      this.knockBack = 7;
      this.width = 30;
      this.height = 10;
      this.damage = 30;
      this.scale = 1.1;
      this.noUseGraphic = true;
      this.shoot = 26;
      this.shootSpeed = 12;
      this.useSound = 1;
      this.rare = 2;
      this.value = 27000;
    } else if ((this.type | 0) === 164) {
      this.autoReuse = false;
      this.useStyle = 5;
      this.useAnimation = 10;
      this.useTime = 10;
      this.$name = "Handgun";
      this.width = 24;
      this.height = 28;
      this.shoot = 14;
      this.knockBack = 3;
      this.useAmmo = 14;
      this.useSound = 11;
      this.damage = 12;
      this.shootSpeed = 10;
      this.noMelee = true;
      this.value = 50000;
      this.scale = 0.8;
      this.rare = 2;
    } else if ((this.type | 0) === 165) {
      this.rare = 2;
      this.mana = 20;
      this.useSound = 8;
      this.$name = "Water Bolt";
      this.useStyle = 5;
      this.damage = 15;
      this.useAnimation = 20;
      this.useTime = 20;
      this.width = 24;
      this.height = 28;
      this.shoot = 27;
      this.scale = 0.8;
      this.shootSpeed = 4;
      this.knockBack = 5;
      this.toolTip = "Casts a slow moving bolt of water";
    } else if ((this.type | 0) === 166) {
      this.useStyle = 1;
      this.$name = "Bomb";
      this.shootSpeed = 5;
      this.shoot = 28;
      this.width = 20;
      this.height = 20;
      this.maxStack = 20;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 25;
      this.useTime = 25;
      this.noUseGraphic = true;
      this.noMelee = true;
      this.value = 500;
      this.damage = 0;
      this.toolTip = "A small explosion that will destroy some tiles";
    } else if ((this.type | 0) === 167) {
      this.useStyle = 1;
      this.$name = "Dynamite";
      this.shootSpeed = 4;
      this.shoot = 29;
      this.width = 8;
      this.height = 28;
      this.maxStack = 3;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 40;
      this.useTime = 40;
      this.noUseGraphic = true;
      this.noMelee = true;
      this.value = 5000;
      this.rare = 1;
      this.toolTip = "A large explosion that will destroy most tiles";
    } else if ((this.type | 0) === 168) {
      this.useStyle = 1;
      this.$name = "Grenade";
      this.shootSpeed = 5.5;
      this.shoot = 30;
      this.width = 20;
      this.height = 20;
      this.maxStack = 20;
      this.consumable = true;
      this.useSound = 1;
      this.useAnimation = 60;
      this.useTime = 60;
      this.noUseGraphic = true;
      this.noMelee = true;
      this.value = 500;
      this.damage = 60;
      this.knockBack = 8;
      this.toolTip = "A small explosion that will not destroy tiles";
    } else if ((this.type | 0) === 169) {
      this.$name = "Sand Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 53;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 170) {
      this.$name = "Glass";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 54;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 171) {
      this.$name = "Sign";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 55;
      this.width = 28;
      this.height = 28;
    } else if ((this.type | 0) === 172) {
      this.$name = "Ash Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 57;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 173) {
      this.$name = "Obsidian";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 56;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 174) {
      this.$name = "Hellstone";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 58;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 175) {
      this.$name = "Hellstone Bar";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.rare = 2;
      this.toolTip = "Hot to the touch";
      this.value = 20000;
    } else if ((this.type | 0) === 176) {
      this.$name = "Mud Block";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 59;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 177) {
      this.$name = "Sapphire";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 7000;
    } else if ((this.type | 0) === 178) {
      this.$name = "Ruby";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 20000;
    } else if ((this.type | 0) === 179) {
      this.$name = "Emerald";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 15000;
    } else if ((this.type | 0) === 180) {
      this.$name = "Topaz";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 5000;
    } else if ((this.type | 0) === 181) {
      this.$name = "Amethyst";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 2500;
    } else if ((this.type | 0) === 182) {
      this.$name = "Diamond";
      this.maxStack = 99;
      this.alpha = 50;
      this.width = 10;
      this.height = 14;
      this.value = 40000;
    } else if ((this.type | 0) === 183) {
      this.$name = "Glowing Mushroom";
      this.useStyle = 2;
      this.useSound = 2;
      this.useTurn = false;
      this.useAnimation = 17;
      this.useTime = 17;
      this.width = 16;
      this.height = 18;
      this.healLife = 50;
      this.maxStack = 99;
      this.consumable = true;
      this.potion = true;
      this.value = 50;
    } else if ((this.type | 0) === 184) {
      this.$name = "Star";
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 185) {
      this.noUseGraphic = true;
      this.damage = 0;
      this.knockBack = 7;
      this.useStyle = 5;
      this.$name = "Ivy Whip";
      this.shootSpeed = 13;
      this.shoot = 32;
      this.width = 18;
      this.height = 28;
      this.useSound = 1;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 3;
      this.noMelee = true;
      this.value = 20000;
    } else if ((this.type | 0) === 186) {
      this.$name = "Breathing Reed";
      this.width = 44;
      this.height = 44;
      this.rare = 1;
      this.value = 10000;
      this.holdStyle = 2;
    } else if ((this.type | 0) === 187) {
      this.$name = "Flipper";
      this.width = 28;
      this.height = 28;
      this.rare = 1;
      this.value = 10000;
      this.accessory = true;
      this.toolTip = "Grants the ability to swim";
    } else if ((this.type | 0) === 188) {
      this.$name = "Healing Potion";
      this.useSound = 3;
      this.healLife = 200;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 30;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.rare = 1;
      this.potion = true;
      this.value = 1000;
    } else if ((this.type | 0) === 189) {
      this.$name = "Mana Potion";
      this.useSound = 3;
      this.healMana = 200;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 30;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.rare = 1;
      this.potion = true;
      this.value = 1000;
    } else if ((this.type | 0) === 190) {
      this.$name = "Blade of Grass";
      this.useStyle = 1;
      this.useAnimation = 30;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 28;
      this.scale = 1.4;
      this.useSound = 1;
      this.rare = 3;
      this.value = 27000;
    } else if ((this.type | 0) === 191) {
      this.noMelee = true;
      this.useStyle = 1;
      this.$name = "Thorn Chakrum";
      this.shootSpeed = 11;
      this.shoot = 33;
      this.damage = 25;
      this.knockBack = 8;
      this.width = 14;
      this.height = 28;
      this.useSound = 1;
      this.useAnimation = 15;
      this.useTime = 15;
      this.noUseGraphic = true;
      this.rare = 3;
      this.value = 50000;
    } else if ((this.type | 0) === 192) {
      this.$name = "Obsidian Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 75;
      this.width = 12;
      this.height = 12;
    } else if ((this.type | 0) === 193) {
      this.$name = "Obsidian Skull";
      this.width = 20;
      this.height = 22;
      this.rare = 2;
      this.value = 27000;
      this.accessory = true;
      this.defense = 2;
      this.toolTip = "Grants immunity to fire blocks";
    } else if ((this.type | 0) === 194) {
      this.$name = "Mushroom Grass Seeds";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 70;
      this.width = 14;
      this.height = 14;
      this.value = 150;
    } else if ((this.type | 0) === 195) {
      this.$name = "Jungle Grass Seeds";
      this.useTurn = true;
      this.useStyle = 1;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 60;
      this.width = 14;
      this.height = 14;
      this.value = 150;
    } else if ((this.type | 0) === 196) {
      this.$name = "Wooden Hammer";
      this.autoReuse = true;
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 37;
      this.useTime = 25;
      this.hammer = 25;
      this.width = 24;
      this.height = 28;
      this.damage = 2;
      this.knockBack = 5.5;
      this.scale = 1.2;
      this.useSound = 1;
      this.tileBoost = -1;
      this.value = 50;
    } else if ((this.type | 0) === 197) {
      this.autoReuse = true;
      this.useStyle = 5;
      this.useAnimation = 12;
      this.useTime = 12;
      this.$name = "Star Cannon";
      this.width = 50;
      this.height = 18;
      this.shoot = 12;
      this.useAmmo = 15;
      this.useSound = 9;
      this.damage = 75;
      this.shootSpeed = 14;
      this.noMelee = true;
      this.value = 500000;
      this.rare = 2;
      this.toolTip = "Shoots fallen stars";
    } else if ((this.type | 0) === 198) {
      this.$name = "Blue Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 199) {
      this.$name = "Red Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 200) {
      this.$name = "Green Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 201) {
      this.$name = "Purple Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 202) {
      this.$name = "White Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 203) {
      this.$name = "Yellow Phaseblade";
      this.useStyle = 1;
      this.useAnimation = 25;
      this.knockBack = 3;
      this.width = 40;
      this.height = 40;
      this.damage = 21;
      this.scale = 1;
      this.useSound = 15;
      this.rare = 1;
      this.value = 27000;
    } else if ((this.type | 0) === 204) {
      this.$name = "Meteor Hamaxe";
      this.useTurn = true;
      this.autoReuse = true;
      this.useStyle = 1;
      this.useAnimation = 30;
      this.useTime = 16;
      this.hammer = 60;
      this.axe = 20;
      this.width = 24;
      this.height = 28;
      this.damage = 20;
      this.knockBack = 7;
      this.scale = 1.2;
      this.useSound = 1;
      this.rare = 1;
      this.value = 15000;
    } else if ((this.type | 0) === 205) {
      this.$name = "Empty Bucket";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.width = 20;
      this.height = 20;
    } else if ((this.type | 0) === 206) {
      this.$name = "Water Bucket";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.width = 20;
      this.height = 20;
    } else if ((this.type | 0) === 207) {
      this.$name = "Lava Bucket";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.width = 20;
      this.height = 20;
    } else if ((this.type | 0) === 208) {
      this.$name = "Jungle Rose";
      this.width = 20;
      this.height = 20;
      this.maxStack = 99;
      this.value = 100;
    } else if ((this.type | 0) === 209) {
      this.$name = "Stinger";
      this.width = 16;
      this.height = 18;
      this.maxStack = 99;
      this.value = 200;
    } else if ((this.type | 0) === 210) {
      this.$name = "Vine";
      this.width = 14;
      this.height = 20;
      this.maxStack = 99;
      this.value = 1000;
    } else if ((this.type | 0) === 211) {
      this.$name = "Feral Claws";
      this.width = 20;
      this.height = 20;
      this.accessory = true;
      this.rare = 3;
      this.toolTip = "10 % increased melee speed";
      this.value = 50000;
    } else if ((this.type | 0) === 212) {
      this.$name = "Anklet of the Wind";
      this.width = 20;
      this.height = 20;
      this.accessory = true;
      this.rare = 3;
      this.toolTip = "10% increased movement speed";
      this.value = 50000;
    }
    if ((this.type | 0) === 213) {
      this.$name = "Staff of Regrowth";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 20;
      this.useTime = 13;
      this.autoReuse = true;
      this.width = 24;
      this.height = 28;
      this.damage = 20;
      this.createTile = 2;
      this.scale = 1.2;
      this.useSound = 1;
      this.knockBack = 3;
      this.rare = 3;
      this.value = 2000;
      this.toolTip = "Creates grass on dirt";
      return;
    }
    if ((this.type | 0) === 214) {
      this.$name = "Hellstone Brick";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 250;
      this.consumable = true;
      this.createTile = 76;
      this.width = 12;
      this.height = 12;
      return;
    }
    if ((this.type | 0) === 215) {
      this.$name = "Whoopie Cushion";
      this.width = 18;
      this.height = 18;
      this.useTurn = true;
      this.useTime = 30;
      this.useAnimation = 30;
      this.noUseGraphic = true;
      this.useStyle = 10;
      this.useSound = 16;
      this.rare = 2;
      this.toolTip = "May annoy others";
      this.value = 100;
      return;
    }
    if ((this.type | 0) === 216) {
      this.$name = "Shackle";
      this.width = 20;
      this.height = 20;
      this.rare = 1;
      this.value = 1500;
      this.accessory = true;
      this.defense = 1;
      return;
    }
    if ((this.type | 0) === 217) {
      this.$name = "Molten Hamaxe";
      this.useTurn = true;
      this.autoReuse = true;
      this.useStyle = 1;
      this.useAnimation = 27;
      this.useTime = 14;
      this.hammer = 70;
      this.axe = 30;
      this.width = 24;
      this.height = 28;
      this.damage = 20;
      this.knockBack = 7;
      this.scale = 1.4;
      this.useSound = 1;
      this.rare = 3;
      this.value = 15000;
      return;
    }
    if ((this.type | 0) === 218) {
      this.mana = 20;
      this.channel = true;
      this.damage = 35;
      this.useStyle = 1;
      this.$name = "Flamelash";
      this.shootSpeed = 6;
      this.shoot = 34;
      this.width = 26;
      this.height = 28;
      this.useSound = 8;
      this.useAnimation = 20;
      this.useTime = 20;
      this.rare = 3;
      this.noMelee = true;
      this.knockBack = 5;
      this.toolTip = "Summons a controllable ball of fire";
      this.value = 10000;
      return;
    }
    if ((this.type | 0) === 219) {
      this.autoReuse = false;
      this.useStyle = 5;
      this.useAnimation = 10;
      this.useTime = 10;
      this.$name = "Phoenix Blaster";
      this.width = 24;
      this.height = 28;
      this.shoot = 14;
      this.knockBack = 4;
      this.useAmmo = 14;
      this.useSound = 11;
      this.damage = 28;
      this.shootSpeed = 13;
      this.noMelee = true;
      this.value = 50000;
      this.scale = 0.9;
      this.rare = 3;
      return;
    }
    if ((this.type | 0) === 220) {
      this.$name = "Sunfury";
      this.useStyle = 5;
      this.useAnimation = 30;
      this.useTime = 30;
      this.knockBack = 7;
      this.width = 30;
      this.height = 10;
      this.damage = 40;
      this.scale = 1.1;
      this.noUseGraphic = true;
      this.shoot = 35;
      this.shootSpeed = 12;
      this.useSound = 1;
      this.rare = 3;
      this.value = 27000;
      return;
    }
    if ((this.type | 0) === 221) {
      this.$name = "Hellforge";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 77;
      this.width = 26;
      this.height = 24;
      this.value = 3000;
      return;
    }
    if ((this.type | 0) === 222) {
      this.$name = "Clay Pot";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.autoReuse = true;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 78;
      this.width = 28;
      this.height = 28;
      this.value = 100;
      return;
    }
    if ((this.type | 0) === 223) {
      this.$name = "Nature's Gift";
      this.width = 20;
      this.height = 22;
      this.rare = 3;
      this.value = 27000;
      this.accessory = true;
      this.toolTip = "Spawn with max life and mana after death";
      return;
    }
    if ((this.type | 0) === 224) {
      this.$name = "Bed";
      this.useStyle = 1;
      this.useTurn = true;
      this.useAnimation = 15;
      this.useTime = 10;
      this.maxStack = 99;
      this.consumable = true;
      this.createTile = 79;
      this.width = 28;
      this.height = 20;
      this.value = 2000;
      return;
    }
    if ((this.type | 0) === 225) {
      this.$name = "Silk";
      this.maxStack = 99;
      this.width = 22;
      this.height = 22;
      this.value = 1000;
      return;
    }
    if ((this.type | 0) === 226) {
      this.$name = "Lesser Restoration Potion";
      this.useSound = 3;
      this.healMana = 100;
      this.healLife = 100;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 20;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.potion = true;
      this.value = 2000;
      return;
    }
    if ((this.type | 0) === 227) {
      this.$name = "Restoration Potion";
      this.useSound = 3;
      this.healMana = 200;
      this.healLife = 200;
      this.useStyle = 2;
      this.useTurn = true;
      this.useAnimation = 17;
      this.useTime = 17;
      this.maxStack = 20;
      this.consumable = true;
      this.width = 14;
      this.height = 24;
      this.potion = true;
      this.value = 4000;
      return;
    }
    if ((this.type | 0) === 228) {
      this.$name = "Cobalt Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 6;
      this.headSlot = 8;
      this.rare = 3;
      this.value = 45000;
      this.toolTip = "Slowly regenerates mana";
      this.manaRegen = 4;
      return;
    }
    if ((this.type | 0) === 229) {
      this.$name = "Cobalt Breastplate";
      this.width = 26;
      this.height = 28;
      this.defense = 7;
      this.bodySlot = 8;
      this.rare = 3;
      this.value = 30000;
      this.toolTip = "Slowly regenerates mana";
      this.manaRegen = 4;
      return;
    }
    if ((this.type | 0) === 230) {
      this.$name = "Cobalt Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 6;
      this.legSlot = 8;
      this.rare = 3;
      this.value = 30000;
      this.toolTip = "Slowly regenerates mana";
      this.manaRegen = 3;
      return;
    }
    if ((this.type | 0) === 231) {
      this.$name = "Molten Helmet";
      this.width = 22;
      this.height = 22;
      this.defense = 9;
      this.headSlot = 9;
      this.rare = 3;
      this.value = 45000;
      return;
    }
    if ((this.type | 0) === 232) {
      this.$name = "Molten Breastplate";
      this.width = 26;
      this.height = 28;
      this.defense = 10;
      this.bodySlot = 9;
      this.rare = 3;
      this.value = 30000;
      return;
    }
    if ((this.type | 0) === 233) {
      this.$name = "Molten Greaves";
      this.width = 18;
      this.height = 28;
      this.defense = 9;
      this.legSlot = 9;
      this.rare = 3;
      this.value = 30000;
      return;
    }
    if ((this.type | 0) === 234) {
      this.$name = "Meteor Shot";
      this.shootSpeed = 3;
      this.shoot = 36;
      this.damage = 9;
      this.width = 8;
      this.height = 8;
      this.maxStack = 250;
      this.consumable = true;
      this.ammo = 14;
      this.knockBack = 1;
      this.value = 8;
      this.rare = 1;
    }
  }; 

  function Item_UpdateItem (i) {
    var $hoisted00 = new ($T0D())(), $hoisted01 = new ($T0D())();
    if (this.active) {
      if (($T03().netMode | 0) === 0) {
        this.owner = ($T03().myPlayer | 0);
      }
      var num = 0.1;
      var num2 = 7;
      if (this.wet) {
        num2 = 5;
        num = 0.08;
      }
      var value = $S02().CallStatic($T0D(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.5).MemberwiseClone();
      if ((this.ownTime | 0) > 0) {
        this.ownTime = (((this.ownTime | 0) - 1) | 0);
      } else {
        this.ownIgnore = -1;
      }
      if ((this.keepTime | 0) > 0) {
        this.keepTime = (((this.keepTime | 0) - 1) | 0);
      }
      if (!this.beingGrabbed) {
        this.velocity.Y = +this.velocity.Y + num;
        if (+this.velocity.Y > num2) {
          this.velocity.Y = num2;
        }
        this.velocity.X = +this.velocity.X * 0.95;
        if (!((this.velocity.X >= 0.1) || (this.velocity.X <= -0.1))) {
          this.velocity.X = 0;
        }
        var flag = $T0B().LavaCollision(this.position, this.width, this.height);
        if (flag) {
          this.lavaWet = true;
        }
        var flag2 = $T0B().WetCollision(this.position, this.width, this.height);
        if (flag2) {
          if (!this.wet) {
            if ((this.wetCount | 0) === 0) {
              this.wetCount = 20;
              if (!flag) {

                for (var j = 0; j < 10; j = ((j + 1) | 0)) {
                  var num3 = ($T0F().NewDust(
                    ($hoisted00._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted00), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    33, 
                    0, 
                    0, 
                    0, 
                    new ($T07())(), 
                    1
                  ) | 0);
                  var expr_1EC_cp_0 = $T03().dust[num3];
                  expr_1EC_cp_0.velocity.Y = +expr_1EC_cp_0.velocity.Y - 4;
                  var expr_20A_cp_0 = $T03().dust[num3];
                  expr_20A_cp_0.velocity.X = +expr_20A_cp_0.velocity.X * 2.5;
                  $T03().dust[num3].scale = 1.3;
                  $T03().dust[num3].alpha = 100;
                  $T03().dust[num3].noGravity = true;
                }
                $T03().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              } else {

                for (var k = 0; k < 5; k = ((k + 1) | 0)) {
                  var num4 = ($T0F().NewDust(
                    ($hoisted01._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted01), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    35, 
                    0, 
                    0, 
                    0, 
                    new ($T07())(), 
                    1
                  ) | 0);
                  var expr_2F2_cp_0 = $T03().dust[num4];
                  expr_2F2_cp_0.velocity.Y = +expr_2F2_cp_0.velocity.Y - 1.5;
                  var expr_310_cp_0 = $T03().dust[num4];
                  expr_310_cp_0.velocity.X = +expr_310_cp_0.velocity.X * 2.5;
                  $T03().dust[num4].scale = 1.3;
                  $T03().dust[num4].alpha = 100;
                  $T03().dust[num4].noGravity = true;
                }
                $T03().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              }
            }
            this.wet = true;
          }
        } else if (this.wet) {
          this.wet = false;
        }
        if (!this.wet) {
          this.lavaWet = false;
        }
        if ((this.wetCount | 0) > 0) {
          this.wetCount = ((((this.wetCount | 0) - 1) | 0) & 0xFF);
        }
        if (this.wet) {
          if (this.wet) {
            var vector = this.velocity.MemberwiseClone();
            this.velocity = $T0B().TileCollision(
              this.position.MemberwiseClone(), 
              this.velocity.MemberwiseClone(), 
              this.width, 
              this.height, 
              false, 
              false
            ).MemberwiseClone();
            if (+this.velocity.X !== +vector.X) {
              value.X = +this.velocity.X;
            }
            if (+this.velocity.Y !== +vector.Y) {
              value.Y = +this.velocity.Y;
            }
          }
        } else {
          this.velocity = $T0B().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            false, 
            false
          ).MemberwiseClone();
        }
        if (!(((this.owner | 0) !== ($T03().myPlayer | 0)) || !this.lavaWet)) {
          this.active = false;
          this.type = 0;
          this.$name = "";
          this.stack = 0;
          if (($T03().netMode | 0) !== 0) {
            $T06().SendData(
              21, 
              -1, 
              -1, 
              "", 
              i, 
              0, 
              0, 
              0
            );
          }
        }
        if (!(((this.type | 0) !== 75) || !$T03().dayTime)) {

          for (var l = 0; l < 10; l = ((l + 1) | 0)) {
            $T0F().NewDust(
              this.position, 
              this.width, 
              this.height, 
              15, 
              this.velocity.X, 
              this.velocity.Y, 
              150, 
              new ($T07())(), 
              1.2
            );
          }

          for (var m = 0; m < 3; m = ((m + 1) | 0)) {
            $T10().NewGore(this.position.MemberwiseClone(), $S03().Construct(this.velocity.X, this.velocity.Y), $T03().rand.Next(16, 18));
          }
          this.active = false;
          this.type = 0;
          this.stack = 0;
          if (($T03().netMode | 0) === 2) {
            $T06().SendData(
              21, 
              -1, 
              -1, 
              "", 
              i, 
              0, 
              0, 
              0
            );
          }
        }
      } else {
        this.beingGrabbed = false;
      }
      if (!(((this.type | 0) !== 8) && 
          ((this.type | 0) !== 41) && 
          ((this.type | 0) !== 75) && 
          ((this.type | 0) !== 105) && ((this.type | 0) !== 116))) {
        if (!this.wet) {
          $T11().addLight(((+((+this.position.X - 7) / 16)) | 0), ((+((+this.position.Y - 7) / 16)) | 0), 1);
        }
      } else if ((this.type | 0) === 183) {
        $T11().addLight(((+((+this.position.X - 7) / 16)) | 0), ((+((+this.position.Y - 7) / 16)) | 0), 0.5);
      }
      if ((this.type | 0) === 75) {
        if (($T03().rand.Next(25) | 0) === 0) {
          $T0F().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            +this.velocity.X * 0.5, 
            +this.velocity.Y * 0.5, 
            150, 
            new ($T07())(), 
            1.2
          );
        }
        if (($T03().rand.Next(50) | 0) === 0) {
          $T10().NewGore(this.position.MemberwiseClone(), $S03().Construct((+this.velocity.X * 0.2), (+this.velocity.Y * 0.2)), $T03().rand.Next(16, 18));
        }
      }
      if ((this.spawnTime | 0) < 2147483646) {
        this.spawnTime = (((this.spawnTime | 0) + 1) | 0);
      }
      if (!((($T03().netMode | 0) !== 2) || ((this.owner | 0) === ($T03().myPlayer | 0)))) {
        this.release = (((this.release | 0) + 1) | 0);
        if ((this.release | 0) >= 300) {
          this.release = 0;
          $T06().SendData(
            39, 
            this.owner, 
            -1, 
            "", 
            i, 
            0, 
            0, 
            0
          );
        }
      }
      if (this.wet) {
        this.position = $T0D().op_Addition(this.position.MemberwiseClone(), value.MemberwiseClone()).MemberwiseClone();
      } else {
        this.position = $T0D().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
      }
      if ((this.noGrabDelay | 0) > 0) {
        this.noGrabDelay = (((this.noGrabDelay | 0) - 1) | 0);
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Item", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Item__ctor
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object), 
      Item_Clone
    );

    $.Method({Static:false, Public:true }, "FindOwner", 
      JSIL.MethodSignature.Action($.Int32), 
      Item_FindOwner
    );

    $.Method({Static:false, Public:true }, "GetAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Item_GetAlpha
    );

    $.Method({Static:false, Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Item_GetColor
    );

    $.Method({Static:false, Public:true }, "IsNotTheSameAs", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Item_IsNotTheSameAs
    );

    $.Method({Static:false, Public:true }, "IsTheSameAs", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Item_IsTheSameAs
    );

    $.Method({Static:true , Public:true }, "NewItem", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      Item_NewItem
    );

    $.Method({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Action($.String), 
      Item_SetDefaults$00
    );

    $.Method({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Action($.Int32), 
      Item_SetDefaults$01
    );

    $.Method({Static:false, Public:true }, "UpdateItem", 
      JSIL.MethodSignature.Action($.Int32), 
      Item_UpdateItem
    );

    $.Field({Static:true , Public:true }, "potionDelay", $.Int32, 720);

    $.Field({Static:false, Public:true }, "wet", $.Boolean);

    $.Field({Static:false, Public:true }, "wetCount", $.Byte);

    $.Field({Static:false, Public:true }, "lavaWet", $.Boolean);

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "width", $.Int32);

    $.Field({Static:false, Public:true }, "height", $.Int32);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "noGrabDelay", $.Int32);

    $.Field({Static:false, Public:true }, "beingGrabbed", $.Boolean);

    $.Field({Static:false, Public:true }, "spawnTime", $.Int32);

    $.Field({Static:false, Public:true }, "wornArmor", $.Boolean);

    $.Field({Static:false, Public:true }, "ownIgnore", $.Int32);

    $.Field({Static:false, Public:true }, "ownTime", $.Int32);

    $.Field({Static:false, Public:true }, "keepTime", $.Int32);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "$name", $.String);

    $.Field({Static:false, Public:true }, "holdStyle", $.Int32);

    $.Field({Static:false, Public:true }, "useStyle", $.Int32);

    $.Field({Static:false, Public:true }, "channel", $.Boolean);

    $.Field({Static:false, Public:true }, "accessory", $.Boolean);

    $.Field({Static:false, Public:true }, "useAnimation", $.Int32);

    $.Field({Static:false, Public:true }, "useTime", $.Int32);

    $.Field({Static:false, Public:true }, "stack", $.Int32);

    $.Field({Static:false, Public:true }, "maxStack", $.Int32);

    $.Field({Static:false, Public:true }, "pick", $.Int32);

    $.Field({Static:false, Public:true }, "axe", $.Int32);

    $.Field({Static:false, Public:true }, "hammer", $.Int32);

    $.Field({Static:false, Public:true }, "tileBoost", $.Int32);

    $.Field({Static:false, Public:true }, "createTile", $.Int32);

    $.Field({Static:false, Public:true }, "createWall", $.Int32);

    $.Field({Static:false, Public:true }, "damage", $.Int32);

    $.Field({Static:false, Public:true }, "knockBack", $.Single);

    $.Field({Static:false, Public:true }, "healLife", $.Int32);

    $.Field({Static:false, Public:true }, "healMana", $.Int32);

    $.Field({Static:false, Public:true }, "potion", $.Boolean);

    $.Field({Static:false, Public:true }, "consumable", $.Boolean);

    $.Field({Static:false, Public:true }, "autoReuse", $.Boolean);

    $.Field({Static:false, Public:true }, "useTurn", $.Boolean);

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "alpha", $.Int32);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "useSound", $.Int32);

    $.Field({Static:false, Public:true }, "defense", $.Int32);

    $.Field({Static:false, Public:true }, "headSlot", $.Int32);

    $.Field({Static:false, Public:true }, "bodySlot", $.Int32);

    $.Field({Static:false, Public:true }, "legSlot", $.Int32);

    $.Field({Static:false, Public:true }, "toolTip", $.String);

    $.Field({Static:false, Public:true }, "owner", $.Int32);

    $.Field({Static:false, Public:true }, "rare", $.Int32);

    $.Field({Static:false, Public:true }, "shoot", $.Int32);

    $.Field({Static:false, Public:true }, "shootSpeed", $.Single);

    $.Field({Static:false, Public:true }, "ammo", $.Int32);

    $.Field({Static:false, Public:true }, "useAmmo", $.Int32);

    $.Field({Static:false, Public:true }, "lifeRegen", $.Int32);

    $.Field({Static:false, Public:true }, "manaRegen", $.Int32);

    $.Field({Static:false, Public:true }, "mana", $.Int32);

    $.Field({Static:false, Public:true }, "noUseGraphic", $.Boolean);

    $.Field({Static:false, Public:true }, "noMelee", $.Boolean);

    $.Field({Static:false, Public:true }, "release", $.Int32);

    $.Field({Static:false, Public:true }, "value", $.Int32);

    $.Field({Static:false, Public:true }, "buy", $.Boolean);


    function Item__cctor () {
      $thisType.potionDelay = 720;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Item__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Chest */ 

(function Chest$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };


  function Chest__ctor () {
    this.item = JSIL.Array.New($T00(), $thisType.maxItems);
  }; 

  function Chest_CreateChest (X, Y) {

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(($T02().chest[i] === null) || 
          (($T02().chest[i].x | 0) !== (X | 0)) || (($T02().chest[i].y | 0) !== (Y | 0)))) {
        return -1;
      }
    }

    for (var j = 0; j < 1000; j = ((j + 1) | 0)) {
      if ($T02().chest[j] === null) {
        $T02().chest[j] = new $thisType();
        $T02().chest[j].x = (X | 0);
        $T02().chest[j].y = (Y | 0);

        for (var k = 0; k < ($thisType.maxItems | 0); k = ((k + 1) | 0)) {
          $T02().chest[j].item[k] = new ($T00())();
        }
        return j;
      }
    }
    return -1;
  }; 

  function Chest_DestroyChest (X, Y) {

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(($T02().chest[i] === null) || 
          (($T02().chest[i].x | 0) !== (X | 0)) || (($T02().chest[i].y | 0) !== (Y | 0)))) {

        for (var j = 0; j < ($thisType.maxItems | 0); j = ((j + 1) | 0)) {
          if (!((($T02().chest[i].item[j].type | 0) <= 0) || (($T02().chest[i].item[j].stack | 0) <= 0))) {
            return false;
          }
        }
        $T02().chest[i] = null;
        return true;
      }
    }
    return true;
  }; 

  function Chest_FindChest (X, Y) {

    for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
      if (!(($T02().chest[i] === null) || 
          (($T02().chest[i].x | 0) !== (X | 0)) || (($T02().chest[i].y | 0) !== (Y | 0)))) {
        return i;
      }
    }
    return -1;
  }; 

  function Chest_SetupShop (type) {

    for (var i = 0; i < ($thisType.maxItems | 0); i = ((i + 1) | 0)) {
      this.item[i] = new ($T00())();
    }
    if ((type | 0) === 1) {
      var num = 0;
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Mining Helmet");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Piggy Bank");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Iron Anvil");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Copper Pickaxe");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Copper Axe");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Torch");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Lesser Healing Potion");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Wooden Arrow");
      num = ((num + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num], "Shuriken");
      num = ((num + 1) | 0);
      return;
    }
    if ((type | 0) === 2) {
      var num2 = 0;
      $S00().CallVirtual("SetDefaults", null, this.item[num2], "Musket Ball");
      num2 = ((num2 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num2], "Flintlock Pistol");
      num2 = ((num2 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num2], "Minishark");
      num2 = ((num2 + 1) | 0);
      return;
    }
    if ((type | 0) === 3) {
      var num3 = 0;
      $S00().CallVirtual("SetDefaults", null, this.item[num3], "Purification Powder");
      num3 = ((num3 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num3], "Acorn");
      num3 = ((num3 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num3], "Grass Seeds");
      num3 = ((num3 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num3], "Sunflower");
      num3 = ((num3 + 1) | 0);
      $S01().CallVirtual("SetDefaults", null, this.item[num3], 114);
      num3 = ((num3 + 1) | 0);
      return;
    }
    if ((type | 0) === 4) {
      var num4 = 0;
      $S00().CallVirtual("SetDefaults", null, this.item[num4], "Grenade");
      num4 = ((num4 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num4], "Bomb");
      num4 = ((num4 + 1) | 0);
      $S00().CallVirtual("SetDefaults", null, this.item[num4], "Dynamite");
      num4 = ((num4 + 1) | 0);
    }
  }; 

  function Chest_UsingChest (i) {
    if ($T02().chest[i] !== null) {

      for (var j = 0; j < 8; j = ((j + 1) | 0)) {
        if (($T02().player[j].chest | 0) === (i | 0)) {
          return j;
        }
      }
    }
    return -1;
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Chest", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Chest__ctor
    );

    $.Method({Static:true , Public:true }, "CreateChest", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32]), 
      Chest_CreateChest
    );

    $.Method({Static:true , Public:true }, "DestroyChest", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      Chest_DestroyChest
    );

    $.Method({Static:true , Public:true }, "FindChest", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32]), 
      Chest_FindChest
    );

    $.Method({Static:false, Public:true }, "SetupShop", 
      JSIL.MethodSignature.Action($.Int32), 
      Chest_SetupShop
    );

    $.Method({Static:true , Public:true }, "UsingChest", 
      new JSIL.MethodSignature($.Int32, [$.Int32]), 
      Chest_UsingChest
    );

    $.Field({Static:true , Public:true }, "maxItems", $.Int32, 20);

    $.Field({Static:false, Public:true }, "item", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]));

    $.Field({Static:false, Public:true }, "x", $.Int32);

    $.Field({Static:false, Public:true }, "y", $.Int32);


    function Chest__cctor () {
      $thisType.maxItems = 20;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Chest__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Collision */ 

(function Collision$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };


  function Collision__ctor () {
  }; 

  function Collision_AnyCollision (Position, Velocity, Width, Height) {
    var vector4 = new ($T00())();
    var result = Velocity.MemberwiseClone();
    var vector = Velocity;
    var vector2 = $T00().op_Addition(Position.MemberwiseClone(), Velocity.MemberwiseClone());
    var vector3 = Position;
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    var num5 = -1;
    var num6 = -1;
    var num7 = -1;
    var num8 = -1;
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || !$T02().tile.Get(i, j).active)) {
          vector4.X = +(i * 16);
          vector4.Y = +(j * 16);
          if (!(((+vector2.X + +Width) <= +vector4.X) || 
              (+vector2.X >= (+vector4.X + 16)) || 
              ((+vector2.Y + +Height) <= +vector4.Y) || (+vector2.Y >= (+vector4.Y + 16)))) {
            if ((+vector3.Y + +Height) <= +vector4.Y) {
              num7 = i;
              num8 = j;
              if (num7 !== num5) {
                result.Y = +vector4.Y - (+vector3.Y + +Height);
              }
            } else if (!(((+vector3.X + +Width) > +vector4.X) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num5 = i;
              num6 = j;
              if (num6 !== num8) {
                result.X = +vector4.X - (+vector3.X + +Width);
              }
              if (num7 === num5) {
                result.Y = +vector.Y;
              }
            } else if (!((+vector3.X < (+vector4.X + 16)) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num5 = i;
              num6 = j;
              if (num6 !== num8) {
                result.X = (+vector4.X + 16) - +vector3.X;
              }
              if (num7 === num5) {
                result.Y = +vector.Y;
              }
            } else if (!((+vector3.Y < (+vector4.Y + 16)) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num7 = i;
              num8 = j;
              result.Y = ((+vector4.Y + 16) - +vector3.Y) + 0.01;
              if (num8 === num6) {
                result.X = +vector.X + 0.01;
              }
            }
          }
        }
      }
    }
    return result;
  }; 

  function Collision_CanHit (Position1, Width1, Height1, Position2, Width2, Height2) {
    var num = ((+((+Position1.X + +(((Width1 | 0) / 2 | 0))) / 16)) | 0);
    var num2 = ((+((+Position1.Y + +(((Height1 | 0) / 2 | 0))) / 16)) | 0);
    var num3 = ((+((+Position2.X + +(((Width2 | 0) / 2 | 0))) / 16)) | 0);
    var num4 = ((+((+Position2.Y + +(((Height2 | 0) / 2 | 0))) / 16)) | 0);

  $loop0: 
    while (true) {
      var num5 = (Math.abs(((num - num3) | 0)));
      var num6 = (Math.abs(((num2 - num4) | 0)));
      if (!((num !== num3) || (num2 !== num4))) {
        break $loop0;
      }
      if (num5 > num6) {
        if (num < num3) {
          num = ((num + 1) | 0);
        } else {
          num = ((num - 1) | 0);
        }
        if ($T02().tile.Get(num, ((num2 - 1) | 0)) === null) {
          $T02().tile.Set(num, ((num2 - 1) | 0), new ($T04())());
        }
        if ($T02().tile.Get(num, ((num2 + 1) | 0)) === null) {
          $T02().tile.Set(num, ((num2 + 1) | 0), new ($T04())());
        }
        if (!(!$T02().tile.Get(num, ((num2 - 1) | 0)).active || 
            !$T02().tileSolid[$T02().tile.Get(num, ((num2 - 1) | 0)).type] || 
            $T02().tileSolidTop[$T02().tile.Get(num, ((num2 - 1) | 0)).type] || 
            !$T02().tile.Get(num, ((num2 + 1) | 0)).active || 
            !$T02().tileSolid[$T02().tile.Get(num, ((num2 + 1) | 0)).type] || $T02().tileSolidTop[$T02().tile.Get(num, ((num2 + 1) | 0)).type])) {
          return false;
        }
      } else {
        if (num2 < num4) {
          num2 = ((num2 + 1) | 0);
        } else {
          num2 = ((num2 - 1) | 0);
        }
        if ($T02().tile.Get(((num - 1) | 0), num2) === null) {
          $T02().tile.Set(((num - 1) | 0), num2, new ($T04())());
        }
        if ($T02().tile.Get(((num + 1) | 0), num2) === null) {
          $T02().tile.Set(((num + 1) | 0), num2, new ($T04())());
        }
        if (!(!$T02().tile.Get(((num - 1) | 0), num2).active || 
            !$T02().tileSolid[$T02().tile.Get(((num - 1) | 0), num2).type] || 
            $T02().tileSolidTop[$T02().tile.Get(((num - 1) | 0), num2).type] || 
            !$T02().tile.Get(((num + 1) | 0), num2).active || 
            !$T02().tileSolid[$T02().tile.Get(((num + 1) | 0), num2).type] || $T02().tileSolidTop[$T02().tile.Get(((num + 1) | 0), num2).type])) {
          return false;
        }
      }
      if ($T02().tile.Get(num, num2) === null) {
        $T02().tile.Set(num, num2, new ($T04())());
      }
      if (!(!$T02().tile.Get(num, num2).active || 
          !$T02().tileSolid[$T02().tile.Get(num, num2).type] || $T02().tileSolidTop[$T02().tile.Get(num, num2).type])) {
        return false;
      }
    }
    return true;
  }; 

  function Collision_DrownCollision (Position, Width, Height) {
    var vector2 = new ($T00())();
    var vector = $S00().Construct((+Position.X + +(((Width | 0) / 2 | 0))), (+Position.Y + +(((Height | 0) / 2 | 0))));
    var num = 10;
    var num2 = 12;
    if (num > (Width | 0)) {
      num = (Width | 0);
    }
    if (num2 > (Height | 0)) {
      num2 = (Height | 0);
    }
    (vector = vector.MemberwiseClone(), 
      $T00().prototype._ctor.call(vector, +vector.X - +((num / 2 | 0)), +Position.Y + 2));
    var num3 = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num5 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num6 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesX | 0)) {
      num4 = ($T02().maxTilesX | 0);
    }
    if (num5 < 0) {
      num5 = 0;
    }
    if (num6 > ($T02().maxTilesY | 0)) {
      num6 = ($T02().maxTilesY | 0);
    }

    for (var i = num3; i < num4; i = ((i + 1) | 0)) {

      for (var j = num5; j < num6; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || (($T02().tile.Get(i, j).liquid | 0) <= 0))) {
          vector2.X = +(i * 16);
          vector2.Y = +(j * 16);
          var num7 = 16;
          var num8 = +(256 - ($T02().tile.Get(i, j).liquid | 0));
          num8 = +((num8 / 32));
          vector2.Y = +vector2.Y + (num8 * 2);
          num7 = ((num7 - ((num8 * 2) | 0)) | 0);
          if (!(((+vector.X + +num) <= +vector2.X) || 
              (+vector.X >= (+vector2.X + 16)) || 
              ((+vector.Y + +num2) <= +vector2.Y) || (+vector.Y >= (+vector2.Y + +num7)))) {
            return true;
          }
        }
      }
    }
    return false;
  }; 

  function Collision_EmptyTile (i, j, ignoreTiles) {
    var rectangle = new ($T08())(Math.imul(i, 16), Math.imul(j, 16), 16, 16);
    if (!(!$T02().tile.Get(i, j).active || ignoreTiles)) {
      return false;
    }

    for (var k = 0; k < 8; k = ((k + 1) | 0)) {
      if (!(!$T02().player[k].active || !rectangle.Intersects(new ($T08())((($T02().player[k].position.X) | 0), (($T02().player[k].position.Y) | 0), $T02().player[k].width, $T02().player[k].height)))) {
        return false;
      }
    }

    for (var l = 0; l < 200; l = ((l + 1) | 0)) {
      if (!(!$T02().item[l].active || !rectangle.Intersects(new ($T08())((($T02().item[l].position.X) | 0), (($T02().item[l].position.Y) | 0), $T02().item[l].width, $T02().item[l].height)))) {
        return false;
      }
    }

    for (var m = 0; m < 1000; m = ((m + 1) | 0)) {
      if (!(!$T02().npc[m].active || !rectangle.Intersects(new ($T08())((($T02().npc[m].position.X) | 0), (($T02().npc[m].position.Y) | 0), $T02().npc[m].width, $T02().npc[m].height)))) {
        return false;
      }
    }
    return true;
  }; 

  function Collision_HitTiles (Position, Velocity, Width, Height) {
    var vector2 = new ($T00())();
    var vector = $T00().op_Addition(Position.MemberwiseClone(), Velocity.MemberwiseClone());
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || 
            !$T02().tile.Get(i, j).active || (!$T02().tileSolid[$T02().tile.Get(i, j).type] && 
              (!$T02().tileSolidTop[$T02().tile.Get(i, j).type] || 
                (($T02().tile.Get(i, j).frameY | 0) !== 0))))) {
          vector2.X = +(i * 16);
          vector2.Y = +(j * 16);
          if (!(((+vector.X + +Width) < +vector2.X) || 
              (+vector.X > (+vector2.X + 16)) || 
              ((+vector.Y + +Height) < +vector2.Y) || (+vector.Y > (+vector2.Y + 16)))) {
            $T0A().KillTile(
              i, 
              j, 
              true, 
              true, 
              false
            );
          }
        }
      }
    }
  }; 

  function Collision_HurtTiles (Position, Velocity, Width, Height, fireImmune) {
    var vector2 = new ($T00())();
    var vector = Position;
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || 
            !$T02().tile.Get(i, j).active || ((($T02().tile.Get(i, j).type | 0) !== 32) && 
              (($T02().tile.Get(i, j).type | 0) !== 37) && 
              (($T02().tile.Get(i, j).type | 0) !== 48) && 
              (($T02().tile.Get(i, j).type | 0) !== 53) && 
              (($T02().tile.Get(i, j).type | 0) !== 58) && 
              (($T02().tile.Get(i, j).type | 0) !== 69) && 
              (($T02().tile.Get(i, j).type | 0) !== 76)))) {
          vector2.X = +(i * 16);
          vector2.Y = +(j * 16);
          var num5 = 0;
          var type = ($T02().tile.Get(i, j).type | 0);
          if (!((type !== 32) && (type !== 69))) {
            if (!(((+vector.X + +Width) <= +vector2.X) || 
                (+vector.X >= (+vector2.X + 16)) || 
                ((+vector.Y + +Height) <= +vector2.Y) || (vector.Y >= (vector2.Y + 16.01)))) {
              var num6 = 1;
              if ((+vector.X + +(((Width | 0) / 2 | 0))) < (+vector2.X + 8)) {
                num6 = -1;
              }
              num5 = 10;
              if (type === 69) {
                num5 = 25;
              }
              return $S00().Construct(+num6, +num5);
            }
          } else if (type === 53) {
            if (!((((+vector.X + +Width) - 2) < +vector2.X) || 
                ((+vector.X + 2) > (+vector2.X + 16)) || 
                (((+vector.Y + +Height) - 2) < +vector2.Y) || ((+vector.Y + 2) > (+vector2.Y + 16)))) {
              var num7 = 1;
              if ((+vector.X + +(((Width | 0) / 2 | 0))) < (+vector2.X + 8)) {
                num7 = -1;
              }
              if (type === 53) {
                num5 = 20;
              }
              return $S00().Construct(+num7, +num5);
            }
          } else if (!(((+vector.X + +Width) < +vector2.X) || 
              (+vector.X > (+vector2.X + 16)) || 
              ((+vector.Y + +Height) < +vector2.Y) || (vector.Y > (vector2.Y + 16.01)))) {
            var num8 = 1;
            if ((+vector.X + +(((Width | 0) / 2 | 0))) < (+vector2.X + 8)) {
              num8 = -1;
            }
            if (!(fireImmune || ((type !== 37) && 
                  (type !== 58) && 
                  (type !== 76)))) {
              num5 = 20;
            }
            if (type === 48) {
              num5 = 40;
            }
            return $S00().Construct(+num8, +num5);
          }
        }
      }
    }
    return new ($T00())();
  }; 

  function Collision_LavaCollision (Position, Width, Height) {
    var vector = new ($T00())();
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || 
            (($T02().tile.Get(i, j).liquid | 0) <= 0) || !$T02().tile.Get(i, j).lava)) {
          vector.X = +(i * 16);
          vector.Y = +(j * 16);
          var num5 = 16;
          var num6 = +(256 - ($T02().tile.Get(i, j).liquid | 0));
          num6 = +((num6 / 32));
          vector.Y = +vector.Y + (num6 * 2);
          num5 = ((num5 - ((num6 * 2) | 0)) | 0);
          if (!(((+Position.X + +Width) <= +vector.X) || 
              (+Position.X >= (+vector.X + 16)) || 
              ((+Position.Y + +Height) <= +vector.Y) || (+Position.Y >= (+vector.Y + +num5)))) {
            return true;
          }
        }
      }
    }
    return false;
  }; 

  function Collision_SolidTiles (startX, endX, startY, endY) {
    if ((startX | 0) < 0) {
      return true;
    }
    if ((endX | 0) >= ($T02().maxTilesX | 0)) {
      return true;
    }
    if ((startY | 0) < 0) {
      return true;
    }
    if ((endY | 0) >= ($T02().maxTilesY | 0)) {
      return true;
    }

    for (var i = (startX | 0); i < (((endX | 0) + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = (startY | 0); j < (((endY | 0) + 1) | 0); j = ((j + 1) | 0)) {
        if ($T02().tile.Get(i, j) === null) {
          return false;
        }
        if (!(!$T02().tile.Get(i, j).active || 
            !$T02().tileSolid[$T02().tile.Get(i, j).type] || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
          return true;
        }
      }
    }
    return false;
  }; 

  function Collision_StickyTiles (Position, Velocity, Width, Height) {
    var $hoisted00 = new ($T00())();
    var vector2 = new ($T00())();
    var vector = Position;
    var result = false;
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || 
            !$T02().tile.Get(i, j).active || (($T02().tile.Get(i, j).type | 0) !== 51))) {
          vector2.X = +(i * 16);
          vector2.Y = +(j * 16);
          if (!(((+vector.X + +Width) <= +vector2.X) || 
              (+vector.X >= (+vector2.X + 16)) || 
              ((+vector.Y + +Height) <= +vector2.Y) || (vector.Y >= (vector2.Y + 16.01)))) {
            if (!(((Math.abs(Velocity.X)) + (Math.abs(Velocity.Y)) <= 0.7) || (($T02().rand.Next(30) | 0) !== 0))) {
              $T0C().NewDust(
                ($hoisted00._ctor(+(i * 16), +(j * 16)), 
                  $hoisted00), 
                16, 
                16, 
                30, 
                0, 
                0, 
                0, 
                new ($T0D())(), 
                1
              );
            }
            result = true;
          }
        }
      }
    }
    return result;
  }; 

  function Collision_TileCollision (Position, Velocity, Width, Height, fallThrough, fall2) {
    var vector4 = new ($T00())();
    var result = Velocity.MemberwiseClone();
    var vector = Velocity;
    var vector2 = $T00().op_Addition(Position.MemberwiseClone(), Velocity.MemberwiseClone());
    var vector3 = Position;
    var num = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num2 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num3 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    var num5 = -1;
    var num6 = -1;
    var num7 = -1;
    var num8 = -1;
    if (num < 0) {
      num = 0;
    }
    if (num2 > ($T02().maxTilesX | 0)) {
      num2 = ($T02().maxTilesX | 0);
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesY | 0)) {
      num4 = ($T02().maxTilesY | 0);
    }

    for (var i = num; i < num2; i = ((i + 1) | 0)) {

      for (var j = num3; j < num4; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || 
            !$T02().tile.Get(i, j).active || (!$T02().tileSolid[$T02().tile.Get(i, j).type] && 
              (!$T02().tileSolidTop[$T02().tile.Get(i, j).type] || 
                (($T02().tile.Get(i, j).frameY | 0) !== 0))))) {
          vector4.X = +(i * 16);
          vector4.Y = +(j * 16);
          if (!(((+vector2.X + +Width) <= +vector4.X) || 
              (+vector2.X >= (+vector4.X + 16)) || 
              ((+vector2.Y + +Height) <= +vector4.Y) || (+vector2.Y >= (+vector4.Y + 16)))) {
            if ((+vector3.Y + +Height) <= +vector4.Y) {
              if (!($T02().tileSolidTop[$T02().tile.Get(i, j).type] && 
                  fallThrough && ((+Velocity.Y <= 1) || 
                    fall2))) {
                num7 = i;
                num8 = j;
                if (num7 !== num5) {
                  result.Y = +vector4.Y - (+vector3.Y + +Height);
                }
              }
            } else if (!(((+vector3.X + +Width) > +vector4.X) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num5 = i;
              num6 = j;
              if (num6 !== num8) {
                result.X = +vector4.X - (+vector3.X + +Width);
              }
              if (num7 === num5) {
                result.Y = +vector.Y;
              }
            } else if (!((+vector3.X < (+vector4.X + 16)) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num5 = i;
              num6 = j;
              if (num6 !== num8) {
                result.X = (+vector4.X + 16) - +vector3.X;
              }
              if (num7 === num5) {
                result.Y = +vector.Y;
              }
            } else if (!((+vector3.Y < (+vector4.Y + 16)) || $T02().tileSolidTop[$T02().tile.Get(i, j).type])) {
              num7 = i;
              num8 = j;
              result.Y = ((+vector4.Y + 16) - +vector3.Y) + 0.01;
              if (num8 === num6) {
                result.X = +vector.X + 0.01;
              }
            }
          }
        }
      }
    }
    return result;
  }; 

  function Collision_WetCollision (Position, Width, Height) {
    var vector2 = new ($T00())();
    var vector = $S00().Construct((+Position.X + +(((Width | 0) / 2 | 0))), (+Position.Y + +(((Height | 0) / 2 | 0))));
    var num = 10;
    var num2 = (((Height | 0) / 2) | 0);
    if (num > (Width | 0)) {
      num = (Width | 0);
    }
    if (num2 > (Height | 0)) {
      num2 = (Height | 0);
    }
    (vector = vector.MemberwiseClone(), 
      $T00().prototype._ctor.call(vector, +vector.X - +((num / 2 | 0)), +vector.Y - +((num2 / 2 | 0))));
    var num3 = ((((+(+Position.X / 16)) | 0) - 1) | 0);
    var num4 = ((((+((+Position.X + +Width) / 16)) | 0) + 2) | 0);
    var num5 = ((((+(+Position.Y / 16)) | 0) - 1) | 0);
    var num6 = ((((+((+Position.Y + +Height) / 16)) | 0) + 2) | 0);
    if (num3 < 0) {
      num3 = 0;
    }
    if (num4 > ($T02().maxTilesX | 0)) {
      num4 = ($T02().maxTilesX | 0);
    }
    if (num5 < 0) {
      num5 = 0;
    }
    if (num6 > ($T02().maxTilesY | 0)) {
      num6 = ($T02().maxTilesY | 0);
    }

    for (var i = num3; i < num4; i = ((i + 1) | 0)) {

      for (var j = num5; j < num6; j = ((j + 1) | 0)) {
        if (!(($T02().tile.Get(i, j) === null) || (($T02().tile.Get(i, j).liquid | 0) <= 0))) {
          vector2.X = +(i * 16);
          vector2.Y = +(j * 16);
          var num7 = 16;
          var num8 = +(256 - ($T02().tile.Get(i, j).liquid | 0));
          num8 = +((num8 / 32));
          vector2.Y = +vector2.Y + (num8 * 2);
          num7 = ((num7 - ((num8 * 2) | 0)) | 0);
          if (!(((+vector.X + +num) <= +vector2.X) || 
              (+vector.X >= (+vector2.X + 16)) || 
              ((+vector.Y + +num2) <= +vector2.Y) || (+vector.Y >= (+vector2.Y + +num7)))) {
            return true;
          }
        }
      }
    }
    return false;
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Collision", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Collision__ctor
    );

    $.Method({Static:true , Public:true }, "AnyCollision", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32
        ]), 
      Collision_AnyCollision
    );

    $.Method({Static:true , Public:true }, "CanHit", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32, $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32
        ]), 
      Collision_CanHit
    );

    $.Method({Static:true , Public:true }, "DrownCollision", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32
        ]), 
      Collision_DrownCollision
    );

    $.Method({Static:true , Public:true }, "EmptyTile", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      Collision_EmptyTile
    );

    $.Method({Static:true , Public:true }, "HitTiles", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32
        ]), 
      Collision_HitTiles
    );

    $.Method({Static:true , Public:true }, "HurtTiles", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32, 
          $.Boolean
        ]), 
      Collision_HurtTiles
    );

    $.Method({Static:true , Public:true }, "LavaCollision", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32
        ]), 
      Collision_LavaCollision
    );

    $.Method({Static:true , Public:true }, "SolidTiles", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      Collision_SolidTiles
    );

    $.Method({Static:true , Public:true }, "StickyTiles", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32
        ]), 
      Collision_StickyTiles
    );

    $.Method({Static:true , Public:true }, "TileCollision", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Int32, $.Int32, 
          $.Boolean, $.Boolean
        ]), 
      Collision_TileCollision
    );

    $.Method({Static:true , Public:true }, "WetCollision", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32
        ]), 
      Collision_WetCollision
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.messageBuffer */ 

(function messageBuffer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.Terraria.Player)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.BitConverter)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize(System.Array.Of($asm06.System.Single))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.Terraria.Projectile)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.Terraria.Chest)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.Terraria.Sign)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Threading.Monitor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };


  function messageBuffer__ctor () {
    this.readBuffer = JSIL.Array.New($T00(), 65535);
    this.writeBuffer = JSIL.Array.New($T00(), 65535);
  }; 

  function messageBuffer_GetData (start, length) {
    var obj = null;
    if ((this.whoAmI | 0) < 9) {
      $T03().serverSock[this.whoAmI].timeOut = 0;
    } else {
      $T03().clientSock.timeOut = 0;
    }
    var num = (((start | 0) + 1) | 0);
    var b = (this.readBuffer[start] | 0);
    if (!((($T04().netMode | 0) !== 1) || (($T03().clientSock.statusMax | 0) <= 0))) {
      $T03().clientSock.statusCount = ((($T03().clientSock.statusCount | 0) + 1) | 0);
    }
    if ($T04().verboseNetplay) {

      for (var i = (start | 0); i < (((start | 0) + (length | 0)) | 0); i = ((i + 1) | 0)) {
      }

      for (var j = (start | 0); j < (((start | 0) + (length | 0)) | 0); j = ((j + 1) | 0)) {
        var arg_82_0 = (this.readBuffer[j] | 0);
      }
    }
    if (!((($T04().netMode | 0) !== 2) || 
        (b === 38) || (($T03().serverSock[this.whoAmI].state | 0) !== -1))) {
      $T05().SendData(
        2, 
        this.whoAmI, 
        -1, 
        "Incorrect password.", 
        0, 
        0, 
        0, 
        0
      );
      return;
    }
    var flag4 = new JSIL.BoxedVariable(false);
    if (!((b !== 1) || (($T04().netMode | 0) !== 2))) {
      if (($T03().serverSock[this.whoAmI].state | 0) === 0) {
        var string = $T08().get_ASCII().GetString(this.readBuffer, (((start | 0) + 1) | 0), (((length | 0) - 1) | 0));
        if (!(string == JSIL.ConcatString("Terraria", $T01().$Box($T04().curRelease)))) {
          $T05().SendData(
            2, 
            this.whoAmI, 
            -1, 
            "You are not using the same version as this server.", 
            0, 
            0, 
            0, 
            0
          );
          return;
        }
        if (!(($T03().password !== null) && !($T03().password == ""))) {
          $T03().serverSock[this.whoAmI].state = 1;
          $T05().SendData(
            3, 
            this.whoAmI, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
          return;
        }
        $T03().serverSock[this.whoAmI].state = -1;
        $T05().SendData(
          37, 
          this.whoAmI, 
          -1, 
          "", 
          0, 
          0, 
          0, 
          0
        );
        return;
      }
    } else {
      if (!((b !== 2) || (($T04().netMode | 0) !== 1))) {
        $T03().disconnect = true;
        $T04().statusText = $T08().get_ASCII().GetString(this.readBuffer, (((start | 0) + 1) | 0), (((length | 0) - 1) | 0));
        return;
      }
      if (!((b !== 3) || (($T04().netMode | 0) !== 1))) {
        if (($T03().clientSock.state | 0) === 1) {
          $T03().clientSock.state = 2;
        }
        var num2 = (this.readBuffer[(((start | 0) + 1) | 0)] | 0);
        if (num2 !== ($T04().myPlayer | 0)) {
          $T04().player[num2] = $T09().$Cast($T04().player[$T04().myPlayer].Clone());
          $T04().player[$T04().myPlayer] = new ($T09())();
          $T04().player[num2].whoAmi = num2;
          $T04().myPlayer = num2;
        }
        $T05().SendData(
          4, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].$name, 
          $T04().myPlayer, 
          0, 
          0, 
          0
        );
        $T05().SendData(
          16, 
          -1, 
          -1, 
          "", 
          $T04().myPlayer, 
          0, 
          0, 
          0
        );
        $T05().SendData(
          42, 
          -1, 
          -1, 
          "", 
          $T04().myPlayer, 
          0, 
          0, 
          0
        );

        for (var k = 0; k < 44; k = ((k + 1) | 0)) {
          $T05().SendData(
            5, 
            -1, 
            -1, 
            $T04().player[$T04().myPlayer].inventory[k].$name, 
            $T04().myPlayer, 
            +k, 
            0, 
            0
          );
        }
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[0].$name, 
          $T04().myPlayer, 
          44, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[1].$name, 
          $T04().myPlayer, 
          45, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[2].$name, 
          $T04().myPlayer, 
          46, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[3].$name, 
          $T04().myPlayer, 
          47, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[4].$name, 
          $T04().myPlayer, 
          48, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[5].$name, 
          $T04().myPlayer, 
          49, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[6].$name, 
          $T04().myPlayer, 
          50, 
          0, 
          0
        );
        $T05().SendData(
          5, 
          -1, 
          -1, 
          $T04().player[$T04().myPlayer].armor[7].$name, 
          $T04().myPlayer, 
          51, 
          0, 
          0
        );
        $T05().SendData(
          6, 
          -1, 
          -1, 
          "", 
          0, 
          0, 
          0, 
          0
        );
        if (($T03().clientSock.state | 0) === 2) {
          $T03().clientSock.state = 3;
          return;
        }
      } else if (b === 4) {
        var flag = false;
        var num3 = (this.readBuffer[(((start | 0) + 1) | 0)] | 0);
        var hair = (this.readBuffer[(((start | 0) + 2) | 0)] | 0);
        if (($T04().netMode | 0) === 2) {
          num3 = (this.whoAmI | 0);
        }
        $T04().player[num3].hair = hair;
        $T04().player[num3].whoAmi = num3;
        num = ((num + 2) | 0);
        ($T04().player[num3].hairColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].hairColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].hairColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].skinColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].skinColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].skinColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].eyeColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].eyeColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].eyeColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shirtColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shirtColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shirtColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].underShirtColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].underShirtColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].underShirtColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].pantsColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].pantsColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].pantsColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shoeColor).set_R(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shoeColor).set_G(this.readBuffer[num]);
        num = ((num + 1) | 0);
        ($T04().player[num3].shoeColor).set_B(this.readBuffer[num]);
        num = ((num + 1) | 0);
        var string2 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
        $T04().player[num3].$name = string2;
        if (($T04().netMode | 0) === 2) {
          if (($T03().serverSock[this.whoAmI].state | 0) < 10) {

            for (var l = 0; l < 8; l = ((l + 1) | 0)) {
              if (!((l === num3) || 
                  !(string2 == $T04().player[l].$name) || !$T03().serverSock[l].active)) {
                flag = true;
              }
            }
          }
          if (flag) {
            $T05().SendData(
              2, 
              this.whoAmI, 
              -1, 
              JSIL.ConcatString(string2, " is already on this server."), 
              0, 
              0, 
              0, 
              0
            );
            return;
          }
          $T03().serverSock[this.whoAmI].oldName = string2;
          $T03().serverSock[this.whoAmI].$name = string2;
          $T05().SendData(
            4, 
            -1, 
            this.whoAmI, 
            string2, 
            num3, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 5) {
        var num4 = (this.readBuffer[(((start | 0) + 1) | 0)] | 0);
        if (($T04().netMode | 0) === 2) {
          num4 = (this.whoAmI | 0);
        }
        var num5 = (this.readBuffer[(((start | 0) + 2) | 0)] | 0);
        var stack = (this.readBuffer[(((start | 0) + 3) | 0)] | 0);
        var string3 = $T08().get_ASCII().GetString(this.readBuffer, (((start | 0) + 4) | 0), (((length | 0) - 4) | 0));
        if (num5 < 44) {
          $T04().player[num4].inventory[num5] = new ($T0B())();
          $S00().CallVirtual("SetDefaults", null, $T04().player[num4].inventory[num5], string3);
          $T04().player[num4].inventory[num5].stack = stack;
        } else {
          $T04().player[num4].armor[((num5 - 44) | 0)] = new ($T0B())();
          $S00().CallVirtual("SetDefaults", null, $T04().player[num4].armor[((num5 - 44) | 0)], string3);
          $T04().player[num4].armor[((num5 - 44) | 0)].stack = stack;
        }
        if (!((($T04().netMode | 0) !== 2) || (num4 !== (this.whoAmI | 0)))) {
          if (!((num5 >= 44) || 
              !($T04().player[num4].inventory[num5].$name != "") || 
              (($T04().player[num4].inventory[num5].type | 0) <= 0) || 
              (($T04().player[num4].inventory[num5].maxStack | 0) <= 0) || (($T04().player[num4].inventory[num5].stack | 0) <= ($T04().player[num4].inventory[num5].maxStack | 0)))) {
            $T05().SendData(
              2, 
              this.whoAmI, 
              -1, 
              "Cheating attempt detected.", 
              0, 
              0, 
              0, 
              0
            );
          }
          $T05().SendData(
            5, 
            -1, 
            this.whoAmI, 
            string3, 
            num4, 
            +num5, 
            0, 
            0
          );
          return;
        }
      } else if (b === 6) {
        if (($T04().netMode | 0) === 2) {
          if (($T03().serverSock[this.whoAmI].state | 0) === 1) {
            $T03().serverSock[this.whoAmI].state = 2;
          }
          $T05().SendData(
            7, 
            this.whoAmI, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 7) {
        if (($T04().netMode | 0) === 1) {
          $T04().time = +($T0C().ToInt32(this.readBuffer, num));
          num = ((num + 4) | 0);
          $T04().dayTime = false;
          if ((this.readBuffer[num] | 0) === 1) {
            $T04().dayTime = true;
          }
          num = ((num + 1) | 0);
          $T04().moonPhase = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var num6 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          if (num6 === 1) {
            $T04().bloodMoon = true;
          } else {
            $T04().bloodMoon = false;
          }
          $T04().maxTilesX = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T04().maxTilesY = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T04().spawnTileX = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T04().spawnTileY = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T04().worldSurface = +($T0C().ToInt32(this.readBuffer, num));
          num = ((num + 4) | 0);
          $T04().rockLayer = +($T0C().ToInt32(this.readBuffer, num));
          num = ((num + 4) | 0);
          $T04().worldID = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T04().worldName = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
          if (($T03().clientSock.state | 0) === 3) {
            $T03().clientSock.state = 4;
            return;
          }
        }
      } else if (b === 8) {
        if (($T04().netMode | 0) === 2) {
          var num7 = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          var num8 = ($T0C().ToInt32(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          var flag2 = true;
          if (!((num7 !== -1) && (num8 !== -1))) {
            flag2 = false;
          } else if (!((num7 >= 10) && (num7 <= ((($T04().maxTilesX | 0) - 10) | 0)))) {
            flag2 = false;
          } else if (!((num8 >= 10) && (num8 <= ((($T04().maxTilesY | 0) - 10) | 0)))) {
            flag2 = false;
          }
          var num9 = 1350;
          if (flag2) {
            num9 = Math.imul(num9, 2);
          }
          if (($T03().serverSock[this.whoAmI].state | 0) === 2) {
            $T03().serverSock[this.whoAmI].state = 3;
          }
          $T05().SendData(
            9, 
            this.whoAmI, 
            -1, 
            "Receiving tile data", 
            num9, 
            0, 
            0, 
            0
          );
          $T03().serverSock[this.whoAmI].statusText2 = "is receiving tile data";
          $T03().serverSock[this.whoAmI].statusMax = ((($T03().serverSock[this.whoAmI].statusMax | 0) + num9) | 0);
          var sectionX = ($T03().GetSectionX($T04().spawnTileX) | 0);
          var sectionY = ($T03().GetSectionY($T04().spawnTileY) | 0);

          for (var m = ((sectionX - 2) | 0); m < ((sectionX + 3) | 0); m = ((m + 1) | 0)) {

            for (var n = ((sectionY - 1) | 0); n < ((sectionY + 2) | 0); n = ((n + 1) | 0)) {
              $T05().SendSection(this.whoAmI, m, n);
            }
          }
          if (flag2) {
            num7 = ($T03().GetSectionX(num7) | 0);
            num8 = ($T03().GetSectionY(num8) | 0);

            for (var num10 = ((num7 - 2) | 0); num10 < ((num7 + 3) | 0); num10 = ((num10 + 1) | 0)) {

              for (var num11 = ((num8 - 1) | 0); num11 < ((num8 + 2) | 0); num11 = ((num11 + 1) | 0)) {
                $T05().SendSection(this.whoAmI, num10, num11);
              }
            }
            $T05().SendData(
              11, 
              this.whoAmI, 
              -1, 
              "", 
              ((num7 - 2) | 0), 
              +(num8 - 1), 
              +(num7 + 2), 
              +(num8 + 1)
            );
          }
          $T05().SendData(
            11, 
            this.whoAmI, 
            -1, 
            "", 
            ((sectionX - 2) | 0), 
            +(sectionY - 1), 
            +(sectionX + 2), 
            +(sectionY + 1)
          );

          for (var num12 = 0; num12 < 200; num12 = ((num12 + 1) | 0)) {
            if ($T04().item[num12].active) {
              $T05().SendData(
                21, 
                this.whoAmI, 
                -1, 
                "", 
                num12, 
                0, 
                0, 
                0
              );
              $T05().SendData(
                22, 
                this.whoAmI, 
                -1, 
                "", 
                num12, 
                0, 
                0, 
                0
              );
            }
          }

          for (var num13 = 0; num13 < 1000; num13 = ((num13 + 1) | 0)) {
            if ($T04().npc[num13].active) {
              $T05().SendData(
                23, 
                this.whoAmI, 
                -1, 
                "", 
                num13, 
                0, 
                0, 
                0
              );
            }
          }
          return;
        }
      } else if (b === 9) {
        if (($T04().netMode | 0) === 1) {
          var num14 = ($T0C().ToInt32(this.readBuffer, (((start | 0) + 1) | 0)) | 0);
          var string4 = $T08().get_ASCII().GetString(this.readBuffer, (((start | 0) + 5) | 0), (((length | 0) - 5) | 0));
          $T03().clientSock.statusMax = ((($T03().clientSock.statusMax | 0) + num14) | 0);
          $T03().clientSock.statusText = string4;
          return;
        }
      } else if (b === 10) {
        var num15 = ($T0C().ToInt16(this.readBuffer, (((start | 0) + 1) | 0)) | 0);
        var num16 = ($T0C().ToInt32(this.readBuffer, (((start | 0) + 3) | 0)) | 0);
        var num17 = ($T0C().ToInt32(this.readBuffer, (((start | 0) + 7) | 0)) | 0);
        num = (((start | 0) + 11) | 0);

        for (var num18 = num16; num18 < ((num16 + num15) | 0); num18 = ((num18 + 1) | 0)) {
          if ($T04().tile.Get(num18, num17) === null) {
            $T04().tile.Set(num18, num17, new ($T02())());
          }
          var b2 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var active = $T04().tile.Get(num18, num17).active;
          if ((b2 & 1) === 1) {
            $T04().tile.Get(num18, num17).active = true;
          } else {
            $T04().tile.Get(num18, num17).active = false;
          }
          if ((b2 & 2) === 2) {
            $T04().tile.Get(num18, num17).lighted = true;
          }
          if ((b2 & 4) === 4) {
            $T04().tile.Get(num18, num17).wall = 1;
          } else {
            $T04().tile.Get(num18, num17).wall = 0;
          }
          if ((b2 & 8) === 8) {
            $T04().tile.Get(num18, num17).liquid = 1;
          } else {
            $T04().tile.Get(num18, num17).liquid = 0;
          }
          if ($T04().tile.Get(num18, num17).active) {
            var type = ($T04().tile.Get(num18, num17).type | 0);
            $T04().tile.Get(num18, num17).type = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            if ($T04().tileFrameImportant[$T04().tile.Get(num18, num17).type]) {
              $T04().tile.Get(num18, num17).frameX = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              $T04().tile.Get(num18, num17).frameY = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
            } else if (!(active && (($T04().tile.Get(num18, num17).type | 0) === type))) {
              $T04().tile.Get(num18, num17).frameX = -1;
              $T04().tile.Get(num18, num17).frameY = -1;
            }
          }
          if (($T04().tile.Get(num18, num17).wall | 0) > 0) {
            $T04().tile.Get(num18, num17).wall = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
          }
          if (($T04().tile.Get(num18, num17).liquid | 0) > 0) {
            $T04().tile.Get(num18, num17).liquid = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var b3 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            if (b3 === 1) {
              $T04().tile.Get(num18, num17).lava = true;
            } else {
              $T04().tile.Get(num18, num17).lava = false;
            }
          }
        }
        if (($T04().netMode | 0) === 2) {
          $T05().SendData(
            b, 
            -1, 
            this.whoAmI, 
            "", 
            num15, 
            +num16, 
            +num17, 
            0
          );
          return;
        }
      } else if (b === 11) {
        if (($T04().netMode | 0) === 1) {
          var startX = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          var startY = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          var endX = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          var endY = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 4) | 0);
          $T0F().SectionTileFrame(startX, startY, endX, endY);
          if (($T03().clientSock.state | 0) === 6) {
            $T03().clientSock.state = 10;
            $T04().player[$T04().myPlayer].Spawn();
            return;
          }
        }
      } else if (b === 12) {
        var num19 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        $T04().player[num19].SpawnX = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        $T04().player[num19].SpawnY = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        ($T04().player[num19]).Spawn();
        if (!((($T04().netMode | 0) !== 2) || (($T03().serverSock[this.whoAmI].state | 0) < 3))) {
          $T05().buffer[this.whoAmI].broadcast = true;
          $T05().SendData(
            12, 
            -1, 
            this.whoAmI, 
            "", 
            this.whoAmI, 
            0, 
            0, 
            0
          );
          if (($T03().serverSock[this.whoAmI].state | 0) === 3) {
            $T03().serverSock[this.whoAmI].state = 10;
            $T05().greetPlayer(this.whoAmI);
            $T05().syncPlayers();
            return;
          }
        }
      } else if (b === 13) {
        var num20 = (this.readBuffer[num] | 0);
        if (!((($T04().netMode | 0) !== 1) || $T04().player[num20].active)) {
          $T05().SendData(
            15, 
            -1, 
            -1, 
            "", 
            0, 
            0, 
            0, 
            0
          );
        }
        num = ((num + 1) | 0);
        var num21 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var selectedItem = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var x = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var num22 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var x2 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var y = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        $T04().player[num20].selectedItem = selectedItem;
        $T04().player[num20].position.X = x;
        $T04().player[num20].position.Y = num22;
        $T04().player[num20].velocity.X = x2;
        $T04().player[num20].velocity.Y = y;
        $T04().player[num20].oldVelocity = $T04().player[num20].velocity.MemberwiseClone();
        $T04().player[num20].fallStart = ((+(num22 / 16)) | 0);
        $T04().player[num20].controlUp = false;
        $T04().player[num20].controlDown = false;
        $T04().player[num20].controlLeft = false;
        $T04().player[num20].controlRight = false;
        $T04().player[num20].controlJump = false;
        $T04().player[num20].controlUseItem = false;
        $T04().player[num20].direction = -1;
        if ((num21 & 1) === 1) {
          $T04().player[num20].controlUp = true;
        }
        if ((num21 & 2) === 2) {
          $T04().player[num20].controlDown = true;
        }
        if ((num21 & 4) === 4) {
          $T04().player[num20].controlLeft = true;
        }
        if ((num21 & 8) === 8) {
          $T04().player[num20].controlRight = true;
        }
        if ((num21 & 16) === 16) {
          $T04().player[num20].controlJump = true;
        }
        if ((num21 & 32) === 32) {
          $T04().player[num20].controlUseItem = true;
        }
        if ((num21 & 64) === 64) {
          $T04().player[num20].direction = 1;
        }
        if (!((($T04().netMode | 0) !== 2) || (($T03().serverSock[this.whoAmI].state | 0) !== 10))) {
          $T05().SendData(
            13, 
            -1, 
            this.whoAmI, 
            "", 
            num20, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 14) {
        if (($T04().netMode | 0) === 1) {
          var num23 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var num24 = (this.readBuffer[num] | 0);
          if (num24 === 1) {
            if ($T04().player[num23].active) {
              $T04().player[num23] = new ($T09())();
            }
            $T04().player[num23].active = true;
            return;
          }
          $T04().player[num23].active = false;
          return;
        }
      } else if (b === 15) {
        if (($T04().netMode | 0) === 2) {
          $T05().syncPlayers();
          return;
        }
      } else if (b === 16) {
        var num25 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var statLife = ($T0C().ToInt16(this.readBuffer, num) | 0);
        num = ((num + 2) | 0);
        var statLifeMax = ($T0C().ToInt16(this.readBuffer, num) | 0);
        if (($T04().netMode | 0) === 2) {
          num25 = (this.whoAmI | 0);
        }
        $T04().player[num25].statLife = statLife;
        $T04().player[num25].statLifeMax = statLifeMax;
        if (($T04().player[num25].statLife | 0) <= 0) {
          $T04().player[num25].dead = true;
        }
        if (($T04().netMode | 0) === 2) {
          if (!((($T04().player[this.whoAmI].statLifeMax | 0) <= 400) && (($T04().player[this.whoAmI].statLife | 0) <= ($T04().player[this.whoAmI].statLifeMax | 0)))) {
            $T05().SendData(
              2, 
              this.whoAmI, 
              -1, 
              "Cheating attempt detected.", 
              0, 
              0, 
              0, 
              0
            );
          }
          $T05().SendData(
            16, 
            -1, 
            this.whoAmI, 
            "", 
            num25, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 17) {
        var b4 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var num26 = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        var num27 = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        var b5 = (this.readBuffer[num] | 0);
        var fail = false;
        if (b5 === 1) {
          fail = true;
        }
        if ($T04().tile.Get(num26, num27) === null) {
          $T04().tile.Set(num26, num27, new ($T02())());
        }
        if (b4 === 0) {
          $T0F().KillTile(
            num26, 
            num27, 
            fail, 
            false, 
            false
          );
        } else if (b4 === 1) {
          $T0F().PlaceTile(
            num26, 
            num27, 
            b5, 
            false, 
            true, 
            -1
          );
        } else if (b4 === 2) {
          $T0F().KillWall(num26, num27, fail);
        } else if (b4 === 3) {
          $T0F().PlaceWall(num26, num27, b5, false);
        } else if (b4 === 4) {
          $T0F().KillTile(
            num26, 
            num27, 
            fail, 
            false, 
            true
          );
        }
        if (($T04().netMode | 0) === 2) {
          $T05().SendData(
            17, 
            -1, 
            this.whoAmI, 
            "", 
            b4, 
            +num26, 
            +num27, 
            +b5
          );
          if (!((b4 !== 1) || (b5 !== 53))) {
            $T05().SendTileSquare(-1, num26, num27, 1);
            return;
          }
        }
      } else if (b === 18) {
        var b6 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var num28 = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        var sunModY = ($T0C().ToInt16(this.readBuffer, num) | 0);
        num = ((num + 2) | 0);
        var moonModY = ($T0C().ToInt16(this.readBuffer, num) | 0);
        num = ((num + 2) | 0);
        if (b6 === 1) {
          $T04().dayTime = true;
        } else {
          $T04().dayTime = false;
        }
        $T04().time = +num28;
        $T04().sunModY = sunModY;
        $T04().moonModY = moonModY;
        if (($T04().netMode | 0) === 2) {
          $T05().SendData(
            18, 
            -1, 
            this.whoAmI, 
            "", 
            0, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 19) {
        var b7 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var num29 = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        var num30 = ($T0C().ToInt32(this.readBuffer, num) | 0);
        num = ((num + 4) | 0);
        var num31 = (this.readBuffer[num] | 0);
        var direction = 0;
        if (num31 === 0) {
          direction = -1;
        }
        if (b7 === 0) {
          $T0F().OpenDoor(num29, num30, direction);
        } else if (b7 === 1) {
          $T0F().CloseDoor(num29, num30, true);
        }
        if (($T04().netMode | 0) === 2) {
          $T05().SendData(
            19, 
            -1, 
            this.whoAmI, 
            "", 
            b7, 
            +num29, 
            +num30, 
            +num31
          );
          return;
        }
      } else if (b === 20) {
        var num32 = ($T0C().ToInt16(this.readBuffer, (((start | 0) + 1) | 0)) | 0);
        var num33 = ($T0C().ToInt32(this.readBuffer, (((start | 0) + 3) | 0)) | 0);
        var num34 = ($T0C().ToInt32(this.readBuffer, (((start | 0) + 7) | 0)) | 0);
        num = (((start | 0) + 11) | 0);

        for (var num35 = num33; num35 < ((num33 + num32) | 0); num35 = ((num35 + 1) | 0)) {

          for (var num36 = num34; num36 < ((num34 + num32) | 0); num36 = ((num36 + 1) | 0)) {
            if ($T04().tile.Get(num35, num36) === null) {
              $T04().tile.Set(num35, num36, new ($T02())());
            }
            var b8 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var active2 = $T04().tile.Get(num35, num36).active;
            if ((b8 & 1) === 1) {
              $T04().tile.Get(num35, num36).active = true;
            } else {
              $T04().tile.Get(num35, num36).active = false;
            }
            if ((b8 & 2) === 2) {
              $T04().tile.Get(num35, num36).lighted = true;
            }
            if ((b8 & 4) === 4) {
              $T04().tile.Get(num35, num36).wall = 1;
            } else {
              $T04().tile.Get(num35, num36).wall = 0;
            }
            if ((b8 & 8) === 8) {
              $T04().tile.Get(num35, num36).liquid = 1;
            } else {
              $T04().tile.Get(num35, num36).liquid = 0;
            }
            if ($T04().tile.Get(num35, num36).active) {
              var type2 = ($T04().tile.Get(num35, num36).type | 0);
              $T04().tile.Get(num35, num36).type = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              if ($T04().tileFrameImportant[$T04().tile.Get(num35, num36).type]) {
                $T04().tile.Get(num35, num36).frameX = ($T0C().ToInt16(this.readBuffer, num) | 0);
                num = ((num + 2) | 0);
                $T04().tile.Get(num35, num36).frameY = ($T0C().ToInt16(this.readBuffer, num) | 0);
                num = ((num + 2) | 0);
              } else if (!(active2 && (($T04().tile.Get(num35, num36).type | 0) === type2))) {
                $T04().tile.Get(num35, num36).frameX = -1;
                $T04().tile.Get(num35, num36).frameY = -1;
              }
            }
            if (($T04().tile.Get(num35, num36).wall | 0) > 0) {
              $T04().tile.Get(num35, num36).wall = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
            }
            if (($T04().tile.Get(num35, num36).liquid | 0) > 0) {
              $T04().tile.Get(num35, num36).liquid = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var b9 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              if (b9 === 1) {
                $T04().tile.Get(num35, num36).lava = true;
              } else {
                $T04().tile.Get(num35, num36).lava = false;
              }
            }
          }
        }
        $T0F().RangeFrame(num33, num34, ((num33 + num32) | 0), ((num34 + num32) | 0));
        if (($T04().netMode | 0) === 2) {
          $T05().SendData(
            b, 
            -1, 
            this.whoAmI, 
            "", 
            num32, 
            +num33, 
            +num34, 
            0
          );
          return;
        }
      } else if (b === 21) {
        var num37 = ($T0C().ToInt16(this.readBuffer, num) | 0);
        num = ((num + 2) | 0);
        var num38 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var num39 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var x3 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var y2 = +$T0C().ToSingle(this.readBuffer, num);
        num = ((num + 4) | 0);
        var stack2 = (this.readBuffer[num] | 0);
        num = ((num + 1) | 0);
        var string5 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
        if (($T04().netMode | 0) === 1) {
          if (string5 == "0") {
            $T04().item[num37].active = false;
            return;
          }
          $S00().CallVirtual("SetDefaults", null, $T04().item[num37], string5);
          $T04().item[num37].stack = stack2;
          $T04().item[num37].position.X = num38;
          $T04().item[num37].position.Y = num39;
          $T04().item[num37].velocity.X = x3;
          $T04().item[num37].velocity.Y = y2;
          $T04().item[num37].active = true;
          $T04().item[num37].wet = $T11().WetCollision($T04().item[num37].position, $T04().item[num37].width, $T04().item[num37].height);
          return;
        } else if (string5 == "0") {
          if (num37 < 200) {
            $T04().item[num37].active = false;
            $T05().SendData(
              21, 
              -1, 
              -1, 
              "", 
              num37, 
              0, 
              0, 
              0
            );
            return;
          }
        } else {
          var flag3 = false;
          if (num37 === 200) {
            flag3 = true;
          }
          if (flag3) {
            var item = new ($T0B())();
            $S00().CallVirtual("SetDefaults", null, item, string5);
            num37 = (($T0B().NewItem(
              ((num38) | 0), 
              ((num39) | 0), 
              item.width, 
              item.height, 
              item.type, 
              stack2, 
              true
            ) + 0x8000 & 0xFFFF) - 0x8000);
          }
          $S00().CallVirtual("SetDefaults", null, $T04().item[num37], string5);
          $T04().item[num37].stack = stack2;
          $T04().item[num37].position.X = num38;
          $T04().item[num37].position.Y = num39;
          $T04().item[num37].velocity.X = x3;
          $T04().item[num37].velocity.Y = y2;
          $T04().item[num37].active = true;
          $T04().item[num37].owner = ($T04().myPlayer | 0);
          if (flag3) {
            $T05().SendData(
              21, 
              -1, 
              -1, 
              "", 
              num37, 
              0, 
              0, 
              0
            );
            $T04().item[num37].ownIgnore = (this.whoAmI | 0);
            $T04().item[num37].ownTime = 100;
            ($T04().item[num37]).FindOwner(num37);
            return;
          }
          $T05().SendData(
            21, 
            -1, 
            this.whoAmI, 
            "", 
            num37, 
            0, 
            0, 
            0
          );
          return;
        }
      } else if (b === 22) {
        var num40 = ($T0C().ToInt16(this.readBuffer, num) | 0);
        num = ((num + 2) | 0);
        var b10 = (this.readBuffer[num] | 0);
        $T04().item[num40].owner = b10;
        if (b10 === ($T04().myPlayer | 0)) {
          $T04().item[num40].keepTime = 15;
        } else {
          $T04().item[num40].keepTime = 0;
        }
        if (($T04().netMode | 0) === 2) {
          $T04().item[num40].owner = 8;
          $T04().item[num40].keepTime = 15;
          $T05().SendData(
            22, 
            -1, 
            -1, 
            "", 
            num40, 
            0, 
            0, 
            0
          );
          return;
        }
      } else {
        if (b === 23) {
          var num41 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var x4 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var y3 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var x5 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var y4 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var target = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var direction2 = (((this.readBuffer[num] | 0) - 1) & 0xFF);
          num = ((num + 1) | 0);
          var arg_2194_0 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var num42 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var array = JSIL.Array.New($T10(), $T13().maxAI);

          for (var num43 = 0; num43 < ($T13().maxAI | 0); num43 = ((num43 + 1) | 0)) {
            array[num43] = +$T0C().ToSingle(this.readBuffer, num);
            num = ((num + 4) | 0);
          }
          var string6 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
          if (!($T04().npc[num41].active && !($T04().npc[num41].$name != string6))) {
            $T04().npc[num41].active = true;
            $S01().CallVirtual("SetDefaults", null, $T04().npc[num41], string6);
          }
          $T04().npc[num41].position.X = x4;
          $T04().npc[num41].position.Y = y3;
          $T04().npc[num41].velocity.X = x5;
          $T04().npc[num41].velocity.Y = y4;
          $T04().npc[num41].target = target;
          $T04().npc[num41].direction = direction2;
          $T04().npc[num41].life = num42;
          if (num42 <= 0) {
            $T04().npc[num41].active = false;
          }

          for (var num44 = 0; num44 < ($T13().maxAI | 0); num44 = ((num44 + 1) | 0)) {
            $T04().npc[num41].ai[num44] = +array[num44];
          }
          return;
        }
        if (b === 24) {
          var num45 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var b11 = (this.readBuffer[num] | 0);
          ($T04().npc[num45]).StrikeNPC($T04().player[b11].inventory[$T04().player[b11].selectedItem].damage, $T04().player[b11].inventory[$T04().player[b11].selectedItem].knockBack, $T04().player[b11].direction);
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              24, 
              -1, 
              this.whoAmI, 
              "", 
              num45, 
              +b11, 
              0, 
              0
            );
            $T05().SendData(
              23, 
              -1, 
              -1, 
              "", 
              num45, 
              0, 
              0, 
              0
            );
            return;
          }
        } else if (b === 25) {
          var num46 = (this.readBuffer[(((start | 0) + 1) | 0)] | 0);
          if (($T04().netMode | 0) === 2) {
            num46 = (this.whoAmI | 0);
          }
          var b12 = (this.readBuffer[(((start | 0) + 2) | 0)] | 0);
          var b13 = (this.readBuffer[(((start | 0) + 3) | 0)] | 0);
          var b14 = (this.readBuffer[(((start | 0) + 4) | 0)] | 0);
          var string7 = $T08().get_ASCII().GetString(this.readBuffer, (((start | 0) + 5) | 0), (((length | 0) - 5) | 0));
          if (($T04().netMode | 0) === 1) {
            var newText = string7;
            if (num46 < 8) {
              newText = (("<" + $T04().player[num46].$name + "> " + string7));
              $T04().player[num46].chatText = string7;
              $T04().player[num46].chatShowTime = ((($T04().chatLength | 0) / 2) | 0);
            }
            $T04().NewText(newText, b12, b13, b14);
            return;
          }
          if (($T04().netMode | 0) === 2) {
            var text = (string7.toLowerCase());
            if (text == "/playing") {
              var text2 = "";

              for (var num47 = 0; num47 < 8; num47 = ((num47 + 1) | 0)) {
                if ($T04().player[num47].active) {
                  if (text2 == "") {
                    text2 = (JSIL.ConcatString(text2, $T04().player[num47].$name));
                  } else {
                    text2 = ((text2 + ", " + $T04().player[num47].$name));
                  }
                }
              }
              $T05().SendData(
                25, 
                this.whoAmI, 
                -1, 
                ("Current players: " + text2 + "."), 
                8, 
                255, 
                240, 
                20
              );
              return;
            }
            if (!(((text.length | 0) < 4) || !(text.substr(0, 4) == "/me "))) {
              $T05().SendData(
                25, 
                -1, 
                -1, 
                ("*" + $T04().player[this.whoAmI].$name + " " + string7.substr(4)), 
                8, 
                200, 
                100, 
                0
              );
              return;
            }
            if (((text.length | 0) < 3) || !(text.substr(0, 3) == "/p ")) {
              $T05().SendData(
                25, 
                -1, 
                -1, 
                string7, 
                num46, 
                +b12, 
                +b13, 
                +b14
              );
              return;
            }
            if (($T04().player[this.whoAmI].team | 0) !== 0) {

              for (var num48 = 0; num48 < 8; num48 = ((num48 + 1) | 0)) {
                if (($T04().player[num48].team | 0) === ($T04().player[this.whoAmI].team | 0)) {
                  $T05().SendData(
                    25, 
                    num48, 
                    -1, 
                    string7.substr(3), 
                    num46, 
                    +(($T04().teamColor[$T04().player[this.whoAmI].team]).get_R()), 
                    +(($T04().teamColor[$T04().player[this.whoAmI].team]).get_G()), 
                    +(($T04().teamColor[$T04().player[this.whoAmI].team]).get_B())
                  );
                }
              }
              return;
            }
            $T05().SendData(
              25, 
              this.whoAmI, 
              -1, 
              "You are not in a party!", 
              8, 
              255, 
              240, 
              20
            );
            return;
          }
        } else if (b === 26) {
          var b15 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var num49 = (((this.readBuffer[num] | 0) - 1) & 0xFF);
          num = ((num + 1) | 0);
          var num50 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var b16 = (this.readBuffer[num] | 0);
          var pvp = false;
          if (b16 !== 0) {
            pvp = true;
          }
          ($T04().player[b15]).Hurt(num50, num49, pvp, true);
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              26, 
              -1, 
              this.whoAmI, 
              "", 
              b15, 
              +num49, 
              +num50, 
              +b16
            );
            return;
          }
        } else if (b === 27) {
          var num51 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var x6 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var y5 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var x7 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var y6 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var knockBack = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var damage = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var b17 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var b18 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var array2 = JSIL.Array.New($T10(), $T14().maxAI);

          for (var num52 = 0; num52 < ($T14().maxAI | 0); num52 = ((num52 + 1) | 0)) {
            array2[num52] = +$T0C().ToSingle(this.readBuffer, num);
            num = ((num + 4) | 0);
          }
          var num53 = 1000;

        $loop8: 
          for (var num54 = 0; num54 < 1000; num54 = ((num54 + 1) | 0)) {
            if (!((($T04().projectile[num54].owner | 0) !== b17) || 
                (($T04().projectile[num54].identity | 0) !== num51) || !$T04().projectile[num54].active)) {
              num53 = num54;
              break $loop8;
            }
          }
          if (num53 === 1000) {

          $loop9: 
            for (var num55 = 0; num55 < 1000; num55 = ((num55 + 1) | 0)) {
              if (!$T04().projectile[num55].active) {
                num53 = num55;
                break $loop9;
              }
            }
          }
          if (!($T04().projectile[num53].active && (($T04().projectile[num53].type | 0) === b18))) {
            ($T04().projectile[num53]).SetDefaults(b18);
          }
          $T04().projectile[num53].identity = num51;
          $T04().projectile[num53].position.X = x6;
          $T04().projectile[num53].position.Y = y5;
          $T04().projectile[num53].velocity.X = x7;
          $T04().projectile[num53].velocity.Y = y6;
          $T04().projectile[num53].damage = damage;
          $T04().projectile[num53].type = b18;
          $T04().projectile[num53].owner = b17;
          $T04().projectile[num53].knockBack = knockBack;

          for (var num56 = 0; num56 < ($T14().maxAI | 0); num56 = ((num56 + 1) | 0)) {
            $T04().projectile[num53].ai[num56] = +array2[num56];
          }
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              27, 
              -1, 
              this.whoAmI, 
              "", 
              num53, 
              0, 
              0, 
              0
            );
            return;
          }
        } else if (b === 28) {
          var num57 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var num58 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var num59 = +$T0C().ToSingle(this.readBuffer, num);
          num = ((num + 4) | 0);
          var num60 = (((this.readBuffer[num] | 0) - 1) & 0xFF);
          if (num58 >= 0) {
            ($T04().npc[num57]).StrikeNPC(num58, num59, num60);
          } else {
            $T04().npc[num57].life = 0;
            ($T04().npc[num57]).HitEffect(0, 10);
            $T04().npc[num57].active = false;
          }
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              28, 
              -1, 
              this.whoAmI, 
              "", 
              num57, 
              +num58, 
              num59, 
              +num60
            );
            $T05().SendData(
              23, 
              -1, 
              -1, 
              "", 
              num57, 
              0, 
              0, 
              0
            );
            return;
          }
        } else if (b === 29) {
          var num61 = ($T0C().ToInt16(this.readBuffer, num) | 0);
          num = ((num + 2) | 0);
          var b19 = (this.readBuffer[num] | 0);

        $loop6: 
          for (var num62 = 0; num62 < 1000; num62 = ((num62 + 1) | 0)) {
            if (!((($T04().projectile[num62].owner | 0) !== b19) || 
                (($T04().projectile[num62].identity | 0) !== num61) || !$T04().projectile[num62].active)) {
              ($T04().projectile[num62]).Kill();
              break $loop6;
            }
          }
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              29, 
              -1, 
              this.whoAmI, 
              "", 
              num61, 
              +b19, 
              0, 
              0
            );
            return;
          }
        } else if (b === 30) {
          var b20 = (this.readBuffer[num] | 0);
          num = ((num + 1) | 0);
          var b21 = (this.readBuffer[num] | 0);
          if (b21 === 1) {
            $T04().player[b20].hostile = true;
          } else {
            $T04().player[b20].hostile = false;
          }
          if (($T04().netMode | 0) === 2) {
            $T05().SendData(
              30, 
              -1, 
              this.whoAmI, 
              "", 
              b20, 
              0, 
              0, 
              0
            );
            var str = " has enabled PvP!";
            if (b21 === 0) {
              str = " has disabled PvP!";
            }
            $T05().SendData(
              25, 
              -1, 
              -1, 
              JSIL.ConcatString($T04().player[b20].$name, str), 
              8, 
              +(($T04().teamColor[$T04().player[b20].team]).get_R()), 
              +(($T04().teamColor[$T04().player[b20].team]).get_G()), 
              +(($T04().teamColor[$T04().player[b20].team]).get_B())
            );
            return;
          }
        } else if (b === 31) {
          if (($T04().netMode | 0) === 2) {
            var x8 = ($T0C().ToInt32(this.readBuffer, num) | 0);
            num = ((num + 4) | 0);
            var y7 = ($T0C().ToInt32(this.readBuffer, num) | 0);
            num = ((num + 4) | 0);
            var num63 = ($T15().FindChest(x8, y7) | 0);
            if (!((num63 <= -1) || (($T15().UsingChest(num63) | 0) !== -1))) {

              for (var num64 = 0; num64 < ($T15().maxItems | 0); num64 = ((num64 + 1) | 0)) {
                $T05().SendData(
                  32, 
                  this.whoAmI, 
                  -1, 
                  "", 
                  num63, 
                  +num64, 
                  0, 
                  0
                );
              }
              $T05().SendData(
                33, 
                this.whoAmI, 
                -1, 
                "", 
                num63, 
                0, 
                0, 
                0
              );
              $T04().player[this.whoAmI].chest = num63;
              return;
            }
          }
        } else {
          if (b === 32) {
            var num65 = ($T0C().ToInt16(this.readBuffer, num) | 0);
            num = ((num + 2) | 0);
            var num66 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var stack3 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var string8 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
            if ($T04().chest[num65] === null) {
              $T04().chest[num65] = new ($T15())();
            }
            if ($T04().chest[num65].item[num66] === null) {
              $T04().chest[num65].item[num66] = new ($T0B())();
            }
            $S00().CallVirtual("SetDefaults", null, $T04().chest[num65].item[num66], string8);
            $T04().chest[num65].item[num66].stack = stack3;
            return;
          }
          if (b === 33) {
            var num67 = ($T0C().ToInt16(this.readBuffer, num) | 0);
            num = ((num + 2) | 0);
            var chestX = ($T0C().ToInt32(this.readBuffer, num) | 0);
            num = ((num + 4) | 0);
            var chestY = ($T0C().ToInt32(this.readBuffer, num) | 0);
            if (($T04().netMode | 0) === 1) {
              if (($T04().player[$T04().myPlayer].chest | 0) === -1) {
                $T04().playerInventory = true;
                $T04().PlaySound(10, -1, -1, 1);
              } else if (!((($T04().player[$T04().myPlayer].chest | 0) === num67) || (num67 === -1))) {
                $T04().playerInventory = true;
                $T04().PlaySound(12, -1, -1, 1);
              } else if (!((($T04().player[$T04().myPlayer].chest | 0) === -1) || (num67 !== -1))) {
                $T04().PlaySound(11, -1, -1, 1);
              }
              $T04().player[$T04().myPlayer].chest = num67;
              $T04().player[$T04().myPlayer].chestX = chestX;
              $T04().player[$T04().myPlayer].chestY = chestY;
              return;
            }
            $T04().player[this.whoAmI].chest = num67;
            return;
          } else if (b === 34) {
            if (($T04().netMode | 0) === 2) {
              var num68 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              num = ((num + 4) | 0);
              var num69 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              $T0F().KillTile(
                num68, 
                num69, 
                false, 
                false, 
                false
              );
              if (!$T04().tile.Get(num68, num69).active) {
                $T05().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +num68, 
                  +num69, 
                  0
                );
                return;
              }
            }
          } else if (b === 35) {
            var num70 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var num71 = ($T0C().ToInt16(this.readBuffer, num) | 0);
            num = ((num + 2) | 0);
            if (num70 !== ($T04().myPlayer | 0)) {
              ($T04().player[num70]).HealEffect(num71);
            }
            if (($T04().netMode | 0) === 2) {
              $T05().SendData(
                35, 
                -1, 
                this.whoAmI, 
                "", 
                num70, 
                +num71, 
                0, 
                0
              );
              return;
            }
          } else if (b === 36) {
            var num72 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var num73 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var num74 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var num75 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            var num76 = (this.readBuffer[num] | 0);
            num = ((num + 1) | 0);
            if (num73 === 0) {
              $T04().player[num72].zoneEvil = false;
            } else {
              $T04().player[num72].zoneEvil = true;
            }
            if (num74 === 0) {
              $T04().player[num72].zoneMeteor = false;
            } else {
              $T04().player[num72].zoneMeteor = true;
            }
            if (num75 === 0) {
              $T04().player[num72].zoneDungeon = false;
            } else {
              $T04().player[num72].zoneDungeon = true;
            }
            if (num76 === 0) {
              $T04().player[num72].zoneJungle = false;
              return;
            }
            $T04().player[num72].zoneJungle = true;
            return;
          } else if (b === 37) {
            if (($T04().netMode | 0) === 1) {
              $T03().password = "";
              $T04().menuMode = 31;
              return;
            }
          } else if (b === 38) {
            if (($T04().netMode | 0) === 2) {
              var string9 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
              if (string9 == $T03().password) {
                $T03().serverSock[this.whoAmI].state = 1;
                $T05().SendData(
                  3, 
                  this.whoAmI, 
                  -1, 
                  "", 
                  0, 
                  0, 
                  0, 
                  0
                );
                return;
              }
              $T05().SendData(
                2, 
                this.whoAmI, 
                -1, 
                "Incorrect password.", 
                0, 
                0, 
                0, 
                0
              );
              return;
            }
          } else {
            if (!((b !== 39) || (($T04().netMode | 0) !== 1))) {
              var num77 = ($T0C().ToInt16(this.readBuffer, num) | 0);
              $T04().item[num77].owner = 8;
              $T05().SendData(
                22, 
                -1, 
                -1, 
                "", 
                num77, 
                0, 
                0, 
                0
              );
              return;
            }
            if (b === 40) {
              var b22 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var talkNPC = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              $T04().player[b22].talkNPC = talkNPC;
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  40, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  b22, 
                  0, 
                  0, 
                  0
                );
                return;
              }
            } else if (b === 41) {
              var b23 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var itemRotation = +$T0C().ToSingle(this.readBuffer, num);
              num = ((num + 4) | 0);
              var itemAnimation = ($T0C().ToInt16(this.readBuffer, num) | 0);
              $T04().player[b23].itemRotation = itemRotation;
              $T04().player[b23].itemAnimation = itemAnimation;
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  41, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  b23, 
                  0, 
                  0, 
                  0
                );
                return;
              }
            } else if (b === 42) {
              var num78 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var statMana = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              var statManaMax = ($T0C().ToInt16(this.readBuffer, num) | 0);
              if (($T04().netMode | 0) === 2) {
                num78 = (this.whoAmI | 0);
              }
              $T04().player[num78].statMana = statMana;
              $T04().player[num78].statManaMax = statManaMax;
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  42, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  num78, 
                  0, 
                  0, 
                  0
                );
                return;
              }
            } else if (b === 43) {
              var num79 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var num80 = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              if (num79 !== ($T04().myPlayer | 0)) {
                ($T04().player[num79]).ManaEffect(num80);
              }
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  43, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  num79, 
                  +num80, 
                  0, 
                  0
                );
                return;
              }
            } else if (b === 44) {
              var b24 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var num81 = (((this.readBuffer[num] | 0) - 1) & 0xFF);
              num = ((num + 1) | 0);
              var num82 = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              var b25 = (this.readBuffer[num] | 0);
              var pvp2 = false;
              if (b25 !== 0) {
                pvp2 = true;
              }
              ($T04().player[b24]).KillMe(+num82, num81, pvp2);
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  44, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  b24, 
                  +num81, 
                  +num82, 
                  +b25
                );
                return;
              }
            } else if (b === 45) {
              var num83 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var num84 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var team = ($T04().player[num83].team | 0);
              $T04().player[num83].team = num84;
              if (($T04().netMode | 0) === 2) {
                $T05().SendData(
                  45, 
                  -1, 
                  this.whoAmI, 
                  "", 
                  num83, 
                  0, 
                  0, 
                  0
                );
                var str2 = "";
                if (num84 === 0) {
                  str2 = " is no longer on a party.";
                } else if (num84 === 1) {
                  str2 = " has joined the red party.";
                } else if (num84 === 2) {
                  str2 = " has joined the green party.";
                } else if (num84 === 3) {
                  str2 = " has joined the blue party.";
                } else if (num84 === 4) {
                  str2 = " has joined the yellow party.";
                }

                for (var num85 = 0; num85 < 8; num85 = ((num85 + 1) | 0)) {
                  if (!(!((num85 === (this.whoAmI | 0)) || 
                        ((team > 0) && 
                          (($T04().player[num85].team | 0) === team))) && ((num84 <= 0) || 
                        (($T04().player[num85].team | 0) !== num84)))) {
                    $T05().SendData(
                      25, 
                      num85, 
                      -1, 
                      JSIL.ConcatString($T04().player[num83].$name, str2), 
                      8, 
                      +(($T04().teamColor[num84]).get_R()), 
                      +(($T04().teamColor[num84]).get_G()), 
                      +(($T04().teamColor[num84]).get_B())
                    );
                  }
                }
                return;
              }
            } else if (b === 46) {
              if (($T04().netMode | 0) === 2) {
                var i2 = ($T0C().ToInt32(this.readBuffer, num) | 0);
                num = ((num + 4) | 0);
                var j2 = ($T0C().ToInt32(this.readBuffer, num) | 0);
                num = ((num + 4) | 0);
                var num86 = ($T16().ReadSign(i2, j2) | 0);
                if (num86 >= 0) {
                  $T05().SendData(
                    47, 
                    this.whoAmI, 
                    -1, 
                    "", 
                    num86, 
                    0, 
                    0, 
                    0
                  );
                  return;
                }
              }
            } else if (b === 47) {
              var num87 = ($T0C().ToInt16(this.readBuffer, num) | 0);
              num = ((num + 2) | 0);
              var x9 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              num = ((num + 4) | 0);
              var y8 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              num = ((num + 4) | 0);
              var string10 = $T08().get_ASCII().GetString(this.readBuffer, num, (((((length | 0) - num) | 0) + (start | 0)) | 0));
              $T04().sign[num87] = new ($T16())();
              $T04().sign[num87].x = x9;
              $T04().sign[num87].y = y8;
              $T16().TextSign(num87, string10);
              if (!((($T04().netMode | 0) !== 1) || 
                  ($T04().sign[num87] === null) || (num87 === ($T04().player[$T04().myPlayer].sign | 0)))) {
                $T04().playerInventory = false;
                $T04().player[$T04().myPlayer].talkNPC = -1;
                $T04().editSign = false;
                $T04().PlaySound(10, -1, -1, 1);
                $T04().player[$T04().myPlayer].sign = num87;
                $T04().npcChatText = $T04().sign[num87].text;
                return;
              }
            } else if (b === 48) {
              var num88 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              num = ((num + 4) | 0);
              var num89 = ($T0C().ToInt32(this.readBuffer, num) | 0);
              num = ((num + 4) | 0);
              var liquid = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              var b26 = (this.readBuffer[num] | 0);
              num = ((num + 1) | 0);
              if ($T04().tile.Get(num88, num89) === null) {
                $T04().tile.Set(num88, num89, new ($T02())());
              }
              flag4.set(false);
              try {
                $T17().Enter(obj = $T04().tile.Get(num88, num89), /* ref */ flag4);
                $T04().tile.Get(num88, num89).liquid = liquid;
                if (b26 === 1) {
                  $T04().tile.Get(num88, num89).lava = true;
                } else {
                  $T04().tile.Get(num88, num89).lava = false;
                }
                if (($T04().netMode | 0) === 2) {
                  $T0F().SquareTileFrame(num88, num89, true);
                }
              } finally {
                if (flag4.get()) {
                  $T17().Exit(obj);
                }
              }
            }
          }
        }
      }
    }
  }; 

  function messageBuffer_Reset () {
    this.writeBuffer = JSIL.Array.New($T00(), 65535);
    this.writeLocked = false;
    this.messageLength = 0;
    this.totalData = 0;
    this.spamCount = 0;
    this.broadcast = false;
    this.checkBytes = false;
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.messageBuffer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      messageBuffer__ctor
    );

    $.Method({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      messageBuffer_GetData
    );

    $.Method({Static:false, Public:true }, "Reset", 
      JSIL.MethodSignature.Void, 
      messageBuffer_Reset
    );

    $.Constant({Static:true , Public:true }, "readBufferMax", $.Int32, 65535);

    $.Constant({Static:true , Public:true }, "writeBufferMax", $.Int32, 65535);

    $.Field({Static:false, Public:true }, "broadcast", $.Boolean);

    $.Field({Static:false, Public:true }, "readBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "writeBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "writeLocked", $.Boolean);

    $.Field({Static:false, Public:true }, "messageLength", $.Int32);

    $.Field({Static:false, Public:true }, "totalData", $.Int32);

    $.Field({Static:false, Public:true }, "whoAmI", $.Int32);

    $.Field({Static:false, Public:true }, "spamCount", $.Int32);

    $.Field({Static:false, Public:true }, "maxSpam", $.Int32);

    $.Field({Static:false, Public:true }, "checkBytes", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.NetMessage */ 

(function NetMessage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.messageBuffer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Threading.Monitor)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.BitConverter)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Buffer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm06.System.Byte))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.Terraria.Netplay)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.Terraria.Projectile)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm07.System.Net.Sockets.TcpClient)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.AsyncCallback)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize(System.Array.Of($asm06.System.Boolean, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.Int32]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.String]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.Int16]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.Single]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult")))) ();
  };


  function NetMessage__ctor () {
  }; 

  function NetMessage_CheckBytes (i, $exception) {
    var obj = null;
    var flag = new JSIL.BoxedVariable(false);
    try {
      $T04().Enter(obj = $thisType.buffer[i], /* ref */ flag);
      var num = 0;
      if (($thisType.buffer[i].totalData | 0) >= 4) {
        if (($thisType.buffer[i].messageLength | 0) === 0) {
          $thisType.buffer[i].messageLength = ((($T05().ToInt32($thisType.buffer[i].readBuffer, 0) | 0) + 4) | 0);
        }

        while ((($thisType.buffer[i].totalData | 0) >= ((($thisType.buffer[i].messageLength | 0) + num) | 0)) && (($thisType.buffer[i].messageLength | 0) > 0)) {
          if (!$T06().ignoreErrors) {
            ($thisType.buffer[i]).GetData(((num + 4) | 0), ((($thisType.buffer[i].messageLength | 0) - 4) | 0));
          } else {
            try {
              ($thisType.buffer[i]).GetData(((num + 4) | 0), ((($thisType.buffer[i].messageLength | 0) - 4) | 0));
            } catch ($exception) {
            }
          }
          num = ((num + ($thisType.buffer[i].messageLength | 0)) | 0);
          if (((($thisType.buffer[i].totalData | 0) - num) | 0) >= 4) {
            $thisType.buffer[i].messageLength = ((($T05().ToInt32($thisType.buffer[i].readBuffer, num) | 0) + 4) | 0);
          } else {
            $thisType.buffer[i].messageLength = 0;
          }
        }
        if (num === ($thisType.buffer[i].totalData | 0)) {
          $thisType.buffer[i].totalData = 0;
        } else if (num > 0) {
          $T07().BlockCopy(
            $thisType.buffer[i].readBuffer, 
            num, 
            $thisType.buffer[i].readBuffer, 
            0, 
            ((($thisType.buffer[i].totalData | 0) - num) | 0)
          );
          $thisType.buffer[i].totalData = ((($thisType.buffer[i].totalData | 0) - num) | 0);
        }
        $thisType.buffer[i].checkBytes = false;
      }
    } finally {
      if (flag.get()) {
        $T04().Exit(obj);
      }
    }
  }; 

  function NetMessage_greetPlayer (plr) {
    $thisType.SendData(
      25, 
      plr, 
      -1, 
      ("Welcome to " + $T06().worldName + "!"), 
      8, 
      255, 
      240, 
      20
    );
    var text = "";

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if ($T06().player[i].active) {
        if (text == "") {
          text = (JSIL.ConcatString(text, $T06().player[i].$name));
        } else {
          text = ((text + ", " + $T06().player[i].$name));
        }
      }
    }
    $thisType.SendData(
      25, 
      plr, 
      -1, 
      ("Current players: " + text + "."), 
      8, 
      255, 
      240, 
      20
    );
  }; 

  function NetMessage_RecieveBytes (bytes, streamLength, i, $exception) {
    var obj = null;
    var flag = new JSIL.BoxedVariable(false);
    try {
      $T04().Enter(obj = $thisType.buffer[i], /* ref */ flag);
      try {
        $T07().BlockCopy(
          bytes, 
          0, 
          $thisType.buffer[i].readBuffer, 
          $thisType.buffer[i].totalData, 
          streamLength
        );
        $thisType.buffer[i].totalData = ((($thisType.buffer[i].totalData | 0) + (streamLength | 0)) | 0);
        $thisType.buffer[i].checkBytes = true;
      } catch ($exception) {
        if (($T06().netMode | 0) === 1) {
          $T06().menuMode = 15;
          $T06().statusText = "Bad header lead to a read buffer overflow.";
          $T0A().disconnect = true;
        } else {
          $T0A().serverSock[i].kill = true;
        }
      }
    } finally {
      if (flag.get()) {
        $T04().Exit(obj);
      }
    }
  }; 

  function NetMessage_SendData (msgType, remoteClient, ignoreClient, text, number, number2, number3, number4, $exception) {
    var obj = null;
    var num = 9;
    if (!((($T06().netMode | 0) !== 2) || ((remoteClient | 0) < 0))) {
      num = (remoteClient | 0);
    }
    var flag = new JSIL.BoxedVariable(false);
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            $T04().Enter(obj = $thisType.buffer[num], /* ref */ flag);
            var num2 = 5;
            var num3 = num2;
            if ((msgType | 0) === 1) {
              var bytes = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes2 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), JSIL.ConcatString("Terraria", $T01().$Box($T06().curRelease)));
              num2 = ((num2 + (bytes2.length | 0)) | 0);
              var bytes3 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes3, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes2, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                5, 
                bytes2.length
              );
            } else if ((msgType | 0) === 2) {
              var bytes4 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes5 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text);
              num2 = ((num2 + (bytes5.length | 0)) | 0);
              var bytes6 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes6, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes4, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes5, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                5, 
                bytes5.length
              );
            } else if ((msgType | 0) === 3) {
              var bytes7 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes8 = $S00().CallStatic($T05(), "GetBytes", null, remoteClient);
              num2 = ((num2 + (bytes8.length | 0)) | 0);
              var bytes9 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes9, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes7, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes8, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                5, 
                bytes8.length
              );
            } else if ((msgType | 0) === 4) {
              var bytes10 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b = (number & 0xFF);
              var b2 = ($T06().player[b].hair & 0xFF);
              var bytes11 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text);
              num2 = ((num2 + ((23 + (bytes11.length | 0)) | 0)) | 0);
              var bytes12 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes12, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes10, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[6] = b2;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].hairColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].hairColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].hairColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].skinColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].skinColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].skinColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].eyeColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].eyeColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].eyeColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shirtColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shirtColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shirtColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].underShirtColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].underShirtColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].underShirtColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].pantsColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].pantsColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].pantsColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shoeColor).get_R() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shoeColor).get_G() | 0);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (($T06().player[b].shoeColor).get_B() | 0);
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes11, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes11.length
              );
            } else if ((msgType | 0) === 5) {
              var bytes13 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b3 = (number & 0xFF);
              var b4 = ((number2) | 0);
              if (+number2 < 44) {
                var b5 = ($T06().player[number].inventory[((number2) | 0)].stack & 0xFF);
                if (($T06().player[number].inventory[((number2) | 0)].stack | 0) < 0) {
                  b5 = 0;
                }
              } else {
                b5 = ($T06().player[number].armor[((((number2) | 0) - 44) | 0)].stack & 0xFF);
                if (($T06().player[number].armor[((((number2) | 0) - 44) | 0)].stack | 0) < 0) {
                  b5 = 0;
                }
              }
              var text2 = text;
              if (text2 === null) {
                text2 = "";
              }
              var bytes14 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text2);
              num2 = ((num2 + ((3 + (bytes14.length | 0)) | 0)) | 0);
              var bytes15 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes15, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes13, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b3;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[6] = b4;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[7] = b5;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes14, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes14.length
              );
            } else if ((msgType | 0) === 6) {
              var bytes16 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes17 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes17, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes16, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
            } else if ((msgType | 0) === 7) {
              var bytes18 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes19 = $S00().CallStatic($T05(), "GetBytes", null, (($T06().time) | 0));
              var b6 = 0;
              if ($T06().dayTime) {
                b6 = 1;
              }
              var b8 = 0;
              if ($T06().bloodMoon) {
                b8 = 1;
              }
              var bytes20 = $S00().CallStatic($T05(), "GetBytes", null, $T06().maxTilesX);
              var bytes21 = $S00().CallStatic($T05(), "GetBytes", null, $T06().maxTilesY);
              var bytes22 = $S00().CallStatic($T05(), "GetBytes", null, $T06().spawnTileX);
              var bytes23 = $S00().CallStatic($T05(), "GetBytes", null, $T06().spawnTileY);
              var bytes24 = $S00().CallStatic($T05(), "GetBytes", null, (($T06().worldSurface) | 0));
              var bytes25 = $S00().CallStatic($T05(), "GetBytes", null, (($T06().rockLayer) | 0));
              var bytes26 = $S00().CallStatic($T05(), "GetBytes", null, $T06().worldID);
              var bytes27 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), $T06().worldName);
              num2 = ((num2 + (((((((((((((((((((((((bytes19.length | 0) + 1) | 0) + 1) | 0) + 1) | 0) + (bytes20.length | 0)) | 0) + (bytes21.length | 0)) | 0) + (bytes22.length | 0)) | 0) + (bytes23.length | 0)) | 0) + (bytes24.length | 0)) | 0) + (bytes25.length | 0)) | 0) + (bytes26.length | 0)) | 0) + (bytes27.length | 0)) | 0)) | 0);
              var bytes28 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes28, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes18, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes19, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                5, 
                bytes19.length
              );
              num3 = ((num3 + (bytes19.length | 0)) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b6;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = ($T06().moonPhase & 0xFF);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b8;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes20, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes20.length
              );
              num3 = ((num3 + (bytes20.length | 0)) | 0);
              $T07().BlockCopy(
                bytes21, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes21.length
              );
              num3 = ((num3 + (bytes21.length | 0)) | 0);
              $T07().BlockCopy(
                bytes22, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes22.length
              );
              num3 = ((num3 + (bytes22.length | 0)) | 0);
              $T07().BlockCopy(
                bytes23, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes23.length
              );
              num3 = ((num3 + (bytes23.length | 0)) | 0);
              $T07().BlockCopy(
                bytes24, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes24.length
              );
              num3 = ((num3 + (bytes24.length | 0)) | 0);
              $T07().BlockCopy(
                bytes25, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes25.length
              );
              num3 = ((num3 + (bytes25.length | 0)) | 0);
              $T07().BlockCopy(
                bytes26, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes26.length
              );
              num3 = ((num3 + (bytes26.length | 0)) | 0);
              $T07().BlockCopy(
                bytes27, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes27.length
              );
              num3 = ((num3 + (bytes27.length | 0)) | 0);
            } else if ((msgType | 0) === 8) {
              var bytes29 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes30 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes31 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + (((bytes30.length | 0) + (bytes31.length | 0)) | 0)) | 0);
              var bytes32 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes32, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes29, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes30, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes31, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
            } else if ((msgType | 0) === 9) {
              var bytes33 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes34 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes35 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text);
              num2 = ((num2 + (((bytes34.length | 0) + (bytes35.length | 0)) | 0)) | 0);
              var bytes36 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes36, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes33, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes34, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes35, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes35.length
              );
            } else if ((msgType | 0) === 10) {
              var num4 = ((number + 0x8000 & 0xFFFF) - 0x8000);
              var num5 = ((number2) | 0);
              var num6 = ((number3) | 0);
              var bytes37 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              $T07().BlockCopy(
                bytes37, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              var bytes38 = $S02().CallStatic($T05(), "GetBytes", null, num4);
              $T07().BlockCopy(
                bytes38, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
              var bytes39 = $S00().CallStatic($T05(), "GetBytes", null, num5);
              $T07().BlockCopy(
                bytes39, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              var bytes40 = $S00().CallStatic($T05(), "GetBytes", null, num6);
              $T07().BlockCopy(
                bytes40, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);

              for (var i = num5; i < ((num5 + num4) | 0); i = ((i + 1) | 0)) {
                var b9 = 0;
                if ($T06().tile.Get(i, num6).active) {
                  b9 = (((b9 + 1) | 0) & 0xFF);
                }
                if ($T06().tile.Get(i, num6).lighted) {
                  b9 = (((b9 + 2) | 0) & 0xFF);
                }
                if (($T06().tile.Get(i, num6).wall | 0) > 0) {
                  b9 = (((b9 + 4) | 0) & 0xFF);
                }
                if (($T06().tile.Get(i, num6).liquid | 0) > 0) {
                  b9 = (((b9 + 8) | 0) & 0xFF);
                }
                $thisType.buffer[num].writeBuffer[num3] = b9;
                num3 = ((num3 + 1) | 0);
                var bytes41 = $S02().CallStatic($T05(), "GetBytes", null, $T06().tile.Get(i, num6).frameX);
                var bytes42 = $S02().CallStatic($T05(), "GetBytes", null, $T06().tile.Get(i, num6).frameY);
                var wall = ($T06().tile.Get(i, num6).wall | 0);
                if ($T06().tile.Get(i, num6).active) {
                  $thisType.buffer[num].writeBuffer[num3] = ($T06().tile.Get(i, num6).type | 0);
                  num3 = ((num3 + 1) | 0);
                  if ($T06().tileFrameImportant[$T06().tile.Get(i, num6).type]) {
                    $T07().BlockCopy(
                      bytes41, 
                      0, 
                      $thisType.buffer[num].writeBuffer, 
                      num3, 
                      2
                    );
                    num3 = ((num3 + 2) | 0);
                    $T07().BlockCopy(
                      bytes42, 
                      0, 
                      $thisType.buffer[num].writeBuffer, 
                      num3, 
                      2
                    );
                    num3 = ((num3 + 2) | 0);
                  }
                }
                if (wall > 0) {
                  $thisType.buffer[num].writeBuffer[num3] = wall;
                  num3 = ((num3 + 1) | 0);
                }
                if (($T06().tile.Get(i, num6).liquid | 0) > 0) {
                  $thisType.buffer[num].writeBuffer[num3] = ($T06().tile.Get(i, num6).liquid | 0);
                  num3 = ((num3 + 1) | 0);
                  var b10 = 0;
                  if ($T06().tile.Get(i, num6).lava) {
                    b10 = 1;
                  }
                  $thisType.buffer[num].writeBuffer[num3] = b10;
                  num3 = ((num3 + 1) | 0);
                }
              }
              var bytes43 = $S00().CallStatic($T05(), "GetBytes", null, ((num3 - 4) | 0));
              $T07().BlockCopy(
                bytes43, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              num2 = num3;
            } else if ((msgType | 0) === 11) {
              var bytes44 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes45 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes46 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              var bytes47 = $S00().CallStatic($T05(), "GetBytes", null, ((number3) | 0));
              var bytes48 = $S00().CallStatic($T05(), "GetBytes", null, ((number4) | 0));
              num2 = ((num2 + (((((((bytes45.length | 0) + (bytes46.length | 0)) | 0) + (bytes47.length | 0)) | 0) + (bytes48.length | 0)) | 0)) | 0);
              var bytes49 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes49, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes44, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes45, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes46, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes47, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes48, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
            } else if ((msgType | 0) === 12) {
              var bytes50 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b11 = (number & 0xFF);
              var bytes51 = $S00().CallStatic($T05(), "GetBytes", null, $T06().player[b11].SpawnX);
              var bytes52 = $S00().CallStatic($T05(), "GetBytes", null, $T06().player[b11].SpawnY);
              num2 = ((num2 + ((((1 + (bytes51.length | 0)) | 0) + (bytes52.length | 0)) | 0)) | 0);
              var bytes53 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes53, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes50, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b11;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes51, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes52, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
            } else if ((msgType | 0) === 13) {
              var bytes54 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b12 = (number & 0xFF);
              var b13 = 0;
              if ($T06().player[b12].controlUp) {
                b13 = (((b13 + 1) | 0) & 0xFF);
              }
              if ($T06().player[b12].controlDown) {
                b13 = (((b13 + 2) | 0) & 0xFF);
              }
              if ($T06().player[b12].controlLeft) {
                b13 = (((b13 + 4) | 0) & 0xFF);
              }
              if ($T06().player[b12].controlRight) {
                b13 = (((b13 + 8) | 0) & 0xFF);
              }
              if ($T06().player[b12].controlJump) {
                b13 = (((b13 + 16) | 0) & 0xFF);
              }
              if ($T06().player[b12].controlUseItem) {
                b13 = (((b13 + 32) | 0) & 0xFF);
              }
              if (($T06().player[b12].direction | 0) === 1) {
                b13 = (((b13 + 64) | 0) & 0xFF);
              }
              var b14 = ($T06().player[b12].selectedItem & 0xFF);
              var bytes55 = $S03().CallStatic($T05(), "GetBytes", null, $T06().player[number].position.X);
              var bytes56 = $S03().CallStatic($T05(), "GetBytes", null, $T06().player[number].position.Y);
              var bytes57 = $S03().CallStatic($T05(), "GetBytes", null, $T06().player[number].velocity.X);
              var bytes58 = $S03().CallStatic($T05(), "GetBytes", null, $T06().player[number].velocity.Y);
              num2 = ((num2 + ((((((((3 + (bytes55.length | 0)) | 0) + (bytes56.length | 0)) | 0) + (bytes57.length | 0)) | 0) + (bytes58.length | 0)) | 0)) | 0);
              var bytes59 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes59, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes54, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b12;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[6] = b13;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[7] = b14;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes55, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes56, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes57, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes58, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
            } else if ((msgType | 0) === 14) {
              var bytes60 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b15 = (number & 0xFF);
              var b16 = ((number2) | 0);
              num2 = ((num2 + 2) | 0);
              var bytes61 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes61, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes60, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b15;
              $thisType.buffer[num].writeBuffer[6] = b16;
            } else if ((msgType | 0) === 15) {
              var bytes62 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes63 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes63, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes62, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
            } else if ((msgType | 0) === 16) {
              var bytes64 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b17 = (number & 0xFF);
              var bytes65 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b17].statLife + 0x8000 & 0xFFFF) - 0x8000));
              var bytes66 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b17].statLifeMax + 0x8000 & 0xFFFF) - 0x8000));
              num2 = ((num2 + ((((1 + (bytes65.length | 0)) | 0) + (bytes66.length | 0)) | 0)) | 0);
              var bytes67 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes67, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes64, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b17;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes65, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes66, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
            } else if ((msgType | 0) === 17) {
              var bytes68 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b18 = (number & 0xFF);
              var bytes69 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              var bytes70 = $S00().CallStatic($T05(), "GetBytes", null, ((number3) | 0));
              var b19 = ((number4) | 0);
              num2 = ((num2 + ((((((1 + (bytes69.length | 0)) | 0) + (bytes70.length | 0)) | 0) + 1) | 0)) | 0);
              var bytes71 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes71, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes68, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b18;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes69, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes70, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b19;
            } else if ((msgType | 0) === 18) {
              var bytes72 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              $S00().CallStatic($T05(), "GetBytes", null, (($T06().time) | 0));
              var b20 = 0;
              if ($T06().dayTime) {
                b20 = 1;
              }
              var bytes73 = $S00().CallStatic($T05(), "GetBytes", null, (($T06().time) | 0));
              var bytes74 = $S02().CallStatic($T05(), "GetBytes", null, $T06().sunModY);
              var bytes75 = $S02().CallStatic($T05(), "GetBytes", null, $T06().moonModY);
              num2 = ((num2 + ((((((1 + (bytes73.length | 0)) | 0) + (bytes74.length | 0)) | 0) + (bytes75.length | 0)) | 0)) | 0);
              var bytes76 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes76, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes72, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b20;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes73, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes74, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes75, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
            } else if ((msgType | 0) === 19) {
              var bytes77 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b21 = (number & 0xFF);
              var bytes78 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              var bytes79 = $S00().CallStatic($T05(), "GetBytes", null, ((number3) | 0));
              var b22 = 0;
              if (+number4 === 1) {
                b22 = 1;
              }
              num2 = ((num2 + ((((((1 + (bytes78.length | 0)) | 0) + (bytes79.length | 0)) | 0) + 1) | 0)) | 0);
              var bytes80 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes80, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes77, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b21;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes78, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes79, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b22;
            } else if ((msgType | 0) === 20) {
              var num7 = ((number + 0x8000 & 0xFFFF) - 0x8000);
              var num8 = ((number2) | 0);
              var num9 = ((number3) | 0);
              var bytes81 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              $T07().BlockCopy(
                bytes81, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              var bytes82 = $S02().CallStatic($T05(), "GetBytes", null, num7);
              $T07().BlockCopy(
                bytes82, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
              var bytes83 = $S00().CallStatic($T05(), "GetBytes", null, num8);
              $T07().BlockCopy(
                bytes83, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              var bytes84 = $S00().CallStatic($T05(), "GetBytes", null, num9);
              $T07().BlockCopy(
                bytes84, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);

              for (var j = num8; j < ((num8 + num7) | 0); j = ((j + 1) | 0)) {

                for (var k = num9; k < ((num9 + num7) | 0); k = ((k + 1) | 0)) {
                  var b23 = 0;
                  if ($T06().tile.Get(j, k).active) {
                    b23 = (((b23 + 1) | 0) & 0xFF);
                  }
                  if ($T06().tile.Get(j, k).lighted) {
                    b23 = (((b23 + 2) | 0) & 0xFF);
                  }
                  if (($T06().tile.Get(j, k).wall | 0) > 0) {
                    b23 = (((b23 + 4) | 0) & 0xFF);
                  }
                  if (!((($T06().tile.Get(j, k).liquid | 0) <= 0) || (($T06().netMode | 0) !== 2))) {
                    b23 = (((b23 + 8) | 0) & 0xFF);
                  }
                  $thisType.buffer[num].writeBuffer[num3] = b23;
                  num3 = ((num3 + 1) | 0);
                  var bytes85 = $S02().CallStatic($T05(), "GetBytes", null, $T06().tile.Get(j, k).frameX);
                  var bytes86 = $S02().CallStatic($T05(), "GetBytes", null, $T06().tile.Get(j, k).frameY);
                  var wall2 = ($T06().tile.Get(j, k).wall | 0);
                  if ($T06().tile.Get(j, k).active) {
                    $thisType.buffer[num].writeBuffer[num3] = ($T06().tile.Get(j, k).type | 0);
                    num3 = ((num3 + 1) | 0);
                    if ($T06().tileFrameImportant[$T06().tile.Get(j, k).type]) {
                      $T07().BlockCopy(
                        bytes85, 
                        0, 
                        $thisType.buffer[num].writeBuffer, 
                        num3, 
                        2
                      );
                      num3 = ((num3 + 2) | 0);
                      $T07().BlockCopy(
                        bytes86, 
                        0, 
                        $thisType.buffer[num].writeBuffer, 
                        num3, 
                        2
                      );
                      num3 = ((num3 + 2) | 0);
                    }
                  }
                  if (wall2 > 0) {
                    $thisType.buffer[num].writeBuffer[num3] = wall2;
                    num3 = ((num3 + 1) | 0);
                  }
                  if (!((($T06().tile.Get(j, k).liquid | 0) <= 0) || (($T06().netMode | 0) !== 2))) {
                    $thisType.buffer[num].writeBuffer[num3] = ($T06().tile.Get(j, k).liquid | 0);
                    num3 = ((num3 + 1) | 0);
                    var b24 = 0;
                    if ($T06().tile.Get(j, k).lava) {
                      b24 = 1;
                    }
                    $thisType.buffer[num].writeBuffer[num3] = b24;
                    num3 = ((num3 + 1) | 0);
                  }
                }
              }
              var bytes87 = $S00().CallStatic($T05(), "GetBytes", null, ((num3 - 4) | 0));
              $T07().BlockCopy(
                bytes87, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              num2 = num3;
            } else if ((msgType | 0) === 21) {
              var bytes88 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes89 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var bytes90 = $S03().CallStatic($T05(), "GetBytes", null, $T06().item[number].position.X);
              var bytes91 = $S03().CallStatic($T05(), "GetBytes", null, $T06().item[number].position.Y);
              var bytes92 = $S03().CallStatic($T05(), "GetBytes", null, $T06().item[number].velocity.X);
              var bytes93 = $S03().CallStatic($T05(), "GetBytes", null, $T06().item[number].velocity.Y);
              var b25 = ($T06().item[number].stack & 0xFF);
              var text3 = "0";
              if (!(!$T06().item[number].active || (($T06().item[number].stack | 0) <= 0))) {
                text3 = $T06().item[number].$name;
              }
              if (text3 === null) {
                text3 = "0";
              }
              var bytes94 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text3);
              num2 = ((num2 + (((((((((((((bytes89.length | 0) + (bytes90.length | 0)) | 0) + (bytes91.length | 0)) | 0) + (bytes92.length | 0)) | 0) + (bytes93.length | 0)) | 0) + 1) | 0) + (bytes94.length | 0)) | 0)) | 0);
              var bytes95 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes95, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes88, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes89, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes89.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes90, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes90.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes91, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes91.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes92, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes92.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes93, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes93.length
              );
              num3 = ((num3 + 4) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b25;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes94, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes94.length
              );
            } else if ((msgType | 0) === 22) {
              var bytes96 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes97 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var b26 = ($T06().item[number].owner & 0xFF);
              num2 = ((num2 + (((bytes97.length | 0) + 1) | 0)) | 0);
              var bytes98 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes98, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes96, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes97, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes97.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b26;
            } else if ((msgType | 0) === 23) {
              var bytes99 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes100 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var bytes101 = $S03().CallStatic($T05(), "GetBytes", null, $T06().npc[number].position.X);
              var bytes102 = $S03().CallStatic($T05(), "GetBytes", null, $T06().npc[number].position.Y);
              var bytes103 = $S03().CallStatic($T05(), "GetBytes", null, $T06().npc[number].velocity.X);
              var bytes104 = $S03().CallStatic($T05(), "GetBytes", null, $T06().npc[number].velocity.Y);
              var bytes105 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().npc[number].target + 0x8000 & 0xFFFF) - 0x8000));
              var bytes106 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().npc[number].life + 0x8000 & 0xFFFF) - 0x8000));
              if (!$T06().npc[number].active) {
                bytes106 = $S02().CallStatic($T05(), "GetBytes", null, 0);
              }
              var bytes107 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), $T06().npc[number].$name);
              num2 = ((num2 + (((((((((((((((((((((bytes100.length | 0) + (bytes101.length | 0)) | 0) + (bytes102.length | 0)) | 0) + (bytes103.length | 0)) | 0) + (bytes104.length | 0)) | 0) + (bytes105.length | 0)) | 0) + (bytes106.length | 0)) | 0) + Math.imul($T11().maxAI, 4)) | 0) + (bytes107.length | 0)) | 0) + 1) | 0) + 1) | 0)) | 0);
              var bytes108 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes108, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes99, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes100, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes100.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes101, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes101.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes102, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes102.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes103, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes103.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes104, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes104.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes105, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes105.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (((($T06().npc[number].direction | 0) + 1) | 0) & 0xFF);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = (((($T06().npc[number].directionY | 0) + 1) | 0) & 0xFF);
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes106, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes106.length
              );
              num3 = ((num3 + 2) | 0);

              for (var l = 0; l < ($T11().maxAI | 0); l = ((l + 1) | 0)) {
                var bytes109 = $S03().CallStatic($T05(), "GetBytes", null, $T06().npc[number].ai[l]);
                $T07().BlockCopy(
                  bytes109, 
                  0, 
                  $thisType.buffer[num].writeBuffer, 
                  num3, 
                  bytes109.length
                );
                num3 = ((num3 + 4) | 0);
              }
              $T07().BlockCopy(
                bytes107, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes107.length
              );
            } else if ((msgType | 0) === 24) {
              var bytes110 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes111 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var b27 = ((number2) | 0);
              num2 = ((num2 + (((bytes111.length | 0) + 1) | 0)) | 0);
              var bytes112 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes112, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes110, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes111, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes111.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b27;
            } else if ((msgType | 0) === 25) {
              var bytes113 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b28 = (number & 0xFF);
              var bytes114 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text);
              var b29 = ((number2) | 0);
              var b30 = ((number3) | 0);
              var b31 = ((number4) | 0);
              num2 = ((num2 + ((((1 + (bytes114.length | 0)) | 0) + 3) | 0)) | 0);
              var bytes115 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes115, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes113, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b28;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b29;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b30;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b31;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes114, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes114.length
              );
            } else if ((msgType | 0) === 26) {
              var bytes116 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b32 = (number & 0xFF);
              var b33 = ((+number2 + 1) | 0);
              var bytes117 = $S02().CallStatic($T05(), "GetBytes", null, ((number3) | 0));
              var b34 = ((number4) | 0);
              num2 = ((num2 + ((((2 + (bytes117.length | 0)) | 0) + 1) | 0)) | 0);
              var bytes118 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes118, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes116, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b32;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b33;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes117, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes117.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b34;
            } else if ((msgType | 0) === 27) {
              var bytes119 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes120 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().projectile[number].identity + 0x8000 & 0xFFFF) - 0x8000));
              var bytes121 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].position.X);
              var bytes122 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].position.Y);
              var bytes123 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].velocity.X);
              var bytes124 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].velocity.Y);
              var bytes125 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].knockBack);
              var bytes126 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().projectile[number].damage + 0x8000 & 0xFFFF) - 0x8000));
              $T07().BlockCopy(
                bytes119, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes120, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes120.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes121, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes121.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes122, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes122.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes123, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes123.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes124, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes124.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes125, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes125.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes126, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes126.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = ($T06().projectile[number].owner & 0xFF);
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = ($T06().projectile[number].type & 0xFF);
              num3 = ((num3 + 1) | 0);

              for (var m = 0; m < ($T12().maxAI | 0); m = ((m + 1) | 0)) {
                var bytes127 = $S03().CallStatic($T05(), "GetBytes", null, $T06().projectile[number].ai[m]);
                $T07().BlockCopy(
                  bytes127, 
                  0, 
                  $thisType.buffer[num].writeBuffer, 
                  num3, 
                  bytes127.length
                );
                num3 = ((num3 + 4) | 0);
              }
              num2 = ((num2 + num3) | 0);
              var bytes128 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes128, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
            } else if ((msgType | 0) === 28) {
              var bytes129 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes130 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var bytes131 = $S02().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              var bytes132 = $S03().CallStatic($T05(), "GetBytes", null, number3);
              var b35 = ((+number4 + 1) | 0);
              num2 = ((num2 + (((((((bytes130.length | 0) + (bytes131.length | 0)) | 0) + (bytes132.length | 0)) | 0) + 1) | 0)) | 0);
              var bytes133 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes133, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes129, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes130, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes130.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes131, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes131.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes132, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes132.length
              );
              num3 = ((num3 + 4) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b35;
            } else if ((msgType | 0) === 29) {
              var bytes134 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes135 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var b36 = ((number2) | 0);
              num2 = ((num2 + (((bytes135.length | 0) + 1) | 0)) | 0);
              var bytes136 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes136, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes134, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes135, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes135.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b36;
            } else if ((msgType | 0) === 30) {
              var bytes137 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b37 = (number & 0xFF);
              var b38 = 0;
              if ($T06().player[b37].hostile) {
                b38 = 1;
              }
              num2 = ((num2 + 2) | 0);
              var bytes138 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes138, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes137, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b37;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b38;
            } else if ((msgType | 0) === 31) {
              var bytes139 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes140 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes141 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + (((bytes140.length | 0) + (bytes141.length | 0)) | 0)) | 0);
              var bytes142 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes142, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes139, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes140, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes140.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes141, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes141.length
              );
            } else if ((msgType | 0) === 32) {
              var bytes143 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes144 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var b39 = ((number2) | 0);
              var b40 = ($T06().chest[number].item[((number2) | 0)].stack & 0xFF);
              if ($T06().chest[number].item[((number2) | 0)].$name === null) {
                var bytes145 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), "");
              } else {
                bytes145 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), $T06().chest[number].item[((number2) | 0)].$name);
              }
              num2 = ((num2 + (((((((bytes144.length | 0) + 1) | 0) + 1) | 0) + (bytes145.length | 0)) | 0)) | 0);
              var bytes146 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes146, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes143, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes144, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes144.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b39;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b40;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes145, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes145.length
              );
            } else if ((msgType | 0) === 33) {
              var bytes147 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes148 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              if ((number | 0) > -1) {
                var bytes149 = $S00().CallStatic($T05(), "GetBytes", null, $T06().chest[number].x);
                var bytes150 = $S00().CallStatic($T05(), "GetBytes", null, $T06().chest[number].y);
              } else {
                bytes149 = $S00().CallStatic($T05(), "GetBytes", null, 0);
                bytes150 = $S00().CallStatic($T05(), "GetBytes", null, 0);
              }
              num2 = ((num2 + (((((bytes148.length | 0) + (bytes149.length | 0)) | 0) + (bytes150.length | 0)) | 0)) | 0);
              var bytes151 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes151, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes147, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes148, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes148.length
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes149, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes149.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes150, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes150.length
              );
            } else if ((msgType | 0) === 34) {
              var bytes152 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes153 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes154 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + (((bytes153.length | 0) + (bytes154.length | 0)) | 0)) | 0);
              var bytes155 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes155, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes152, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes153, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes153.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes154, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes154.length
              );
            } else if ((msgType | 0) === 35) {
              var bytes156 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b41 = (number & 0xFF);
              var bytes157 = $S02().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + ((1 + (bytes157.length | 0)) | 0)) | 0);
              var bytes158 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes158, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes156, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b41;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes157, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
            } else if ((msgType | 0) === 36) {
              var bytes159 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b42 = (number & 0xFF);
              var b43 = 0;
              if ($T06().player[b42].zoneEvil) {
                b43 = 1;
              }
              var b44 = 0;
              if ($T06().player[b42].zoneMeteor) {
                b44 = 1;
              }
              var b45 = 0;
              if ($T06().player[b42].zoneDungeon) {
                b45 = 1;
              }
              var b46 = 0;
              if ($T06().player[b42].zoneJungle) {
                b46 = 1;
              }
              num2 = ((num2 + 4) | 0);
              var bytes160 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes160, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes159, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b42;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b43;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b44;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b45;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b46;
              num3 = ((num3 + 1) | 0);
            } else if ((msgType | 0) === 37) {
              var bytes161 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes162 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes162, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes161, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
            } else if ((msgType | 0) === 38) {
              var bytes163 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes164 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), text);
              num2 = ((num2 + (bytes164.length | 0)) | 0);
              var bytes165 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes165, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes163, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes164, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes164.length
              );
            } else if ((msgType | 0) === 39) {
              var bytes166 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes167 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              num2 = ((num2 + (bytes167.length | 0)) | 0);
              var bytes168 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes168, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes166, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes167, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes167.length
              );
            } else if ((msgType | 0) === 40) {
              var bytes169 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b47 = (number & 0xFF);
              var bytes170 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b47].talkNPC + 0x8000 & 0xFFFF) - 0x8000));
              num2 = ((num2 + ((1 + (bytes170.length | 0)) | 0)) | 0);
              var bytes171 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes171, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes169, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b47;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes170, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes170.length
              );
              num3 = ((num3 + 2) | 0);
            } else if ((msgType | 0) === 41) {
              var bytes172 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b48 = (number & 0xFF);
              var bytes173 = $S03().CallStatic($T05(), "GetBytes", null, $T06().player[b48].itemRotation);
              var bytes174 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b48].itemAnimation + 0x8000 & 0xFFFF) - 0x8000));
              num2 = ((num2 + ((((1 + (bytes173.length | 0)) | 0) + (bytes174.length | 0)) | 0)) | 0);
              var bytes175 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes175, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes172, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b48;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes173, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes173.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes174, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes174.length
              );
            } else if ((msgType | 0) === 42) {
              var bytes176 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b49 = (number & 0xFF);
              var bytes177 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b49].statMana + 0x8000 & 0xFFFF) - 0x8000));
              var bytes178 = $S02().CallStatic($T05(), "GetBytes", null, (($T06().player[b49].statManaMax + 0x8000 & 0xFFFF) - 0x8000));
              num2 = ((num2 + ((((1 + (bytes177.length | 0)) | 0) + (bytes178.length | 0)) | 0)) | 0);
              var bytes179 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes179, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes176, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b49;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes177, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
              num3 = ((num3 + 2) | 0);
              $T07().BlockCopy(
                bytes178, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
            } else if ((msgType | 0) === 43) {
              var bytes180 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b50 = (number & 0xFF);
              var bytes181 = $S02().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + ((1 + (bytes181.length | 0)) | 0)) | 0);
              var bytes182 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes182, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes180, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b50;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes181, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                2
              );
            } else if ((msgType | 0) === 44) {
              var bytes183 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b51 = (number & 0xFF);
              var b52 = ((+number2 + 1) | 0);
              var bytes184 = $S02().CallStatic($T05(), "GetBytes", null, ((number3) | 0));
              var b53 = ((number4) | 0);
              num2 = ((num2 + ((((2 + (bytes184.length | 0)) | 0) + 1) | 0)) | 0);
              var bytes185 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes185, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes183, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[num3] = b51;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b52;
              num3 = ((num3 + 1) | 0);
              $T07().BlockCopy(
                bytes184, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes184.length
              );
              num3 = ((num3 + 2) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b53;
            } else if ((msgType | 0) === 45) {
              var bytes186 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var b54 = (number & 0xFF);
              var b55 = ($T06().player[b54].team & 0xFF);
              num2 = ((num2 + 2) | 0);
              var bytes187 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes187, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes186, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $thisType.buffer[num].writeBuffer[5] = b54;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b55;
            } else if ((msgType | 0) === 46) {
              var bytes188 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes189 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes190 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              num2 = ((num2 + (((bytes189.length | 0) + (bytes190.length | 0)) | 0)) | 0);
              var bytes191 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes191, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes188, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes189, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes189.length
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes190, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes190.length
              );
            } else if ((msgType | 0) === 47) {
              var bytes192 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes193 = $S02().CallStatic($T05(), "GetBytes", null, ((number + 0x8000 & 0xFFFF) - 0x8000));
              var bytes194 = $S00().CallStatic($T05(), "GetBytes", null, $T06().sign[number].x);
              var bytes195 = $S00().CallStatic($T05(), "GetBytes", null, $T06().sign[number].y);
              var bytes196 = $S01().CallVirtual("GetBytes", null, $T0C().get_ASCII(), $T06().sign[number].text);
              num2 = ((num2 + (((((((bytes193.length | 0) + (bytes194.length | 0)) | 0) + (bytes195.length | 0)) | 0) + (bytes196.length | 0)) | 0)) | 0);
              var bytes197 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes197, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes192, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes193, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes193.length
              );
              num3 = ((num3 + (bytes193.length | 0)) | 0);
              $T07().BlockCopy(
                bytes194, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes194.length
              );
              num3 = ((num3 + (bytes194.length | 0)) | 0);
              $T07().BlockCopy(
                bytes195, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes195.length
              );
              num3 = ((num3 + (bytes195.length | 0)) | 0);
              $T07().BlockCopy(
                bytes196, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                bytes196.length
              );
              num3 = ((num3 + (bytes196.length | 0)) | 0);
            } else if ((msgType | 0) === 48) {
              var bytes198 = $S00().CallStatic($T05(), "GetBytes", null, msgType);
              var bytes199 = $S00().CallStatic($T05(), "GetBytes", null, number);
              var bytes200 = $S00().CallStatic($T05(), "GetBytes", null, ((number2) | 0));
              var liquid = ($T06().tile.Get(number, ((number2) | 0)).liquid | 0);
              var b56 = 0;
              if ($T06().tile.Get(number, ((number2) | 0)).lava) {
                b56 = 1;
              }
              num2 = ((num2 + (((((((bytes199.length | 0) + (bytes200.length | 0)) | 0) + 1) | 0) + 1) | 0)) | 0);
              var bytes201 = $S00().CallStatic($T05(), "GetBytes", null, ((num2 - 4) | 0));
              $T07().BlockCopy(
                bytes201, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                0, 
                4
              );
              $T07().BlockCopy(
                bytes198, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                4, 
                1
              );
              $T07().BlockCopy(
                bytes199, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $T07().BlockCopy(
                bytes200, 
                0, 
                $thisType.buffer[num].writeBuffer, 
                num3, 
                4
              );
              num3 = ((num3 + 4) | 0);
              $thisType.buffer[num].writeBuffer[num3] = liquid;
              num3 = ((num3 + 1) | 0);
              $thisType.buffer[num].writeBuffer[num3] = b56;
              num3 = ((num3 + 1) | 0);
            }
            if (($T06().netMode | 0) === 1) {
              if (!$T0A().clientSock.tcpClient.get_Connected()) {
                break $labelgroup0;
              }
              try {
                $thisType.buffer[num].spamCount = ((($thisType.buffer[num].spamCount | 0) + 1) | 0);
                $T0A().clientSock.networkStream.BeginWrite(
                  $thisType.buffer[num].writeBuffer, 
                  0, 
                  num2, 
                  $T15().New($T0A().clientSock, null, new JSIL.MethodPointerInfo($asm0F.Terraria.ClientSock, "ClientWriteCallBack", $S04(), false, false)), 
                  $T0A().clientSock.networkStream
                );
                break $labelgroup0;
              } catch ($exception) {
              }
            }
            if ((remoteClient | 0) === -1) {

              for (var n = 0; n < 9; n = ((n + 1) | 0)) {
                if (!((n === (ignoreClient | 0)) || 
                    (!$thisType.buffer[n].broadcast && 
                      ((($T0A().serverSock[n].state | 0) < 3) || 
                        ((msgType | 0) !== 10))) || !($T0A().serverSock[n].tcpClient).get_Connected())) {
                  try {
                    $thisType.buffer[n].spamCount = ((($thisType.buffer[n].spamCount | 0) + 1) | 0);
                    ($T0A().serverSock[n].networkStream).BeginWrite(
                      $thisType.buffer[num].writeBuffer, 
                      0, 
                      num2, 
                      $T15().New($T0A().serverSock[n], null, new JSIL.MethodPointerInfo($asm0F.Terraria.ServerSock, "ServerWriteCallBack", $S05(), false, false)), 
                      $T0A().serverSock[n].networkStream
                    );
                  } catch ($exception) {
                  }
                }
              }
            } else if (($T0A().serverSock[remoteClient].tcpClient).get_Connected()) {
              try {
                $thisType.buffer[remoteClient].spamCount = ((($thisType.buffer[remoteClient].spamCount | 0) + 1) | 0);
                ($T0A().serverSock[remoteClient].networkStream).BeginWrite(
                  $thisType.buffer[num].writeBuffer, 
                  0, 
                  num2, 
                  $T15().New($T0A().serverSock[remoteClient], null, new JSIL.MethodPointerInfo($asm0F.Terraria.ServerSock, "ServerWriteCallBack", $S05(), false, false)), 
                  $T0A().serverSock[remoteClient].networkStream
                );
              } catch ($exception) {
              }
            }
            break $labelgroup0;

        }
      }
      /* Original label IL_3351 */ 
      if ($T06().verboseNetplay) {

        for (var num11 = 0; num11 < num2; num11 = ((num11 + 1) | 0)) {
          var arg_3388_0 = ($thisType.buffer[num].writeBuffer[num11] | 0);
        }
      }
      $thisType.buffer[num].writeLocked = false;
      if (!(((msgType | 0) !== 19) || (($T06().netMode | 0) !== 1))) {
        $thisType.SendTileSquare(num, ((number2) | 0), ((number3) | 0), 5);
      }
      if (!(((msgType | 0) !== 2) || (($T06().netMode | 0) !== 2))) {
        $T0A().serverSock[num].kill = true;
      }
    } finally {
      if (flag.get()) {
        $T04().Exit(obj);
      }
    }
  }; 

  function NetMessage_SendSection (whoAmi, sectionX, sectionY) {
    ($T0A().serverSock[whoAmi].tileSection).Set(sectionX, sectionY, true);
    var num2 = Math.imul(sectionY, 150);

    for (var i = num2; i < ((num2 + 150) | 0); i = ((i + 1) | 0)) {
      $thisType.SendData(
        10, 
        whoAmi, 
        -1, 
        "", 
        200, 
        +(Math.imul(sectionX, 200)), 
        +i, 
        0
      );
    }
  }; 

  function NetMessage_SendTileSquare (whoAmi, tileX, tileY, size) {
    var num = (((((size | 0) - 1) | 0) / 2) | 0);
    $thisType.SendData(
      20, 
      whoAmi, 
      -1, 
      "", 
      size, 
      +((tileX | 0) - num), 
      +((tileY | 0) - num), 
      0
    );
  }; 

  function NetMessage_sendWater (x, y) {
    if (($T06().netMode | 0) === 1) {
      $thisType.SendData(
        48, 
        -1, 
        -1, 
        "", 
        x, 
        +y, 
        0, 
        0
      );
      return;
    }

    for (var i = 0; i < 9; i = ((i + 1) | 0)) {
      if (!((!$thisType.buffer[i].broadcast && 
            (($T0A().serverSock[i].state | 0) < 3)) || !($T0A().serverSock[i].tcpClient).get_Connected())) {
        if (($T0A().serverSock[i].tileSection).Get((((x | 0) / 200) | 0), (((y | 0) / 150) | 0))) {
          $thisType.SendData(
            48, 
            i, 
            -1, 
            "", 
            x, 
            +y, 
            0, 
            0
          );
        }
      }
    }
  }; 

  function NetMessage_syncPlayers () {

    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      var num = 0;
      if ($T06().player[i].active) {
        num = 1;
      }
      if (($T0A().serverSock[i].state | 0) === 10) {
        $thisType.SendData(
          14, 
          -1, 
          i, 
          "", 
          i, 
          +num, 
          0, 
          0
        );
        $thisType.SendData(
          13, 
          -1, 
          i, 
          "", 
          i, 
          0, 
          0, 
          0
        );
        $thisType.SendData(
          16, 
          -1, 
          i, 
          "", 
          i, 
          0, 
          0, 
          0
        );
        $thisType.SendData(
          30, 
          -1, 
          i, 
          "", 
          i, 
          0, 
          0, 
          0
        );
        $thisType.SendData(
          45, 
          -1, 
          i, 
          "", 
          i, 
          0, 
          0, 
          0
        );
        $thisType.SendData(
          42, 
          -1, 
          i, 
          "", 
          i, 
          0, 
          0, 
          0
        );
        $thisType.SendData(
          4, 
          -1, 
          i, 
          $T06().player[i].$name, 
          i, 
          0, 
          0, 
          0
        );

        for (var j = 0; j < 44; j = ((j + 1) | 0)) {
          $thisType.SendData(
            5, 
            -1, 
            i, 
            $T06().player[i].inventory[j].$name, 
            i, 
            +j, 
            0, 
            0
          );
        }
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[0].$name, 
          i, 
          44, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[1].$name, 
          i, 
          45, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[2].$name, 
          i, 
          46, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[3].$name, 
          i, 
          47, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[4].$name, 
          i, 
          48, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[5].$name, 
          i, 
          49, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[6].$name, 
          i, 
          50, 
          0, 
          0
        );
        $thisType.SendData(
          5, 
          -1, 
          i, 
          $T06().player[i].armor[7].$name, 
          i, 
          51, 
          0, 
          0
        );
        if (!$T0A().serverSock[i].announced) {
          $T0A().serverSock[i].announced = true;
          $thisType.SendData(
            25, 
            -1, 
            i, 
            JSIL.ConcatString($T06().player[i].$name, " has joined."), 
            8, 
            255, 
            240, 
            20
          );
        }
      } else {
        $thisType.SendData(
          14, 
          -1, 
          i, 
          "", 
          i, 
          +num, 
          0, 
          0
        );
        if ($T0A().serverSock[i].announced) {
          $T0A().serverSock[i].announced = false;
          $thisType.SendData(
            25, 
            -1, 
            i, 
            JSIL.ConcatString($T0A().serverSock[i].oldName, " has left."), 
            8, 
            255, 
            240, 
            20
          );
        }
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.NetMessage", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NetMessage__ctor
    );

    $.Method({Static:true , Public:true }, "CheckBytes", 
      JSIL.MethodSignature.Action($.Int32), 
      NetMessage_CheckBytes
    );

    $.Method({Static:true , Public:true }, "greetPlayer", 
      JSIL.MethodSignature.Action($.Int32), 
      NetMessage_greetPlayer
    );

    $.Method({Static:true , Public:true }, "RecieveBytes", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ]), 
      NetMessage_RecieveBytes
    );

    $.Method({Static:true , Public:true }, "SendData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.Int32, $.Single, 
          $.Single, $.Single
        ]), 
      NetMessage_SendData
    );

    $.Method({Static:true , Public:true }, "SendSection", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      NetMessage_SendSection
    );

    $.Method({Static:true , Public:true }, "SendTileSquare", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      NetMessage_SendTileSquare
    );

    $.Method({Static:true , Public:true }, "sendWater", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      NetMessage_sendWater
    );

    $.Method({Static:true , Public:true }, "syncPlayers", 
      JSIL.MethodSignature.Void, 
      NetMessage_syncPlayers
    );

    $.Field({Static:true , Public:true }, "buffer", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.messageBuffer")]), function ($pi) {
        return JSIL.Array.New($asm0F.Terraria.messageBuffer, 10);
      });


    function NetMessage__cctor () {
      $thisType.buffer = JSIL.Array.New($T00(), 10);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NetMessage__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Dust */ 

(function Dust$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };


  function Dust__ctor () {
  }; 

  function Dust_GetAlpha (newColor) {
    if (!(((this.type | 0) !== 15) && 
        ((this.type | 0) !== 20) && 
        ((this.type | 0) !== 21) && 
        ((this.type | 0) !== 29) && 
        ((this.type | 0) !== 35) && ((this.type | 0) !== 41))) {
      var r = (((newColor.get_R() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
      var g = (((newColor.get_G() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
      var b = (((newColor.get_B() | 0) - (((this.alpha | 0) / 3) | 0)) | 0);
    } else {
      r = (((newColor.get_R() | 0) - (this.alpha | 0)) | 0);
      g = (((newColor.get_G() | 0) - (this.alpha | 0)) | 0);
      b = (((newColor.get_B() | 0) - (this.alpha | 0)) | 0);
    }
    var num = (((newColor.get_A() | 0) - (this.alpha | 0)) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    return $S00().Construct(r, g, b, num);
  }; 

  function Dust_GetColor (newColor) {
    var num = ((((this.color).get_R() | 0) - ((255 - (newColor.get_R() | 0)) | 0)) & 0xFF);
    var num2 = ((((this.color).get_G() | 0) - ((255 - (newColor.get_G() | 0)) | 0)) & 0xFF);
    var num3 = ((((this.color).get_B() | 0) - ((255 - (newColor.get_B() | 0)) | 0)) & 0xFF);
    var num4 = ((((this.color).get_A() | 0) - ((255 - (newColor.get_A() | 0)) | 0)) & 0xFF);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    if (num2 < 0) {
      num2 = 0;
    }
    if (num2 > 255) {
      num2 = 255;
    }
    if (num3 < 0) {
      num3 = 0;
    }
    if (num3 > 255) {
      num3 = 255;
    }
    if (num4 < 0) {
      num4 = 0;
    }
    if (num4 > 255) {
      num4 = 255;
    }
    return $S00().Construct(num, num2, num3, num4);
  }; 

  function Dust_NewDust (Position, Width, Height, Type, SpeedX, SpeedY, Alpha, newColor, Scale) {
    var $hoisted00 = new ($T02())();
    if ($T04().gen) {
      return 0;
    }
    if (($T05().netMode | 0) === 2) {
      return 0;
    }
    var result = 0;

  $loop0: 
    for (var i = 0; i < 2000; ) {
      if (!$T05().dust[i].active) {
        result = i;
        $T05().dust[i].active = true;
        $T05().dust[i].type = (Type | 0);
        $T05().dust[i].noGravity = false;
        $T05().dust[i].color = newColor.MemberwiseClone();
        $T05().dust[i].alpha = (Alpha | 0);
        $T05().dust[i].position.X = (+Position.X + +($T05().rand.Next((((Width | 0) - 4) | 0)))) + 4;
        $T05().dust[i].position.Y = (+Position.Y + +($T05().rand.Next((((Height | 0) - 4) | 0)))) + 4;
        $T05().dust[i].velocity.X = (+($T05().rand.Next(-20, 21)) * 0.1) + +SpeedX;
        $T05().dust[i].velocity.Y = (+($T05().rand.Next(-20, 21)) * 0.1) + +SpeedY;
        $T05().dust[i].frame.X = Math.imul(10, Type);
        $T05().dust[i].frame.Y = Math.imul(10, $T05().rand.Next(3));
        $T05().dust[i].frame.Width = 8;
        $T05().dust[i].frame.Height = 8;
        $T05().dust[i].rotation = 0;
        $T05().dust[i].scale = 1 + (+($T05().rand.Next(-20, 21)) * 0.01);
        $T05().dust[i].scale *= +Scale;
        $T05().dust[i].noLight = false;
        if (!((($T05().dust[i].type | 0) !== 6) && (($T05().dust[i].type | 0) !== 29))) {
          $T05().dust[i].velocity.Y = +($T05().rand.Next(-10, 6)) * 0.1;
          var expr_220_cp_0 = $T05().dust[i];
          expr_220_cp_0.velocity.X = +expr_220_cp_0.velocity.X * 0.3;
          $T05().dust[i].scale *= 0.7;
        }
        if (($T05().dust[i].type | 0) === 33) {
          $T05().dust[i].alpha = 170;
          $T05().dust[i].velocity = $S01().CallStatic($T02(), "op_Multiply", null, $T05().dust[i].velocity.MemberwiseClone(), 0.5).MemberwiseClone();
          var expr_292_cp_0 = $T05().dust[i];
          expr_292_cp_0.velocity.Y = +expr_292_cp_0.velocity.Y + 1;
        }
        if (($T05().dust[i].type | 0) === 41) {
          $T05().dust[i].velocity = $S01().CallStatic($T02(), "op_Multiply", null, $T05().dust[i].velocity.MemberwiseClone(), 0).MemberwiseClone();
        }
        if ((($T05().dust[i].type | 0) !== 34) && (($T05().dust[i].type | 0) !== 35)) {
          break $loop0;
        }
        $T05().dust[i].velocity = $S01().CallStatic($T02(), "op_Multiply", null, $T05().dust[i].velocity.MemberwiseClone(), 0.1).MemberwiseClone();
        $T05().dust[i].velocity.Y = -0.5;
        if (!((($T05().dust[i].type | 0) !== 34) || $T07().WetCollision(($hoisted00._ctor($T05().dust[i].position.X, +$T05().dust[i].position.Y - 8), 
                $hoisted00), 4, 4))) {
          $T05().dust[i].active = false;
          break $loop0;
        }
        break $loop0;
      } else {
        i = ((i + 1) | 0);
      }
    }
    return result;
  }; 

  function Dust_UpdateDust () {
    var $hoisted00 = new ($T02())(), $hoisted01 = new ($T02())();

    for (var i = 0; i < 2000; i = ((i + 1) | 0)) {
      if ($T05().dust[i].active) {
        $T05().dust[i].position = $T02().op_Addition($T05().dust[i].position.MemberwiseClone(), $T05().dust[i].velocity.MemberwiseClone()).MemberwiseClone();
        if (!((($T05().dust[i].type | 0) !== 6) && (($T05().dust[i].type | 0) !== 29))) {
          if (!$T05().dust[i].noGravity) {
            var expr_77_cp_0 = $T05().dust[i];
            expr_77_cp_0.velocity.Y = +expr_77_cp_0.velocity.Y + 0.05;
          }
          if (!$T05().dust[i].noLight) {
            var num = +$T05().dust[i].scale * 1.6;
            if (($T05().dust[i].type | 0) === 29) {
              num *= 0.3;
            }
            if (num > 1) {
              num = 1;
            }
            $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num);
          }
        } else if (!((($T05().dust[i].type | 0) !== 14) && 
            (($T05().dust[i].type | 0) !== 16) && (($T05().dust[i].type | 0) !== 31))) {
          var expr_149_cp_0 = $T05().dust[i];
          expr_149_cp_0.velocity.Y = +expr_149_cp_0.velocity.Y * 0.98;
          var expr_166_cp_0 = $T05().dust[i];
          expr_166_cp_0.velocity.X = +expr_166_cp_0.velocity.X * 0.98;
        } else if (($T05().dust[i].type | 0) === 32) {
          $T05().dust[i].scale -= 0.01;
          var expr_1B0_cp_0 = $T05().dust[i];
          expr_1B0_cp_0.velocity.X = +expr_1B0_cp_0.velocity.X * 0.96;
          var expr_1CD_cp_0 = $T05().dust[i];
          expr_1CD_cp_0.velocity.Y = +expr_1CD_cp_0.velocity.Y + 0.1;
        } else if (($T05().dust[i].type | 0) === 15) {
          var expr_202_cp_0 = $T05().dust[i];
          expr_202_cp_0.velocity.Y = +expr_202_cp_0.velocity.Y * 0.98;
          var expr_21F_cp_0 = $T05().dust[i];
          expr_21F_cp_0.velocity.X = +expr_21F_cp_0.velocity.X * 0.98;
          var num2 = +$T05().dust[i].scale;
          if (num2 > 1) {
            num2 = 1;
          }
          $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num2);
        } else if (!((($T05().dust[i].type | 0) !== 20) && (($T05().dust[i].type | 0) !== 21))) {
          $T05().dust[i].scale += 0.005;
          var expr_2CD_cp_0 = $T05().dust[i];
          expr_2CD_cp_0.velocity.Y = +expr_2CD_cp_0.velocity.Y * 0.94;
          var expr_2EA_cp_0 = $T05().dust[i];
          expr_2EA_cp_0.velocity.X = +expr_2EA_cp_0.velocity.X * 0.94;
          var num3 = +$T05().dust[i].scale * 0.8;
          if (($T05().dust[i].type | 0) === 21) {
            num3 = +$T05().dust[i].scale * 0.4;
          }
          if (num3 > 1) {
            num3 = 1;
          }
          $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num3);
        } else if (($T05().dust[i].type | 0) === 27) {
          $T05().dust[i].velocity = $S01().CallStatic($T02(), "op_Multiply", null, $T05().dust[i].velocity.MemberwiseClone(), 0.94).MemberwiseClone();
          $T05().dust[i].scale += 0.002;
          var num4 = +$T05().dust[i].scale;
          if (num4 > 1) {
            num4 = 1;
          }
          $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num4);
        } else if (!($T05().dust[i].noGravity || (($T05().dust[i].type | 0) === 41))) {
          var expr_442_cp_0 = $T05().dust[i];
          expr_442_cp_0.velocity.Y = +expr_442_cp_0.velocity.Y + 0.1;
        }
        if (!((($T05().dust[i].type | 0) !== 5) || !$T05().dust[i].noGravity)) {
          $T05().dust[i].scale -= 0.04;
        }
        if (($T05().dust[i].type | 0) === 33) {
          var flag = $T07().WetCollision(($hoisted00._ctor($T05().dust[i].position.X, $T05().dust[i].position.Y), 
              $hoisted00), 4, 4);
          if (flag) {
            $T05().dust[i].alpha = ((($T05().dust[i].alpha | 0) + 20) | 0);
            $T05().dust[i].scale -= 0.1;
          }
          $T05().dust[i].alpha = ((($T05().dust[i].alpha | 0) + 2) | 0);
          $T05().dust[i].scale -= 0.005;
          if (($T05().dust[i].alpha | 0) > 255) {
            $T05().dust[i].scale = 0;
          }
          var expr_558_cp_0 = $T05().dust[i];
          expr_558_cp_0.velocity.X = +expr_558_cp_0.velocity.X * 0.93;
          if (+$T05().dust[i].velocity.Y > 4) {
            $T05().dust[i].velocity.Y = 4;
          }
          if ($T05().dust[i].noGravity) {
            if (+$T05().dust[i].velocity.X < 0) {
              $T05().dust[i].rotation -= 0.2;
            } else {
              $T05().dust[i].rotation += 0.2;
            }
            $T05().dust[i].scale += 0.03;
            var expr_616_cp_0 = $T05().dust[i];
            expr_616_cp_0.velocity.X = +expr_616_cp_0.velocity.X * 1.05;
            var expr_633_cp_0 = $T05().dust[i];
            expr_633_cp_0.velocity.Y = +expr_633_cp_0.velocity.Y + 0.15;
          }
        }
        if (!((($T05().dust[i].type | 0) !== 35) || !$T05().dust[i].noGravity)) {
          $T05().dust[i].scale += 0.02;
          if (+$T05().dust[i].scale < 1) {
            var expr_69F_cp_0 = $T05().dust[i];
            expr_69F_cp_0.velocity.Y = +expr_69F_cp_0.velocity.Y + 0.075;
          }
          var expr_6BC_cp_0 = $T05().dust[i];
          expr_6BC_cp_0.velocity.X = +expr_6BC_cp_0.velocity.X * 1.08;
          if (+$T05().dust[i].velocity.X > 0) {
            $T05().dust[i].rotation += 0.01;
          } else {
            $T05().dust[i].rotation -= 0.01;
          }
        } else if (!((($T05().dust[i].type | 0) !== 34) && (($T05().dust[i].type | 0) !== 35))) {
          if (!$T07().WetCollision(($hoisted01._ctor($T05().dust[i].position.X, +$T05().dust[i].position.Y - 8), 
                $hoisted01), 4, 4)) {
            $T05().dust[i].scale = 0;
          } else {
            $T05().dust[i].alpha = ((($T05().dust[i].alpha | 0) + ($T05().rand.Next(2) | 0)) | 0);
            if (($T05().dust[i].alpha | 0) > 255) {
              $T05().dust[i].scale = 0;
            }
            $T05().dust[i].velocity.Y = -0.5;
            if (($T05().dust[i].type | 0) === 34) {
              $T05().dust[i].scale += 0.005;
            } else {
              $T05().dust[i].alpha = ((($T05().dust[i].alpha | 0) + 1) | 0);
              $T05().dust[i].scale -= 0.01;
              $T05().dust[i].velocity.Y = -0.2;
            }
            var expr_862_cp_0 = $T05().dust[i];
            expr_862_cp_0.velocity.X = +expr_862_cp_0.velocity.X + (+($T05().rand.Next(-10, 10)) * 0.002);
            if ($T05().dust[i].velocity.X < -0.25) {
              $T05().dust[i].velocity.X = -0.25;
            }
            if ($T05().dust[i].velocity.X > 0.25) {
              $T05().dust[i].velocity.X = 0.25;
            }
          }
          if (($T05().dust[i].type | 0) === 35) {
            var num5 = +$T05().dust[i].scale * 1.6;
            if (num5 > 1) {
              num5 = 1;
            }
            $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num5);
          }
        }
        if (($T05().dust[i].type | 0) === 41) {
          var expr_973_cp_0 = $T05().dust[i];
          expr_973_cp_0.velocity.X = +expr_973_cp_0.velocity.X + (+($T05().rand.Next(-10, 11)) * 0.01);
          var expr_9A0_cp_0 = $T05().dust[i];
          expr_9A0_cp_0.velocity.Y = +expr_9A0_cp_0.velocity.Y + (+($T05().rand.Next(-10, 11)) * 0.01);
          if ($T05().dust[i].velocity.X > 0.75) {
            $T05().dust[i].velocity.X = 0.75;
          }
          if ($T05().dust[i].velocity.X < -0.75) {
            $T05().dust[i].velocity.X = -0.75;
          }
          if ($T05().dust[i].velocity.Y > 0.75) {
            $T05().dust[i].velocity.Y = 0.75;
          }
          if ($T05().dust[i].velocity.Y < -0.75) {
            $T05().dust[i].velocity.Y = -0.75;
          }
          $T05().dust[i].scale += 0.007;
          var num6 = +$T05().dust[i].scale * 0.7;
          if (num6 > 1) {
            num6 = 1;
          }
          $T08().addLight(((+(+$T05().dust[i].position.X / 16)) | 0), ((+(+$T05().dust[i].position.Y / 16)) | 0), num6);
        } else {
          var expr_B0E_cp_0 = $T05().dust[i];
          expr_B0E_cp_0.velocity.X = +expr_B0E_cp_0.velocity.X * 0.99;
        }
        $T05().dust[i].rotation += +$T05().dust[i].velocity.X * 0.5;
        $T05().dust[i].scale -= 0.01;
        if ($T05().dust[i].noGravity) {
          $T05().dust[i].velocity = $S01().CallStatic($T02(), "op_Multiply", null, $T05().dust[i].velocity.MemberwiseClone(), 0.92).MemberwiseClone();
          $T05().dust[i].scale -= 0.04;
        }
        if (+$T05().dust[i].position.Y > (+$T05().screenPosition.Y + +($T05().screenHeight))) {
          $T05().dust[i].active = false;
        }
        if ($T05().dust[i].scale < 0.1) {
          $T05().dust[i].active = false;
        }
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Dust", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Dust__ctor
    );

    $.Method({Static:false, Public:true }, "GetAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Dust_GetAlpha
    );

    $.Method({Static:false, Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Dust_GetColor
    );

    $.Method({Static:true , Public:true }, "NewDust", 
      new JSIL.MethodSignature($.Int32, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32, $.Int32, 
          $.Single, $.Single, 
          $.Int32, $asm00.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single
        ]), 
      Dust_NewDust
    );

    $.Method({Static:true , Public:true }, "UpdateDust", 
      JSIL.MethodSignature.Void, 
      Dust_UpdateDust
    );

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "noGravity", $.Boolean);

    $.Field({Static:false, Public:true }, "scale", $.Single);

    $.Field({Static:false, Public:true }, "rotation", $.Single);

    $.Field({Static:false, Public:true }, "noLight", $.Boolean);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "type", $.Int32);

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "alpha", $.Int32);

    $.Field({Static:false, Public:true }, "frame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Player */ 

(function Player$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.Terraria.Item)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.Terraria.Chest)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Vector2)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Color)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Tile, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.Terraria.Main)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.Terraria.Recipe)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm0F.Terraria.Item))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.Terraria.Tile)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.Terraria.WorldGen)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Text.UnicodeEncoding)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm06.System.Byte))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.IO.FileStream)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.IO.FileMode)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Security.Cryptography.RijndaelManaged)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Security.Cryptography.CryptoStream)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Security.Cryptography.SymmetricAlgorithm)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Security.Cryptography.CryptoStreamMode)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.IO.File)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.Terraria.NetMessage)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm06.System.Single)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0F.Terraria.CombatText)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Rectangle)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm0F.Terraria.Dust)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.MouseState)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm0F.Terraria.Projectile)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm03.Microsoft.Xna.Framework.Graphics.Texture2D)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm0F.Terraria.Lighting)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm0F.Terraria.Liquid)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm0F.Terraria.Gore)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm0F.Terraria.Collision)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm0F.Terraria.NPC)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm06.System.DateTime)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm06.System.IO.BinaryReader)) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm06.System.IO.BinaryWriter)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize(System.Array.Of($asm00.Microsoft.Xna.Framework.Input.Keys))) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.KeyboardState)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.Keys)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm00.Microsoft.Xna.Framework.Input.ButtonState)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm0F.Terraria.Sign)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Text.UnicodeEncoding, null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(System.Array.Of($asm06.System.Byte), [$asm06.System.String]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.FileStream, [$asm06.System.String, $asm06.System.IO.FileMode]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Security.Cryptography.CryptoStream, [
        $asm06.System.IO.Stream, $asm06.System.Security.Cryptography.ICryptoTransform, 
        $asm06.System.Security.Cryptography.CryptoStreamMode
      ]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Security.Cryptography.ICryptoTransform, [System.Array.Of($asm06.System.Byte), System.Array.Of($asm06.System.Byte)]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm06.System.Security.Cryptography.ICryptoTransform, [System.Array.Of($asm06.System.Byte), System.Array.Of($asm06.System.Byte)]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Color, [
        $asm06.System.Int32, $asm06.System.Int32, 
        $asm06.System.Int32, $asm06.System.Int32
      ]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm06.System.Single, $asm06.System.Single]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.Random, [$asm06.System.Int32]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryReader, [$asm06.System.IO.Stream]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.System.IO.BinaryWriter, [$asm06.System.IO.Stream]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Int32")))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.String")))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("System.Byte")))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm00.Microsoft.Xna.Framework.Vector2, [$asm00.Microsoft.Xna.Framework.Vector2, $asm06.System.Single]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };


  function Player__ctor () {
    this.chatText = "";
    this.sign = -1;
    this.changeItem = -1;
    this.armor = JSIL.Array.New($T00(), 8);
    this.breathMax = 200;
    this.breath = 200;
    this.setBonus = "";
    this.inventory = JSIL.Array.New($T00(), 44);
    this.bank = JSIL.Array.New($T00(), $T01().maxItems);
    this.$name = "";
    this.head = -1;
    this.body = -1;
    this.legs = -1;
    this.width = 20;
    this.height = 42;
    this.direction = 1;
    this.manaCost = 1;
    this.shadowPos = JSIL.Array.New($T02(), 3);
    this.step = -1;
    this.meleeSpeed = 1;
    this.statLifeMax = 100;
    this.statLife = 100;
    this.SpawnX = -1;
    this.SpawnY = -1;
    this.spX = JSIL.Array.New($T03(), 200);
    this.spY = JSIL.Array.New($T03(), 200);
    this.spN = JSIL.Array.New($T04(), 200);
    this.spI = JSIL.Array.New($T03(), 200);
    this.adjTile = JSIL.Array.New($T05(), 80);
    this.oldAdjTile = JSIL.Array.New($T05(), 80);
    this.hairColor = $S00().Construct(215, 90, 55);
    this.skinColor = $S00().Construct(255, 125, 90);
    this.eyeColor = $S00().Construct(105, 90, 75);
    this.shirtColor = $S00().Construct(175, 165, 140);
    this.underShirtColor = $S00().Construct(160, 180, 215);
    this.pantsColor = $S00().Construct(255, 230, 175);
    this.shoeColor = $S00().Construct(160, 105, 60);
    this.grappling = JSIL.Array.New($T03(), 20);
    this.chest = -1;
    this.talkNPC = -1;

    for (var i = 0; i < 44; i = ((i + 1) | 0)) {
      if (i < 8) {
        this.armor[i] = new ($T00())();
        this.armor[i].$name = "";
      }
      this.inventory[i] = new ($T00())();
      this.inventory[i].$name = "";
    }

    for (var j = 0; j < ($T01().maxItems | 0); j = ((j + 1) | 0)) {
      this.bank[j] = new ($T00())();
      this.bank[j].$name = "";
    }
    this.grappling[0] = -1;
    $S01().CallVirtual("SetDefaults", null, this.inventory[0], "Copper Pickaxe");
    $S01().CallVirtual("SetDefaults", null, this.inventory[1], "Copper Axe");

    for (var k = 0; k < 80; k = ((k + 1) | 0)) {
      this.adjTile[k] = false;
      this.oldAdjTile[k] = false;
    }
  }; 

  function Player_AdjTiles () {
    var num = 4;
    var num2 = 3;

    for (var i = 0; i < 80; i = ((i + 1) | 0)) {
      this.oldAdjTile[i] = this.adjTile[i];
      this.adjTile[i] = false;
    }
    var num3 = ((+((+this.position.X + +(((this.width | 0) / 2 | 0))) / 16)) | 0);
    var num4 = ((+((+this.position.Y + +(this.height)) / 16)) | 0);

    for (var j = ((num3 - num) | 0); j <= ((num3 + num) | 0); j = ((j + 1) | 0)) {

      for (var k = ((num4 - num2) | 0); k < ((num4 + num2) | 0); k = ((k + 1) | 0)) {
        if ($T08().tile.Get(j, k).active) {
          this.adjTile[$T08().tile.Get(j, k).type] = true;
          if (($T08().tile.Get(j, k).type | 0) === 77) {
            this.adjTile[17] = true;
          }
        }
      }
    }
    if ($T08().playerInventory) {
      var flag = false;

    $loop3: 
      for (var l = 0; l < 80; l = ((l + 1) | 0)) {
        if (this.oldAdjTile[l] !== this.adjTile[l]) {
          flag = true;
          break $loop3;
        }
      }
      if (flag) {
        $T09().FindRecipes();
      }
    }
  }; 

  function Player_BuyItem (price) {
    if ((price | 0) === 0) {
      return false;
    }
    var num = 0;
    var array = JSIL.Array.New($T00(), 44);

    for (var i = 0; i < 44; i = ((i + 1) | 0)) {
      array[i] = new ($T00())();
      array[i] = $T00().$Cast((this.inventory[i]).Clone());
      if ((this.inventory[i].type | 0) === 71) {
        num = ((num + (this.inventory[i].stack | 0)) | 0);
      }
      if ((this.inventory[i].type | 0) === 72) {
        num = ((num + Math.imul(this.inventory[i].stack, 100)) | 0);
      }
      if ((this.inventory[i].type | 0) === 73) {
        num = ((num + Math.imul(this.inventory[i].stack, 10000)) | 0);
      }
      if ((this.inventory[i].type | 0) === 74) {
        num = ((num + Math.imul(this.inventory[i].stack, 1000000)) | 0);
      }
    }
    if (num >= (price | 0)) {

      for (var j = (price | 0); j > 0; ) {
        if (j >= 1000000) {

          for (var k = 0; k < 44; k = ((k + 1) | 0)) {
            if ((this.inventory[k].type | 0) === 74) {

              while (((this.inventory[k].stack | 0) > 0) && (j >= 1000000)) {
                j = ((j - 1000000) | 0);
                this.inventory[k].stack = (((this.inventory[k].stack | 0) - 1) | 0);
                if ((this.inventory[k].stack | 0) === 0) {
                  this.inventory[k].type = 0;
                }
              }
            }
          }
        }
        if (j >= 10000) {

          for (var l = 0; l < 44; l = ((l + 1) | 0)) {
            if ((this.inventory[l].type | 0) === 73) {

              while (((this.inventory[l].stack | 0) > 0) && (j >= 10000)) {
                j = ((j - 10000) | 0);
                this.inventory[l].stack = (((this.inventory[l].stack | 0) - 1) | 0);
                if ((this.inventory[l].stack | 0) === 0) {
                  this.inventory[l].type = 0;
                }
              }
            }
          }
        }
        if (j >= 100) {

          for (var m = 0; m < 44; m = ((m + 1) | 0)) {
            if ((this.inventory[m].type | 0) === 72) {

              while (((this.inventory[m].stack | 0) > 0) && (j >= 100)) {
                j = ((j - 100) | 0);
                this.inventory[m].stack = (((this.inventory[m].stack | 0) - 1) | 0);
                if ((this.inventory[m].stack | 0) === 0) {
                  this.inventory[m].type = 0;
                }
              }
            }
          }
        }
        if (j >= 1) {

          for (var n = 0; n < 44; n = ((n + 1) | 0)) {
            if ((this.inventory[n].type | 0) === 71) {

              while (((this.inventory[n].stack | 0) > 0) && (j >= 1)) {
                j = ((j - 1) | 0);
                this.inventory[n].stack = (((this.inventory[n].stack | 0) - 1) | 0);
                if ((this.inventory[n].stack | 0) === 0) {
                  this.inventory[n].type = 0;
                }
              }
            }
          }
        }
        if (j > 0) {
          var num2 = -1;

        $loop10: 
          for (var num3 = 43; num3 >= 0; num3 = ((num3 - 1) | 0)) {
            if (!(((this.inventory[num3].type | 0) !== 0) && ((this.inventory[num3].stack | 0) !== 0))) {
              num2 = num3;
              break $loop10;
            }
          }
          if (num2 < 0) {

            for (var num4 = 0; num4 < 44; num4 = ((num4 + 1) | 0)) {
              this.inventory[num4] = $T00().$Cast((array[num4]).Clone());
            }
            return false;
          }
          var flag = true;
          if (j >= 10000) {

          $loop14: 
            for (var num5 = 0; num5 < 44; num5 = ((num5 + 1) | 0)) {
              if (!(((this.inventory[num5].type | 0) !== 74) || ((this.inventory[num5].stack | 0) < 1))) {
                this.inventory[num5].stack = (((this.inventory[num5].stack | 0) - 1) | 0);
                if ((this.inventory[num5].stack | 0) === 0) {
                  this.inventory[num5].type = 0;
                }
                $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 73);
                this.inventory[num2].stack = 100;
                flag = false;
                break $loop14;
              }
            }
          } else if (j >= 100) {

          $loop13: 
            for (var num6 = 0; num6 < 44; num6 = ((num6 + 1) | 0)) {
              if (!(((this.inventory[num6].type | 0) !== 73) || ((this.inventory[num6].stack | 0) < 1))) {
                this.inventory[num6].stack = (((this.inventory[num6].stack | 0) - 1) | 0);
                if ((this.inventory[num6].stack | 0) === 0) {
                  this.inventory[num6].type = 0;
                }
                $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 72);
                this.inventory[num2].stack = 100;
                flag = false;
                break $loop13;
              }
            }
          } else if (j >= 1) {

          $loop12: 
            for (var num7 = 0; num7 < 44; num7 = ((num7 + 1) | 0)) {
              if (!(((this.inventory[num7].type | 0) !== 72) || ((this.inventory[num7].stack | 0) < 1))) {
                this.inventory[num7].stack = (((this.inventory[num7].stack | 0) - 1) | 0);
                if ((this.inventory[num7].stack | 0) === 0) {
                  this.inventory[num7].type = 0;
                }
                $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 71);
                this.inventory[num2].stack = 100;
                flag = false;
                break $loop12;
              }
            }
          }
          if (flag) {
            if (j < 10000) {

            $loop15: 
              for (var num8 = 0; num8 < 44; num8 = ((num8 + 1) | 0)) {
                if (!(((this.inventory[num8].type | 0) !== 73) || ((this.inventory[num8].stack | 0) < 1))) {
                  this.inventory[num8].stack = (((this.inventory[num8].stack | 0) - 1) | 0);
                  if ((this.inventory[num8].stack | 0) === 0) {
                    this.inventory[num8].type = 0;
                  }
                  $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 72);
                  this.inventory[num2].stack = 100;
                  flag = false;
                  break $loop15;
                }
              }
            }
            if (!(!flag || (j >= 1000000))) {

            $loop16: 
              for (var num9 = 0; num9 < 44; num9 = ((num9 + 1) | 0)) {
                if (!(((this.inventory[num9].type | 0) !== 74) || ((this.inventory[num9].stack | 0) < 1))) {
                  this.inventory[num9].stack = (((this.inventory[num9].stack | 0) - 1) | 0);
                  if ((this.inventory[num9].stack | 0) === 0) {
                    this.inventory[num9].type = 0;
                  }
                  $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 73);
                  this.inventory[num2].stack = 100;
                  break $loop16;
                }
              }
            }
          }
        }
      }
      return true;
    }
    return false;
  }; 

  function Player_ChangeSpawn (x, y) {

    for (var num = 0; !((num >= 200) || (this.spN[num] === null)); num = ((num + 1) | 0)) {
      if (!(!(this.spN[num] == $T08().worldName) || ((this.spI[num] | 0) !== ($T08().worldID | 0)))) {

        for (var i = num; i > 0; i = ((i - 1) | 0)) {
          this.spN[i] = this.spN[((i - 1) | 0)];
          this.spI[i] = (this.spI[((i - 1) | 0)] | 0);
          this.spX[i] = (this.spX[((i - 1) | 0)] | 0);
          this.spY[i] = (this.spY[((i - 1) | 0)] | 0);
        }
        this.spN[0] = $T08().worldName;
        this.spI[0] = ($T08().worldID | 0);
        this.spX[0] = (x | 0);
        this.spY[0] = (y | 0);
        return;
      }
    }

    for (var j = 199; j > 0; j = ((j - 1) | 0)) {
      if (this.spN[((j - 1) | 0)] !== null) {
        this.spN[j] = this.spN[((j - 1) | 0)];
        this.spI[j] = (this.spI[((j - 1) | 0)] | 0);
        this.spX[j] = (this.spX[((j - 1) | 0)] | 0);
        this.spY[j] = (this.spY[((j - 1) | 0)] | 0);
      }
    }
    this.spN[0] = $T08().worldName;
    this.spI[0] = ($T08().worldID | 0);
    this.spX[0] = (x | 0);
    this.spY[0] = (y | 0);
  }; 

  function Player_CheckSpawn (x, y) {
    if (!(((x | 0) >= 10) && 
        ((x | 0) <= ((($T08().maxTilesX | 0) - 10) | 0)) && 
        ((y | 0) >= 10) && ((y | 0) <= ((($T08().maxTilesX | 0) - 10) | 0)))) {
      return false;
    }
    if ($T08().tile.Get(x, (((y | 0) - 1) | 0)) === null) {
      return false;
    }
    if (!($T08().tile.Get(x, (((y | 0) - 1) | 0)).active && (($T08().tile.Get(x, (((y | 0) - 1) | 0)).type | 0) === 79))) {
      return false;
    }

    for (var i = (((x | 0) - 1) | 0); i <= (((x | 0) + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = (((y | 0) - 3) | 0); j < (y | 0); j = ((j + 1) | 0)) {
        if ($T08().tile.Get(i, j) === null) {
          return false;
        }
        if (!(!$T08().tile.Get(i, j).active || 
            !$T08().tileSolid[$T08().tile.Get(i, j).type] || $T08().tileSolidTop[$T08().tile.Get(i, j).type])) {
          return false;
        }
      }
    }
    return $T0C().StartRoomCheck(x, (((y | 0) - 1) | 0));
  }; 

  function Player_clientClone () {
    var player = new $thisType();
    player.zoneEvil = this.zoneEvil;
    player.zoneMeteor = this.zoneMeteor;
    player.zoneDungeon = this.zoneDungeon;
    player.zoneJungle = this.zoneJungle;
    player.direction = (this.direction | 0);
    player.selectedItem = (this.selectedItem | 0);
    player.controlUp = this.controlUp;
    player.controlDown = this.controlDown;
    player.controlLeft = this.controlLeft;
    player.controlRight = this.controlRight;
    player.controlJump = this.controlJump;
    player.controlUseItem = this.controlUseItem;
    player.statLife = (this.statLife | 0);
    player.statLifeMax = (this.statLifeMax | 0);
    player.statMana = (this.statMana | 0);
    player.statManaMax = (this.statManaMax | 0);
    player.position.X = +this.position.X;
    player.chest = (this.chest | 0);
    player.talkNPC = (this.talkNPC | 0);

    for (var i = 0; i < 44; i = ((i + 1) | 0)) {
      player.inventory[i] = $T00().$Cast((this.inventory[i]).Clone());
      if (i < 8) {
        player.armor[i] = $T00().$Cast((this.armor[i]).Clone());
      }
    }
    return player;
  }; 

  function Player_Clone () {
    return $T0D().prototype.MemberwiseClone.call(this);
  }; 

  function Player_DecryptFile (inputFile, outputFile, $exception) {
    var num = 0;
    var unicodeEncoding = $S03().Construct();
    var bytes = $S04().CallVirtual("GetBytes", null, unicodeEncoding, "h3y_gUyZ");
    var fileStream = $S05().Construct(inputFile, $T13().Open);
    var rijndaelManaged = new ($T14())();
    var cryptoStream = $S06().Construct(fileStream, $S07().CallVirtual("CreateDecryptor", null, rijndaelManaged, bytes, bytes), $T17().Read);
    var fileStream2 = $S05().Construct(outputFile, $T13().Create);
    try {

      while ((num = (cryptoStream.ReadByte() | 0)) !== -1) {
        fileStream2.WriteByte((num & 0xFF));
      }
      fileStream2.Close();
      cryptoStream.Close();
      fileStream.Close();
    } catch ($exception) {
      fileStream2.Close();
      fileStream.Close();
      $T1A().Delete(outputFile);
      return true;
    }
    return false;
  }; 

  function Player_DoCoins (i) {
    if (!(((this.inventory[i].stack | 0) !== 100) || (((this.inventory[i].type | 0) !== 71) && 
          ((this.inventory[i].type | 0) !== 72) && 
          ((this.inventory[i].type | 0) !== 73)))) {
      $S02().CallVirtual("SetDefaults", null, this.inventory[i], (((this.inventory[i].type | 0) + 1) | 0));

      for (var j = 0; j < 44; j = ((j + 1) | 0)) {
        if (!(!(this.inventory[j]).IsTheSameAs(this.inventory[i]) || 
            (j === (i | 0)) || ((this.inventory[j].stack | 0) >= (this.inventory[j].maxStack | 0)))) {
          this.inventory[j].stack = (((this.inventory[j].stack | 0) + 1) | 0);
          $S01().CallVirtual("SetDefaults", null, this.inventory[i], "");
          this.inventory[i].active = false;
          this.inventory[i].$name = "";
          this.inventory[i].type = 0;
          this.inventory[i].stack = 0;
          this.DoCoins(j);
        }
      }
    }
  }; 

  function Player_DropItems () {

    for (var i = 0; i < 44; i = ((i + 1) | 0)) {
      if (!(((this.inventory[i].type | 0) < 71) || ((this.inventory[i].type | 0) > 74))) {
        var num = ($T00().NewItem(
          ((this.position.X) | 0), 
          ((this.position.Y) | 0), 
          this.width, 
          this.height, 
          this.inventory[i].type, 
          1, 
          false
        ) | 0);
        var num2 = (((this.inventory[i].stack | 0) / 2) | 0);
        num2 = (((this.inventory[i].stack | 0) - num2) | 0);
        this.inventory[i].stack = (((this.inventory[i].stack | 0) - num2) | 0);
        if ((this.inventory[i].stack | 0) <= 0) {
          this.inventory[i] = new ($T00())();
        }
        $T08().item[num].stack = num2;
        $T08().item[num].velocity.Y = +($T08().rand.Next(-20, 1)) * 0.2;
        $T08().item[num].velocity.X = +($T08().rand.Next(-20, 21)) * 0.2;
        $T08().item[num].noGrabDelay = 100;
        if (($T08().netMode | 0) === 1) {
          $T1C().SendData(
            21, 
            -1, 
            -1, 
            "", 
            num, 
            0, 
            0, 
            0
          );
        }
      }
    }
  }; 

  function Player_EncryptFile (inputFile, outputFile) {
    var num = 0;
    var unicodeEncoding = $S03().Construct();
    var bytes = $S04().CallVirtual("GetBytes", null, unicodeEncoding, "h3y_gUyZ");
    var fileStream = $S05().Construct(outputFile, $T13().Create);
    var rijndaelManaged = new ($T14())();
    var cryptoStream = $S06().Construct(fileStream, $S08().CallVirtual("CreateEncryptor", null, rijndaelManaged, bytes, bytes), $T17().Write);

    for (var fileStream2 = $S05().Construct(inputFile, $T13().Open); (num = (fileStream2.ReadByte() | 0)) !== -1; ) {
      cryptoStream.WriteByte((num & 0xFF));
    }
    fileStream2.Close();
    cryptoStream.Close();
    fileStream.Close();
  }; 

  function Player_FindClosest (Position, Width, Height) {
    var result = 0;

  $loop0: 
    for (var i = 0; i < 8; i = ((i + 1) | 0)) {
      if ($T08().player[i].active) {
        result = (i & 0xFF);
        break $loop0;
      }
    }
    var num = -1;

    for (var j = 0; j < 8; j = ((j + 1) | 0)) {
      if (!(!$T08().player[j].active || 
          $T08().player[j].dead || ((num !== -1) && 
            (((Math.abs((((+$T08().player[j].position.X + +((($T08().player[j].width | 0) / 2 | 0))) - +Position.X) + +(((Width | 0) / 2 | 0))))) + (Math.abs((((+$T08().player[j].position.Y + +((($T08().player[j].height | 0) / 2 | 0))) - +Position.Y) + +(((Height | 0) / 2 | 0)))))) >= num)))) {
        num = (Math.abs((((+$T08().player[j].position.X + +((($T08().player[j].width | 0) / 2 | 0))) - +Position.X) + +(((Width | 0) / 2 | 0))))) + (Math.abs((((+$T08().player[j].position.Y + +((($T08().player[j].height | 0) / 2 | 0))) - +Position.Y) + +(((Height | 0) / 2 | 0)))));
        result = (j & 0xFF);
      }
    }
    return result;
  }; 

  function Player_FindSpawn () {

    for (var i = 0; i < 200; i = ((i + 1) | 0)) {
      if (this.spN[i] === null) {
        this.SpawnX = -1;
        this.SpawnY = -1;
        return;
      }
      if (!(!(this.spN[i] == $T08().worldName) || ((this.spI[i] | 0) !== ($T08().worldID | 0)))) {
        this.SpawnX = (this.spX[i] | 0);
        this.SpawnY = (this.spY[i] | 0);
        return;
      }
    }
  }; 

  function Player_GetDeathAlpha (newColor) {
    var r = (((newColor.get_R() | 0) + ((+(this.immuneAlpha) * 0.9) | 0)) | 0);
    var g = (((newColor.get_G() | 0) + ((+(this.immuneAlpha) * 0.5) | 0)) | 0);
    var b = (((newColor.get_B() | 0) + ((+(this.immuneAlpha) * 0.5) | 0)) | 0);
    var num = (((newColor.get_A() | 0) + ((+(this.immuneAlpha) * 0.4) | 0)) | 0);
    if (num < 0) {
      num = 0;
    }
    if (num > 255) {
      num = 255;
    }
    return $S09().Construct(r, g, b, num);
  }; 

  function Player_GetImmuneAlpha (newColor) {
    var num = +((+(255 - (this.immuneAlpha | 0)) / 255));
    if (+this.shadow > 0) {
      num *= 1 - +this.shadow;
    }
    var r = ((+(newColor.get_R()) * num) | 0);
    var g = ((+(newColor.get_G()) * num) | 0);
    var b = ((+(newColor.get_B()) * num) | 0);
    var num2 = ((+(newColor.get_A()) * num) | 0);
    if (num2 < 0) {
      num2 = 0;
    }
    if (num2 > 255) {
      num2 = 255;
    }
    return $S09().Construct(r, g, b, num2);
  }; 

  function Player_GetItem (plr, newItem) {
    if ((newItem.noGrabDelay | 0) > 0) {
      return newItem;
    }
    var num = 0;
    if (!(((newItem.type | 0) !== 71) && 
        ((newItem.type | 0) !== 72) && 
        ((newItem.type | 0) !== 73) && ((newItem.type | 0) !== 74))) {
      num = -4;
    }

    for (var i = num; i < 40; i = ((i + 1) | 0)) {
      var num2 = i;
      if (num2 < 0) {
        num2 = ((44 + i) | 0);
      }
      if (!(((this.inventory[num2].type | 0) <= 0) || 
          ((this.inventory[num2].stack | 0) >= (this.inventory[num2].maxStack | 0)) || !newItem.IsTheSameAs(this.inventory[num2]))) {
        $T08().PlaySound(7, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        if ((((newItem.stack | 0) + (this.inventory[num2].stack | 0)) | 0) <= (this.inventory[num2].maxStack | 0)) {
          this.inventory[num2].stack = (((this.inventory[num2].stack | 0) + (newItem.stack | 0)) | 0);
          this.DoCoins(num2);
          if ((plr | 0) === ($T08().myPlayer | 0)) {
            $T09().FindRecipes();
          }
          return new ($T00())();
        }
        newItem.stack = (((newItem.stack | 0) - (((this.inventory[num2].maxStack | 0) - (this.inventory[num2].stack | 0)) | 0)) | 0);
        this.inventory[num2].stack = (this.inventory[num2].maxStack | 0);
        this.DoCoins(num2);
        if ((plr | 0) === ($T08().myPlayer | 0)) {
          $T09().FindRecipes();
        }
      }
    }

    for (var j = num; j < 40; j = ((j + 1) | 0)) {
      var num3 = j;
      if (num3 < 0) {
        num3 = ((44 + j) | 0);
      }
      if ((this.inventory[num3].type | 0) === 0) {
        this.inventory[num3] = newItem;
        this.DoCoins(num3);
        $T08().PlaySound(7, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        if ((plr | 0) === ($T08().myPlayer | 0)) {
          $T09().FindRecipes();
        }
        return new ($T00())();
      }
    }
    return newItem;
  }; 

  function Player_HealEffect (healAmount) {
    $T1F().NewText(new ($T20())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height), $S09().Construct(100, 100, 255, 255), String($T03().$Box(healAmount)));
    if (!((($T08().netMode | 0) !== 1) || ((this.whoAmi | 0) !== ($T08().myPlayer | 0)))) {
      $T1C().SendData(
        35, 
        -1, 
        -1, 
        "", 
        this.whoAmi, 
        +healAmount, 
        0, 
        0
      );
    }
  }; 

  function Player_Hurt (Damage, hitDirection, pvp, quiet) {
    if (!(this.immune || $T08().godMode)) {
      var num = (Damage | 0);
      if (pvp) {
        num = Math.imul(num, 2);
      }
      var num2 = +$T08().CalculateDamage(num, this.statDefense);
      if (num2 >= 1) {
        if (!((($T08().netMode | 0) !== 1) || 
            ((this.whoAmi | 0) !== ($T08().myPlayer | 0)) || quiet)) {
          var num3 = 0;
          if (pvp) {
            num3 = 1;
          }
          $T1C().SendData(
            13, 
            -1, 
            -1, 
            "", 
            this.whoAmi, 
            0, 
            0, 
            0
          );
          $T1C().SendData(
            16, 
            -1, 
            -1, 
            "", 
            this.whoAmi, 
            0, 
            0, 
            0
          );
          $T1C().SendData(
            26, 
            -1, 
            -1, 
            "", 
            this.whoAmi, 
            +hitDirection, 
            +Damage, 
            +num3
          );
        }
        $T1F().NewText(new ($T20())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height), $S09().Construct(255, 80, 90, 255), String($T03().$Box(((num2) | 0))));
        this.statLife = (((this.statLife | 0) - ((num2) | 0)) | 0);
        this.immune = true;
        this.immuneTime = 40;
        if (pvp) {
          this.immuneTime = 8;
        }
        if (!(this.noKnockback || ((hitDirection | 0) === 0))) {
          this.velocity.X = 4.5 * +hitDirection;
          this.velocity.Y = -3.5;
        }
        if (this.boneArmor) {
          $T08().PlaySound(3, ((this.position.X) | 0), ((this.position.Y) | 0), 2);
        } else if (!(((this.hair | 0) !== 5) && 
            ((this.hair | 0) !== 6) && 
            ((this.hair | 0) !== 9) && ((this.hair | 0) !== 11))) {
          $T08().PlaySound(20, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        } else {
          $T08().PlaySound(1, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
        }
        if ((this.statLife | 0) > 0) {

          for (var num4 = 0; +num4 < (+((num2 / +(this.statLifeMax))) * 100); num4 = ((num4 + 1) | 0)) {
            if (this.boneArmor) {
              $T22().NewDust(
                this.position, 
                this.width, 
                this.height, 
                26, 
                +(2 * (hitDirection | 0)), 
                -2, 
                0, 
                new ($T06())(), 
                1
              );
            } else {
              $T22().NewDust(
                this.position, 
                this.width, 
                this.height, 
                5, 
                +(2 * (hitDirection | 0)), 
                -2, 
                0, 
                new ($T06())(), 
                1
              );
            }
          }
        } else {
          this.statLife = 0;
          if ((this.whoAmi | 0) === ($T08().myPlayer | 0)) {
            this.KillMe(num2, hitDirection, pvp);
          }
        }
      }
      if (pvp) {
        num2 = +$T08().CalculateDamage(num, this.statDefense);
      }
      return num2;
    }
    return 0;
  }; 

  function Player_ItemCheck (i) {
    var $hoisted00 = new ($T02())();
    var vector = new ($T02())(), rectangle = new ($T20())(), value = new ($T20())(), value2 = new ($T20())();
    if (this.inventory[this.selectedItem].autoReuse) {
      this.releaseUseItem = true;
      if (!(((this.itemAnimation | 0) !== 1) || ((this.inventory[this.selectedItem].stack | 0) <= 0))) {
        this.itemAnimation = 0;
      }
    }
    if (!(!this.controlUseItem || 
        ((this.itemAnimation | 0) !== 0) || 
        !this.releaseUseItem || ((this.inventory[this.selectedItem].useStyle | 0) <= 0))) {
      var flag = true;
      if (!(((this.inventory[this.selectedItem].shoot | 0) !== 6) && 
          ((this.inventory[this.selectedItem].shoot | 0) !== 19) && ((this.inventory[this.selectedItem].shoot | 0) !== 33))) {

        for (var j = 0; j < 1000; j = ((j + 1) | 0)) {
          if (!(!$T08().projectile[j].active || 
              (($T08().projectile[j].owner | 0) !== ($T08().myPlayer | 0)) || (($T08().projectile[j].type | 0) !== (this.inventory[this.selectedItem].shoot | 0)))) {
            flag = false;
          }
        }
      }
      if (this.inventory[this.selectedItem].potion) {
        if ((this.potionDelay | 0) <= 0) {
          this.potionDelay = ($T00().potionDelay | 0);
        } else {
          flag = false;
        }
      }
      if ((this.inventory[this.selectedItem].mana | 0) > 0) {
        if ((this.statMana | 0) >= ((+(this.inventory[this.selectedItem].mana) * +this.manaCost) | 0)) {
          this.statMana = (((this.statMana | 0) - ((+(this.inventory[this.selectedItem].mana) * +this.manaCost) | 0)) | 0);
        } else {
          flag = false;
        }
      }
      if (!(((this.inventory[this.selectedItem].type | 0) !== 43) || !$T08().dayTime)) {
        flag = false;
      }
      if (!(((this.inventory[this.selectedItem].type | 0) !== 70) || this.zoneEvil)) {
        flag = false;
      }
      if (!(((this.inventory[this.selectedItem].shoot | 0) !== 17) || 
          !flag || ((i | 0) !== ($T08().myPlayer | 0)))) {
        var num = ((((+($T08().mouseState.get_X()) + +$T08().screenPosition.X) | 0) / 16) | 0);
        var num2 = ((((+($T08().mouseState.get_Y()) + +$T08().screenPosition.Y) | 0) / 16) | 0);
        if (!(!$T08().tile.Get(num, num2).active || ((($T08().tile.Get(num, num2).type | 0) !== 0) && 
              (($T08().tile.Get(num, num2).type | 0) !== 2) && 
              (($T08().tile.Get(num, num2).type | 0) !== 23)))) {
          $T0C().KillTile(
            num, 
            num2, 
            false, 
            false, 
            true
          );
          if (!$T08().tile.Get(num, num2).active) {
            if (($T08().netMode | 0) === 1) {
              $T1C().SendData(
                17, 
                -1, 
                -1, 
                "", 
                4, 
                +num, 
                +num2, 
                0
              );
            }
          } else {
            flag = false;
          }
        } else {
          flag = false;
        }
      }
      if (!(!flag || ((this.inventory[this.selectedItem].useAmmo | 0) <= 0))) {
        flag = false;

      $loop1: 
        for (var k = 0; k < 44; k = ((k + 1) | 0)) {
          if (!(((this.inventory[k].ammo | 0) !== (this.inventory[this.selectedItem].useAmmo | 0)) || ((this.inventory[k].stack | 0) <= 0))) {
            flag = true;
            break $loop1;
          }
        }
      }
      if (flag) {
        if ((this.grappling[0] | 0) > -1) {
          if (this.controlRight) {
            this.direction = 1;
          } else if (this.controlLeft) {
            this.direction = -1;
          }
        }
        this.channel = this.inventory[this.selectedItem].channel;
        this.attackCD = 0;
        if (!(((this.inventory[this.selectedItem].shoot | 0) <= 0) && ((this.inventory[this.selectedItem].damage | 0) !== 0))) {
          this.meleeSpeed = 1;
        }
        this.itemAnimation = ((+(this.inventory[this.selectedItem].useAnimation) * +this.meleeSpeed) | 0);
        this.itemAnimationMax = ((+(this.inventory[this.selectedItem].useAnimation) * +this.meleeSpeed) | 0);
        if ((this.inventory[this.selectedItem].useSound | 0) > 0) {
          $T08().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), this.inventory[this.selectedItem].useSound);
        }
      }
      if (!(!flag || ((this.inventory[this.selectedItem].shoot | 0) !== 18))) {

        for (var l = 0; l < 1000; l = ((l + 1) | 0)) {
          if (!(!$T08().projectile[l].active || 
              (($T08().projectile[l].owner | 0) !== (i | 0)) || (($T08().projectile[l].type | 0) !== (this.inventory[this.selectedItem].shoot | 0)))) {
            ($T08().projectile[l]).Kill();
          }
        }
      }
    }
    if (!this.controlUseItem) {
      this.channel = false;
    }
    if ((this.itemAnimation | 0) > 0) {
      if ((this.inventory[this.selectedItem].mana | 0) > 0) {
        this.manaRegenDelay = 180;
      }
      this.itemHeight = (($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height() | 0);
      this.itemWidth = (($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width() | 0);
      this.itemAnimation = (((this.itemAnimation | 0) - 1) | 0);
      if ((this.inventory[this.selectedItem].useStyle | 0) === 1) {
        if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.333)) {
          var num3 = 10;
          if ((($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width() | 0) > 32) {
            num3 = 14;
          }
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + (((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - num3) * +(this.direction));
          this.itemLocation.Y = +this.position.Y + 24;
        } else if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.666)) {
          var num4 = 10;
          if ((($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width() | 0) > 32) {
            num4 = 18;
          }
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + (((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - num4) * +(this.direction));
          num4 = 10;
          if ((($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height() | 0) > 32) {
            num4 = 8;
          }
          this.itemLocation.Y = +this.position.Y + num4;
        } else {
          var num5 = 6;
          if ((($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width() | 0) > 32) {
            num5 = 14;
          }
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) - (((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - num5) * +(this.direction));
          num5 = 10;
          if ((($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height() | 0) > 32) {
            num5 = 10;
          }
          this.itemLocation.Y = +this.position.Y + num5;
        }
        this.itemRotation = (((+((+(this.itemAnimation) / +(this.itemAnimationMax))) - 0.5) * +(-+(this.direction))) * 3.5) - (+(this.direction) * 0.3);
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 2) {
        this.itemRotation = ((+((+(this.itemAnimation) / +(this.itemAnimationMax))) * +(this.direction)) * 2) + (-1.4 * +(this.direction));
        if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.5)) {
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + ((((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - 9) - ((+this.itemRotation * 12) * +(this.direction))) * +(this.direction));
          this.itemLocation.Y = (+this.position.Y + 38) + ((+this.itemRotation * +(this.direction)) * 4);
        } else {
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + ((((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - 9) - ((+this.itemRotation * 16) * +(this.direction))) * +(this.direction));
          this.itemLocation.Y = (+this.position.Y + 38) + (+this.itemRotation * +(this.direction));
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 3) {
        if (+(this.itemAnimation) > (+(this.itemAnimationMax) * 0.666)) {
          this.itemLocation.X = -1000;
          this.itemLocation.Y = -1000;
          this.itemRotation = -1.3 * +(this.direction);
        } else {
          this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + (((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - 4) * +(this.direction));
          this.itemLocation.Y = +this.position.Y + 24;
          var num6 = ((((+((+(this.itemAnimation) / +(this.itemAnimationMax))) * +(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width())) * +(this.direction)) * +this.inventory[this.selectedItem].scale) * 1.2) - +(10 * (this.direction | 0));
          if (!((num6 <= -4) || ((this.direction | 0) !== -1))) {
            num6 = -8;
          }
          if (!((num6 >= 4) || ((this.direction | 0) !== 1))) {
            num6 = 8;
          }
          this.itemLocation.X = +this.itemLocation.X - num6;
          this.itemRotation = 0.8 * +(this.direction);
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 4) {
        this.itemRotation = 0;
        this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + ((((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) - 9) - ((+this.itemRotation * 14) * +(this.direction))) * +(this.direction));
        this.itemLocation.Y = +this.position.Y + (+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height()) * 0.5);
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 5) {
        this.itemLocation.X = ((+this.position.X + (+(this.width) * 0.5)) - (+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5)) - +((this.direction | 0) * 2);
        this.itemLocation.Y = (+this.position.Y + (+(this.height) * 0.5)) - (+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height()) * 0.5);
      }
    } else if ((this.inventory[this.selectedItem].holdStyle | 0) === 1) {
      this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + (((+(($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width()) * 0.5) + 4) * +(this.direction));
      this.itemLocation.Y = +this.position.Y + 24;
      this.itemRotation = 0;
    } else if ((this.inventory[this.selectedItem].holdStyle | 0) === 2) {
      this.itemLocation.X = (+this.position.X + (+(this.width) * 0.5)) + +(6 * (this.direction | 0));
      this.itemLocation.Y = +this.position.Y + 16;
      this.itemRotation = 0.79 * +(-+(this.direction));
    }
    if ((this.inventory[this.selectedItem].type | 0) === 8) {
      var maxValue = 20;
      if ((this.itemAnimation | 0) > 0) {
        maxValue = 7;
      }
      if ((this.direction | 0) === -1) {
        if (($T08().rand.Next(maxValue) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X - 16), (+this.itemLocation.Y - 14)), 
            4, 
            4, 
            6, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X - 16) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      } else {
        if (($T08().rand.Next(maxValue) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X + 6), (+this.itemLocation.Y - 14)), 
            4, 
            4, 
            6, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X + 6) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      }
    } else if ((this.inventory[this.selectedItem].type | 0) === 105) {
      var maxValue2 = 20;
      if ((this.itemAnimation | 0) > 0) {
        maxValue2 = 7;
      }
      if ((this.direction | 0) === -1) {
        if (($T08().rand.Next(maxValue2) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X - 12), (+this.itemLocation.Y - 20)), 
            4, 
            4, 
            6, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X - 16) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      } else {
        if (($T08().rand.Next(maxValue2) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X + 4), (+this.itemLocation.Y - 20)), 
            4, 
            4, 
            6, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X + 6) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      }
    } else if ((this.inventory[this.selectedItem].type | 0) === 148) {
      var maxValue3 = 10;
      if ((this.itemAnimation | 0) > 0) {
        maxValue3 = 7;
      }
      if ((this.direction | 0) === -1) {
        if (($T08().rand.Next(maxValue3) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X - 12), (+this.itemLocation.Y - 20)), 
            4, 
            4, 
            29, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X - 16) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      } else {
        if (($T08().rand.Next(maxValue3) | 0) === 0) {
          $T22().NewDust(
            $S0A().Construct((+this.itemLocation.X + 4), (+this.itemLocation.Y - 20)), 
            4, 
            4, 
            29, 
            0, 
            0, 
            100, 
            new ($T06())(), 
            1
          );
        }
        $T26().addLight(((+(((+this.itemLocation.X + 6) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 1);
      }
    }
    if (this.controlUseItem) {
      this.releaseUseItem = false;
    } else {
      this.releaseUseItem = true;
    }
    if ((this.itemTime | 0) > 0) {
      this.itemTime = (((this.itemTime | 0) - 1) | 0);
    }
    if ((i | 0) === ($T08().myPlayer | 0)) {
      if (!(((this.inventory[this.selectedItem].shoot | 0) <= 0) || 
          ((this.itemAnimation | 0) <= 0) || ((this.itemTime | 0) !== 0))) {
        var num7 = (this.inventory[this.selectedItem].shoot | 0);
        var num8 = +this.inventory[this.selectedItem].shootSpeed;
        var flag2 = false;
        var num9 = (this.inventory[this.selectedItem].damage | 0);
        var num10 = +this.inventory[this.selectedItem].knockBack;
        if (!((num7 !== 13) && (num7 !== 32))) {
          this.grappling[0] = -1;
          this.grapCount = 0;

          for (var m = 0; m < 1000; m = ((m + 1) | 0)) {
            if (!(!$T08().projectile[m].active || 
                (($T08().projectile[m].owner | 0) !== (i | 0)) || (($T08().projectile[m].type | 0) !== 13))) {
              ($T08().projectile[m]).Kill();
            }
          }
        }
        if ((this.inventory[this.selectedItem].useAmmo | 0) > 0) {

        $loop4: 
          for (var n = 0; n < 44; n = ((n + 1) | 0)) {
            if (!(((this.inventory[n].ammo | 0) !== (this.inventory[this.selectedItem].useAmmo | 0)) || ((this.inventory[n].stack | 0) <= 0))) {
              if ((this.inventory[n].shoot | 0) > 0) {
                num7 = (this.inventory[n].shoot | 0);
              }
              num8 += +this.inventory[n].shootSpeed;
              num9 = ((num9 + (this.inventory[n].damage | 0)) | 0);
              num10 += +this.inventory[n].knockBack;
              this.inventory[n].stack = (((this.inventory[n].stack | 0) - 1) | 0);
              if ((this.inventory[n].stack | 0) <= 0) {
                this.inventory[n].active = false;
                this.inventory[n].$name = "";
                this.inventory[n].type = 0;
              }
              flag2 = true;
              break $loop4;
            }
          }
        } else {
          flag2 = true;
        }
        if (!((num7 !== 9) || (this.position.Y <= ((+$T08().worldSurface * 16) + +((($T08().screenHeight | 0) / 2 | 0)))))) {
          flag2 = false;
        }
        if (flag2) {
          if (!((num7 !== 1) || ((this.inventory[this.selectedItem].type | 0) !== 120))) {
            num7 = 2;
          }
          this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
          if ((+($T08().mouseState.get_X()) + +$T08().screenPosition.X) > (+this.position.X + (+(this.width) * 0.5))) {
            this.direction = 1;
          } else {
            this.direction = -1;
          }
          (vector = vector.MemberwiseClone(), 
            $T02().prototype._ctor.call(vector, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          if (num7 === 9) {
            (vector = vector.MemberwiseClone(), 
              $T02().prototype._ctor.call(vector, 
                (+this.position.X + (+(this.width) * 0.5)) + +(($T08().rand.Next(601) | 0) * -+(this.direction)), 
                ((+this.position.Y + (+(this.height) * 0.5)) - 300) - +($T08().rand.Next(100))
              ));
            num10 = 0;
          }
          var num11 = (+($T08().mouseState.get_X()) + +$T08().screenPosition.X) - +vector.X;
          var num12 = (+($T08().mouseState.get_Y()) + +$T08().screenPosition.Y) - +vector.Y;
          var num13 = Math.fround(Math.sqrt((num11 * num11) + (num12 * num12)));
          num13 = +((num8 / num13));
          num11 *= num13;
          num12 *= num13;
          if (num7 === 12) {
            vector.X = +vector.X + (num11 * 3);
            vector.Y = +vector.Y + (num12 * 3);
          }
          if ((this.inventory[this.selectedItem].useStyle | 0) === 5) {
            this.itemRotation = Math.fround(Math.atan2(num12 * +(this.direction), num11 * +(this.direction)));
            $T1C().SendData(
              13, 
              -1, 
              -1, 
              "", 
              this.whoAmi, 
              0, 
              0, 
              0
            );
            $T1C().SendData(
              41, 
              -1, 
              -1, 
              "", 
              this.whoAmi, 
              0, 
              0, 
              0
            );
          }
          if (num7 === 17) {
            vector.X = +($T08().mouseState.get_X()) + +$T08().screenPosition.X;
            vector.Y = +($T08().mouseState.get_Y()) + +$T08().screenPosition.Y;
          }
          $T24().NewProjectile(
            vector.X, 
            vector.Y, 
            num11, 
            num12, 
            num7, 
            num9, 
            num10, 
            i
          );
        } else if ((this.inventory[this.selectedItem].useStyle | 0) === 5) {
          this.itemRotation = 0;
          $T1C().SendData(
            41, 
            -1, 
            -1, 
            "", 
            this.whoAmi, 
            0, 
            0, 
            0
          );
        }
      }
      if (!(((this.inventory[this.selectedItem].type | 0) < 205) || 
          ((this.inventory[this.selectedItem].type | 0) > 207) || 
          (((+((+this.position.X / 16)) - +($thisType.tileRangeX)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetX)) || 
          ((((+(((+this.position.X + +(this.width)) / 16)) + +($thisType.tileRangeX)) + +(this.inventory[this.selectedItem].tileBoost)) - 1) < +($thisType.tileTargetX)) || 
          (((+((+this.position.Y / 16)) - +($thisType.tileRangeY)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetY)) || ((((+(((+this.position.Y + +(this.height)) / 16)) + +($thisType.tileRangeY)) + +(this.inventory[this.selectedItem].tileBoost)) - 2) < +($thisType.tileTargetY)))) {
        this.showItemIcon = true;
        if (!(((this.itemTime | 0) !== 0) || 
            ((this.itemAnimation | 0) <= 0) || !this.controlUseItem)) {
          if ((this.inventory[this.selectedItem].type | 0) === 205) {
            var lava = $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava;
            var num14 = 0;

            for (var num15 = ((($thisType.tileTargetX | 0) - 1) | 0); num15 <= ((($thisType.tileTargetX | 0) + 1) | 0); num15 = ((num15 + 1) | 0)) {

              for (var num16 = ((($thisType.tileTargetY | 0) - 1) | 0); num16 <= ((($thisType.tileTargetY | 0) + 1) | 0); num16 = ((num16 + 1) | 0)) {
                if ($T08().tile.Get(num15, num16).lava === lava) {
                  num14 = ((num14 + ($T08().tile.Get(num15, num16).liquid | 0)) | 0);
                }
              }
            }
            if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid | 0) <= 0) || (num14 <= 100))) {
              var lava2 = $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava;
              if (!$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava) {
                $S02().CallVirtual("SetDefaults", null, this.inventory[this.selectedItem], 206);
              } else {
                $S02().CallVirtual("SetDefaults", null, this.inventory[this.selectedItem], 207);
              }
              $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
              var num17 = ($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid | 0);
              $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid = 0;
              $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava = false;
              $T0C().SquareTileFrame($thisType.tileTargetX, $thisType.tileTargetY, false);
              if (($T08().netMode | 0) === 1) {
                $T1C().sendWater($thisType.tileTargetX, $thisType.tileTargetY);
              } else {
                $T27().AddWater($thisType.tileTargetX, $thisType.tileTargetY);
              }

              for (var num18 = ((($thisType.tileTargetX | 0) - 1) | 0); num18 <= ((($thisType.tileTargetX | 0) + 1) | 0); num18 = ((num18 + 1) | 0)) {

                for (var num19 = ((($thisType.tileTargetY | 0) - 1) | 0); num19 <= ((($thisType.tileTargetY | 0) + 1) | 0); num19 = ((num19 + 1) | 0)) {
                  if (!((num17 >= 256) || ($T08().tile.Get(num18, num19).lava !== lava))) {
                    var num20 = ($T08().tile.Get(num18, num19).liquid | 0);
                    if (((num20 + num17) | 0) > 255) {
                      num20 = ((255 - num17) | 0);
                    }
                    num17 = ((num17 + num20) | 0);
                    var expr_1B85 = $T08().tile.Get(num18, num19);
                    expr_1B85.liquid = (((expr_1B85.liquid | 0) - (num20 & 0xFF)) & 0xFF);
                    $T08().tile.Get(num18, num19).lava = lava2;
                    if (($T08().tile.Get(num18, num19).liquid | 0) === 0) {
                      $T08().tile.Get(num18, num19).lava = false;
                    }
                    $T0C().SquareTileFrame(num18, num19, false);
                    if (($T08().netMode | 0) === 1) {
                      $T1C().sendWater(num18, num19);
                    } else {
                      $T27().AddWater(num18, num19);
                    }
                  }
                }
              }
            }
          } else if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid | 0) >= 200) || ($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active && 
                $T08().tileSolid[$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type] && 
                $T08().tileSolidTop[$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type]))) {
            if ((this.inventory[this.selectedItem].type | 0) === 207) {
              if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid | 0) !== 0) && !$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava)) {
                $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava = true;
                $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid = 255;
                $T0C().SquareTileFrame($thisType.tileTargetX, $thisType.tileTargetY, true);
                $S02().CallVirtual("SetDefaults", null, this.inventory[this.selectedItem], 205);
                this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
                if (($T08().netMode | 0) === 1) {
                  $T1C().sendWater($thisType.tileTargetX, $thisType.tileTargetY);
                }
              }
            } else if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid | 0) !== 0) && $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava)) {
              $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).lava = false;
              $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).liquid = 255;
              $T0C().SquareTileFrame($thisType.tileTargetX, $thisType.tileTargetY, true);
              $S02().CallVirtual("SetDefaults", null, this.inventory[this.selectedItem], 205);
              this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
              if (($T08().netMode | 0) === 1) {
                $T1C().sendWater($thisType.tileTargetX, $thisType.tileTargetY);
              }
            }
          }
        }
      }
      if (!((((this.inventory[this.selectedItem].pick | 0) <= 0) && 
            ((this.inventory[this.selectedItem].axe | 0) <= 0) && 
            ((this.inventory[this.selectedItem].hammer | 0) <= 0)) || 
          (((+((+this.position.X / 16)) - +($thisType.tileRangeX)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetX)) || 
          ((((+(((+this.position.X + +(this.width)) / 16)) + +($thisType.tileRangeX)) + +(this.inventory[this.selectedItem].tileBoost)) - 1) < +($thisType.tileTargetX)) || 
          (((+((+this.position.Y / 16)) - +($thisType.tileRangeY)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetY)) || ((((+(((+this.position.Y + +(this.height)) / 16)) + +($thisType.tileRangeY)) + +(this.inventory[this.selectedItem].tileBoost)) - 2) < +($thisType.tileTargetY)))) {
        this.showItemIcon = true;
        if (!(!$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active || 
            ((this.itemTime | 0) !== 0) || 
            ((this.itemAnimation | 0) <= 0) || !this.controlUseItem)) {
          if (!(((this.hitTileX | 0) === ($thisType.tileTargetX | 0)) && ((this.hitTileY | 0) === ($thisType.tileTargetY | 0)))) {
            this.hitTile = 0;
            this.hitTileX = ($thisType.tileTargetX | 0);
            this.hitTileY = ($thisType.tileTargetY | 0);
          }
          if ($T08().tileNoFail[$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type]) {
            this.hitTile = 100;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 27) {
            if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 4) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 10) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 11) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 12) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 13) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 14) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 15) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 16) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 17) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 18) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 19) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 21) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 26) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 28) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 29) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 31) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 33) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 34) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 35) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 36) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 42) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 48) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 49) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 50) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 54) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 55) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 77) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 78) && (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 79))) {
              if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 48) {
                this.hitTile = (((this.hitTile | 0) + (((this.inventory[this.selectedItem].hammer | 0) / 3) | 0)) | 0);
              } else {
                this.hitTile = (((this.hitTile | 0) + (this.inventory[this.selectedItem].hammer | 0)) | 0);
              }
              if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 77) || ((this.inventory[this.selectedItem].hammer | 0) >= 60))) {
                this.hitTile = 0;
              }
              if ((this.inventory[this.selectedItem].hammer | 0) > 0) {
                if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 26) {
                  this.Hurt((((this.statLife | 0) / 2) | 0), -this.direction, false, false);
                  $T0C().KillTile(
                    $thisType.tileTargetX, 
                    $thisType.tileTargetY, 
                    true, 
                    false, 
                    false
                  );
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +($thisType.tileTargetX), 
                      +($thisType.tileTargetY), 
                      1
                    );
                  }
                } else if ((this.hitTile | 0) >= 100) {
                  if (!((($T08().netMode | 0) !== 1) || (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 21))) {
                    $T0C().KillTile(
                      $thisType.tileTargetX, 
                      $thisType.tileTargetY, 
                      true, 
                      false, 
                      false
                    );
                    $T1C().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +($thisType.tileTargetX), 
                      +($thisType.tileTargetY), 
                      1
                    );
                    $T1C().SendData(
                      34, 
                      -1, 
                      -1, 
                      "", 
                      $thisType.tileTargetX, 
                      +($thisType.tileTargetY), 
                      0, 
                      0
                    );
                  } else {
                    this.hitTile = 0;
                    $T0C().KillTile(
                      $thisType.tileTargetX, 
                      $thisType.tileTargetY, 
                      false, 
                      false, 
                      false
                    );
                    if (($T08().netMode | 0) === 1) {
                      $T1C().SendData(
                        17, 
                        -1, 
                        -1, 
                        "", 
                        0, 
                        +($thisType.tileTargetX), 
                        +($thisType.tileTargetY), 
                        0
                      );
                    }
                  }
                } else {
                  $T0C().KillTile(
                    $thisType.tileTargetX, 
                    $thisType.tileTargetY, 
                    true, 
                    false, 
                    false
                  );
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +($thisType.tileTargetX), 
                      +($thisType.tileTargetY), 
                      1
                    );
                  }
                }
                this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
              }
            } else if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 5) && 
                (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 30) && (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 72))) {
              if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 30) {
                this.hitTile = (((this.hitTile | 0) + Math.imul(this.inventory[this.selectedItem].axe, 5)) | 0);
              } else {
                this.hitTile = (((this.hitTile | 0) + (this.inventory[this.selectedItem].axe | 0)) | 0);
              }
              if ((this.inventory[this.selectedItem].axe | 0) > 0) {
                if ((this.hitTile | 0) >= 100) {
                  this.hitTile = 0;
                  $T0C().KillTile(
                    $thisType.tileTargetX, 
                    $thisType.tileTargetY, 
                    false, 
                    false, 
                    false
                  );
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +($thisType.tileTargetX), 
                      +($thisType.tileTargetY), 
                      0
                    );
                  }
                } else {
                  $T0C().KillTile(
                    $thisType.tileTargetX, 
                    $thisType.tileTargetY, 
                    true, 
                    false, 
                    false
                  );
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      17, 
                      -1, 
                      -1, 
                      "", 
                      0, 
                      +($thisType.tileTargetX), 
                      +($thisType.tileTargetY), 
                      1
                    );
                  }
                }
                this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
              }
            } else if ((this.inventory[this.selectedItem].pick | 0) > 0) {
              if (!(!$T08().tileDungeon[$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type] && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 37) && (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 25))) {
                this.hitTile = (((this.hitTile | 0) + (((this.inventory[this.selectedItem].pick | 0) / 2) | 0)) | 0);
              } else {
                this.hitTile = (((this.hitTile | 0) + (this.inventory[this.selectedItem].pick | 0)) | 0);
              }
              if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 25) || ((this.inventory[this.selectedItem].pick | 0) >= 65))) {
                this.hitTile = 0;
              } else if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 37) || ((this.inventory[this.selectedItem].pick | 0) >= 55))) {
                this.hitTile = 0;
              }
              if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 0) && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 40) && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 53) && (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 59))) {
                this.hitTile = (((this.hitTile | 0) + (this.inventory[this.selectedItem].pick | 0)) | 0);
              }
              if ((this.hitTile | 0) >= 100) {
                this.hitTile = 0;
                $T0C().KillTile(
                  $thisType.tileTargetX, 
                  $thisType.tileTargetY, 
                  false, 
                  false, 
                  false
                );
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    17, 
                    -1, 
                    -1, 
                    "", 
                    0, 
                    +($thisType.tileTargetX), 
                    +($thisType.tileTargetY), 
                    0
                  );
                }
              } else {
                $T0C().KillTile(
                  $thisType.tileTargetX, 
                  $thisType.tileTargetY, 
                  true, 
                  false, 
                  false
                );
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    17, 
                    -1, 
                    -1, 
                    "", 
                    0, 
                    +($thisType.tileTargetX), 
                    +($thisType.tileTargetY), 
                    1
                  );
                }
              }
              this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
            }
          }
        }
        if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).wall | 0) <= 0) || 
            ((this.itemTime | 0) !== 0) || 
            ((this.itemAnimation | 0) <= 0) || 
            !this.controlUseItem || ((this.inventory[this.selectedItem].hammer | 0) <= 0))) {
          var flag3 = true;
          if (!$T08().wallHouse[$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).wall]) {
            flag3 = false;

            for (var num21 = ((($thisType.tileTargetX | 0) - 1) | 0); num21 < ((($thisType.tileTargetX | 0) + 2) | 0); num21 = ((num21 + 1) | 0)) {

            $loop10: 
              for (var num22 = ((($thisType.tileTargetY | 0) - 1) | 0); num22 < ((($thisType.tileTargetY | 0) + 2) | 0); num22 = ((num22 + 1) | 0)) {
                if (($T08().tile.Get(num21, num22).wall | 0) !== ($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).wall | 0)) {
                  flag3 = true;
                  break $loop10;
                }
              }
            }
          }
          if (flag3) {
            if (!(((this.hitTileX | 0) === ($thisType.tileTargetX | 0)) && ((this.hitTileY | 0) === ($thisType.tileTargetY | 0)))) {
              this.hitTile = 0;
              this.hitTileX = ($thisType.tileTargetX | 0);
              this.hitTileY = ($thisType.tileTargetY | 0);
            }
            this.hitTile = (((this.hitTile | 0) + (this.inventory[this.selectedItem].hammer | 0)) | 0);
            if ((this.hitTile | 0) >= 100) {
              this.hitTile = 0;
              $T0C().KillWall($thisType.tileTargetX, $thisType.tileTargetY, false);
              if (($T08().netMode | 0) === 1) {
                $T1C().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  2, 
                  +($thisType.tileTargetX), 
                  +($thisType.tileTargetY), 
                  0
                );
              }
            } else {
              $T0C().KillWall($thisType.tileTargetX, $thisType.tileTargetY, true);
              if (($T08().netMode | 0) === 1) {
                $T1C().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  2, 
                  +($thisType.tileTargetX), 
                  +($thisType.tileTargetY), 
                  1
                );
              }
            }
            this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
          }
        }
      }
      if (!(((this.inventory[this.selectedItem].type | 0) !== 29) || 
          ((this.itemAnimation | 0) <= 0) || 
          ((this.statLifeMax | 0) >= 400) || ((this.itemTime | 0) !== 0))) {
        this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
        this.statLifeMax = (((this.statLifeMax | 0) + 20) | 0);
        this.statLife = (((this.statLife | 0) + 20) | 0);
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          this.HealEffect(20);
        }
      }
      if (!(((this.inventory[this.selectedItem].type | 0) !== 109) || 
          ((this.itemAnimation | 0) <= 0) || 
          ((this.statManaMax | 0) >= 200) || ((this.itemTime | 0) !== 0))) {
        this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
        this.statManaMax = (((this.statManaMax | 0) + 20) | 0);
        this.statMana = (((this.statMana | 0) + 20) | 0);
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          this.ManaEffect(20);
        }
      }
      if (!(((this.inventory[this.selectedItem].createTile | 0) < 0) || 
          (((+((+this.position.X / 16)) - +($thisType.tileRangeX)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetX)) || 
          ((((+(((+this.position.X + +(this.width)) / 16)) + +($thisType.tileRangeX)) + +(this.inventory[this.selectedItem].tileBoost)) - 1) < +($thisType.tileTargetX)) || 
          (((+((+this.position.Y / 16)) - +($thisType.tileRangeY)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetY)) || ((((+(((+this.position.Y + +(this.height)) / 16)) + +($thisType.tileRangeY)) + +(this.inventory[this.selectedItem].tileBoost)) - 2) < +($thisType.tileTargetY)))) {
        this.showItemIcon = true;
        if (!(($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 23) && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 2) && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 60) && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 70)) || 
            ((this.itemTime | 0) !== 0) || 
            ((this.itemAnimation | 0) <= 0) || !this.controlUseItem)) {
          var flag4 = false;
          if (!(((this.inventory[this.selectedItem].createTile | 0) !== 23) && ((this.inventory[this.selectedItem].createTile | 0) !== 2))) {
            if (!(!$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active || (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 0))) {
              flag4 = true;
            }
          } else if (!(((this.inventory[this.selectedItem].createTile | 0) !== 60) && ((this.inventory[this.selectedItem].createTile | 0) !== 70))) {
            if (!(!$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active || (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 59))) {
              flag4 = true;
            }
          } else if ((this.inventory[this.selectedItem].createTile | 0) === 4) {
            if (!(!($T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).active && 
                  !$T08().tileNoAttach[$T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).type]) && 
                !($T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).active && 
                  !$T08().tileNoAttach[$T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).type]) && (!$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active || 
                  $T08().tileNoAttach[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).type]))) {
              flag4 = true;
            }
          } else if ((this.inventory[this.selectedItem].createTile | 0) === 78) {
            if (!(!$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active || (!$T08().tileSolid[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).type] && 
                  !$T08().tileTable[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).type]))) {
              flag4 = true;
            }
          } else if (!(((this.inventory[this.selectedItem].createTile | 0) !== 13) && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 29) && 
              ((this.inventory[this.selectedItem].createTile | 0) !== 33) && ((this.inventory[this.selectedItem].createTile | 0) !== 49))) {
            if (!(!$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active || !$T08().tileTable[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).type])) {
              flag4 = true;
            }
          } else if ((this.inventory[this.selectedItem].createTile | 0) === 51) {
            if (!(!$T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).active && 
                (($T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).wall | 0) <= 0) && 
                !$T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).active && 
                (($T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).wall | 0) <= 0) && 
                !$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active && 
                (($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).wall | 0) <= 0) && 
                !$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).active && (($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).wall | 0) <= 0))) {
              flag4 = true;
            }
          } else if (!(!($T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).active && 
                $T08().tileSolid[$T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).type]) && 
              !((($T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).wall | 0) > 0) || 
                ($T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).active && 
                  $T08().tileSolid[$T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).type])) && 
              !((($T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).wall | 0) > 0) || 
                ($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active && 
                  $T08().tileSolid[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).type])) && 
              !((($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).wall | 0) > 0) || 
                ($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).active && 
                  $T08().tileSolid[$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).type])) && (($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).wall | 0) <= 0))) {
            flag4 = true;
          }
          if (!(!flag4 || !$T0C().PlaceTile(
                $thisType.tileTargetX, 
                $thisType.tileTargetY, 
                this.inventory[this.selectedItem].createTile, 
                false, 
                false, 
                this.whoAmi
              ))) {
            this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
            if (($T08().netMode | 0) === 1) {
              $T1C().SendData(
                17, 
                -1, 
                -1, 
                "", 
                1, 
                +($thisType.tileTargetX), 
                +($thisType.tileTargetY), 
                +(this.inventory[this.selectedItem].createTile)
              );
            }
            if ((this.inventory[this.selectedItem].createTile | 0) === 15) {
              if ((this.direction | 0) === 1) {
                var expr_3528 = $T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY);
                expr_3528.frameX = (((((expr_3528.frameX | 0) + 18) | 0) + 0x8000 & 0xFFFF) - 0x8000);
                var expr_354D = $T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0));
                expr_354D.frameX = (((((expr_354D.frameX | 0) + 18) | 0) + 0x8000 & 0xFFFF) - 0x8000);
              }
              if (($T08().netMode | 0) === 1) {
                $T1C().SendTileSquare(-1, ((($thisType.tileTargetX | 0) - 1) | 0), ((($thisType.tileTargetY | 0) - 1) | 0), 3);
              }
            } else if (!(((this.inventory[this.selectedItem].createTile | 0) !== 79) || (($T08().netMode | 0) !== 1))) {
              $T1C().SendTileSquare(-1, $thisType.tileTargetX, $thisType.tileTargetY, 5);
            }
          }
        }
      }
      if ((this.inventory[this.selectedItem].createWall | 0) >= 0) {
        $thisType.tileTargetX = ((+((+($T08().mouseState.get_X()) + +$T08().screenPosition.X) / 16)) | 0);
        $thisType.tileTargetY = ((+((+($T08().mouseState.get_Y()) + +$T08().screenPosition.Y) / 16)) | 0);
        if (!((((+((+this.position.X / 16)) - +($thisType.tileRangeX)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetX)) || 
            ((((+(((+this.position.X + +(this.width)) / 16)) + +($thisType.tileRangeX)) + +(this.inventory[this.selectedItem].tileBoost)) - 1) < +($thisType.tileTargetX)) || 
            (((+((+this.position.Y / 16)) - +($thisType.tileRangeY)) - +(this.inventory[this.selectedItem].tileBoost)) > +($thisType.tileTargetY)) || ((((+(((+this.position.Y + +(this.height)) / 16)) + +($thisType.tileRangeY)) + +(this.inventory[this.selectedItem].tileBoost)) - 2) < +($thisType.tileTargetY)))) {
          this.showItemIcon = true;
          if (!(((this.itemTime | 0) !== 0) || 
              ((this.itemAnimation | 0) <= 0) || 
              !this.controlUseItem || 
              (!$T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).active && 
                (($T08().tile.Get(((($thisType.tileTargetX | 0) + 1) | 0), $thisType.tileTargetY).wall | 0) <= 0) && 
                !$T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).active && 
                (($T08().tile.Get(((($thisType.tileTargetX | 0) - 1) | 0), $thisType.tileTargetY).wall | 0) <= 0) && 
                !$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).active && 
                (($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) + 1) | 0)).wall | 0) <= 0) && 
                !$T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).active && 
                (($T08().tile.Get($thisType.tileTargetX, ((($thisType.tileTargetY | 0) - 1) | 0)).wall | 0) <= 0)) || (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).wall | 0) === (this.inventory[this.selectedItem].createWall | 0)))) {
            $T0C().PlaceWall($thisType.tileTargetX, $thisType.tileTargetY, this.inventory[this.selectedItem].createWall, false);
            if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).wall | 0) === (this.inventory[this.selectedItem].createWall | 0)) {
              this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
              if (($T08().netMode | 0) === 1) {
                $T1C().SendData(
                  17, 
                  -1, 
                  -1, 
                  "", 
                  3, 
                  +($thisType.tileTargetX), 
                  +($thisType.tileTargetY), 
                  +(this.inventory[this.selectedItem].createWall)
                );
              }
            }
          }
        }
      }
    }
    if (!(((this.inventory[this.selectedItem].damage | 0) < 0) || 
        ((this.inventory[this.selectedItem].type | 0) <= 0) || 
        this.inventory[this.selectedItem].noMelee || ((this.itemAnimation | 0) <= 0))) {
      var flag5 = false;
      (rectangle = rectangle.MemberwiseClone(), 
        $T20().prototype._ctor.call(rectangle, 
          ((this.itemLocation.X) | 0), 
          ((this.itemLocation.Y) | 0), 
          ($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Width(), 
          ($T08().itemTexture[this.inventory[this.selectedItem].type]).get_Height()
        ));
      rectangle.Width = ((+(rectangle.Width) * +this.inventory[this.selectedItem].scale) | 0);
      rectangle.Height = ((+(rectangle.Height) * +this.inventory[this.selectedItem].scale) | 0);
      if ((this.direction | 0) === -1) {
        rectangle.X = (((rectangle.X | 0) - (rectangle.Width | 0)) | 0);
      }
      rectangle.Y = (((rectangle.Y | 0) - (rectangle.Height | 0)) | 0);
      if ((this.inventory[this.selectedItem].useStyle | 0) === 1) {
        if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.333)) {
          if ((this.direction | 0) === -1) {
            rectangle.X = (((rectangle.X | 0) - (((+(rectangle.Width) * 1.4) - +(rectangle.Width)) | 0)) | 0);
          }
          rectangle.Width = ((+(rectangle.Width) * 1.4) | 0);
          rectangle.Y = (((rectangle.Y | 0) + ((+(rectangle.Height) * 0.5) | 0)) | 0);
          rectangle.Height = ((+(rectangle.Height) * 1.1) | 0);
        } else if (+(this.itemAnimation) >= (+(this.itemAnimationMax) * 0.666)) {
          if ((this.direction | 0) === 1) {
            rectangle.X = (((rectangle.X | 0) - ((+(rectangle.Width) * 1.2) | 0)) | 0);
          }
          rectangle.Width = Math.imul(rectangle.Width, 2);
          rectangle.Y = (((rectangle.Y | 0) - (((+(rectangle.Height) * 1.4) - +(rectangle.Height)) | 0)) | 0);
          rectangle.Height = ((+(rectangle.Height) * 1.4) | 0);
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 3) {
        if (+(this.itemAnimation) > (+(this.itemAnimationMax) * 0.666)) {
          flag5 = true;
        } else {
          if ((this.direction | 0) === -1) {
            rectangle.X = (((rectangle.X | 0) - (((+(rectangle.Width) * 1.4) - +(rectangle.Width)) | 0)) | 0);
          }
          rectangle.Width = ((+(rectangle.Width) * 1.4) | 0);
          rectangle.Y = (((rectangle.Y | 0) + ((+(rectangle.Height) * 0.6) | 0)) | 0);
          rectangle.Height = ((+(rectangle.Height) * 0.6) | 0);
        }
      }
      if (!flag5) {
        if (!((((this.inventory[this.selectedItem].type | 0) !== 44) && 
              ((this.inventory[this.selectedItem].type | 0) !== 45) && 
              ((this.inventory[this.selectedItem].type | 0) !== 46) && 
              ((this.inventory[this.selectedItem].type | 0) !== 103) && 
              ((this.inventory[this.selectedItem].type | 0) !== 104)) || (($T08().rand.Next(15) | 0) !== 0))) {
          $T22().NewDust(
            $S0A().Construct(+(rectangle.X), +(rectangle.Y)), 
            rectangle.Width, 
            rectangle.Height, 
            14, 
            +((this.direction | 0) * 2), 
            0, 
            150, 
            new ($T06())(), 
            1.3
          );
        }
        if ((this.inventory[this.selectedItem].type | 0) === 65) {
          if (($T08().rand.Next(5) | 0) === 0) {
            $T22().NewDust(
              $S0A().Construct(+(rectangle.X), +(rectangle.Y)), 
              rectangle.Width, 
              rectangle.Height, 
              15, 
              0, 
              0, 
              150, 
              new ($T06())(), 
              1.2
            );
          }
          if (($T08().rand.Next(10) | 0) === 0) {
            $T29().NewGore($S0A().Construct(+(rectangle.X), +(rectangle.Y)), new ($T02())(), $T08().rand.Next(16, 18));
          }
        }
        if (!(((this.inventory[this.selectedItem].type | 0) !== 190) && ((this.inventory[this.selectedItem].type | 0) !== 213))) {
          var num23 = ($T22().NewDust(
            $S0A().Construct(+(rectangle.X), +(rectangle.Y)), 
            rectangle.Width, 
            rectangle.Height, 
            40, 
            (+this.velocity.X * 0.2) + +((this.direction | 0) * 3), 
            +this.velocity.Y * 0.2, 
            0, 
            new ($T06())(), 
            1.2
          ) | 0);
          $T08().dust[num23].noGravity = true;
        }
        if ((this.inventory[this.selectedItem].type | 0) === 121) {

          for (var num24 = 0; num24 < 2; num24 = ((num24 + 1) | 0)) {
            var num25 = ($T22().NewDust(
              ($hoisted00._ctor(+(rectangle.X), +(rectangle.Y)), 
                $hoisted00), 
              rectangle.Width, 
              rectangle.Height, 
              6, 
              (+this.velocity.X * 0.2) + +((this.direction | 0) * 3), 
              +this.velocity.Y * 0.2, 
              100, 
              new ($T06())(), 
              2.5
            ) | 0);
            $T08().dust[num25].noGravity = true;
            var expr_3F04_cp_0 = $T08().dust[num25];
            expr_3F04_cp_0.velocity.X = +expr_3F04_cp_0.velocity.X * 2;
            var expr_3F22_cp_0 = $T08().dust[num25];
            expr_3F22_cp_0.velocity.Y = +expr_3F22_cp_0.velocity.Y * 2;
          }
        }
        if (!(((this.inventory[this.selectedItem].type | 0) !== 122) && ((this.inventory[this.selectedItem].type | 0) !== 217))) {
          var num26 = ($T22().NewDust(
            $S0A().Construct(+(rectangle.X), +(rectangle.Y)), 
            rectangle.Width, 
            rectangle.Height, 
            6, 
            (+this.velocity.X * 0.2) + +((this.direction | 0) * 3), 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T06())(), 
            1.9
          ) | 0);
          $T08().dust[num26].noGravity = true;
        }
        if ((this.inventory[this.selectedItem].type | 0) === 155) {
          var num27 = ($T22().NewDust(
            $S0A().Construct(+(rectangle.X), +(rectangle.Y)), 
            rectangle.Width, 
            rectangle.Height, 
            29, 
            (+this.velocity.X * 0.2) + +((this.direction | 0) * 3), 
            +this.velocity.Y * 0.2, 
            100, 
            new ($T06())(), 
            2
          ) | 0);
          $T08().dust[num27].noGravity = true;
          var expr_4086_cp_0 = $T08().dust[num27];
          expr_4086_cp_0.velocity.X = +((+expr_4086_cp_0.velocity.X / 2));
          var expr_40A4_cp_0 = $T08().dust[num27];
          expr_40A4_cp_0.velocity.Y = +((+expr_40A4_cp_0.velocity.Y / 2));
        }
        if (!(((this.inventory[this.selectedItem].type | 0) < 198) || ((this.inventory[this.selectedItem].type | 0) > 203))) {
          $T26().addLight(((+(((+this.itemLocation.X + 6) + +this.velocity.X) / 16)) | 0), ((+((+this.itemLocation.Y - 14) / 16)) | 0), 0.5);
        }
        if (($T08().myPlayer | 0) === (i | 0)) {
          var num28 = (((rectangle.X | 0) / 16) | 0);
          var num29 = (((((((rectangle.X | 0) + (rectangle.Width | 0)) | 0) / 16) | 0) + 1) | 0);
          var num30 = (((rectangle.Y | 0) / 16) | 0);
          var num31 = (((((((rectangle.Y | 0) + (rectangle.Height | 0)) | 0) / 16) | 0) + 1) | 0);

          for (var num32 = num28; num32 < num29; num32 = ((num32 + 1) | 0)) {

            for (var num33 = num30; num33 < num31; num33 = ((num33 + 1) | 0)) {
              if (!((($T08().tile.Get(num32, num33).type | 0) !== 3) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 24) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 28) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 32) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 51) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 52) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 61) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 62) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 69) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 71) && 
                  (($T08().tile.Get(num32, num33).type | 0) !== 73) && (($T08().tile.Get(num32, num33).type | 0) !== 74))) {
                $T0C().KillTile(
                  num32, 
                  num33, 
                  false, 
                  false, 
                  false
                );
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    17, 
                    -1, 
                    -1, 
                    "", 
                    0, 
                    +num32, 
                    +num33, 
                    0
                  );
                }
              }
            }
          }

          for (var num34 = 0; num34 < 1000; num34 = ((num34 + 1) | 0)) {
            if (!(!$T08().npc[num34].active || 
                (($T08().npc[num34].immune[i] | 0) !== 0) || 
                ((this.attackCD | 0) !== 0) || $T08().npc[num34].friendly)) {
              (value = value.MemberwiseClone(), 
                $T20().prototype._ctor.call(value, (($T08().npc[num34].position.X) | 0), (($T08().npc[num34].position.Y) | 0), $T08().npc[num34].width, $T08().npc[num34].height));
              if (!(!rectangle.Intersects(value.MemberwiseClone()) || (!$T08().npc[num34].noTileCollide && 
                    !$T2A().CanHit(
                      this.position, 
                      this.width, 
                      this.height, 
                      $T08().npc[num34].position, 
                      $T08().npc[num34].width, 
                      $T08().npc[num34].height
                    )))) {
                ($T08().npc[num34]).StrikeNPC(this.inventory[this.selectedItem].damage, this.inventory[this.selectedItem].knockBack, this.direction);
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    24, 
                    -1, 
                    -1, 
                    "", 
                    num34, 
                    +i, 
                    0, 
                    0
                  );
                }
                $T08().npc[num34].immune[i] = (this.itemAnimation | 0);
                this.attackCD = ((+(this.itemAnimationMax) * 0.33) | 0);
              }
            }
          }
          if (this.hostile) {

            for (var num35 = 0; num35 < 8; num35 = ((num35 + 1) | 0)) {
              if (!((num35 === (i | 0)) || 
                  !$T08().player[num35].active || 
                  !$T08().player[num35].hostile || 
                  $T08().player[num35].immune || 
                  $T08().player[num35].dead || ((($T08().player[i].team | 0) !== 0) && 
                    (($T08().player[i].team | 0) === ($T08().player[num35].team | 0))))) {
                (value2 = value2.MemberwiseClone(), 
                  $T20().prototype._ctor.call(value2, (($T08().player[num35].position.X) | 0), (($T08().player[num35].position.Y) | 0), $T08().player[num35].width, $T08().player[num35].height));
                if (!(!rectangle.Intersects(value2.MemberwiseClone()) || !$T2A().CanHit(
                      this.position, 
                      this.width, 
                      this.height, 
                      $T08().player[num35].position, 
                      $T08().player[num35].width, 
                      $T08().player[num35].height
                    ))) {
                  ($T08().player[num35]).Hurt(this.inventory[this.selectedItem].damage, this.direction, true, false);
                  if (($T08().netMode | 0) !== 0) {
                    $T1C().SendData(
                      26, 
                      -1, 
                      -1, 
                      "", 
                      num35, 
                      +(this.direction), 
                      +(this.inventory[this.selectedItem].damage), 
                      1
                    );
                  }
                  this.attackCD = ((+(this.itemAnimationMax) * 0.33) | 0);
                }
              }
            }
          }
        }
      }
    }
    if (!(((this.itemTime | 0) !== 0) || ((this.itemAnimation | 0) <= 0))) {
      if ((this.inventory[this.selectedItem].healLife | 0) > 0) {
        this.statLife = (((this.statLife | 0) + (this.inventory[this.selectedItem].healLife | 0)) | 0);
        this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          this.HealEffect(this.inventory[this.selectedItem].healLife);
        }
      }
      if ((this.inventory[this.selectedItem].healMana | 0) > 0) {
        this.statMana = (((this.statMana | 0) + (this.inventory[this.selectedItem].healMana | 0)) | 0);
        this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          this.ManaEffect(this.inventory[this.selectedItem].healMana);
        }
      }
    }
    if (!(((this.itemTime | 0) !== 0) || 
        ((this.itemAnimation | 0) <= 0) || (((this.inventory[this.selectedItem].type | 0) !== 43) && 
          ((this.inventory[this.selectedItem].type | 0) !== 70)))) {
      this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
      var flag6 = false;
      var num36 = 4;
      if ((this.inventory[this.selectedItem].type | 0) === 43) {
        num36 = 4;
      } else if ((this.inventory[this.selectedItem].type | 0) === 70) {
        num36 = 13;
      }

    $loop16: 
      for (var num37 = 0; num37 < 1000; num37 = ((num37 + 1) | 0)) {
        if (!(!$T08().npc[num37].active || (($T08().npc[num37].type | 0) !== num36))) {
          flag6 = true;
          break $loop16;
        }
      }
      if (flag6) {
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          this.Hurt(Math.imul(this.statLife, (((this.statDefense | 0) + 1) | 0)), -this.direction, false, false);
        }
      } else if ((this.inventory[this.selectedItem].type | 0) === 43) {
        if (!$T08().dayTime) {
          $T08().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
          if (($T08().netMode | 0) !== 1) {
            $T2B().SpawnOnPlayer(i, 4);
          }
        }
      } else if (!(((this.inventory[this.selectedItem].type | 0) !== 70) || !this.zoneEvil)) {
        $T08().PlaySound(15, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
        if (($T08().netMode | 0) !== 1) {
          $T2B().SpawnOnPlayer(i, 13);
        }
      }
    }
    if (!(((this.inventory[this.selectedItem].type | 0) !== 50) || ((this.itemAnimation | 0) <= 0))) {
      if (($T08().rand.Next(2) | 0) === 0) {
        $T22().NewDust(
          this.position, 
          this.width, 
          this.height, 
          15, 
          0, 
          0, 
          150, 
          new ($T06())(), 
          1.1
        );
      }
      if ((this.itemTime | 0) === 0) {
        this.itemTime = (this.inventory[this.selectedItem].useTime | 0);
      } else if ((this.itemTime | 0) === (((this.inventory[this.selectedItem].useTime | 0) / 2) | 0)) {

        for (var num38 = 0; num38 < 70; num38 = ((num38 + 1) | 0)) {
          $T22().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            +this.velocity.X * 0.5, 
            +this.velocity.Y * 0.5, 
            150, 
            new ($T06())(), 
            1.5
          );
        }
        this.grappling[0] = -1;
        this.grapCount = 0;

        for (var num39 = 0; num39 < 1000; num39 = ((num39 + 1) | 0)) {
          if (!(!$T08().projectile[num39].active || 
              (($T08().projectile[num39].owner | 0) !== (i | 0)) || (($T08().projectile[num39].aiStyle | 0) !== 7))) {
            ($T08().projectile[num39]).Kill();
          }
        }
        this.Spawn();

        for (var num40 = 0; num40 < 70; num40 = ((num40 + 1) | 0)) {
          $T22().NewDust(
            this.position, 
            this.width, 
            this.height, 
            15, 
            0, 
            0, 
            150, 
            new ($T06())(), 
            1.5
          );
        }
      }
    }
    if ((i | 0) === ($T08().myPlayer | 0)) {
      if (!(((this.itemTime | 0) !== (this.inventory[this.selectedItem].useTime | 0)) || !this.inventory[this.selectedItem].consumable)) {
        this.inventory[this.selectedItem].stack = (((this.inventory[this.selectedItem].stack | 0) - 1) | 0);
        if ((this.inventory[this.selectedItem].stack | 0) <= 0) {
          this.itemTime = (this.itemAnimation | 0);
        }
      }
      if (!(((this.inventory[this.selectedItem].stack | 0) > 0) || ((this.itemAnimation | 0) !== 0))) {
        this.inventory[this.selectedItem] = new ($T00())();
      }
    }
  }; 

  function Player_ItemSpace (newItem) {
    if ((newItem.type | 0) === 58) {
      return true;
    }
    if ((newItem.type | 0) === 184) {
      return true;
    }
    var num = 40;
    if (!(((newItem.type | 0) !== 71) && 
        ((newItem.type | 0) !== 72) && 
        ((newItem.type | 0) !== 73) && ((newItem.type | 0) !== 74))) {
      num = 44;
    }

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      if ((this.inventory[i].type | 0) === 0) {
        return true;
      }
    }

    for (var j = 0; j < num; j = ((j + 1) | 0)) {
      if (!(((this.inventory[j].type | 0) <= 0) || 
          ((this.inventory[j].stack | 0) >= (this.inventory[j].maxStack | 0)) || !newItem.IsTheSameAs(this.inventory[j]))) {
        return true;
      }
    }
    return false;
  }; 

  function Player_KillMe (dmg, hitDirection, pvp) {
    if (!(!$T08().godMode || (($T08().myPlayer | 0) !== (this.whoAmi | 0)))) {
      return;
    }
    if (this.dead) {
      return;
    }
    if (pvp) {
      this.pvpDeath = true;
    }
    $T08().PlaySound(5, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
    this.headVelocity.Y = +($T08().rand.Next(-40, -10)) * 0.1;
    this.bodyVelocity.Y = +($T08().rand.Next(-40, -10)) * 0.1;
    this.legVelocity.Y = +($T08().rand.Next(-40, -10)) * 0.1;
    this.headVelocity.X = (+($T08().rand.Next(-20, 21)) * 0.1) + +(2 * (hitDirection | 0));
    this.bodyVelocity.X = (+($T08().rand.Next(-20, 21)) * 0.1) + +(2 * (hitDirection | 0));
    this.legVelocity.X = (+($T08().rand.Next(-20, 21)) * 0.1) + +(2 * (hitDirection | 0));

    for (var num = 0; +num < (20 + (+((+dmg / +(this.statLifeMax))) * 100)); num = ((num + 1) | 0)) {
      if (this.boneArmor) {
        $T22().NewDust(
          this.position, 
          this.width, 
          this.height, 
          26, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T06())(), 
          1
        );
      } else {
        $T22().NewDust(
          this.position, 
          this.width, 
          this.height, 
          5, 
          +(2 * (hitDirection | 0)), 
          -2, 
          0, 
          new ($T06())(), 
          1
        );
      }
    }
    this.dead = true;
    this.respawnTimer = 600;
    this.immuneAlpha = 0;
    if (($T08().netMode | 0) === 2) {
      $T1C().SendData(
        25, 
        -1, 
        -1, 
        JSIL.ConcatString(this.$name, " was slain..."), 
        8, 
        225, 
        25, 
        25
      );
    }
    if ((this.whoAmi | 0) === ($T08().myPlayer | 0)) {
      $T0C().saveToonWhilePlaying();
    }
    if (!((($T08().netMode | 0) !== 1) || ((this.whoAmi | 0) !== ($T08().myPlayer | 0)))) {
      var num2 = 0;
      if (pvp) {
        num2 = 1;
      }
      $T1C().SendData(
        44, 
        -1, 
        -1, 
        "", 
        this.whoAmi, 
        +hitDirection, 
        +(((dmg) | 0)), 
        +num2
      );
    }
    if (!(pvp || ((this.whoAmi | 0) !== ($T08().myPlayer | 0)))) {
      this.DropItems();
    }
  }; 

  function Player_LoadPlayer (playerPath, $exception) {
    var flag = false;
    if ($T08().rand === null) {
      $T08().rand = $S0B().Construct($T2D().get_Now().get_Ticks().ToNumber(4294967295, true));
    }
    var player = new $thisType();
    try {
      var text = (JSIL.ConcatString(playerPath, ".dat"));
      flag = $thisType.DecryptFile(playerPath, text);
      if (!flag) {
        var fileStream = $S05().Construct(text, $T13().Open);
        try {
          var binaryReader = $S0C().Construct(fileStream);
          try {
            binaryReader.ReadInt32();
            player.$name = binaryReader.ReadString();
            player.hair = (binaryReader.ReadInt32() | 0);
            player.statLife = (binaryReader.ReadInt32() | 0);
            player.statLifeMax = (binaryReader.ReadInt32() | 0);
            player.statMana = (binaryReader.ReadInt32() | 0);
            player.statManaMax = (binaryReader.ReadInt32() | 0);
            (player.hairColor).set_R(binaryReader.ReadByte());
            (player.hairColor).set_G(binaryReader.ReadByte());
            (player.hairColor).set_B(binaryReader.ReadByte());
            (player.skinColor).set_R(binaryReader.ReadByte());
            (player.skinColor).set_G(binaryReader.ReadByte());
            (player.skinColor).set_B(binaryReader.ReadByte());
            (player.eyeColor).set_R(binaryReader.ReadByte());
            (player.eyeColor).set_G(binaryReader.ReadByte());
            (player.eyeColor).set_B(binaryReader.ReadByte());
            (player.shirtColor).set_R(binaryReader.ReadByte());
            (player.shirtColor).set_G(binaryReader.ReadByte());
            (player.shirtColor).set_B(binaryReader.ReadByte());
            (player.underShirtColor).set_R(binaryReader.ReadByte());
            (player.underShirtColor).set_G(binaryReader.ReadByte());
            (player.underShirtColor).set_B(binaryReader.ReadByte());
            (player.pantsColor).set_R(binaryReader.ReadByte());
            (player.pantsColor).set_G(binaryReader.ReadByte());
            (player.pantsColor).set_B(binaryReader.ReadByte());
            (player.shoeColor).set_R(binaryReader.ReadByte());
            (player.shoeColor).set_G(binaryReader.ReadByte());
            (player.shoeColor).set_B(binaryReader.ReadByte());

            for (var i = 0; i < 8; i = ((i + 1) | 0)) {
              $S01().CallVirtual("SetDefaults", null, player.armor[i], binaryReader.ReadString());
            }

            for (var j = 0; j < 44; j = ((j + 1) | 0)) {
              $S01().CallVirtual("SetDefaults", null, player.inventory[j], binaryReader.ReadString());
              player.inventory[j].stack = (binaryReader.ReadInt32() | 0);
            }

            for (var k = 0; k < ($T01().maxItems | 0); k = ((k + 1) | 0)) {
              $S01().CallVirtual("SetDefaults", null, player.bank[k], binaryReader.ReadString());
              player.bank[k].stack = (binaryReader.ReadInt32() | 0);
            }

          $loop3: 
            for (var l = 0; l < 200; l = ((l + 1) | 0)) {
              var num = (binaryReader.ReadInt32() | 0);
              if (num === -1) {
                break $loop3;
              }
              player.spX[l] = num;
              player.spY[l] = (binaryReader.ReadInt32() | 0);
              player.spI[l] = (binaryReader.ReadInt32() | 0);
              player.spN[l] = binaryReader.ReadString();
            }
            binaryReader.Close();
          } finally {
            if (binaryReader !== null) {
              $IM00().Call(binaryReader, null);
            }
          }
        } finally {
          if (fileStream !== null) {
            $IM00().Call(fileStream, null);
          }
        }
        player.PlayerFrame();
        $T1A().Delete(text);
        var result = player;
        return result;
      }
    } catch ($exception) {
      flag = true;
    }
    if (!flag) {
      return new $thisType();
    }
    var text2 = (JSIL.ConcatString(playerPath, ".bak"));
    if ($T1A().Exists(text2)) {
      $T1A().Delete(playerPath);
      $T1A().Move(text2, playerPath);
      return $thisType.LoadPlayer(playerPath);
    }
    return new $thisType();
  }; 

  function Player_ManaEffect (manaAmount) {
    $T1F().NewText(new ($T20())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height), $S09().Construct(180, 50, 255, 255), String($T03().$Box(manaAmount)));
    if (!((($T08().netMode | 0) !== 1) || ((this.whoAmi | 0) !== ($T08().myPlayer | 0)))) {
      $T1C().SendData(
        43, 
        -1, 
        -1, 
        "", 
        this.whoAmi, 
        +manaAmount, 
        0, 
        0
      );
    }
  }; 

  function Player_PlayerFrame () {
    var vector = new ($T02())();
    if ((this.swimTime | 0) > 0) {
      this.swimTime = (((this.swimTime | 0) - 1) | 0);
      if (!this.wet) {
        this.swimTime = 0;
      }
    }
    this.head = (this.armor[0].headSlot | 0);
    this.body = (this.armor[1].bodySlot | 0);
    this.legs = (this.armor[2].legSlot | 0);
    this.bodyFrame.Width = 40;
    this.bodyFrame.Height = 56;
    this.legFrame.Width = 40;
    this.legFrame.Height = 56;
    this.bodyFrame.X = 0;
    this.legFrame.X = 0;
    if (!(((this.itemAnimation | 0) <= 0) || ((this.inventory[this.selectedItem].useStyle | 0) === 10))) {
      if (!(((this.inventory[this.selectedItem].useStyle | 0) !== 1) && ((this.inventory[this.selectedItem].type | 0) !== 0))) {
        if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.333)) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
        } else if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.666)) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 2);
        } else {
          this.bodyFrame.Y = (this.bodyFrame.Height | 0);
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 2) {
        if (+(this.itemAnimation) < (+(this.itemAnimationMax) * 0.5)) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 4);
        } else {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 5);
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 3) {
        if (+(this.itemAnimation) > (+(this.itemAnimationMax) * 0.666)) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
        } else {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
        }
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 4) {
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 2);
      } else if ((this.inventory[this.selectedItem].useStyle | 0) === 5) {
        var num = +this.itemRotation * +(this.direction);
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
        if (num < -0.75) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 2);
        }
        if (num > 0.6) {
          this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 4);
        }
      }
    } else if ((this.inventory[this.selectedItem].holdStyle | 0) === 1) {
      this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
    } else if ((this.inventory[this.selectedItem].holdStyle | 0) === 2) {
      this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 2);
    } else if ((this.grappling[0] | 0) >= 0) {
      (vector = vector.MemberwiseClone(), 
        $T02().prototype._ctor.call(vector, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
      var num2 = 0;
      var num3 = 0;

      for (var i = 0; i < (this.grapCount | 0); i = ((i + 1) | 0)) {
        num2 += +$T08().projectile[this.grappling[i]].position.X + +((($T08().projectile[this.grappling[i]].width | 0) / 2 | 0));
        num3 += +$T08().projectile[this.grappling[i]].position.Y + +((($T08().projectile[this.grappling[i]].height | 0) / 2 | 0));
      }
      num2 = +((num2 / +(this.grapCount)));
      num3 = +((num3 / +(this.grapCount)));
      num2 -= +vector.X;
      num3 -= +vector.Y;
      if (!((num3 >= 0) || ((Math.abs(num3)) <= (Math.abs(num2))))) {
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 2);
      } else if (!((num3 <= 0) || ((Math.abs(num3)) <= (Math.abs(num2))))) {
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 4);
      } else {
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 3);
      }
    } else if ((this.swimTime | 0) > 0) {
      if ((this.swimTime | 0) > 20) {
        this.bodyFrame.Y = 0;
      } else if ((this.swimTime | 0) > 10) {
        this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 5);
      } else {
        this.bodyFrame.Y = 0;
      }
    } else if (+this.velocity.Y !== 0) {
      this.bodyFrameCounter = 0;
      this.bodyFrame.Y = Math.imul(this.bodyFrame.Height, 5);
    } else if (+this.velocity.X !== 0) {
      this.bodyFrameCounter = +this.bodyFrameCounter + (Math.abs(this.velocity.X) * 1.5);
      this.bodyFrame.Y = (this.legFrame.Y | 0);
    } else {
      this.bodyFrameCounter = 0;
      this.bodyFrame.Y = 0;
    }
    if ((this.swimTime | 0) > 0) {
      this.legFrameCounter = +this.legFrameCounter + 2;

      while (+this.legFrameCounter > 8) {
        this.legFrameCounter = +this.legFrameCounter - 8;
        this.legFrame.Y = (((this.legFrame.Y | 0) + (this.legFrame.Height | 0)) | 0);
      }
      if ((this.legFrame.Y | 0) < Math.imul(this.legFrame.Height, 7)) {
        this.legFrame.Y = Math.imul(this.legFrame.Height, 19);
        return;
      }
      if ((this.legFrame.Y | 0) > Math.imul(this.legFrame.Height, 19)) {
        this.legFrame.Y = Math.imul(this.legFrame.Height, 7);
        return;
      }
    } else {
      if (!((+this.velocity.Y === 0) && ((this.grappling[0] | 0) <= -1))) {
        this.legFrameCounter = 0;
        this.legFrame.Y = Math.imul(this.legFrame.Height, 5);
        return;
      }
      if (+this.velocity.X !== 0) {
        this.legFrameCounter = +this.legFrameCounter + (Math.abs(this.velocity.X) * 1.3);

        while (+this.legFrameCounter > 8) {
          this.legFrameCounter = +this.legFrameCounter - 8;
          this.legFrame.Y = (((this.legFrame.Y | 0) + (this.legFrame.Height | 0)) | 0);
        }
        if ((this.legFrame.Y | 0) < Math.imul(this.legFrame.Height, 7)) {
          this.legFrame.Y = Math.imul(this.legFrame.Height, 19);
          return;
        }
        if ((this.legFrame.Y | 0) > Math.imul(this.legFrame.Height, 19)) {
          this.legFrame.Y = Math.imul(this.legFrame.Height, 7);
          return;
        }
      } else {
        this.legFrameCounter = 0;
        this.legFrame.Y = 0;
      }
    }
  }; 

  function Player_SavePlayer (newPlayer, playerPath) {
    if (playerPath === null) {
      return;
    }
    var destFileName = (JSIL.ConcatString(playerPath, ".bak"));
    if ($T1A().Exists(playerPath)) {
      $T1A().Copy(playerPath, destFileName, true);
    }
    var text = (JSIL.ConcatString(playerPath, ".dat"));
    var fileStream = $S05().Construct(text, $T13().Create);
    try {
      var binaryWriter = $S0D().Construct(fileStream);
      try {
        $S0E().CallVirtual("Write", null, binaryWriter, $T08().curRelease);
        $S0F().CallVirtual("Write", null, binaryWriter, newPlayer.$name);
        $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.hair);
        $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.statLife);
        $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.statLifeMax);
        $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.statMana);
        $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.statManaMax);
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.hairColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.hairColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.hairColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.skinColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.skinColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.skinColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.eyeColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.eyeColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.eyeColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shirtColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shirtColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shirtColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.underShirtColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.underShirtColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.underShirtColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.pantsColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.pantsColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.pantsColor).get_B());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shoeColor).get_R());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shoeColor).get_G());
        $S10().CallVirtual("Write", null, binaryWriter, (newPlayer.shoeColor).get_B());

        for (var i = 0; i < 8; i = ((i + 1) | 0)) {
          if (newPlayer.armor[i].$name === null) {
            newPlayer.armor[i].$name = "";
          }
          $S0F().CallVirtual("Write", null, binaryWriter, newPlayer.armor[i].$name);
        }

        for (var j = 0; j < 44; j = ((j + 1) | 0)) {
          if (newPlayer.inventory[j].$name === null) {
            newPlayer.inventory[j].$name = "";
          }
          $S0F().CallVirtual("Write", null, binaryWriter, newPlayer.inventory[j].$name);
          $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.inventory[j].stack);
        }

        for (var k = 0; k < ($T01().maxItems | 0); k = ((k + 1) | 0)) {
          if (newPlayer.bank[k].$name === null) {
            newPlayer.bank[k].$name = "";
          }
          $S0F().CallVirtual("Write", null, binaryWriter, newPlayer.bank[k].$name);
          $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.bank[k].stack);
        }

      $loop3: 
        for (var l = 0; l < 200; l = ((l + 1) | 0)) {
          if (newPlayer.spN[l] === null) {
            $S0E().CallVirtual("Write", null, binaryWriter, -1);
            break $loop3;
          }
          $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.spX[l]);
          $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.spY[l]);
          $S0E().CallVirtual("Write", null, binaryWriter, newPlayer.spI[l]);
          $S0F().CallVirtual("Write", null, binaryWriter, newPlayer.spN[l]);
        }
        binaryWriter.Close();
      } finally {
        if (binaryWriter !== null) {
          $IM00().Call(binaryWriter, null);
        }
      }
    } finally {
      if (fileStream !== null) {
        $IM00().Call(fileStream, null);
      }
    }
    $thisType.EncryptFile(text, playerPath);
    $T1A().Delete(text);
  }; 

  function Player_SellItem (price) {
    if ((price | 0) <= 0) {
      return false;
    }
    var array = JSIL.Array.New($T00(), 44);

    for (var i = 0; i < 44; i = ((i + 1) | 0)) {
      array[i] = new ($T00())();
      array[i] = $T00().$Cast((this.inventory[i]).Clone());
    }
    var j = (((price | 0) / 5) | 0);
    if (j < 1) {
      j = 1;
    }
    var flag = false;

  $loop1: 
    while (j >= 1000000) {
      if (flag) {
        break $loop1;
      }
      var num = -1;

      for (var k = 43; k >= 0; k = ((k - 1) | 0)) {
        if (!((num !== -1) || (((this.inventory[k].type | 0) !== 0) && 
              ((this.inventory[k].stack | 0) !== 0)))) {
          num = k;
        }

        while (((this.inventory[k].type | 0) === 74) && 
          ((this.inventory[k].stack | 0) < (this.inventory[k].maxStack | 0)) && (j >= 1000000)) {
          this.inventory[k].stack = (((this.inventory[k].stack | 0) + 1) | 0);
          j = ((j - 1000000) | 0);
          this.DoCoins(k);
          if (!(((this.inventory[k].stack | 0) !== 0) || (num !== -1))) {
            num = k;
          }
        }
      }
      if (j >= 1000000) {
        if (num === -1) {
          flag = true;
        } else {
          $S02().CallVirtual("SetDefaults", null, this.inventory[num], 74);
          j = ((j - 1000000) | 0);
        }
      }
    }

  $loop4: 
    while (j >= 10000) {
      if (flag) {
        break $loop4;
      }
      var num2 = -1;

      for (var l = 43; l >= 0; l = ((l - 1) | 0)) {
        if (!((num2 !== -1) || (((this.inventory[l].type | 0) !== 0) && 
              ((this.inventory[l].stack | 0) !== 0)))) {
          num2 = l;
        }

        while (((this.inventory[l].type | 0) === 73) && 
          ((this.inventory[l].stack | 0) < (this.inventory[l].maxStack | 0)) && (j >= 10000)) {
          this.inventory[l].stack = (((this.inventory[l].stack | 0) + 1) | 0);
          j = ((j - 10000) | 0);
          this.DoCoins(l);
          if (!(((this.inventory[l].stack | 0) !== 0) || (num2 !== -1))) {
            num2 = l;
          }
        }
      }
      if (j >= 10000) {
        if (num2 === -1) {
          flag = true;
        } else {
          $S02().CallVirtual("SetDefaults", null, this.inventory[num2], 73);
          j = ((j - 10000) | 0);
        }
      }
    }

  $loop7: 
    while (j >= 100) {
      if (flag) {
        break $loop7;
      }
      var num3 = -1;

      for (var m = 43; m >= 0; m = ((m - 1) | 0)) {
        if (!((num3 !== -1) || (((this.inventory[m].type | 0) !== 0) && 
              ((this.inventory[m].stack | 0) !== 0)))) {
          num3 = m;
        }

        while (((this.inventory[m].type | 0) === 72) && 
          ((this.inventory[m].stack | 0) < (this.inventory[m].maxStack | 0)) && (j >= 100)) {
          this.inventory[m].stack = (((this.inventory[m].stack | 0) + 1) | 0);
          j = ((j - 100) | 0);
          this.DoCoins(m);
          if (!(((this.inventory[m].stack | 0) !== 0) || (num3 !== -1))) {
            num3 = m;
          }
        }
      }
      if (j >= 100) {
        if (num3 === -1) {
          flag = true;
        } else {
          $S02().CallVirtual("SetDefaults", null, this.inventory[num3], 72);
          j = ((j - 100) | 0);
        }
      }
    }

    while ((j >= 1) && !flag) {
      var num4 = -1;

      for (var n = 43; n >= 0; n = ((n - 1) | 0)) {
        if (!((num4 !== -1) || (((this.inventory[n].type | 0) !== 0) && 
              ((this.inventory[n].stack | 0) !== 0)))) {
          num4 = n;
        }

        while (((this.inventory[n].type | 0) === 71) && 
          ((this.inventory[n].stack | 0) < (this.inventory[n].maxStack | 0)) && (j >= 1)) {
          this.inventory[n].stack = (((this.inventory[n].stack | 0) + 1) | 0);
          j = ((j - 1) | 0);
          this.DoCoins(n);
          if (!(((this.inventory[n].stack | 0) !== 0) || (num4 !== -1))) {
            num4 = n;
          }
        }
      }
      if (j >= 1) {
        if (num4 === -1) {
          flag = true;
        } else {
          $S02().CallVirtual("SetDefaults", null, this.inventory[num4], 71);
          j = ((j - 1) | 0);
        }
      }
    }
    if (flag) {

      for (var num5 = 0; num5 < 44; num5 = ((num5 + 1) | 0)) {
        this.inventory[num5] = $T00().$Cast((array[num5]).Clone());
      }
      return false;
    }
    return true;
  }; 

  function Player_Spawn () {
    if ((this.whoAmi | 0) === ($T08().myPlayer | 0)) {
      this.FindSpawn();
      if (!$thisType.CheckSpawn(this.SpawnX, this.SpawnY)) {
        this.SpawnX = -1;
        this.SpawnY = -1;
      }
    }
    if (!((($T08().netMode | 0) !== 1) || ((this.whoAmi | 0) !== ($T08().myPlayer | 0)))) {
      $T1C().SendData(
        12, 
        -1, 
        -1, 
        "", 
        $T08().myPlayer, 
        0, 
        0, 
        0
      );
      $T08().gameMenu = false;
    }
    this.headPosition = new ($T02())();
    this.bodyPosition = new ($T02())();
    this.legPosition = new ($T02())();
    this.headRotation = 0;
    this.bodyRotation = 0;
    this.legRotation = 0;
    if ((this.statLife | 0) <= 0) {
      this.statLife = 100;
      this.breath = (this.breathMax | 0);
      if (this.spawnMax) {
        this.statLife = (this.statLifeMax | 0);
        this.statMana = (this.statManaMax | 0);
      }
    }
    this.immune = true;
    this.dead = false;
    this.immuneTime = 0;
    this.active = true;
    if (!(((this.SpawnX | 0) < 0) || ((this.SpawnY | 0) < 0))) {
      this.position.X = +(((Math.imul(this.SpawnX, 16) + 8) | 0) - (((this.width | 0) / 2) | 0));
      this.position.Y = +(Math.imul(this.SpawnY, 16) - (this.height | 0));
    } else {
      this.position.X = +(((Math.imul($T08().spawnTileX, 16) + 8) | 0) - (((this.width | 0) / 2) | 0));
      this.position.Y = +(Math.imul($T08().spawnTileY, 16) - (this.height | 0));

      for (var i = ((($T08().spawnTileX | 0) - 1) | 0); i < ((($T08().spawnTileX | 0) + 2) | 0); i = ((i + 1) | 0)) {

        for (var j = ((($T08().spawnTileY | 0) - 3) | 0); j < ($T08().spawnTileY | 0); j = ((j + 1) | 0)) {
          if ($T08().tileSolid[$T08().tile.Get(i, j).type]) {
            $T08().tile.Get(i, j).lava = false;
            $T08().tile.Get(i, j).liquid = 0;
            $T08().tile.Get(i, j).active = false;
            $T08().tile.Get(i, j).type = 0;
            $T0C().SquareTileFrame(i, j, true);
          }
        }
      }
    }
    this.wet = $T2A().WetCollision(this.position, this.width, this.height);
    this.wetCount = 0;
    this.lavaWet = false;
    this.fallStart = ((+(+this.position.Y / 16)) | 0);
    this.velocity.X = 0;
    this.velocity.Y = 0;
    this.talkNPC = -1;
    if (this.pvpDeath) {
      this.pvpDeath = false;
      this.immuneTime = 300;
      this.statLife = (this.statLifeMax | 0);
    }
    if ((this.whoAmi | 0) === ($T08().myPlayer | 0)) {
      $T26().lightCounter = ((($T26().lightSkip | 0) + 1) | 0);
      $T08().screenPosition.X = (+this.position.X + +(((this.width | 0) / 2 | 0))) - +((($T08().screenWidth | 0) / 2 | 0));
      $T08().screenPosition.Y = (+this.position.Y + +(((this.height | 0) / 2 | 0))) - +((($T08().screenHeight | 0) / 2 | 0));
    }
  }; 

  function Player_UpdatePlayer (i) {
    var $hoisted00 = new ($T02())(), $hoisted01 = new ($T02())(), $hoisted02 = new ($T02())(), $hoisted03 = new ($T02())(), $hoisted04 = new ($T02())(), $hoisted05 = new ($T02())(), $hoisted06 = new ($T02())(), $hoisted07 = new ($T02())(), $hoisted08 = new ($T02())();
    var rectangle = new ($T20())(), value = new ($T20())(), rectangle2 = new ($T20())(), value2 = new ($T20())(), rectangle3 = new ($T20())(), vector2 = new ($T02())();
    var num = 10;
    var num2 = 0.4;
    $thisType.jumpHeight = 15;
    $thisType.jumpSpeed = 5.01;
    if (this.wet) {
      num2 = 0.2;
      num = 5;
      $thisType.jumpHeight = 30;
      $thisType.jumpSpeed = 6.01;
    }
    var num3 = 3;
    var num4 = 0.08;
    var num6 = num3;
    if (this.active) {
      this.shadowCount = (((this.shadowCount | 0) + 1) | 0);
      if ((this.shadowCount | 0) === 1) {
        this.shadowPos[2] = this.shadowPos[1].MemberwiseClone();
      } else if ((this.shadowCount | 0) === 2) {
        this.shadowPos[1] = this.shadowPos[0].MemberwiseClone();
      } else if ((this.shadowCount | 0) >= 3) {
        this.shadowCount = 0;
        this.shadowPos[0] = this.position.MemberwiseClone();
      }
      this.whoAmi = (i | 0);
      if ((this.runSoundDelay | 0) > 0) {
        this.runSoundDelay = (((this.runSoundDelay | 0) - 1) | 0);
      }
      if ((this.attackCD | 0) > 0) {
        this.attackCD = (((this.attackCD | 0) - 1) | 0);
      }
      if ((this.itemAnimation | 0) === 0) {
        this.attackCD = 0;
      }
      if ((this.chatShowTime | 0) > 0) {
        this.chatShowTime = (((this.chatShowTime | 0) - 1) | 0);
      }
      if ((this.potionDelay | 0) > 0) {
        this.potionDelay = (((this.potionDelay | 0) - 1) | 0);
      }
      if (this.dead) {
        if ((i | 0) === ($T08().myPlayer | 0)) {
          $T08().npcChatText = "";
          $T08().editSign = false;
        }
        this.sign = -1;
        this.talkNPC = -1;
        this.statLife = 0;
        this.channel = false;
        this.potionDelay = 0;
        this.chest = -1;
        this.changeItem = -1;
        this.itemAnimation = 0;
        this.immuneAlpha = (((this.immuneAlpha | 0) + 2) | 0);
        if ((this.immuneAlpha | 0) > 255) {
          this.immuneAlpha = 255;
        }
        this.respawnTimer = (((this.respawnTimer | 0) - 1) | 0);
        this.headPosition = $T02().op_Addition(this.headPosition.MemberwiseClone(), this.headVelocity.MemberwiseClone()).MemberwiseClone();
        this.bodyPosition = $T02().op_Addition(this.bodyPosition.MemberwiseClone(), this.bodyVelocity.MemberwiseClone()).MemberwiseClone();
        this.legPosition = $T02().op_Addition(this.legPosition.MemberwiseClone(), this.legVelocity.MemberwiseClone()).MemberwiseClone();
        this.headRotation = +this.headRotation + (+this.headVelocity.X * 0.1);
        this.bodyRotation = +this.bodyRotation + (+this.bodyVelocity.X * 0.1);
        this.legRotation = +this.legRotation + (+this.legVelocity.X * 0.1);
        this.headVelocity.Y = +this.headVelocity.Y + 0.1;
        this.bodyVelocity.Y = +this.bodyVelocity.Y + 0.1;
        this.legVelocity.Y = +this.legVelocity.Y + 0.1;
        this.headVelocity.X = +this.headVelocity.X * 0.99;
        this.bodyVelocity.X = +this.bodyVelocity.X * 0.99;
        this.legVelocity.X = +this.legVelocity.X * 0.99;
        if (!(((this.respawnTimer | 0) > 0) || (($T08().myPlayer | 0) !== (this.whoAmi | 0)))) {
          this.Spawn();
          return;
        }
      } else {
        if ((i | 0) === ($T08().myPlayer | 0)) {
          this.zoneEvil = false;
          if (($T08().evilTiles | 0) >= 500) {
            this.zoneEvil = true;
          }
          this.zoneMeteor = false;
          if (($T08().meteorTiles | 0) >= 50) {
            this.zoneMeteor = true;
          }
          this.zoneDungeon = false;
          if (!((($T08().dungeonTiles | 0) < 250) || (this.position.Y <= ((+$T08().worldSurface * 16) + +($T08().screenHeight))))) {
            var num7 = ((((this.position.X) | 0) / 16) | 0);
            var num8 = ((((this.position.Y) | 0) / 16) | 0);
            if (!((($T08().tile.Get(num7, num8).wall | 0) <= 0) || $T08().wallHouse[$T08().tile.Get(num7, num8).wall])) {
              this.zoneDungeon = true;
            }
          }
          this.zoneJungle = false;
          if (($T08().jungleTiles | 0) >= 200) {
            this.zoneJungle = true;
          }
          this.controlUp = false;
          this.controlLeft = false;
          this.controlDown = false;
          this.controlRight = false;
          this.controlJump = false;
          this.controlUseItem = false;
          this.controlUseTile = false;
          this.controlThrow = false;
          if ($T08().hasFocus) {
            if (!($T08().chatMode || $T08().editSign)) {
              var pressedKeys = $T08().keyState.GetPressedKeys();

              for (var j = 0; j < (pressedKeys.length | 0); j = ((j + 1) | 0)) {
                var a = (String(pressedKeys[j]));
                if (a == $T08().cUp) {
                  this.controlUp = true;
                }
                if (a == $T08().cLeft) {
                  this.controlLeft = true;
                }
                if (a == $T08().cDown) {
                  this.controlDown = true;
                }
                if (a == $T08().cRight) {
                  this.controlRight = true;
                }
                if (a == $T08().cJump) {
                  this.controlJump = true;
                }
                if (a == $T08().cThrowItem) {
                  this.controlThrow = true;
                }
              }
              if (!(!this.controlLeft || !this.controlRight)) {
                this.controlLeft = false;
                this.controlRight = false;
              }
            }
            if (!(($T08().mouseState.get_LeftButton() !== $T34().Pressed) || this.mouseInterface)) {
              this.controlUseItem = true;
            }
            if (!(($T08().mouseState.get_RightButton() !== $T34().Pressed) || this.mouseInterface)) {
              this.controlUseTile = true;
            }
            if ($T08().keyState.IsKeyDown($T33().Escape)) {
              if (this.releaseInventory) {
                if ((this.talkNPC | 0) >= 0) {
                  this.talkNPC = -1;
                  $T08().npcChatText = "";
                  $T08().PlaySound(11, -1, -1, 1);
                } else if ((this.sign | 0) >= 0) {
                  this.sign = -1;
                  $T08().editSign = false;
                  $T08().npcChatText = "";
                  $T08().PlaySound(11, -1, -1, 1);
                } else if (!$T08().playerInventory) {
                  $T09().FindRecipes();
                  $T08().playerInventory = true;
                  $T08().PlaySound(10, -1, -1, 1);
                } else {
                  $T08().playerInventory = false;
                  $T08().PlaySound(11, -1, -1, 1);
                }
              }
              this.releaseInventory = false;
            } else {
              this.releaseInventory = true;
            }
            if (this.delayUseItem) {
              if (!this.controlUseItem) {
                this.delayUseItem = false;
              }
              this.controlUseItem = false;
            }
            if (!(((this.itemAnimation | 0) !== 0) || ((this.itemTime | 0) !== 0))) {
              if (!(!(this.controlThrow && 
                    ((this.inventory[this.selectedItem].type | 0) > 0) && 
                    !$T08().chatMode) && ((!(($T08().mouseState.get_LeftButton() === $T34().Pressed) && 
                        !this.mouseInterface && 
                        $T08().mouseLeftRelease) && 
                      $T08().playerInventory) || 
                    (($T08().mouseItem.type | 0) <= 0)))) {
                var item = new ($T00())();
                var flag = false;
                if (!((!(($T08().mouseState.get_LeftButton() === $T34().Pressed) && 
                        !this.mouseInterface && 
                        $T08().mouseLeftRelease) && 
                      $T08().playerInventory) || (($T08().mouseItem.type | 0) <= 0))) {
                  item = this.inventory[this.selectedItem];
                  this.inventory[this.selectedItem] = $T08().mouseItem;
                  this.delayUseItem = true;
                  this.controlUseItem = false;
                  flag = true;
                }
                var num9 = ($T00().NewItem(
                  ((this.position.X) | 0), 
                  ((this.position.Y) | 0), 
                  this.width, 
                  this.height, 
                  this.inventory[this.selectedItem].type, 
                  1, 
                  false
                ) | 0);
                if (!(flag || 
                    ((this.inventory[this.selectedItem].type | 0) !== 8) || ((this.inventory[this.selectedItem].stack | 0) <= 1))) {
                  this.inventory[this.selectedItem].stack = (((this.inventory[this.selectedItem].stack | 0) - 1) | 0);
                } else {
                  this.inventory[this.selectedItem].position = $T08().item[num9].position.MemberwiseClone();
                  $T08().item[num9] = this.inventory[this.selectedItem];
                  this.inventory[this.selectedItem] = new ($T00())();
                }
                if (($T08().netMode | 0) === 0) {
                  $T08().item[num9].noGrabDelay = 100;
                }
                $T08().item[num9].velocity.Y = -2;
                $T08().item[num9].velocity.X = +(4 * (this.direction | 0)) + +this.velocity.X;
                if (!((!(($T08().mouseState.get_LeftButton() === $T34().Pressed) && 
                        !this.mouseInterface) && 
                      $T08().playerInventory) || (($T08().mouseItem.type | 0) <= 0))) {
                  this.inventory[this.selectedItem] = item;
                  $T08().mouseItem = new ($T00())();
                } else {
                  this.itemAnimation = 10;
                  this.itemAnimationMax = 10;
                }
                $T09().FindRecipes();
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    21, 
                    -1, 
                    -1, 
                    "", 
                    num9, 
                    0, 
                    0, 
                    0
                  );
                }
              }
              if (!$T08().playerInventory) {
                var num10 = (this.selectedItem | 0);
                if ($T08().keyState.IsKeyDown($T33().D1)) {
                  this.selectedItem = 0;
                }
                if ($T08().keyState.IsKeyDown($T33().D2)) {
                  this.selectedItem = 1;
                }
                if ($T08().keyState.IsKeyDown($T33().D3)) {
                  this.selectedItem = 2;
                }
                if ($T08().keyState.IsKeyDown($T33().D4)) {
                  this.selectedItem = 3;
                }
                if ($T08().keyState.IsKeyDown($T33().D5)) {
                  this.selectedItem = 4;
                }
                if ($T08().keyState.IsKeyDown($T33().D6)) {
                  this.selectedItem = 5;
                }
                if ($T08().keyState.IsKeyDown($T33().D7)) {
                  this.selectedItem = 6;
                }
                if ($T08().keyState.IsKeyDown($T33().D8)) {
                  this.selectedItem = 7;
                }
                if ($T08().keyState.IsKeyDown($T33().D9)) {
                  this.selectedItem = 8;
                }
                if ($T08().keyState.IsKeyDown($T33().D0)) {
                  this.selectedItem = 9;
                }
                if (num10 !== (this.selectedItem | 0)) {
                  $T08().PlaySound(12, -1, -1, 1);
                }

                for (var k = ((((($T08().mouseState.get_ScrollWheelValue() | 0) - ($T08().oldMouseState.get_ScrollWheelValue() | 0)) | 0) / 120) | 0); k > 9; k = ((k - 10) | 0)) {
                }

                for (; k < 0; k = ((k + 10) | 0)) {
                }
                this.selectedItem = (((this.selectedItem | 0) - k) | 0);
                if (k !== 0) {
                  $T08().PlaySound(12, -1, -1, 1);
                }
                if ((this.changeItem | 0) >= 0) {
                  if ((this.selectedItem | 0) !== (this.changeItem | 0)) {
                    $T08().PlaySound(12, -1, -1, 1);
                  }
                  this.selectedItem = (this.changeItem | 0);
                  this.changeItem = -1;
                }

                while ((this.selectedItem | 0) > 9) {
                  this.selectedItem = (((this.selectedItem | 0) - 10) | 0);
                }

                while ((this.selectedItem | 0) < 0) {
                  this.selectedItem = (((this.selectedItem | 0) + 10) | 0);
                }
              } else {
                var num11 = ((((($T08().mouseState.get_ScrollWheelValue() | 0) - ($T08().oldMouseState.get_ScrollWheelValue() | 0)) | 0) / 120) | 0);
                $T08().focusRecipe = ((($T08().focusRecipe | 0) + num11) | 0);
                if (($T08().focusRecipe | 0) > ((($T08().numAvailableRecipes | 0) - 1) | 0)) {
                  $T08().focusRecipe = ((($T08().numAvailableRecipes | 0) - 1) | 0);
                }
                if (($T08().focusRecipe | 0) < 0) {
                  $T08().focusRecipe = 0;
                }
              }
            }
          }
          if (($T08().netMode | 0) === 1) {
            var flag2 = false;
            if (!(((this.statLife | 0) === ($T08().clientPlayer.statLife | 0)) && ((this.statLifeMax | 0) === ($T08().clientPlayer.statLifeMax | 0)))) {
              $T1C().SendData(
                16, 
                -1, 
                -1, 
                "", 
                $T08().myPlayer, 
                0, 
                0, 
                0
              );
              flag2 = true;
            }
            if (!(((this.statMana | 0) === ($T08().clientPlayer.statMana | 0)) && ((this.statManaMax | 0) === ($T08().clientPlayer.statManaMax | 0)))) {
              $T1C().SendData(
                42, 
                -1, 
                -1, 
                "", 
                $T08().myPlayer, 
                0, 
                0, 
                0
              );
              flag2 = true;
            }
            if (this.controlUp !== $T08().clientPlayer.controlUp) {
              flag2 = true;
            }
            if (this.controlDown !== $T08().clientPlayer.controlDown) {
              flag2 = true;
            }
            if (this.controlLeft !== $T08().clientPlayer.controlLeft) {
              flag2 = true;
            }
            if (this.controlRight !== $T08().clientPlayer.controlRight) {
              flag2 = true;
            }
            if (this.controlJump !== $T08().clientPlayer.controlJump) {
              flag2 = true;
            }
            if (this.controlUseItem !== $T08().clientPlayer.controlUseItem) {
              flag2 = true;
            }
            if ((this.selectedItem | 0) !== ($T08().clientPlayer.selectedItem | 0)) {
              flag2 = true;
            }
            if (flag2) {
              $T1C().SendData(
                13, 
                -1, 
                -1, 
                "", 
                $T08().myPlayer, 
                0, 
                0, 
                0
              );
            }
          }
          if ($T08().playerInventory) {
            this.AdjTiles();
          }
          if ((this.chest | 0) !== -1) {
            var num12 = ((+((this.position.X + (+(this.width) * 0.5)) / 16)) | 0);
            var num13 = ((+((this.position.Y + (+(this.height) * 0.5)) / 16)) | 0);
            if (!((num12 >= (((this.chestX | 0) - 5) | 0)) && 
                (num12 <= (((this.chestX | 0) + 6) | 0)) && 
                (num13 >= (((this.chestY | 0) - 4) | 0)) && (num13 <= (((this.chestY | 0) + 5) | 0)))) {
              if ((this.chest | 0) !== -1) {
                $T08().PlaySound(11, -1, -1, 1);
              }
              this.chest = -1;
            }
            if (!$T08().tile.Get(this.chestX, this.chestY).active) {
              $T08().PlaySound(11, -1, -1, 1);
              this.chest = -1;
            }
          }
          if (+this.velocity.Y === 0) {
            if (!((((((+(+this.position.Y / 16)) | 0) - (this.fallStart | 0)) | 0) <= 25) || this.noFallDmg)) {
              this.immune = false;
              this.Hurt(Math.imul(((((((+(+this.position.Y / 16)) | 0) - (this.fallStart | 0)) | 0) - 25) | 0), 10), -this.direction, false, false);
            }
          }
          if (!((+this.velocity.Y > (num * 0.5)) && 
              ((this.rocketDelay | 0) <= 0) && !this.wet)) {
            this.fallStart = ((+(+this.position.Y / 16)) | 0);
          }
        }
        if (this.mouseInterface) {
          this.delayUseItem = true;
        }
        $thisType.tileTargetX = ((+((+($T08().mouseState.get_X()) + +$T08().screenPosition.X) / 16)) | 0);
        $thisType.tileTargetY = ((+((+($T08().mouseState.get_Y()) + +$T08().screenPosition.Y) / 16)) | 0);
        if (this.immune) {
          this.immuneTime = (((this.immuneTime | 0) - 1) | 0);
          if ((this.immuneTime | 0) <= 0) {
            this.immune = false;
          }
          this.immuneAlpha = (((this.immuneAlpha | 0) + Math.imul(this.immuneAlphaDirection, 50)) | 0);
          if ((this.immuneAlpha | 0) <= 50) {
            this.immuneAlphaDirection = 1;
          } else if ((this.immuneAlpha | 0) >= 205) {
            this.immuneAlphaDirection = -1;
          }
        } else {
          this.immuneAlpha = 0;
        }
        if ((this.manaRegenDelay | 0) > 0) {
          this.manaRegenDelay = (((this.manaRegenDelay | 0) - 1) | 0);
        }
        this.statDefense = 0;
        this.accWatch = 0;
        this.accDepthMeter = 0;
        this.lifeRegen = 0;
        this.manaCost = 1;
        this.meleeSpeed = 1;
        this.boneArmor = false;
        this.rocketBoots = false;
        this.fireWalk = false;
        this.noKnockback = false;
        this.jumpBoost = false;
        this.noFallDmg = false;
        this.accFlipper = false;
        this.spawnMax = false;
        if ((this.manaRegenDelay | 0) === 0) {
          this.manaRegen = (((((this.statManaMax | 0) / 30) | 0) + 1) | 0);
        } else {
          this.manaRegen = 0;
        }
        this.doubleJump = false;

        for (var l = 0; l < 8; l = ((l + 1) | 0)) {
          this.statDefense = (((this.statDefense | 0) + (this.armor[l].defense | 0)) | 0);
          this.lifeRegen = (((this.lifeRegen | 0) + (this.armor[l].lifeRegen | 0)) | 0);
          this.manaRegen = (((this.manaRegen | 0) + (this.armor[l].manaRegen | 0)) | 0);
          if ((this.armor[l].type | 0) === 193) {
            this.fireWalk = true;
          }
        }
        this.head = (this.armor[0].headSlot | 0);
        this.body = (this.armor[1].bodySlot | 0);
        this.legs = (this.armor[2].legSlot | 0);

        for (var m = 3; m < 8; m = ((m + 1) | 0)) {
          if (!(((this.armor[m].type | 0) !== 15) || ((this.accWatch | 0) >= 1))) {
            this.accWatch = 1;
          }
          if (!(((this.armor[m].type | 0) !== 16) || ((this.accWatch | 0) >= 2))) {
            this.accWatch = 2;
          }
          if (!(((this.armor[m].type | 0) !== 17) || ((this.accWatch | 0) >= 3))) {
            this.accWatch = 3;
          }
          if (!(((this.armor[m].type | 0) !== 18) || ((this.accDepthMeter | 0) >= 1))) {
            this.accDepthMeter = 1;
          }
          if ((this.armor[m].type | 0) === 53) {
            this.doubleJump = true;
          }
          if ((this.armor[m].type | 0) === 54) {
            num6 = 6;
          }
          if ((this.armor[m].type | 0) === 128) {
            this.rocketBoots = true;
          }
          if ((this.armor[m].type | 0) === 156) {
            this.noKnockback = true;
          }
          if ((this.armor[m].type | 0) === 158) {
            this.noFallDmg = true;
          }
          if ((this.armor[m].type | 0) === 159) {
            this.jumpBoost = true;
          }
          if ((this.armor[m].type | 0) === 187) {
            this.accFlipper = true;
          }
          if ((this.armor[m].type | 0) === 211) {
            this.meleeSpeed = +this.meleeSpeed * 0.9;
          }
          if ((this.armor[m].type | 0) === 223) {
            this.spawnMax = true;
          }
          if ((this.armor[m].type | 0) === 212) {
            num4 *= 1.1;
            num3 *= 1.1;
          }
        }
        this.lifeRegenCount = (((this.lifeRegenCount | 0) + (this.lifeRegen | 0)) | 0);

        while ((this.lifeRegenCount | 0) >= 120) {
          this.lifeRegenCount = (((this.lifeRegenCount | 0) - 120) | 0);
          if ((this.statLife | 0) < (this.statLifeMax | 0)) {
            this.statLife = (((this.statLife | 0) + 1) | 0);
          }
          if ((this.statLife | 0) > (this.statLifeMax | 0)) {
            this.statLife = (this.statLifeMax | 0);
          }
        }
        this.manaRegenCount = (((this.manaRegenCount | 0) + (this.manaRegen | 0)) | 0);

        while ((this.manaRegenCount | 0) >= 120) {
          this.manaRegenCount = (((this.manaRegenCount | 0) - 120) | 0);
          if ((this.statMana | 0) < (this.statManaMax | 0)) {
            this.statMana = (((this.statMana | 0) + 1) | 0);
          }
          if ((this.statMana | 0) > (this.statManaMax | 0)) {
            this.statMana = (this.statManaMax | 0);
          }
        }
        if ((this.head | 0) === 11) {
          $T26().addLight((((((+this.position.X + +(((this.width | 0) / 2 | 0))) + +(8 * (this.direction | 0))) | 0) / 16) | 0), ((((+this.position.Y + 2) | 0) / 16) | 0), 0.8);
        }
        if (this.jumpBoost) {
          $thisType.jumpHeight = 20;
          $thisType.jumpSpeed = 6.51;
        }
        this.setBonus = "";
        if (!(!(((this.head | 0) === 1) && 
              ((this.body | 0) === 1) && 
              ((this.legs | 0) === 1)) && (((this.head | 0) !== 2) || 
              ((this.body | 0) !== 2) || 
              ((this.legs | 0) !== 2)))) {
          this.setBonus = "2 defense";
          this.statDefense = (((this.statDefense | 0) + 1) | 0);
        }
        if (!(!(((this.head | 0) === 3) && 
              ((this.body | 0) === 3) && 
              ((this.legs | 0) === 3)) && (((this.head | 0) !== 4) || 
              ((this.body | 0) !== 4) || 
              ((this.legs | 0) !== 4)))) {
          this.setBonus = "3 defense";
          this.statDefense = (((this.statDefense | 0) + 2) | 0);
        }
        if (!(((this.head | 0) !== 5) || 
            ((this.body | 0) !== 5) || ((this.legs | 0) !== 5))) {
          this.setBonus = "15 % increased melee speed";
          this.meleeSpeed = +this.meleeSpeed * 0.85;
          if (($T08().rand.Next(10) | 0) === 0) {
            $T22().NewDust(
              $S0A().Construct(this.position.X, this.position.Y), 
              this.width, 
              this.height, 
              14, 
              0, 
              0, 
              200, 
              new ($T06())(), 
              1.2
            );
          }
        }
        if (!(((this.head | 0) !== 6) || 
            ((this.body | 0) !== 6) || ((this.legs | 0) !== 6))) {
          this.setBonus = "20% reduced mana usage";
          this.manaCost = +this.manaCost * 0.8;
          if (!((((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y))) <= 1) || this.rocketFrame)) {

            for (var n = 0; n < 2; n = ((n + 1) | 0)) {
              var num15 = ($T22().NewDust(
                ($hoisted00._ctor(+this.position.X - (+this.velocity.X * 2), (+this.position.Y - 2) - (+this.velocity.Y * 2)), 
                  $hoisted00), 
                this.width, 
                this.height, 
                6, 
                0, 
                0, 
                100, 
                new ($T06())(), 
                2
              ) | 0);
              $T08().dust[num15].noGravity = true;
              var expr_1519_cp_0 = $T08().dust[num15];
              expr_1519_cp_0.velocity.X = +expr_1519_cp_0.velocity.X - (+this.velocity.X * 0.5);
              var expr_1543_cp_0 = $T08().dust[num15];
              expr_1543_cp_0.velocity.Y = +expr_1543_cp_0.velocity.Y - (+this.velocity.Y * 0.5);
            }
          }
        }
        if (!(((this.head | 0) !== 7) || 
            ((this.body | 0) !== 7) || ((this.legs | 0) !== 7))) {
          num4 *= 1.3;
          num3 *= 1.3;
          this.setBonus = "30% increased movement speed";
          this.boneArmor = true;
        }
        if (!(((this.head | 0) !== 8) || 
            ((this.body | 0) !== 8) || ((this.legs | 0) !== 8))) {
          this.setBonus = "25% reduced mana usage";
          this.manaCost = +this.manaCost * 0.75;
          this.meleeSpeed = +this.meleeSpeed * 0.9;
          if (($T08().rand.Next(10) | 0) === 0) {
            $T22().NewDust(
              $S0A().Construct(this.position.X, this.position.Y), 
              this.width, 
              this.height, 
              14, 
              0, 
              0, 
              200, 
              new ($T06())(), 
              1.2
            );
          }
        }
        if (!(((this.head | 0) !== 9) || 
            ((this.body | 0) !== 9) || ((this.legs | 0) !== 9))) {
          this.setBonus = "10 defense";
          if (!((((Math.abs(this.velocity.X)) + (Math.abs(this.velocity.Y))) <= 1) || this.rocketFrame)) {

            for (var num16 = 0; num16 < 2; num16 = ((num16 + 1) | 0)) {
              var num17 = ($T22().NewDust(
                ($hoisted01._ctor(+this.position.X - (+this.velocity.X * 2), (+this.position.Y - 2) - (+this.velocity.Y * 2)), 
                  $hoisted01), 
                this.width, 
                this.height, 
                6, 
                0, 
                0, 
                100, 
                new ($T06())(), 
                2
              ) | 0);
              $T08().dust[num17].noGravity = true;
              var expr_1758_cp_0 = $T08().dust[num17];
              expr_1758_cp_0.velocity.X = +expr_1758_cp_0.velocity.X - (+this.velocity.X * 0.5);
              var expr_1782_cp_0 = $T08().dust[num17];
              expr_1782_cp_0.velocity.Y = +expr_1782_cp_0.velocity.Y - (+this.velocity.Y * 0.5);
            }
          }
        }
        if (!this.doubleJump) {
          this.jumpAgain = false;
        } else if (+this.velocity.Y === 0) {
          this.jumpAgain = true;
        }
        if (this.meleeSpeed < 0.7) {
          this.meleeSpeed = 0.7;
        }
        if ((this.grappling[0] | 0) === -1) {
          if (!(!this.controlLeft || (+this.velocity.X <= -num3))) {
            if (+this.velocity.X > 0.2) {
              this.velocity.X = +this.velocity.X - 0.2;
            }
            this.velocity.X = +this.velocity.X - num4;
            if (!(((this.itemAnimation | 0) !== 0) && !this.inventory[this.selectedItem].useTurn)) {
              this.direction = -1;
            }
          } else if (!(!this.controlRight || (+this.velocity.X >= num3))) {
            if (+this.velocity.X < -0.2) {
              this.velocity.X = +this.velocity.X + 0.2;
            }
            this.velocity.X = +this.velocity.X + num4;
            if (!(((this.itemAnimation | 0) !== 0) && !this.inventory[this.selectedItem].useTurn)) {
              this.direction = 1;
            }
          } else if (!(!this.controlLeft || (+this.velocity.X <= -num6))) {
            if (!(((this.itemAnimation | 0) !== 0) && !this.inventory[this.selectedItem].useTurn)) {
              this.direction = -1;
            }
            if (+this.velocity.Y === 0) {
              if (+this.velocity.X > 0.2) {
                this.velocity.X = +this.velocity.X - 0.2;
              }
              this.velocity.X = +this.velocity.X - (num4 * 0.2);
            }
            if (!((+this.velocity.X >= +((-(num6 + num3) / 2))) || (+this.velocity.Y !== 0))) {
              if (!(((this.runSoundDelay | 0) !== 0) || (+this.velocity.Y !== 0))) {
                $T08().PlaySound(17, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                this.runSoundDelay = 9;
              }
              var num18 = ($T22().NewDust(
                $S0A().Construct((+this.position.X - 4), (+this.position.Y + +(this.height))), 
                (((this.width | 0) + 8) | 0), 
                4, 
                16, 
                -this.velocity.X * 0.5, 
                +this.velocity.Y * 0.5, 
                50, 
                new ($T06())(), 
                1.5
              ) | 0);
              $T08().dust[num18].velocity.X = +$T08().dust[num18].velocity.X * 0.2;
              $T08().dust[num18].velocity.Y = +$T08().dust[num18].velocity.Y * 0.2;
            }
          } else if (!(!this.controlRight || (+this.velocity.X >= num6))) {
            if (!(((this.itemAnimation | 0) !== 0) && !this.inventory[this.selectedItem].useTurn)) {
              this.direction = 1;
            }
            if (+this.velocity.Y === 0) {
              if (+this.velocity.X < -0.2) {
                this.velocity.X = +this.velocity.X + 0.2;
              }
              this.velocity.X = +this.velocity.X + (num4 * 0.2);
            }
            if (!((+this.velocity.X <= +(((num6 + num3) / 2))) || (+this.velocity.Y !== 0))) {
              if (!(((this.runSoundDelay | 0) !== 0) || (+this.velocity.Y !== 0))) {
                $T08().PlaySound(17, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                this.runSoundDelay = 9;
              }
              var num19 = ($T22().NewDust(
                $S0A().Construct((+this.position.X - 4), (+this.position.Y + +(this.height))), 
                (((this.width | 0) + 8) | 0), 
                4, 
                16, 
                -this.velocity.X * 0.5, 
                +this.velocity.Y * 0.5, 
                50, 
                new ($T06())(), 
                1.5
              ) | 0);
              $T08().dust[num19].velocity.X = +$T08().dust[num19].velocity.X * 0.2;
              $T08().dust[num19].velocity.Y = +$T08().dust[num19].velocity.Y * 0.2;
            }
          } else if (+this.velocity.Y === 0) {
            if (+this.velocity.X > 0.2) {
              this.velocity.X = +this.velocity.X - 0.2;
            } else if (+this.velocity.X < -0.2) {
              this.velocity.X = +this.velocity.X + 0.2;
            } else {
              this.velocity.X = 0;
            }
          } else if (this.velocity.X > (0.2 * 0.5)) {
            this.velocity.X = +this.velocity.X - (0.2 * 0.5);
          } else if (this.velocity.X < (-0.2 * 0.5)) {
            this.velocity.X = +this.velocity.X + (0.2 * 0.5);
          } else {
            this.velocity.X = 0;
          }
          if (this.controlJump) {
            if ((this.jump | 0) > 0) {
              if (+this.velocity.Y > (-$thisType.jumpSpeed + (num2 * 2))) {
                this.jump = 0;
              } else {
                this.velocity.Y = -$thisType.jumpSpeed;
                this.jump = (((this.jump | 0) - 1) | 0);
              }
            } else if (!(((+this.velocity.Y !== 0) && 
                  !this.jumpAgain && 
                  (!this.wet || 
                    !this.accFlipper)) || !this.releaseJump)) {
              var flag3 = false;
              if (!(!this.wet || !this.accFlipper)) {
                if ((this.swimTime | 0) === 0) {
                  this.swimTime = 30;
                }
                flag3 = true;
              }
              this.jumpAgain = false;
              this.canRocket = false;
              this.rocketRelease = false;
              if (!((+this.velocity.Y !== 0) || !this.doubleJump)) {
                this.jumpAgain = true;
              }
              if (!((+this.velocity.Y !== 0) && !flag3)) {
                this.velocity.Y = -$thisType.jumpSpeed;
                this.jump = ($thisType.jumpHeight | 0);
              } else {
                $T08().PlaySound(16, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                this.velocity.Y = -$thisType.jumpSpeed;
                this.jump = ((($thisType.jumpHeight | 0) / 2) | 0);

                for (var num20 = 0; num20 < 10; num20 = ((num20 + 1) | 0)) {
                  var num21 = ($T22().NewDust(
                    ($hoisted02._ctor(+this.position.X - 34, (+this.position.Y + +(this.height)) - 16), 
                      $hoisted02), 
                    102, 
                    32, 
                    16, 
                    -this.velocity.X * 0.5, 
                    +this.velocity.Y * 0.5, 
                    100, 
                    new ($T06())(), 
                    1.5
                  ) | 0);
                  $T08().dust[num21].velocity.X = (+$T08().dust[num21].velocity.X * 0.5) - (+this.velocity.X * 0.1);
                  $T08().dust[num21].velocity.Y = (+$T08().dust[num21].velocity.Y * 0.5) - (+this.velocity.Y * 0.3);
                }
                var num22 = ($T29().NewGore($S0A().Construct(((+this.position.X + +(((this.width | 0) / 2 | 0))) - 16), ((+this.position.Y + +(this.height)) - 16)), $S0A().Construct(-this.velocity.X, -this.velocity.Y), $T08().rand.Next(11, 14)) | 0);
                $T08().gore[num22].velocity.X = (+$T08().gore[num22].velocity.X * 0.1) - (+this.velocity.X * 0.1);
                $T08().gore[num22].velocity.Y = (+$T08().gore[num22].velocity.Y * 0.1) - (+this.velocity.Y * 0.05);
                num22 = ($T29().NewGore($S0A().Construct((+this.position.X - 36), ((+this.position.Y + +(this.height)) - 16)), $S0A().Construct(-this.velocity.X, -this.velocity.Y), $T08().rand.Next(11, 14)) | 0);
                $T08().gore[num22].velocity.X = (+$T08().gore[num22].velocity.X * 0.1) - (+this.velocity.X * 0.1);
                $T08().gore[num22].velocity.Y = (+$T08().gore[num22].velocity.Y * 0.1) - (+this.velocity.Y * 0.05);
                num22 = ($T29().NewGore($S0A().Construct(((+this.position.X + +(this.width)) + 4), ((+this.position.Y + +(this.height)) - 16)), $S0A().Construct(-this.velocity.X, -this.velocity.Y), $T08().rand.Next(11, 14)) | 0);
                $T08().gore[num22].velocity.X = (+$T08().gore[num22].velocity.X * 0.1) - (+this.velocity.X * 0.1);
                $T08().gore[num22].velocity.Y = (+$T08().gore[num22].velocity.Y * 0.1) - (+this.velocity.Y * 0.05);
              }
            }
            this.releaseJump = false;
          } else {
            this.jump = 0;
            this.releaseJump = true;
            this.rocketRelease = true;
          }
          if (!(!this.doubleJump || 
              this.jumpAgain || 
              (+this.velocity.Y >= 0) || 
              this.rocketBoots || this.accFlipper)) {
            var num23 = ($T22().NewDust(
              $S0A().Construct((+this.position.X - 4), (+this.position.Y + +(this.height))), 
              (((this.width | 0) + 8) | 0), 
              4, 
              16, 
              -this.velocity.X * 0.5, 
              +this.velocity.Y * 0.5, 
              100, 
              new ($T06())(), 
              1.5
            ) | 0);
            $T08().dust[num23].velocity.X = (+$T08().dust[num23].velocity.X * 0.5) - (+this.velocity.X * 0.1);
            $T08().dust[num23].velocity.Y = (+$T08().dust[num23].velocity.Y * 0.5) - (+this.velocity.Y * 0.3);
          }
          if (!((+this.velocity.Y <= -$thisType.jumpSpeed) || (+this.velocity.Y === 0))) {
            this.canRocket = true;
          }
          if (!(!this.rocketBoots || 
              !this.controlJump || 
              ((this.rocketDelay | 0) !== 0) || 
              !this.canRocket || 
              !this.rocketRelease || this.jumpAgain)) {
            if ((this.statMana | 0) >= ((+7 * +this.manaCost) | 0)) {
              this.manaRegenDelay = 180;
              this.statMana = (((this.statMana | 0) - ((+7 * +this.manaCost) | 0)) | 0);
              this.rocketDelay = 10;
              if ((this.rocketDelay2 | 0) <= 0) {
                $T08().PlaySound(2, ((this.position.X) | 0), ((this.position.Y) | 0), 13);
                this.rocketDelay2 = 30;
              }
            } else {
              this.canRocket = false;
            }
          }
          if ((this.rocketDelay2 | 0) > 0) {
            this.rocketDelay2 = (((this.rocketDelay2 | 0) - 1) | 0);
          }
          if ((this.rocketDelay | 0) === 0) {
            this.rocketFrame = false;
          }
          if ((this.rocketDelay | 0) > 0) {
            this.rocketFrame = true;

            for (var num25 = 0; num25 < 2; num25 = ((num25 + 1) | 0)) {
              if (num25 === 0) {
                var num26 = ($T22().NewDust(
                  ($hoisted03._ctor(+this.position.X - 4, (+this.position.Y + +(this.height)) - 10), 
                    $hoisted03), 
                  8, 
                  8, 
                  6, 
                  0, 
                  0, 
                  100, 
                  new ($T06())(), 
                  2.5
                ) | 0);
                $T08().dust[num26].noGravity = true;
                $T08().dust[num26].velocity.X = ((+$T08().dust[num26].velocity.X * 1) - 2) - (+this.velocity.X * 0.3);
                $T08().dust[num26].velocity.Y = ((+$T08().dust[num26].velocity.Y * 1) + 2) - (+this.velocity.Y * 0.3);
              } else {
                var num27 = ($T22().NewDust(
                  ($hoisted04._ctor((+this.position.X + +(this.width)) - 4, (+this.position.Y + +(this.height)) - 10), 
                    $hoisted04), 
                  8, 
                  8, 
                  6, 
                  0, 
                  0, 
                  100, 
                  new ($T06())(), 
                  2.5
                ) | 0);
                $T08().dust[num27].noGravity = true;
                $T08().dust[num27].velocity.X = ((+$T08().dust[num27].velocity.X * 1) + 2) - (+this.velocity.X * 0.3);
                $T08().dust[num27].velocity.Y = ((+$T08().dust[num27].velocity.Y * 1) + 2) - (+this.velocity.Y * 0.3);
              }
            }
            if ((this.rocketDelay | 0) === 0) {
              this.releaseJump = true;
            }
            this.rocketDelay = (((this.rocketDelay | 0) - 1) | 0);
            this.velocity.Y = +this.velocity.Y - 0.1;
            if (+this.velocity.Y > 0) {
              this.velocity.Y = +this.velocity.Y - 0.3;
            }
            if (+this.velocity.Y < -$thisType.jumpSpeed) {
              this.velocity.Y = -$thisType.jumpSpeed;
            }
          } else {
            this.velocity.Y = +this.velocity.Y + num2;
          }
          if (+this.velocity.Y > num) {
            this.velocity.Y = num;
          }
        }

        for (var num28 = 0; num28 < 200; num28 = ((num28 + 1) | 0)) {
          if (!(!$T08().item[num28].active || 
              (($T08().item[num28].noGrabDelay | 0) !== 0) || (($T08().item[num28].owner | 0) !== (i | 0)))) {
            if (((new ($T20())(((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height))).Intersects(new ($T20())((($T08().item[num28].position.X) | 0), (($T08().item[num28].position.Y) | 0), $T08().item[num28].width, $T08().item[num28].height))) {
              if (!(((i | 0) !== ($T08().myPlayer | 0)) || (((this.inventory[this.selectedItem].type | 0) === 0) && 
                    ((this.itemAnimation | 0) > 0)))) {
                if (($T08().item[num28].type | 0) === 58) {
                  $T08().PlaySound(7, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                  this.statLife = (((this.statLife | 0) + 20) | 0);
                  if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
                    this.HealEffect(20);
                  }
                  if ((this.statLife | 0) > (this.statLifeMax | 0)) {
                    this.statLife = (this.statLifeMax | 0);
                  }
                  $T08().item[num28] = new ($T00())();
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      21, 
                      -1, 
                      -1, 
                      "", 
                      num28, 
                      0, 
                      0, 
                      0
                    );
                  }
                } else if (($T08().item[num28].type | 0) === 184) {
                  $T08().PlaySound(7, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
                  this.statMana = (((this.statMana | 0) + 20) | 0);
                  if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
                    this.ManaEffect(20);
                  }
                  if ((this.statMana | 0) > (this.statManaMax | 0)) {
                    this.statMana = (this.statManaMax | 0);
                  }
                  $T08().item[num28] = new ($T00())();
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      21, 
                      -1, 
                      -1, 
                      "", 
                      num28, 
                      0, 
                      0, 
                      0
                    );
                  }
                } else {
                  $T08().item[num28] = this.GetItem(i, $T08().item[num28]);
                  if (($T08().netMode | 0) === 1) {
                    $T1C().SendData(
                      21, 
                      -1, 
                      -1, 
                      "", 
                      num28, 
                      0, 
                      0, 
                      0
                    );
                  }
                }
              }
            } else if (!(!((new ($T20())(((((this.position.X) | 0) - ($thisType.itemGrabRange | 0)) | 0), ((((this.position.Y) | 0) - ($thisType.itemGrabRange | 0)) | 0), (((this.width | 0) + Math.imul($thisType.itemGrabRange, 2)) | 0), (((this.height | 0) + Math.imul($thisType.itemGrabRange, 2)) | 0)))).Intersects(new ($T20())((($T08().item[num28].position.X) | 0), (($T08().item[num28].position.Y) | 0), $T08().item[num28].width, $T08().item[num28].height)) || !this.ItemSpace($T08().item[num28]))) {
              $T08().item[num28].beingGrabbed = true;
              if ((this.position.X + (+(this.width) * 0.5)) > ($T08().item[num28].position.X + (+($T08().item[num28].width) * 0.5))) {
                if (+$T08().item[num28].velocity.X < (+$thisType.itemGrabSpeedMax + +this.velocity.X)) {
                  var expr_2B4C_cp_0 = $T08().item[num28];
                  expr_2B4C_cp_0.velocity.X = +expr_2B4C_cp_0.velocity.X + +$thisType.itemGrabSpeed;
                }
                if (+$T08().item[num28].velocity.X < 0) {
                  var expr_2B86_cp_0 = $T08().item[num28];
                  expr_2B86_cp_0.velocity.X = +expr_2B86_cp_0.velocity.X + (+$thisType.itemGrabSpeed * 0.75);
                }
              } else {
                if (+$T08().item[num28].velocity.X > (-$thisType.itemGrabSpeedMax + +this.velocity.X)) {
                  var expr_2BD5_cp_0 = $T08().item[num28];
                  expr_2BD5_cp_0.velocity.X = +expr_2BD5_cp_0.velocity.X - +$thisType.itemGrabSpeed;
                }
                if (+$T08().item[num28].velocity.X > 0) {
                  var expr_2C0C_cp_0 = $T08().item[num28];
                  expr_2C0C_cp_0.velocity.X = +expr_2C0C_cp_0.velocity.X - (+$thisType.itemGrabSpeed * 0.75);
                }
              }
              if ((this.position.Y + (+(this.height) * 0.5)) > ($T08().item[num28].position.Y + (+($T08().item[num28].height) * 0.5))) {
                if (+$T08().item[num28].velocity.Y < +$thisType.itemGrabSpeedMax) {
                  var expr_2C95_cp_0 = $T08().item[num28];
                  expr_2C95_cp_0.velocity.Y = +expr_2C95_cp_0.velocity.Y + +$thisType.itemGrabSpeed;
                }
                if (+$T08().item[num28].velocity.Y < 0) {
                  var expr_2CCF_cp_0 = $T08().item[num28];
                  expr_2CCF_cp_0.velocity.Y = +expr_2CCF_cp_0.velocity.Y + (+$thisType.itemGrabSpeed * 0.75);
                }
              } else {
                if (+$T08().item[num28].velocity.Y > -$thisType.itemGrabSpeedMax) {
                  var expr_2D0F_cp_0 = $T08().item[num28];
                  expr_2D0F_cp_0.velocity.Y = +expr_2D0F_cp_0.velocity.Y - +$thisType.itemGrabSpeed;
                }
                if (+$T08().item[num28].velocity.Y > 0) {
                  var expr_2D46_cp_0 = $T08().item[num28];
                  expr_2D46_cp_0.velocity.Y = +expr_2D46_cp_0.velocity.Y - (+$thisType.itemGrabSpeed * 0.75);
                }
              }
            }
          }
        }
        if (!(((+((+this.position.X / 16)) - +($thisType.tileRangeX)) > +($thisType.tileTargetX)) || 
            (((+(((+this.position.X + +(this.width)) / 16)) + +($thisType.tileRangeX)) - 1) < +($thisType.tileTargetX)) || 
            ((+((+this.position.Y / 16)) - +($thisType.tileRangeY)) > +($thisType.tileTargetY)) || 
            (((+(((+this.position.Y + +(this.height)) / 16)) + +($thisType.tileRangeY)) - 2) < +($thisType.tileTargetY)) || !$T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).active)) {
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 79) {
            this.showItemIcon = true;
            this.showItemIcon2 = 224;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 21) {
            this.showItemIcon = true;
            this.showItemIcon2 = 48;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 4) {
            this.showItemIcon = true;
            this.showItemIcon2 = 8;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 13) {
            this.showItemIcon = true;
            if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) === 18) {
              this.showItemIcon2 = 28;
            } else if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) === 36) {
              this.showItemIcon2 = 110;
            } else {
              this.showItemIcon2 = 31;
            }
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 29) {
            this.showItemIcon = true;
            this.showItemIcon2 = 87;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 33) {
            this.showItemIcon = true;
            this.showItemIcon2 = 105;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 49) {
            this.showItemIcon = true;
            this.showItemIcon2 = 148;
          }
          if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 50) || (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) !== 90))) {
            this.showItemIcon = true;
            this.showItemIcon2 = 165;
          }
          if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 55) {
            var num29 = (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);
            var num30 = (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);

            while (num29 > 1) {
              num29 = ((num29 - 2) | 0);
            }
            var num31 = ((($thisType.tileTargetX | 0) - num29) | 0);
            var num32 = ((($thisType.tileTargetY | 0) - num30) | 0);
            $T08().signBubble = true;
            $T08().signX = ((Math.imul(num31, 16) + 16) | 0);
            $T08().signY = Math.imul(num32, 16);
          }
          if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 10) && (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 11))) {
            this.showItemIcon = true;
            this.showItemIcon2 = 25;
          }
          if (this.controlUseTile) {
            if (this.releaseUseTile) {
              if (!((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 4) && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 13) && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 33) && 
                  (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 49) && ((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 50) || 
                    (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) !== 90)))) {
                $T0C().KillTile(
                  $thisType.tileTargetX, 
                  $thisType.tileTargetY, 
                  false, 
                  false, 
                  false
                );
                if (($T08().netMode | 0) === 1) {
                  $T1C().SendData(
                    17, 
                    -1, 
                    -1, 
                    "", 
                    0, 
                    +($thisType.tileTargetX), 
                    +($thisType.tileTargetY), 
                    0
                  );
                }
              } else if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 79) {
                var num33 = ($thisType.tileTargetX | 0);
                var num34 = ($thisType.tileTargetY | 0);
                num33 = ((num33 + Math.imul(((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) / 18) | 0), -1)) | 0);
                if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) >= 72) {
                  num33 = ((num33 + 4) | 0);
                  num33 = ((num33 + 1) | 0);
                } else {
                  num33 = ((num33 + 2) | 0);
                }
                num34 = ((num34 + Math.imul(((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameY | 0) / 18) | 0), -1)) | 0);
                num34 = ((num34 + 2) | 0);
                if ($thisType.CheckSpawn(num33, num34)) {
                  this.ChangeSpawn(num33, num34);
                  $T08().NewText("Spawn point set!", 255, 240, 20);
                }
              } else if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 55) {
                var flag4 = true;
                if ((this.sign | 0) >= 0) {
                  var num35 = ($T35().ReadSign($thisType.tileTargetX, $thisType.tileTargetY) | 0);
                  if (num35 === (this.sign | 0)) {
                    this.sign = -1;
                    $T08().npcChatText = "";
                    $T08().editSign = false;
                    $T08().PlaySound(11, -1, -1, 1);
                    flag4 = false;
                  }
                }
                if (flag4) {
                  if (($T08().netMode | 0) === 0) {
                    this.talkNPC = -1;
                    $T08().playerInventory = false;
                    $T08().editSign = false;
                    $T08().PlaySound(10, -1, -1, 1);
                    var num36 = ($T35().ReadSign($thisType.tileTargetX, $thisType.tileTargetY) | 0);
                    this.sign = num36;
                    $T08().npcChatText = $T08().sign[num36].text;
                  } else {
                    var num37 = (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);
                    var num38 = (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000);

                    while (num37 > 1) {
                      num37 = ((num37 - 2) | 0);
                    }
                    var num39 = ((($thisType.tileTargetX | 0) - num37) | 0);
                    var num40 = ((($thisType.tileTargetY | 0) - num38) | 0);
                    if (($T08().tile.Get(num39, num40).type | 0) === 55) {
                      $T1C().SendData(
                        46, 
                        -1, 
                        -1, 
                        "", 
                        num39, 
                        +num40, 
                        0, 
                        0
                      );
                    }
                  }
                }
              } else if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 10) {
                $T0C().OpenDoor($thisType.tileTargetX, $thisType.tileTargetY, this.direction);
                $T1C().SendData(
                  19, 
                  -1, 
                  -1, 
                  "", 
                  0, 
                  +($thisType.tileTargetX), 
                  +($thisType.tileTargetY), 
                  +(this.direction)
                );
              } else if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 11) {
                if ($T0C().CloseDoor($thisType.tileTargetX, $thisType.tileTargetY, false)) {
                  $T1C().SendData(
                    19, 
                    -1, 
                    -1, 
                    "", 
                    1, 
                    +($thisType.tileTargetX), 
                    +($thisType.tileTargetY), 
                    +(this.direction)
                  );
                }
              } else if (!(((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 21) && 
                    (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) !== 29)) || ((this.talkNPC | 0) !== -1))) {
                var flag5 = false;
                var num41 = ((($thisType.tileTargetX | 0) - (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameX | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
                var num42 = ((($thisType.tileTargetY | 0) - (((($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).frameY | 0) / 18) + 0x8000 & 0xFFFF) - 0x8000)) | 0);
                if (($T08().tile.Get($thisType.tileTargetX, $thisType.tileTargetY).type | 0) === 29) {
                  flag5 = true;
                }
                if (!((($T08().netMode | 0) !== 1) || flag5)) {
                  if (!((num41 !== (this.chestX | 0)) || 
                      (num42 !== (this.chestY | 0)) || ((this.chest | 0) === -1))) {
                    this.chest = -1;
                    $T08().PlaySound(11, -1, -1, 1);
                  } else {
                    $T1C().SendData(
                      31, 
                      -1, 
                      -1, 
                      "", 
                      num41, 
                      +num42, 
                      0, 
                      0
                    );
                  }
                } else {
                  if (flag5) {
                    var num43 = -2;
                  } else {
                    num43 = ($T01().FindChest(num41, num42) | 0);
                  }
                  if (num43 !== -1) {
                    if (num43 === (this.chest | 0)) {
                      this.chest = -1;
                      $T08().PlaySound(11, -1, -1, 1);
                    } else if (!((num43 === (this.chest | 0)) || ((this.chest | 0) !== -1))) {
                      this.chest = num43;
                      $T08().playerInventory = true;
                      $T08().PlaySound(10, -1, -1, 1);
                      this.chestX = num41;
                      this.chestY = num42;
                    } else {
                      this.chest = num43;
                      $T08().playerInventory = true;
                      $T08().PlaySound(12, -1, -1, 1);
                      this.chestX = num41;
                      this.chestY = num42;
                    }
                  }
                }
              }
            }
            this.releaseUseTile = false;
          } else {
            this.releaseUseTile = true;
          }
        }
        if (($T08().myPlayer | 0) === (this.whoAmi | 0)) {
          if ((this.talkNPC | 0) >= 0) {
            (rectangle = rectangle.MemberwiseClone(), 
              $T20().prototype._ctor.call(rectangle, (((+this.position.X + +(((this.width | 0) / 2 | 0))) - +(($thisType.tileRangeX | 0) * 16)) | 0), (((+this.position.Y + +(((this.height | 0) / 2 | 0))) - +(($thisType.tileRangeY | 0) * 16)) | 0), Math.imul(Math.imul($thisType.tileRangeX, 16), 2), Math.imul(Math.imul($thisType.tileRangeY, 16), 2)));
            (value = value.MemberwiseClone(), 
              $T20().prototype._ctor.call(value, (($T08().npc[this.talkNPC].position.X) | 0), (($T08().npc[this.talkNPC].position.Y) | 0), $T08().npc[this.talkNPC].width, $T08().npc[this.talkNPC].height));
            if (!(rectangle.Intersects(value.MemberwiseClone()) && 
                ((this.chest | 0) === -1) && $T08().npc[this.talkNPC].active)) {
              if ((this.chest | 0) === -1) {
                $T08().PlaySound(11, -1, -1, 1);
              }
              this.talkNPC = -1;
              $T08().npcChatText = "";
            }
          }
          if ((this.sign | 0) >= 0) {
            (rectangle2 = rectangle2.MemberwiseClone(), 
              $T20().prototype._ctor.call(rectangle2, (((+this.position.X + +(((this.width | 0) / 2 | 0))) - +(($thisType.tileRangeX | 0) * 16)) | 0), (((+this.position.Y + +(((this.height | 0) / 2 | 0))) - +(($thisType.tileRangeY | 0) * 16)) | 0), Math.imul(Math.imul($thisType.tileRangeX, 16), 2), Math.imul(Math.imul($thisType.tileRangeY, 16), 2)));
            (value2 = value2.MemberwiseClone(), 
              $T20().prototype._ctor.call(value2, Math.imul($T08().sign[this.sign].x, 16), Math.imul($T08().sign[this.sign].y, 16), 32, 32));
            if (!rectangle2.Intersects(value2.MemberwiseClone())) {
              $T08().PlaySound(11, -1, -1, 1);
              this.sign = -1;
              $T08().editSign = false;
              $T08().npcChatText = "";
            }
          }
          if ($T08().editSign) {
            if ((this.sign | 0) === -1) {
              $T08().editSign = false;
            } else {
              $T08().npcChatText = $T08().GetInputText($T08().npcChatText);
              if ($T08().inputTextEnter) {
                var bytes = JSIL.Array.New($T19(), [10]);
                $T08().npcChatText = (JSIL.ConcatString($T08().npcChatText, $T11().get_ASCII().GetString(bytes)));
              }
            }
          }
          (rectangle3 = rectangle3.MemberwiseClone(), 
            $T20().prototype._ctor.call(rectangle3, ((this.position.X) | 0), ((this.position.Y) | 0), this.width, this.height));

          for (var num44 = 0; num44 < 1000; num44 = ((num44 + 1) | 0)) {
            if (!(!$T08().npc[num44].active || 
                $T08().npc[num44].friendly || !rectangle3.Intersects(new ($T20())((($T08().npc[num44].position.X) | 0), (($T08().npc[num44].position.Y) | 0), $T08().npc[num44].width, $T08().npc[num44].height)))) {
              var hitDirection = -1;
              if ((+$T08().npc[num44].position.X + +((($T08().npc[num44].width | 0) / 2 | 0))) < (+this.position.X + +(((this.width | 0) / 2 | 0)))) {
                hitDirection = 1;
              }
              this.Hurt($T08().npc[num44].damage, hitDirection, false, false);
            }
          }
          var vector = $T2A().HurtTiles(
            this.position, 
            this.velocity, 
            this.width, 
            this.height, 
            this.fireWalk
          ).MemberwiseClone();
          if (+vector.Y !== 0) {
            this.Hurt(((vector.Y) | 0), ((vector.X) | 0), false, false);
          }
        }
        if ((this.grappling[0] | 0) >= 0) {
          this.rocketDelay = 0;
          this.rocketFrame = false;
          this.canRocket = false;
          this.rocketRelease = false;
          this.fallStart = ((+(+this.position.Y / 16)) | 0);
          var num45 = 0;
          var num46 = 0;

          for (var num47 = 0; num47 < (this.grapCount | 0); num47 = ((num47 + 1) | 0)) {
            num45 += +$T08().projectile[this.grappling[num47]].position.X + +((($T08().projectile[this.grappling[num47]].width | 0) / 2 | 0));
            num46 += +$T08().projectile[this.grappling[num47]].position.Y + +((($T08().projectile[this.grappling[num47]].height | 0) / 2 | 0));
          }
          num45 = +((num45 / +(this.grapCount)));
          num46 = +((num46 / +(this.grapCount)));
          (vector2 = vector2.MemberwiseClone(), 
            $T02().prototype._ctor.call(vector2, +this.position.X + (+(this.width) * 0.5), +this.position.Y + (+(this.height) * 0.5)));
          var num48 = num45 - +vector2.X;
          var num49 = num46 - +vector2.Y;
          var num50 = Math.fround(Math.sqrt((num48 * num48) + (num49 * num49)));
          if (num50 > 11) {
            var num52 = +((11 / num50));
          } else {
            num52 = 1;
          }
          num48 *= num52;
          num49 *= num52;
          this.velocity.X = num48;
          this.velocity.Y = num49;
          if ((this.itemAnimation | 0) === 0) {
            if (+this.velocity.X > 0) {
              this.direction = 1;
            }
            if (+this.velocity.X < 0) {
              this.direction = -1;
            }
          }
          if (this.controlJump) {
            if (this.releaseJump) {
              if (!((+this.velocity.Y !== 0) && (!this.wet || 
                    (this.velocity.Y <= -0.02) || 
                    (this.velocity.Y >= 0.02)))) {
                this.velocity.Y = -$thisType.jumpSpeed;
                this.jump = ((($thisType.jumpHeight | 0) / 2) | 0);
                this.releaseJump = false;
              } else {
                this.velocity.Y = +this.velocity.Y + 0.01;
                this.releaseJump = false;
              }
              if (this.doubleJump) {
                this.jumpAgain = true;
              }
              this.grappling[0] = 0;
              this.grapCount = 0;

              for (var num53 = 0; num53 < 1000; num53 = ((num53 + 1) | 0)) {
                if (!(!$T08().projectile[num53].active || 
                    (($T08().projectile[num53].owner | 0) !== (i | 0)) || (($T08().projectile[num53].aiStyle | 0) !== 7))) {
                  ($T08().projectile[num53]).Kill();
                }
              }
            }
          } else {
            this.releaseJump = true;
          }
        }
        if ($T2A().StickyTiles(this.position, this.velocity.MemberwiseClone(), this.width, this.height)) {
          this.jump = 0;
          if (+this.velocity.X > 1) {
            this.velocity.X = 1;
          }
          if (+this.velocity.X < -1) {
            this.velocity.X = -1;
          }
          if (+this.velocity.Y > 1) {
            this.velocity.Y = 1;
          }
          if (+this.velocity.Y < -5) {
            this.velocity.Y = -5;
          }
          if (!((this.velocity.X <= 0.75) && (this.velocity.X >= -0.75))) {
            this.velocity.X = +this.velocity.X * 0.85;
          } else {
            this.velocity.X = +this.velocity.X * 0.6;
          }
          if (+this.velocity.Y < 0) {
            this.velocity.Y = +this.velocity.Y * 0.96;
          } else {
            this.velocity.Y = +this.velocity.Y * 0.3;
          }
        }
        var flag6 = $T2A().DrownCollision(this.position.MemberwiseClone(), this.width, this.height);
        if ((this.inventory[this.selectedItem].type | 0) === 186) {
          var num54 = ((+(((+this.position.X + +(((this.width | 0) / 2 | 0))) + +(6 * (this.direction | 0))) / 16)) | 0);
          var num55 = ((+((+this.position.Y - 44) / 16)) | 0);
          if (($T08().tile.Get(num54, num55).liquid | 0) < 128) {
            if ($T08().tile.Get(num54, num55) === null) {
              $T08().tile.Set(num54, num55, new ($T0B())());
            }
            if (!($T08().tile.Get(num54, num55).active && 
                $T08().tileSolid[$T08().tile.Get(num54, num55).type] && !$T08().tileSolidTop[$T08().tile.Get(num54, num55).type])) {
              flag6 = false;
            }
          }
        }
        if (($T08().myPlayer | 0) === (i | 0)) {
          if (flag6) {
            this.breathCD = (((this.breathCD | 0) + 1) | 0);
            var num56 = 7;
            if ((this.inventory[this.selectedItem].type | 0) === 186) {
              num56 = Math.imul(num56, 2);
            }
            if ((this.breathCD | 0) >= num56) {
              this.breathCD = 0;
              this.breath = (((this.breath | 0) - 1) | 0);
              if ((this.breath | 0) <= 0) {
                this.breath = 0;
                this.statLife = (((this.statLife | 0) - 2) | 0);
                if ((this.statLife | 0) <= 0) {
                  this.statLife = 0;
                  this.KillMe(10, 0, false);
                }
              }
            }
          } else {
            this.breath = (((this.breath | 0) + 3) | 0);
            if ((this.breath | 0) > (this.breathMax | 0)) {
              this.breath = (this.breathMax | 0);
            }
            this.breathCD = 0;
          }
        }
        if (!(!flag6 || (($T08().rand.Next(20) | 0) !== 0))) {
          if ((this.inventory[this.selectedItem].type | 0) === 186) {
            $T22().NewDust(
              $S0A().Construct(((+this.position.X + +(10 * (this.direction | 0))) + 4), (+this.position.Y - 54)), 
              (((this.width | 0) - 8) | 0), 
              8, 
              34, 
              0, 
              0, 
              0, 
              new ($T06())(), 
              1.2
            );
          } else {
            $T22().NewDust(
              $S0A().Construct((+this.position.X + +(12 * (this.direction | 0))), (+this.position.Y + 4)), 
              (((this.width | 0) - 8) | 0), 
              8, 
              34, 
              0, 
              0, 
              0, 
              new ($T06())(), 
              1.2
            );
          }
        }
        var flag7 = $T2A().LavaCollision(this.position, this.width, this.height);
        if (flag7) {
          if (($T08().myPlayer | 0) === (i | 0)) {
            this.Hurt(100, 0, false, false);
          }
          this.lavaWet = true;
        }
        var flag8 = $T2A().WetCollision(this.position, this.width, this.height);
        if (flag8) {
          if (!this.wet) {
            if ((this.wetCount | 0) === 0) {
              this.wetCount = 10;
              if (!flag7) {

                for (var num57 = 0; num57 < 50; num57 = ((num57 + 1) | 0)) {
                  var num58 = ($T22().NewDust(
                    ($hoisted05._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted05), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    33, 
                    0, 
                    0, 
                    0, 
                    new ($T06())(), 
                    1
                  ) | 0);
                  var expr_4226_cp_0 = $T08().dust[num58];
                  expr_4226_cp_0.velocity.Y = +expr_4226_cp_0.velocity.Y - 4;
                  var expr_4244_cp_0 = $T08().dust[num58];
                  expr_4244_cp_0.velocity.X = +expr_4244_cp_0.velocity.X * 2.5;
                  $T08().dust[num58].scale = 1.3;
                  $T08().dust[num58].alpha = 100;
                  $T08().dust[num58].noGravity = true;
                }
                $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
              } else {

                for (var num59 = 0; num59 < 20; num59 = ((num59 + 1) | 0)) {
                  var num60 = ($T22().NewDust(
                    ($hoisted06._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                      $hoisted06), 
                    (((this.width | 0) + 12) | 0), 
                    24, 
                    35, 
                    0, 
                    0, 
                    0, 
                    new ($T06())(), 
                    1
                  ) | 0);
                  var expr_432C_cp_0 = $T08().dust[num60];
                  expr_432C_cp_0.velocity.Y = +expr_432C_cp_0.velocity.Y - 1.5;
                  var expr_434A_cp_0 = $T08().dust[num60];
                  expr_434A_cp_0.velocity.X = +expr_434A_cp_0.velocity.X * 2.5;
                  $T08().dust[num60].scale = 1.3;
                  $T08().dust[num60].alpha = 100;
                  $T08().dust[num60].noGravity = true;
                }
                $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
              }
            }
            this.wet = true;
          }
        } else if (this.wet) {
          this.wet = false;
          if ((this.jump | 0) > ((($thisType.jumpHeight | 0) / 5) | 0)) {
            this.jump = ((($thisType.jumpHeight | 0) / 5) | 0);
          }
          if ((this.wetCount | 0) === 0) {
            this.wetCount = 10;
            if (!this.lavaWet) {

              for (var num61 = 0; num61 < 50; num61 = ((num61 + 1) | 0)) {
                var num62 = ($T22().NewDust(
                  ($hoisted07._ctor(+this.position.X - 6, +this.position.Y + +(((this.height | 0) / 2 | 0))), 
                    $hoisted07), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  33, 
                  0, 
                  0, 
                  0, 
                  new ($T06())(), 
                  1
                ) | 0);
                var expr_447F_cp_0 = $T08().dust[num62];
                expr_447F_cp_0.velocity.Y = +expr_447F_cp_0.velocity.Y - 4;
                var expr_449D_cp_0 = $T08().dust[num62];
                expr_449D_cp_0.velocity.X = +expr_449D_cp_0.velocity.X * 2.5;
                $T08().dust[num62].scale = 1.3;
                $T08().dust[num62].alpha = 100;
                $T08().dust[num62].noGravity = true;
              }
              $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 0);
            } else {

              for (var num63 = 0; num63 < 20; num63 = ((num63 + 1) | 0)) {
                var num64 = ($T22().NewDust(
                  ($hoisted08._ctor(+this.position.X - 6, (+this.position.Y + +(((this.height | 0) / 2 | 0))) - 8), 
                    $hoisted08), 
                  (((this.width | 0) + 12) | 0), 
                  24, 
                  35, 
                  0, 
                  0, 
                  0, 
                  new ($T06())(), 
                  1
                ) | 0);
                var expr_4585_cp_0 = $T08().dust[num64];
                expr_4585_cp_0.velocity.Y = +expr_4585_cp_0.velocity.Y - 1.5;
                var expr_45A3_cp_0 = $T08().dust[num64];
                expr_45A3_cp_0.velocity.X = +expr_45A3_cp_0.velocity.X * 2.5;
                $T08().dust[num64].scale = 1.3;
                $T08().dust[num64].alpha = 100;
                $T08().dust[num64].noGravity = true;
              }
              $T08().PlaySound(19, ((this.position.X) | 0), ((this.position.Y) | 0), 1);
            }
          }
        }
        if (!this.wet) {
          this.lavaWet = false;
        }
        if ((this.wetCount | 0) > 0) {
          this.wetCount = ((((this.wetCount | 0) - 1) | 0) & 0xFF);
        }
        if (this.wet) {
          if (this.wet) {
            var vector3 = this.velocity.MemberwiseClone();
            this.velocity = $T2A().TileCollision(
              this.position.MemberwiseClone(), 
              this.velocity.MemberwiseClone(), 
              this.width, 
              this.height, 
              this.controlDown, 
              false
            ).MemberwiseClone();
            var value3 = $S11().CallStatic($T02(), "op_Multiply", null, this.velocity.MemberwiseClone(), 0.5).MemberwiseClone();
            if (+this.velocity.X !== +vector3.X) {
              value3.X = +this.velocity.X;
            }
            if (+this.velocity.Y !== +vector3.Y) {
              value3.Y = +this.velocity.Y;
            }
            this.position = $T02().op_Addition(this.position.MemberwiseClone(), value3.MemberwiseClone()).MemberwiseClone();
          }
        } else {
          this.velocity = $T2A().TileCollision(
            this.position.MemberwiseClone(), 
            this.velocity.MemberwiseClone(), 
            this.width, 
            this.height, 
            this.controlDown, 
            false
          ).MemberwiseClone();
          this.position = $T02().op_Addition(this.position.MemberwiseClone(), this.velocity.MemberwiseClone()).MemberwiseClone();
        }
        if (+this.position.X < ((+$T08().leftWorld + 336) + 16)) {
          this.position.X = (+$T08().leftWorld + 336) + 16;
          this.velocity.X = 0;
        }
        if ((+this.position.X + +(this.width)) > ((+$T08().rightWorld - 336) - 32)) {
          this.position.X = ((+$T08().rightWorld - 336) - 32) - +(this.width);
          this.velocity.X = 0;
        }
        if (+this.position.Y < ((+$T08().topWorld + 336) + 16)) {
          this.position.Y = (+$T08().topWorld + 336) + 16;
          this.velocity.Y = 0;
        }
        if (+this.position.Y > (((+$T08().bottomWorld - 336) - 32) - +(this.height))) {
          this.position.Y = ((+$T08().bottomWorld - 336) - 32) - +(this.height);
          this.velocity.Y = 0;
        }
        this.ItemCheck(i);
        this.PlayerFrame();
        if ((this.statLife | 0) > (this.statLifeMax | 0)) {
          this.statLife = (this.statLifeMax | 0);
        }
        this.grappling[0] = -1;
        this.grapCount = 0;
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Player", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Player__ctor
    );

    $.Method({Static:false, Public:true }, "AdjTiles", 
      JSIL.MethodSignature.Void, 
      Player_AdjTiles
    );

    $.Method({Static:false, Public:true }, "BuyItem", 
      new JSIL.MethodSignature($.Boolean, [$.Int32]), 
      Player_BuyItem
    );

    $.Method({Static:false, Public:true }, "ChangeSpawn", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Player_ChangeSpawn
    );

    $.Method({Static:true , Public:true }, "CheckSpawn", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32]), 
      Player_CheckSpawn
    );

    $.Method({Static:false, Public:true }, "clientClone", 
      JSIL.MethodSignature.Return($.Object), 
      Player_clientClone
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object), 
      Player_Clone
    );

    $.Method({Static:true , Public:false}, "DecryptFile", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String]), 
      Player_DecryptFile
    );

    $.Method({Static:false, Public:true }, "DoCoins", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_DoCoins
    );

    $.Method({Static:false, Public:true }, "DropItems", 
      JSIL.MethodSignature.Void, 
      Player_DropItems
    );

    $.Method({Static:true , Public:false}, "EncryptFile", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      Player_EncryptFile
    );

    $.Method({Static:true , Public:true }, "FindClosest", 
      new JSIL.MethodSignature($.Byte, [
          $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"), $.Int32, 
          $.Int32
        ]), 
      Player_FindClosest
    );

    $.Method({Static:false, Public:true }, "FindSpawn", 
      JSIL.MethodSignature.Void, 
      Player_FindSpawn
    );

    $.Method({Static:false, Public:true }, "GetDeathAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Player_GetDeathAlpha
    );

    $.Method({Static:false, Public:true }, "GetImmuneAlpha", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Xna.Framework.Color"), [$asm00.TypeRef("Microsoft.Xna.Framework.Color")]), 
      Player_GetImmuneAlpha
    );

    $.Method({Static:false, Public:true }, "GetItem", 
      new JSIL.MethodSignature($asm0F.TypeRef("Terraria.Item"), [$.Int32, $asm0F.TypeRef("Terraria.Item")]), 
      Player_GetItem
    );

    $.Method({Static:false, Public:true }, "HealEffect", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_HealEffect
    );

    $.Method({Static:false, Public:true }, "Hurt", 
      new JSIL.MethodSignature($.Double, [
          $.Int32, $.Int32, 
          $.Boolean, $.Boolean
        ]), 
      Player_Hurt
    );

    $.Method({Static:false, Public:true }, "ItemCheck", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_ItemCheck
    );

    $.Method({Static:false, Public:true }, "ItemSpace", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("Terraria.Item")]), 
      Player_ItemSpace
    );

    $.Method({Static:false, Public:true }, "KillMe", 
      new JSIL.MethodSignature(null, [
          $.Double, $.Int32, 
          $.Boolean
        ]), 
      Player_KillMe
    );

    $.Method({Static:true , Public:true }, "LoadPlayer", 
      new JSIL.MethodSignature($.Type, [$.String]), 
      Player_LoadPlayer
    );

    $.Method({Static:false, Public:true }, "ManaEffect", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_ManaEffect
    );

    $.Method({Static:false, Public:true }, "PlayerFrame", 
      JSIL.MethodSignature.Void, 
      Player_PlayerFrame
    );

    $.Method({Static:true , Public:true }, "SavePlayer", 
      new JSIL.MethodSignature(null, [$.Type, $.String]), 
      Player_SavePlayer
    );

    $.Method({Static:false, Public:true }, "SellItem", 
      new JSIL.MethodSignature($.Boolean, [$.Int32]), 
      Player_SellItem
    );

    $.Method({Static:false, Public:true }, "Spawn", 
      JSIL.MethodSignature.Void, 
      Player_Spawn
    );

    $.Method({Static:false, Public:true }, "UpdatePlayer", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_UpdatePlayer
    );

    $.Field({Static:false, Public:true }, "pvpDeath", $.Boolean);

    $.Field({Static:false, Public:true }, "zoneDungeon", $.Boolean);

    $.Field({Static:false, Public:true }, "zoneEvil", $.Boolean);

    $.Field({Static:false, Public:true }, "zoneMeteor", $.Boolean);

    $.Field({Static:false, Public:true }, "zoneJungle", $.Boolean);

    $.Field({Static:false, Public:true }, "boneArmor", $.Boolean);

    $.Field({Static:false, Public:true }, "townNPCs", $.Int32);

    $.Field({Static:false, Public:true }, "position", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "velocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "oldVelocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "headFrameCounter", $.Double);

    $.Field({Static:false, Public:true }, "bodyFrameCounter", $.Double);

    $.Field({Static:false, Public:true }, "legFrameCounter", $.Double);

    $.Field({Static:false, Public:true }, "immune", $.Boolean);

    $.Field({Static:false, Public:true }, "immuneTime", $.Int32);

    $.Field({Static:false, Public:true }, "immuneAlphaDirection", $.Int32);

    $.Field({Static:false, Public:true }, "immuneAlpha", $.Int32);

    $.Field({Static:false, Public:true }, "team", $.Int32);

    $.Field({Static:false, Public:true }, "chatText", $.String);

    $.Field({Static:false, Public:true }, "sign", $.Int32);

    $.Field({Static:false, Public:true }, "chatShowTime", $.Int32);

    $.Field({Static:false, Public:true }, "activeNPCs", $.Int32);

    $.Field({Static:false, Public:true }, "mouseInterface", $.Boolean);

    $.Field({Static:false, Public:true }, "changeItem", $.Int32);

    $.Field({Static:false, Public:true }, "selectedItem", $.Int32);

    $.Field({Static:false, Public:true }, "armor", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]));

    $.Field({Static:false, Public:true }, "itemAnimation", $.Int32);

    $.Field({Static:false, Public:true }, "itemAnimationMax", $.Int32);

    $.Field({Static:false, Public:true }, "itemTime", $.Int32);

    $.Field({Static:false, Public:true }, "itemRotation", $.Single);

    $.Field({Static:false, Public:true }, "itemWidth", $.Int32);

    $.Field({Static:false, Public:true }, "itemHeight", $.Int32);

    $.Field({Static:false, Public:true }, "itemLocation", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "breathCD", $.Int32);

    $.Field({Static:false, Public:true }, "breathMax", $.Int32);

    $.Field({Static:false, Public:true }, "breath", $.Int32);

    $.Field({Static:false, Public:true }, "setBonus", $.String);

    $.Field({Static:false, Public:true }, "inventory", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]));

    $.Field({Static:false, Public:true }, "bank", $jsilcore.TypeRef("System.Array", [$asm0F.TypeRef("Terraria.Item")]));

    $.Field({Static:false, Public:true }, "headRotation", $.Single);

    $.Field({Static:false, Public:true }, "bodyRotation", $.Single);

    $.Field({Static:false, Public:true }, "legRotation", $.Single);

    $.Field({Static:false, Public:true }, "headPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "bodyPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "legPosition", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "headVelocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "bodyVelocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "legVelocity", $asm00.TypeRef("Microsoft.Xna.Framework.Vector2"));

    $.Field({Static:false, Public:true }, "dead", $.Boolean);

    $.Field({Static:false, Public:true }, "respawnTimer", $.Int32);

    $.Field({Static:false, Public:true }, "$name", $.String);

    $.Field({Static:false, Public:true }, "attackCD", $.Int32);

    $.Field({Static:false, Public:true }, "potionDelay", $.Int32);

    $.Field({Static:false, Public:true }, "wet", $.Boolean);

    $.Field({Static:false, Public:true }, "wetCount", $.Byte);

    $.Field({Static:false, Public:true }, "lavaWet", $.Boolean);

    $.Field({Static:false, Public:true }, "hitTile", $.Int32);

    $.Field({Static:false, Public:true }, "hitTileX", $.Int32);

    $.Field({Static:false, Public:true }, "hitTileY", $.Int32);

    $.Field({Static:false, Public:true }, "jump", $.Int32);

    $.Field({Static:false, Public:true }, "head", $.Int32);

    $.Field({Static:false, Public:true }, "body", $.Int32);

    $.Field({Static:false, Public:true }, "legs", $.Int32);

    $.Field({Static:false, Public:true }, "headFrame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "bodyFrame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "legFrame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "hairFrame", $asm00.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Field({Static:false, Public:true }, "controlLeft", $.Boolean);

    $.Field({Static:false, Public:true }, "controlRight", $.Boolean);

    $.Field({Static:false, Public:true }, "controlUp", $.Boolean);

    $.Field({Static:false, Public:true }, "controlDown", $.Boolean);

    $.Field({Static:false, Public:true }, "controlJump", $.Boolean);

    $.Field({Static:false, Public:true }, "controlUseItem", $.Boolean);

    $.Field({Static:false, Public:true }, "controlUseTile", $.Boolean);

    $.Field({Static:false, Public:true }, "controlThrow", $.Boolean);

    $.Field({Static:false, Public:true }, "releaseJump", $.Boolean);

    $.Field({Static:false, Public:true }, "releaseUseItem", $.Boolean);

    $.Field({Static:false, Public:true }, "releaseUseTile", $.Boolean);

    $.Field({Static:false, Public:true }, "releaseInventory", $.Boolean);

    $.Field({Static:false, Public:true }, "delayUseItem", $.Boolean);

    $.Field({Static:false, Public:true }, "active", $.Boolean);

    $.Field({Static:false, Public:true }, "width", $.Int32);

    $.Field({Static:false, Public:true }, "height", $.Int32);

    $.Field({Static:false, Public:true }, "direction", $.Int32);

    $.Field({Static:false, Public:true }, "showItemIcon", $.Boolean);

    $.Field({Static:false, Public:true }, "showItemIcon2", $.Int32);

    $.Field({Static:false, Public:true }, "whoAmi", $.Int32);

    $.Field({Static:false, Public:true }, "runSoundDelay", $.Int32);

    $.Field({Static:false, Public:true }, "shadow", $.Single);

    $.Field({Static:false, Public:true }, "manaCost", $.Single);

    $.Field({Static:false, Public:true }, "fireWalk", $.Boolean);

    $.Field({Static:false, Public:true }, "shadowPos", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Xna.Framework.Vector2")]));

    $.Field({Static:false, Public:true }, "shadowCount", $.Int32);

    $.Field({Static:false, Public:true }, "channel", $.Boolean);

    $.Field({Static:false, Public:true }, "step", $.Int32);

    $.Field({Static:false, Public:true }, "meleeSpeed", $.Single);

    $.Field({Static:false, Public:true }, "statDefense", $.Int32);

    $.Field({Static:false, Public:true }, "statAttack", $.Int32);

    $.Field({Static:false, Public:true }, "statLifeMax", $.Int32);

    $.Field({Static:false, Public:true }, "statLife", $.Int32);

    $.Field({Static:false, Public:true }, "statMana", $.Int32);

    $.Field({Static:false, Public:true }, "statManaMax", $.Int32);

    $.Field({Static:false, Public:true }, "lifeRegen", $.Int32);

    $.Field({Static:false, Public:true }, "lifeRegenCount", $.Int32);

    $.Field({Static:false, Public:true }, "manaRegen", $.Int32);

    $.Field({Static:false, Public:true }, "manaRegenCount", $.Int32);

    $.Field({Static:false, Public:true }, "manaRegenDelay", $.Int32);

    $.Field({Static:false, Public:true }, "noKnockback", $.Boolean);

    $.Field({Static:false, Public:true }, "SpawnX", $.Int32);

    $.Field({Static:false, Public:true }, "SpawnY", $.Int32);

    $.Field({Static:false, Public:true }, "spX", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:true }, "spY", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:true }, "spN", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:true }, "spI", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:true , Public:true }, "tileRangeX", $.Int32, 5);

    $.Field({Static:true , Public:true }, "tileRangeY", $.Int32, 4);

    $.Field({Static:true , Public:false}, "tileTargetX", $.Int32);

    $.Field({Static:true , Public:false}, "tileTargetY", $.Int32);

    $.Field({Static:true , Public:false}, "jumpHeight", $.Int32, 15);

    $.Field({Static:true , Public:false}, "jumpSpeed", $.Single, 5.01);

    $.Field({Static:false, Public:true }, "adjTile", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Field({Static:false, Public:true }, "oldAdjTile", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Field({Static:true , Public:false}, "itemGrabRange", $.Int32, 38);

    $.Field({Static:true , Public:false}, "itemGrabSpeed", $.Single, 0.45);

    $.Field({Static:true , Public:false}, "itemGrabSpeedMax", $.Single, 4);

    $.Field({Static:false, Public:true }, "hairColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "skinColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "eyeColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "shirtColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "underShirtColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "pantsColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "shoeColor", $asm00.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Field({Static:false, Public:true }, "hair", $.Int32);

    $.Field({Static:false, Public:true }, "hostile", $.Boolean);

    $.Field({Static:false, Public:true }, "accWatch", $.Int32);

    $.Field({Static:false, Public:true }, "accDepthMeter", $.Int32);

    $.Field({Static:false, Public:true }, "accFlipper", $.Boolean);

    $.Field({Static:false, Public:true }, "doubleJump", $.Boolean);

    $.Field({Static:false, Public:true }, "jumpAgain", $.Boolean);

    $.Field({Static:false, Public:true }, "spawnMax", $.Boolean);

    $.Field({Static:false, Public:true }, "grappling", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:true }, "grapCount", $.Int32);

    $.Field({Static:false, Public:true }, "rocketDelay", $.Int32);

    $.Field({Static:false, Public:true }, "rocketDelay2", $.Int32);

    $.Field({Static:false, Public:true }, "rocketRelease", $.Boolean);

    $.Field({Static:false, Public:true }, "rocketFrame", $.Boolean);

    $.Field({Static:false, Public:true }, "rocketBoots", $.Boolean);

    $.Field({Static:false, Public:true }, "canRocket", $.Boolean);

    $.Field({Static:false, Public:true }, "jumpBoost", $.Boolean);

    $.Field({Static:false, Public:true }, "noFallDmg", $.Boolean);

    $.Field({Static:false, Public:true }, "swimTime", $.Int32);

    $.Field({Static:false, Public:true }, "chest", $.Int32);

    $.Field({Static:false, Public:true }, "chestX", $.Int32);

    $.Field({Static:false, Public:true }, "chestY", $.Int32);

    $.Field({Static:false, Public:true }, "talkNPC", $.Int32);

    $.Field({Static:false, Public:true }, "fallStart", $.Int32);

    $.Field({Static:false, Public:true }, "slowCount", $.Int32);


    function Player__cctor () {
      $thisType.tileRangeX = 5;
      $thisType.tileRangeY = 4;
      $thisType.jumpHeight = 15;
      $thisType.jumpSpeed = 5.01;
      $thisType.itemGrabRange = 38;
      $thisType.itemGrabSpeed = 0.45;
      $thisType.itemGrabSpeedMax = 4;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Player__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Terraria.Steam */ 

(function Steam$Members () {
  var $, $thisType;

  function Steam__ctor () {
  }; 

  function Steam_Init () {
    $thisType.SteamInit = $thisType.SteamAPI_Init();
    $thisType.SteamInit = true;
  }; 

  function Steam_Kill () {
    $thisType.SteamAPI_Shutdown();
  }; 



  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Terraria.Steam", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Steam__ctor
    );

    $.Method({Static:true , Public:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Steam_Init
    );

    $.Method({Static:true , Public:true }, "Kill", 
      JSIL.MethodSignature.Void, 
      Steam_Kill
    );

    $.PInvokeMethod({Static:true , Public:false}, "SteamAPI_Init", 
      JSIL.MethodSignature.Return($.Boolean), 
      {
        Module: "steam_api.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "SteamAPI_Shutdown", 
      JSIL.MethodSignature.Return($.Boolean), 
      {
        Module: "steam_api.dll", 
      }
    );

    $.Field({Static:true , Public:true }, "SteamInit", $.Boolean);


    function Steam__cctor () {
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Steam__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

